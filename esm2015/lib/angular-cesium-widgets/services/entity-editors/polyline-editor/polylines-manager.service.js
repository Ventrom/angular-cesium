import { __decorate } from "tslib";
import { Injectable } from '@angular/core';
import { EditablePolyline } from '../../../models/editable-polyline';
let PolylinesManagerService = class PolylinesManagerService {
    constructor() {
        this.polylines = new Map();
    }
    createEditablePolyline(id, editPolylinesLayer, editPointsLayer, coordinateConverter, polylineOptions, positions) {
        const editablePolyline = new EditablePolyline(id, editPolylinesLayer, editPointsLayer, coordinateConverter, polylineOptions, positions);
        this.polylines.set(id, editablePolyline);
    }
    get(id) {
        return this.polylines.get(id);
    }
    clear() {
        this.polylines.forEach(polyline => polyline.dispose());
        this.polylines.clear();
    }
};
PolylinesManagerService = __decorate([
    Injectable()
], PolylinesManagerService);
export { PolylinesManagerService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9seWxpbmVzLW1hbmFnZXIuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItY2VzaXVtLyIsInNvdXJjZXMiOlsibGliL2FuZ3VsYXItY2VzaXVtLXdpZGdldHMvc2VydmljZXMvZW50aXR5LWVkaXRvcnMvcG9seWxpbmUtZWRpdG9yL3BvbHlsaW5lcy1tYW5hZ2VyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUVBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHM0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFHckUsSUFBYSx1QkFBdUIsR0FBcEMsTUFBYSx1QkFBdUI7SUFBcEM7UUFDRSxjQUFTLEdBQWtDLElBQUksR0FBRyxFQUE0QixDQUFDO0lBdUJqRixDQUFDO0lBckJDLHNCQUFzQixDQUFDLEVBQVUsRUFBRSxrQkFBb0MsRUFBRSxlQUFpQyxFQUNuRixtQkFBd0MsRUFBRSxlQUFvQyxFQUFFLFNBQXdCO1FBQzdILE1BQU0sZ0JBQWdCLEdBQUcsSUFBSSxnQkFBZ0IsQ0FDM0MsRUFBRSxFQUNGLGtCQUFrQixFQUNsQixlQUFlLEVBQ2YsbUJBQW1CLEVBQ25CLGVBQWUsRUFDZixTQUFTLENBQUMsQ0FBQztRQUNiLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxnQkFBZ0IsQ0FDdEMsQ0FBQztJQUNKLENBQUM7SUFFRCxHQUFHLENBQUMsRUFBVTtRQUNaLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVELEtBQUs7UUFDSCxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO1FBQ3ZELElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDekIsQ0FBQztDQUNGLENBQUE7QUF4QlksdUJBQXVCO0lBRG5DLFVBQVUsRUFBRTtHQUNBLHVCQUF1QixDQXdCbkM7U0F4QlksdUJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29vcmRpbmF0ZUNvbnZlcnRlciB9IGZyb20gJy4vLi4vLi4vLi4vLi4vYW5ndWxhci1jZXNpdW0vc2VydmljZXMvY29vcmRpbmF0ZS1jb252ZXJ0ZXIvY29vcmRpbmF0ZS1jb252ZXJ0ZXIuc2VydmljZSc7XG5pbXBvcnQgeyBBY0xheWVyQ29tcG9uZW50IH0gZnJvbSAnLi8uLi8uLi8uLi8uLi9hbmd1bGFyLWNlc2l1bS9jb21wb25lbnRzL2FjLWxheWVyL2FjLWxheWVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDYXJ0ZXNpYW4zIH0gZnJvbSAnLi4vLi4vLi4vLi4vYW5ndWxhci1jZXNpdW0vbW9kZWxzL2NhcnRlc2lhbjMnO1xuaW1wb3J0IHsgUG9seWdvbkVkaXRPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vbW9kZWxzL3BvbHlnb24tZWRpdC1vcHRpb25zJztcbmltcG9ydCB7IEVkaXRhYmxlUG9seWxpbmUgfSBmcm9tICcuLi8uLi8uLi9tb2RlbHMvZWRpdGFibGUtcG9seWxpbmUnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUG9seWxpbmVzTWFuYWdlclNlcnZpY2Uge1xuICBwb2x5bGluZXM6IE1hcDxzdHJpbmcsIEVkaXRhYmxlUG9seWxpbmU+ID0gbmV3IE1hcDxzdHJpbmcsIEVkaXRhYmxlUG9seWxpbmU+KCk7XG5cbiAgY3JlYXRlRWRpdGFibGVQb2x5bGluZShpZDogc3RyaW5nLCBlZGl0UG9seWxpbmVzTGF5ZXI6IEFjTGF5ZXJDb21wb25lbnQsIGVkaXRQb2ludHNMYXllcjogQWNMYXllckNvbXBvbmVudCxcbiAgICAgICAgICAgICAgICAgICAgICAgICBjb29yZGluYXRlQ29udmVydGVyOiBDb29yZGluYXRlQ29udmVydGVyLCBwb2x5bGluZU9wdGlvbnM/OiBQb2x5Z29uRWRpdE9wdGlvbnMsIHBvc2l0aW9ucz86IENhcnRlc2lhbjNbXSkge1xuICAgIGNvbnN0IGVkaXRhYmxlUG9seWxpbmUgPSBuZXcgRWRpdGFibGVQb2x5bGluZShcbiAgICAgIGlkLFxuICAgICAgZWRpdFBvbHlsaW5lc0xheWVyLFxuICAgICAgZWRpdFBvaW50c0xheWVyLFxuICAgICAgY29vcmRpbmF0ZUNvbnZlcnRlcixcbiAgICAgIHBvbHlsaW5lT3B0aW9ucyxcbiAgICAgIHBvc2l0aW9ucyk7XG4gICAgdGhpcy5wb2x5bGluZXMuc2V0KGlkLCBlZGl0YWJsZVBvbHlsaW5lXG4gICAgKTtcbiAgfVxuXG4gIGdldChpZDogc3RyaW5nKTogRWRpdGFibGVQb2x5bGluZSB7XG4gICAgcmV0dXJuIHRoaXMucG9seWxpbmVzLmdldChpZCk7XG4gIH1cblxuICBjbGVhcigpIHtcbiAgICB0aGlzLnBvbHlsaW5lcy5mb3JFYWNoKHBvbHlsaW5lID0+IHBvbHlsaW5lLmRpc3Bvc2UoKSk7XG4gICAgdGhpcy5wb2x5bGluZXMuY2xlYXIoKTtcbiAgfVxufVxuIl19