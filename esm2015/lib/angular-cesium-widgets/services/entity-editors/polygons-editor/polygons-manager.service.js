import { __decorate } from "tslib";
import { Injectable } from '@angular/core';
import { EditablePolygon } from '../../../models/editable-polygon';
let PolygonsManagerService = class PolygonsManagerService {
    constructor() {
        this.polygons = new Map();
    }
    createEditablePolygon(id, editPolygonsLayer, editPointsLayer, editPolylinesLayer, coordinateConverter, polygonOptions, positions) {
        const editablePolygon = new EditablePolygon(id, editPolygonsLayer, editPointsLayer, editPolylinesLayer, coordinateConverter, polygonOptions, positions);
        this.polygons.set(id, editablePolygon);
    }
    dispose(id) {
        this.polygons.get(id).dispose();
        this.polygons.delete(id);
    }
    get(id) {
        return this.polygons.get(id);
    }
    clear() {
        this.polygons.forEach(polygon => polygon.dispose());
        this.polygons.clear();
    }
};
PolygonsManagerService = __decorate([
    Injectable()
], PolygonsManagerService);
export { PolygonsManagerService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9seWdvbnMtbWFuYWdlci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1jZXNpdW0vIiwic291cmNlcyI6WyJsaWIvYW5ndWxhci1jZXNpdW0td2lkZ2V0cy9zZXJ2aWNlcy9lbnRpdHktZWRpdG9ycy9wb2x5Z29ucy1lZGl0b3IvcG9seWdvbnMtbWFuYWdlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQU9uRSxJQUFhLHNCQUFzQixHQUFuQyxNQUFhLHNCQUFzQjtJQUFuQztRQUNFLGFBQVEsR0FBaUMsSUFBSSxHQUFHLEVBQTJCLENBQUM7SUE4QjlFLENBQUM7SUE1QkMscUJBQXFCLENBQUMsRUFBVSxFQUFFLGlCQUFtQyxFQUFFLGVBQWlDLEVBQ2xGLGtCQUFvQyxFQUFFLG1CQUF3QyxFQUM5RSxjQUFtQyxFQUFFLFNBQXdCO1FBQ2pGLE1BQU0sZUFBZSxHQUFHLElBQUksZUFBZSxDQUN6QyxFQUFFLEVBQ0YsaUJBQWlCLEVBQ2pCLGVBQWUsRUFDZixrQkFBa0IsRUFDbEIsbUJBQW1CLEVBQ25CLGNBQWMsRUFDZCxTQUFTLENBQUMsQ0FBQztRQUNiLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxlQUFlLENBQ3BDLENBQUM7SUFDSixDQUFDO0lBRUQsT0FBTyxDQUFDLEVBQVU7UUFDaEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDaEMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDM0IsQ0FBQztJQUVELEdBQUcsQ0FBQyxFQUFVO1FBQ1osT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRUQsS0FBSztRQUNILElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7UUFDcEQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUN4QixDQUFDO0NBQ0YsQ0FBQTtBQS9CWSxzQkFBc0I7SUFEbEMsVUFBVSxFQUFFO0dBQ0Esc0JBQXNCLENBK0JsQztTQS9CWSxzQkFBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBFZGl0YWJsZVBvbHlnb24gfSBmcm9tICcuLi8uLi8uLi9tb2RlbHMvZWRpdGFibGUtcG9seWdvbic7XG5pbXBvcnQgeyBDYXJ0ZXNpYW4zIH0gZnJvbSAnLi4vLi4vLi4vLi4vYW5ndWxhci1jZXNpdW0vbW9kZWxzL2NhcnRlc2lhbjMnO1xuaW1wb3J0IHsgUG9seWdvbkVkaXRPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vbW9kZWxzL3BvbHlnb24tZWRpdC1vcHRpb25zJztcbmltcG9ydCB7IEFjTGF5ZXJDb21wb25lbnQgfSBmcm9tICcuLi8uLi8uLi8uLi9hbmd1bGFyLWNlc2l1bS9jb21wb25lbnRzL2FjLWxheWVyL2FjLWxheWVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb29yZGluYXRlQ29udmVydGVyIH0gZnJvbSAnLi4vLi4vLi4vLi4vYW5ndWxhci1jZXNpdW0vc2VydmljZXMvY29vcmRpbmF0ZS1jb252ZXJ0ZXIvY29vcmRpbmF0ZS1jb252ZXJ0ZXIuc2VydmljZSc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBQb2x5Z29uc01hbmFnZXJTZXJ2aWNlIHtcbiAgcG9seWdvbnM6IE1hcDxzdHJpbmcsIEVkaXRhYmxlUG9seWdvbj4gPSBuZXcgTWFwPHN0cmluZywgRWRpdGFibGVQb2x5Z29uPigpO1xuXG4gIGNyZWF0ZUVkaXRhYmxlUG9seWdvbihpZDogc3RyaW5nLCBlZGl0UG9seWdvbnNMYXllcjogQWNMYXllckNvbXBvbmVudCwgZWRpdFBvaW50c0xheWVyOiBBY0xheWVyQ29tcG9uZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgZWRpdFBvbHlsaW5lc0xheWVyOiBBY0xheWVyQ29tcG9uZW50LCBjb29yZGluYXRlQ29udmVydGVyOiBDb29yZGluYXRlQ29udmVydGVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgcG9seWdvbk9wdGlvbnM/OiBQb2x5Z29uRWRpdE9wdGlvbnMsIHBvc2l0aW9ucz86IENhcnRlc2lhbjNbXSkge1xuICAgIGNvbnN0IGVkaXRhYmxlUG9seWdvbiA9IG5ldyBFZGl0YWJsZVBvbHlnb24oXG4gICAgICBpZCxcbiAgICAgIGVkaXRQb2x5Z29uc0xheWVyLFxuICAgICAgZWRpdFBvaW50c0xheWVyLFxuICAgICAgZWRpdFBvbHlsaW5lc0xheWVyLFxuICAgICAgY29vcmRpbmF0ZUNvbnZlcnRlcixcbiAgICAgIHBvbHlnb25PcHRpb25zLFxuICAgICAgcG9zaXRpb25zKTtcbiAgICB0aGlzLnBvbHlnb25zLnNldChpZCwgZWRpdGFibGVQb2x5Z29uXG4gICAgKTtcbiAgfVxuXG4gIGRpc3Bvc2UoaWQ6IHN0cmluZykge1xuICAgIHRoaXMucG9seWdvbnMuZ2V0KGlkKS5kaXNwb3NlKCk7XG4gICAgdGhpcy5wb2x5Z29ucy5kZWxldGUoaWQpO1xuICB9XG5cbiAgZ2V0KGlkOiBzdHJpbmcpOiBFZGl0YWJsZVBvbHlnb24ge1xuICAgIHJldHVybiB0aGlzLnBvbHlnb25zLmdldChpZCk7XG4gIH1cblxuICBjbGVhcigpIHtcbiAgICB0aGlzLnBvbHlnb25zLmZvckVhY2gocG9seWdvbiA9PiBwb2x5Z29uLmRpc3Bvc2UoKSk7XG4gICAgdGhpcy5wb2x5Z29ucy5jbGVhcigpO1xuICB9XG59XG4iXX0=