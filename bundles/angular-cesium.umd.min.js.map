{"version":3,"sources":["ng://angular-cesium/lib/angular-cesium/cesium-enhancements/StaticGeometryColorBatch.ts","ng://angular-cesium/lib/angular-cesium/cesium-enhancements/ConfigurationService.ts","ng://angular-cesium/lib/angular-cesium/models/scene-mode.enum.ts","ng://angular-cesium/lib/angular-cesium/services/camera/camera.service.ts","node_modules/tslib/tslib.es6.js","ng://angular-cesium/lib/angular-cesium/services/viewer-factory/viewer-factory.service.ts","ng://angular-cesium/lib/angular-cesium/services/viewer-configuration/viewer-configuration.service.ts","ng://angular-cesium/lib/angular-cesium/services/cesium/cesium.service.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/consts/cesium-event.enum.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/consts/pickOptions.enum.ts","ng://angular-cesium/lib/angular-cesium/services/context-menu/context-menu.service.ts","ng://angular-cesium/lib/angular-cesium/services/coordinate-converter/coordinate-converter.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/basic-drawer/basic-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/primitives-drawer/primitives-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/geo-utils/geo-utils.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/arc-drawer/arc-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/entities-drawer/enums/graphics-type.enum.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/entities-drawer/optimized-entity-collection.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/entities-drawer/entities-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/billboard-drawer/billboard-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/czml-drawer/czml-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/ellipse-drawer/ellipse-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/label-drawer/label-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/point-drawer/point-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/polygon-drawer/polygon-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/polyline-drawer/polyline-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/models/ac-keyboard-action.enum.ts","ng://angular-cesium/lib/angular-cesium/services/keyboard-control/predefined-actions.ts","ng://angular-cesium/lib/angular-cesium/services/keyboard-control/keyboard-control.service.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/event-observers/cesium-pure-event-observer.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/event-observers/cesium-long-press-observer.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/cesium-event-builder.ts","ng://angular-cesium/lib/angular-cesium/services/plonter/plonter.service.ts","ng://angular-cesium/lib/angular-cesium/utils/utils.service.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/event-observers/cesium-drag-drop-helper.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/map-events-manager.ts","ng://angular-cesium/lib/angular-cesium/services/map-layers/map-layers.service.ts","ng://angular-cesium/lib/angular-cesium/services/maps-manager/maps-manager.service.ts","ng://angular-cesium/lib/angular-cesium/services/screenshot/screenshot.service.ts","ng://angular-cesium/lib/angular-cesium/components/ac-map/ac-map.component.ts","ng://angular-cesium/lib/angular-cesium/services/layer-service/layer-service.service.ts","ng://angular-cesium/lib/angular-cesium/models/action-type.enum.ts","ng://angular-cesium/lib/angular-cesium/services/computation-cache/computation-cache.service.ts","ng://angular-cesium/lib/angular-cesium/utils/checker.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/ellipse-drawer/dynamic-ellipse-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/dynamic-polyline-drawer/dynamic-polyline-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/static-primitive-drawer/static-primitive-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/static-circle-drawer/static-circle-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/static-polyline-drawer/static-polyline-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/static-polygon-drawer/polygon-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/ellipse-drawer/ellipse-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/model-drawer/model-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/box-dawer/box-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/corridor-dawer/corridor-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/cylinder-dawer/cylinder-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/ellipoid-drawer/ellipsoid-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/polyline-volume-dawer/polyline-volume-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/wall-dawer/wall-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/rectangle-dawer/rectangle-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/label-primitive-drawer/label-primitive-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/billboard-primitive-drawer/billboard-primitive-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/point-primitive-drawer/point-primitive-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/html-drawer/html-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/components/ac-layer/ac-layer.component.ts","ng://angular-cesium/lib/angular-cesium/services/entity-on-map/entity-on-map.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-billboard/ac-billboard.component.ts","ng://angular-cesium/lib/angular-cesium/services/basic-desc/basic-desc.service.ts","ng://angular-cesium/lib/angular-cesium/services/json-mapper/json-mapper.service.ts","ng://angular-cesium/lib/angular-cesium/services/smart-assigner/smart-assigner.service.ts","ng://angular-cesium/lib/angular-cesium/services/cesium-properties/cesium-properties.service.ts","ng://angular-cesium/lib/angular-cesium/components/ac-billborad-desc/ac-billborad-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-ellipse-desc/ac-ellipse-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-polyline-desc/ac-polyline-desc.component.ts","ng://angular-cesium/lib/angular-cesium/pipes/pixel-offset/pixel-offset.pipe.ts","ng://angular-cesium/lib/angular-cesium/pipes/radians-to-degrees/radians-to-degrees.pipe.ts","ng://angular-cesium/lib/angular-cesium/components/ac-label-desc/ac-label-desc.component.ts","ng://angular-cesium/lib/angular-cesium/utils/utils.module.ts","ng://angular-cesium/lib/angular-cesium/components/ac-circle-desc/ac-circle-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-arc-desc/ac-arc-desc.component.ts","ng://angular-cesium/lib/angular-cesium/models/ac-entity.ts","ng://angular-cesium/lib/angular-cesium/models/ac-notification.ts","ng://angular-cesium/lib/angular-cesium/models/map-layer-provider-options.enum.ts","ng://angular-cesium/lib/angular-cesium/components/ac-map-layer-provider/ac-map-layer-provider.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-point-desc/ac-point-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-label/ac-label.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-polyline/ac-polyline.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-ellipse/ac-ellipse.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-point/ac-point.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-html/ac-html.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-circle/ac-circle.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-arc/ac-arc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-polygon-desc/ac-polygon-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-default-plonter/ac-default-plonter.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-polygon/ac-polygon.component.ts","ng://angular-cesium/lib/angular-cesium/services/basic-primitive-desc/basic-static-primitive-desc.service.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-static-ellipse-desc/ac-static-ellipse-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-dynamic-ellipse-desc/ac-dynamic-ellipse-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-dynamic-polyline-desc/ac-dynamic-polyline-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-static-polygon-desc/ac-static-polygon-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-static-circle-desc/ac-static-circle-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-dynamic-circle-desc/ac-dynamic-circle-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-static-polyline-desc/ac-static-polyline-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-model-desc/ac-model-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-3d-tileset/ac-tileset-3d.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-box-desc/ac-box-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-cylinder-desc/ac-cylinder-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-corridor-desc/ac-corridor-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-ellipsoid-desc/ac-ellipsoid-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-polyline-volume-desc/ac-polyline-volume-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-wall-desc/ac-wall-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-rectangle-desc/ac-rectangle-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-billboard-primitive-desc/ac-billboard-primitive-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-label-primitive-desc/ac-label-primitive-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-polyline-primitive-desc/ac-polyline-primitive-desc.component.ts","ng://angular-cesium/lib/cesium-extender/primitives/html.ts","ng://angular-cesium/lib/cesium-extender/collections/html.ts","ng://angular-cesium/lib/cesium-extender/extender.ts","ng://angular-cesium/lib/angular-cesium/services/ac-html-manager/ac-html-manager.service.ts","ng://angular-cesium/lib/angular-cesium/directives/ac-html/ac-html.directive.ts","ng://angular-cesium/lib/angular-cesium/components/ac-html-desc/ac-html-desc.component.ts","ng://angular-cesium/lib/angular-cesium/directives/ac-html-container/ac-html-container.directive.ts","ng://angular-cesium/lib/angular-cesium/components/ac-context-menu-wrapper/ac-context-menu-wrapper.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-array-desc/ac-array-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-point-primitive-desc/ac-point-primitive-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-primitive-polyline/ac-primitive-polyline.component.ts","ng://angular-cesium/lib/angular-cesium/pipes/pipe-config-map.ts","ng://angular-cesium/lib/angular-cesium/components/ac-czml-desc/ac-czml-desc.component.ts","ng://angular-cesium/lib/angular-cesium/angular-cesium.module.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/disposable-observable.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/consts/cesium-event-modifier.enum.ts","ng://angular-cesium/lib/angular-cesium/services/selection-manager/selection-manager.service.ts","ng://angular-cesium/lib/heatmap/cesium-heatmap-material-creator.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/edit-mode.enum.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/edit-actions.enum.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/edit-point.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/edit-polyline.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/label-props.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editable-polygon.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/polygons-editor/polygons-manager.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/utils.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/polygons-editor/polygons-editor.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/polygons-editor/polygons-editor.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/edit-arc.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editable-circle.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/circles-editor/circles-manager.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/circles-editor/circles-editor.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/circles-editor/circles-editor.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editable-ellipse.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/ellipses-editor/ellipses-manager.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/ellipses-editor/ellipses-editor.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/ellipses-editor/ellipses-editor.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editable-polyline.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editor-observable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/polyline-editor-observable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/polygon-editor-observable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/circle-editor-observable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/ellipse-editor-observable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/hippodrome-editor-oboservable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editable-hippodrome.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/polyline-editor/polylines-editor.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/polyline-editor/polylines-manager.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/polylines-editor/polylines-editor.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/hippodrome-editor/hippodrome-manager.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/hippodrome-editor/hippodrome-editor.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/hippodrome-editor/hippodrome-editor.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/draggable-to-map.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/directives/draggable-to-map.directive.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/toolbar/ac-toolbar/ac-toolbar.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/toolbar/ac-toolbar/drag-icon.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/toolbar/ac-toolbar-button/ac-toolbar-button.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/range-and-bearing/range-and-bearing.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/zoom-to-rectangle.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/angular-cesium-widgets.module.ts"],"names":["AssociativeArray","Cesium","Color","ColorGeometryInstanceAttribute","defined","DistanceDisplayCondition","DistanceDisplayConditionGeometryInstanceAttribute","ShowGeometryInstanceAttribute","Primitive","ShadowMode","BoundingSphereState","ColorMaterialProperty","MaterialProperty","Property","colorScratch","distanceDisplayConditionScratch","defaultDistanceDisplayCondition","Batch","primitives","translucent","appearanceType","depthFailAppearanceType","depthFailMaterialProperty","closed","shadows","removeMaterialSubscription","this","depthFailMaterial","undefined","createPrimitive","waitingOnCreate","primitive","oldPrimitive","geometry","updaters","updatersWithAttributes","attributes","subscriptions","showsUpdated","itemsToRemove","invalidated","definitionChanged","addEventListener","prototype","onMaterialChanged","isMaterial","updater","material","updaterMaterial","equals","add","instance","id","set","hasConstantFill","fillMaterialProperty","isConstant","distanceDisplayConditionProperty","that","entity","propertyName","newValue","oldValue","remove","unsubscribe","get","update","time","i","isUpdated","removedCount","geometries","values","geometriesLength","length","geometryItem","originalAttributes","show","value","color","depthFailColor","depthFailAppearance","getValue","asynchronous","geometryInstances","appearance","flat","DISABLED","CAST_ONLY","removeAll","ready","getGeometryInstanceAttributes","colorProperty","resultColor","getValueOrDefault","WHITE","_lastColor","clone","toValue","depthFailColorProperty","depthColor","_lastDepthFailColor","isShowing","isFilled","distanceDisplayCondition","_lastDistanceDisplayCondition","updateShows","contains","getBoundingSphere","result","PENDING","boundingSphere","FAILED","DONE","removeAllPrimitives","wasFixed","destroy","ANGULAR_CESIUM_CONFIG","InjectionToken","ConfigurationService","Injectable","Optional","type","Inject","args","config","fixEntitiesShadows","fixCesiumEntitiesShadows","StaticGeometryColorBatch","items","createFillGeometryInstance","_solidItems","_translucentItems","item","batch","_primitives","_appearanceType","_depthFailAppearanceType","_closed","_shadows","push","SCENE3D","COLUMBUS_VIEW","SCENE2D","PERFORMANCE_SCENE2D","CameraService","init","cesiumService","viewer","getViewer","scene","getScene","screenSpaceCameraController","camera","lastRotate","enableRotate","lastTilt","enableTilt","lastLook","enableLook","_listenToSceneModeMorph","callback","morphListenerCancelFn","morphStart","_revertCameraProperties","isSceneModePerformance2D","getCamera","getScreenSpaceCameraController","getMinimumZoom","minimumZoomDistance","setMinimumZoom","amount","getMaximumZoom","maximumZoomDistance","setMaximumZoom","tilt","rotate","lock","enableTranslate","translate","enableZoom","zoom","enableInputs","inputs","setSceneMode","sceneMode","duration","_this","SceneMode","morphTo3D","morphToColumbusView","morphTo2D","morphCompleteEventListener_1","morphComplete","setView","destination","Cartesian3","fromDegrees","Math","min","PERFORMANCE_2D_ALTITUDE","orientation","pitch","toRadians","bind","cameraFlyTo","options","flyTo","target","zoomIn","defaultZoomAmount","zoomOut","zoomTo","offset","setRotation","degreesInRadians","heading","lockRotation","trackEntity","trackedEntity","Promise","resolve","flyToDuration","altitude","entPosCar3","position","JulianDate","now","entPosCart","Cartographic","fromCartesian","zoomAmount_1","height","flyToPosition","fromRadians","longitude","latitude","complete","setTimeout","untrackEntity","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__assign","assign","t","s","n","arguments","call","apply","__read","o","m","Symbol","iterator","r","e","ar","next","done","error","__spread","concat","ViewerFactory","createViewer","mapContainer","cesium","Viewer","contextOptions","webgl","preserveDrawingBuffer","imageryProvider","createTileMapServiceImageryProvider","url","buildModuleUrl","baseLayerPicker","geocoder","ViewerConfiguration","defineProperty","_viewerOptions","getNextViewerOptions","nextViewerOptionsIndex","_viewerModifier","getNextViewerModifier","nextViewerModifierIndex","CesiumService","map","ngZone","runOutsideAngular","viewerConfiguration","cesiumViewer","viewerFactory","viewerModifier","getCanvas","getMap","NgZone","decorators","MOUSE_MOVE","ScreenSpaceEventType","LEFT_CLICK","LEFT_DOUBLE_CLICK","LEFT_DOWN","LEFT_UP","MIDDLE_CLICK","MIDDLE_DOUBLE_CLICK","MIDDLE_DOWN","MIDDLE_UP","PINCH_START","PINCH_END","PINCH_MOVE","RIGHT_CLICK","RIGHT_DOUBLE_CLICK","RIGHT_DOWN","RIGHT_UP","WHEEL","LONG_LEFT_PRESS","LONG_RIGHT_PRESS","LONG_MIDDLE_PRESS","LEFT_CLICK_DRAG","RIGHT_CLICK_DRAG","MIDDLE_CLICK_DRAG","NO_PICK","PICK_FIRST","PICK_ONE","PICK_ALL","ContextMenuService","_contextMenuChangeNotifier","_showContextMenu","_options","_position","_content","_onOpen","_onClose","mapEventsManager","open","content","close","_defaultContextMenuOptions","closeOnLeftCLick","leftClickRegistration","register","event","CesiumEvent","pick","PickOptions","priority","closeOnLeftClickPriority","leftClickSubscription","subscribe","emit","dispose","EventEmitter","LatLonVectors","geodesy['LatLonVectors']","window","geodesy","CoordinateConverter","screenToCartesian3","screenPos","addMapCanvasBoundsToPos","screenPosition","mapBounds","canvas","getBoundingClientRect","x","left","y","top","pickEllipsoid","Error","screenToCartographic","ellipsoid","cartesian3ToCartographic","cartesian","degreesToCartographic","radiansToCartographic","degreesToUTM","LatLonEllipsoidal","toUtm","UTMToDegrees","zone","hemisphereType","easting","northing","geodesyToCesiumObject","Utm","toLatLonE","geodesyRadians","lon","lat","midPointToCartesian3","first","second","toDeg","rad","toDegrees","firstPoint","secondPoint","middlePoint","midpointTo","middlePointByScreen","position0","position1","screenPosition1","SceneTransforms","wgs84ToWindowCoordinates","screenPosition2","middleScreenPoint","Cartesian2","pickPosition","bearingTo","bearingToCartesian","firstCartesian3","secondCartesian3","firstCart","secondCart","BasicDrawerService","setPropsAssigner","assigner","_propsAssigner","tslib_1.__extends","PrimitivesDrawerService","_cesiumCollection","drawerType","_primitiveCollectionWrap","PrimitiveCollection","destroyPrimitives","cesiumProps","_i","setShow","showValue","_show","getShow","_super","GeoUtilsService","pointByLocationDistanceAndAzimuth","currentLocation","meterDistance","radianAzimuth","deprecated","resultPosition","resultDistance","distance","Ellipsoid","WGS84","maximumRadius","cartographicLocation","cartesianLocation","counter","distanceFactorRangeMax","distanceFactorRangeMin","max","_pointByLocationDistanceAndAzimuth","curLat","curLon","destinationLat","asin","sin","cos","destinationLon","atan2","PI","pos0","pos1","getPositionsDelta","z","addDeltaToPosition","delta","updateReference","cartographic","middleCartesian3Point","screenPositionToCartesian3","ArcDrawerService","_calculateArcPositions","quality","pointsArray","point","center","radius","angle","_calculateTriangle","_calculateArc","arcPoints","drawEdges","positions","Material","fromType","uniforms","constantColor","width","PolylineCollection","ellipse","EllipseGraphics","EllipsoidGraphics","polygon","PolygonGraphics","polyline","PolylineGraphics","polylineVolume","PolylineVolumeGraphics","box","BoxGraphics","corridor","CorridorGraphics","cylinder","CylinderGraphics","label","LabelGraphics","billboard","BillboardGraphics","model","ModelGraphics","path","PathGraphics","PointGraphics","rectangle","RectangleGraphics","wall","WallGraphics","OptimizedEntityCollection","entityCollection","_isSuspended","_updateRate","_collectionSize","collection","isFree","suspend","removeNoSuspend","onEventSuspension","once","_onEventSuspensionCallback","onEventResume","_onEventResumeCallback","triggerEventResume","triggerEventSuspension","_isHardSuspend","suspendEvents","_suspensionTimeout","resumeEvents","hardSuspend","hardResume","collectionSize","updateRate","EntitiesDrawerService","getFreeEntitiesCollection","freeEntityCollection","entityCollections","forEach","finalOptions","defaultOptions","dataSources","collectionsNumber","dataSource","CustomDataSource","graphicsTypeName","entities","collectionMaxSize","collectionSuspensionTime","optimizedEntityCollection","entityObject","_a","description","viewFrom","name","suspendEntityCollection","CallbackProperty","_isConstant","has","graphicsType","Map","GraphicsType","BillboardDrawerService","CzmlDrawerService","czmlStream","CzmlDataSource","process","czmlPacket","removeById","acEntity","EllipseDrawerService","LabelDrawerService","PointDrawerService","PolygonDrawerService","PolylineDrawerService","PolylinePrimitiveDrawerService","withColorMaterial","cesiumObject","CAMERA_FORWARD","CAMERA_BACKWARD","CAMERA_RIGHT","CAMERA_LEFT","CAMERA_UP","CAMERA_DOWN","CAMERA_LOOK_RIGHT","CAMERA_LOOK_LEFT","CAMERA_LOOK_UP","CAMERA_LOOK_DOWN","CAMERA_TWIST_RIGHT","CAMERA_TWIST_LEFT","CAMERA_ROTATE_RIGHT","CAMERA_ROTATE_LEFT","CAMERA_ROTATE_UP","CAMERA_ROTATE_DOWN","CAMERA_ZOOM_IN","CAMERA_ZOOM_OUT","PREDEFINED_KEYBOARD_ACTIONS","KeyboardAction","params","moveRate","globe","cartesianToCartographic","moveForward","moveBackward","moveUp","moveDown","moveRight","moveLeft","currentPosition","positionCartographic","lookFactor","lookRight","lookLeft","lookUp","lookDown","twistRight","twistLeft","rotateRight","rotateLeft","rotateUp","rotateDown","IGNORED","NOT_PRESSED","PRESSED","KeyboardControlService","focus","handleKeydown","handleKeyup","handleTick","setKeyboardControls","definitions","keyMappingFn","outsideOfAngularZone","removeKeyboardControls","_currentDefinitions","registerEvents","_keyMappingFn","defaultKeyMappingFn","keys","key","_activeDefinitions","state","KeyEventState","action","keyboardEvent","unregisterEvents","getAction","char","keyEvent","String","fromCharCode","keyCode","execute","getParams","validation","actionState","executeAction","paramsDef","execution","isNumber","predefinedAction","registerToEvents","document","clock","onTick","removeEventListener","DOCUMENT","CesiumPureEventObserver","eventsHandler","observer","Observable","setInputAction","movement","startPosition","endPosition","modifier","CesiumLongPressObserver","startEvent","stopEvent","startEventObservable","eventFactory","stopEventObservable","publish","pipe","mergeMap","observableOf","delay","LONG_PRESS_EVENTS_DURATION","takeUntil","CesiumEventBuilder","getEventFullName","toString","screenSpaceEventHandler","eventName","cesiumEventsObservables","eventObserver","createCesiumEventObservable","cesiumEventObservable","longPressEvents","createSpecialCesiumEventObservable","connect","Set","PlonterService","_plonterChangeNotifier","_plonterShown","_entitesToPlonter","_eventResult","plonterIt","eventResult","_plonterObserver","resolvePlonter","Subject","UtilsService","array","reduce","accumulator","currentValue","indexOf","CesiumDragDropHelper","getDragEventTypes","dragEvent","mouseDownEvent","mouseUpEvent","dragEvents","Registration","observable","stopper","isPaused","MapEventsManagerService","eventBuilder","input","entityType","eventRegistrations","eventRegistration","createEventRegistration","pickFilter","registrationObservable","disposeObservable","sortRegistrationsByPriority","registrations","index","splice","sort","a","currentPriority","registration","pickOption","createDragEvent","filter","triggerPick","cesiumEntities","picksAndMovement","addEntities","switchMap","entitiesAndMovement","plonter","mouseUpObservable","mouseMoveObservable","mouseDownRegistration","dropSubject","dragObserver","lastMove","dragStartPositionX","dragStartPositionY","drop","tap","dropEvent","merge","pickOptions","picks","drillPick","Entity","plonterService","MapLayersService","registerLayerDataSources","zIndex","ds","layersDataSources","drawAllLayers","updateAndRefresh","newZIndex","removeDataSources","MapsManagerService","_Maps","firstMap","_registerMap","acMap","mapId","generateDefaultId","_removeMapById","iter","delete","defaultIdCounter","sync2DMapsCameras","mapsConfiguration","unsyncMapsCameras","maps","sensitivity","bindZoom","masterMapConfig","masterMap","masterCamera","getCameraService","masterCameraCartographic","percentageChanged","removeCallback","changed","slaveMapConfig","slaveMap","slaveMapOptions","slaveCamera","slaveCameraCartographic","cartographicToCartesian","getCesiumViewer","mode","MORPHING","eventRemoveCallbacks","ScreenshotService","getMapScreenshotDataUrlBase64","toDataURL","downloadMapScreenshot","filename","dataUrl","downloadURI","uri","link","createElement","download","href","body","appendChild","click","removeChild","AcMapComponent","ngOnInit","mapsManagerService","containerId","_elemRef","nativeElement","ngOnChanges","changes","_cameraService","firstChange","element","getElementById","ngAfterViewInit","mapLayersService","ngOnDestroy","getCesiumSerivce","_cesiumService","getId","getMapContainer","getMapEventsManager","getContextMenuService","contextMenuService","getScreenshotService","screenshotService","getKeyboardControlService","keyboardControlService","getCoordinateConverter","coordinateConverter","Component","selector","template","providers","ElementRef","Input","billboardDrawerService","labelDrawerService","ellipseDrawerService","polylineDrawerService","polygonDrawerService","arcDrawerService","pointDrawerService","czmlDrawerService","configurationService","disableDefaultPlonter","style","className","LayerService","_cache","_zIndex","layerUpdate","_context","context","setEntityName","_entityName","getEntityName","registerDescription","descriptionComponent","descriptions","unregisterDescription","getDescriptions","layerUpdates","ADD_UPDATE","DELETE","ComputationCache","expression","insertFn","clear","Checker","throwIfAnyNotPresent","propertyNames","throwIfNotPresent","present","DynamicEllipseDrawerService","EllipsePrimitive","updateLocationData","DynamicPolylineDrawerService","StaticPrimitiveDrawer","geometryProps","instanceProps","primitiveProps","geometryType","GeometryInstance","StaticCircleDrawerService","CircleGeometry","StaticPolylineDrawerService","when","readyPromise","then","readyPrimitive","PolylineGeometry","StaticPolygonDrawerService","PolygonGeometry","StaticEllipseDrawerService","EllipseGeometry","ModelDrawerService","BoxDrawerService","CorridorDrawerService","CylinderDrawerService","EllipsoidDrawerService","PolylineVolumeDrawerService","WallDrawerService","RectangleDrawerService","LabelPrimitiveDrawerService","LabelCollection","BillboardPrimitiveDrawerService","BillboardCollection","PointPrimitiveDrawerService","PointPrimitiveCollection","HtmlDrawerService","HtmlCollection","AcLayerComponent","initValidParams","observableMerge","_updateStream","stopObservable","notification","_computationCache","contextEntity","store","updateStore","entityName","layerService","actionType","ActionType","draw","console","entitiesStore","acForRgx","test","acFor","acForArr","split","isObservable","obj","ngAfterContentInit","_drawerList","drawer","drawerName","initOptions","drawerDataSources","layerDrawerDataSources","showValue_1","zIndexValue","getLayerService","getLayerDrawerDataSources","getDrawerDataSourcesByName","getStore","entityId","updateNotification","refreshAll","observableFrom","changeDetection","ChangeDetectionStrategy","OnPush","modelDrawerService","boxDrawerService","corridorDrawerService","cylinderDrawerService","ellipsoidDrawerSerice","polylineVolumeDrawerService","wallDrawerService","rectangleDrawerService","dynamicEllipseDrawerService","dynamicPolylineDrawerService","staticCircleDrawerService","staticPolylineDrawerService","staticPolygonDrawerService","staticEllipseDrawerService","polylinePrimitiveDrawerService","labelPrimitiveDrawerService","billboardPrimitiveDrawerService","pointPrimitiveDrawerService","htmlDrawerService","EntityOnMapComponent","selfPrimitiveIsDraw","_drawer","drawOnMap","props","previousValue","updateOnMap","selfPrimitive","removeFromMap","mapLayers","AcBillboardComponent","billboardDrawer","BasicDesc","_propsEvaluator","_propsEvaluateFn","_getPropsAssigner","desc","_propsAssignerFn","_layerService","setLayerService","_cesiumProperties","createEvaluator","cache","createAssigner","getCesiumObjectsMap","_cesiumObjectsMap","onDraw","cesiumEntity","onRemove","Output","JsonMapper","_mapper","JsonStringMapper","SmartAssigner","allowUndefined","fnBody","prop","assignFn","Function","obj1","obj2","CesiumProperties","_compile","withCache","cesiumDesc","propsMap","_jsonMapper","resultExpression","_parser","eval","JSON","stringify","replace","getFn","_build","from","smartAssigner","oldVal","newVal","newEvaluator","_evaluatorsCache","evaluatorFn","_assignersCache","Parse","AcBillboardDescComponent","provide","useExisting","forwardRef","computationCache","cesiumProperties","AcEllipseDescComponent","ellipseDrawer","AcPolylineDescComponent","PixelOffsetPipe","transform","Pipe","RadiansToDegreesPipe","round","AcLabelDescComponent","labelDrawer","UtilsModule","NgModule","imports","CommonModule","AcCircleDescComponent","semiMajorAxis","semiMinorAxis","AcArcDescComponent","arcDrawer","AcEntity","json","AcNotification","ArcGisMapServer","ArcGisMapServerImageryProvider","WebMapTileService","WebMapTileServiceImageryProvider","MapTileService","WebMapService","WebMapServiceImageryProvider","SingleTileImagery","SingleTileImageryProvider","OpenStreetMap","createOpenStreetMapImageryProvider","BingMaps","BingMapsImageryProvider","GoogleEarthEnterpriseMaps","GoogleEarthEnterpriseMapsProvider","MapBox","MapboxImageryProvider","UrlTemplateImagery","UrlTemplateImageryProvider","OFFLINE","AcMapLayerProviderComponent","createOfflineMapProvider","provider","MapLayerProviderOptions","layerProvider","log","imageryLayer","imageryLayersCollection","addImageryProvider","alpha","contrast","brightness","isFirstChange","imageryLayers","AcPointDescComponent","AcLabelComponent","AcPolylineComponent","polylineDrawer","AcEllipseComponent","AcPointComponent","pointDrawer","AcHtmlComponent","setScreenPosition","renderer","setStyle","elementRef","hideElement","isDraw","preRender","preRenderEventListener","ngDoCheck","Renderer2","AcCircleComponent","updateEllipseProps","rotation","AcArcComponent","AcPolygonDescComponent","polygonDrawer","AcDefaultPlonterComponent","plonterChangeNotifier","cd","detectChanges","plonterShown","plonterClickPosition","geoConverter","chooseEntity","ChangeDetectorRef","AcPolygonComponent","BasicStaticPrimitiveDesc","_geometryPropsEvaluator","_instancePropsEvaluator","_primitivePropsEvaluator","_staticPrimitiveDrawer","AcStaticEllipseDescComponent","AcDynamicEllipseDescComponent","AcDynamicPolylineDescComponent","AcStaticPolygonDescComponent","AcStaticCircleDescComponent","staticCircleDrawer","AcDynamicCircleDescComponent","AcStaticPolylineDescComponent","AcModelDescComponent","modelDrawer","AcTileset3dComponent","_3dtilesCollection","tilesetInstance","Cesium3DTileset","Cesium3DTileStyle","AcBoxDescComponent","drawerService","AcCylinderDescComponent","AcCorridorDescComponent","AcEllipsoidDescComponent","AcPolylineVolumeDescComponent","AcWallDescComponent","AcRectangleDescComponent","AcBillboardPrimitiveDescComponent","billboardPrimitiveDrawer","AcLabelPrimitiveDescComponent","labelPrimitiveDrawer","AcPolylinePrimitiveDescComponent","HtmlPrimitive","_scene","_element","display","_pixelOffset","pixelOffset","_mapContainer","Number","MAX_VALUE","_collection","_lastPosition","html","len","pop","CesiumExtender","extend","AcHtmlManager","_entities","addOrUpdate","info","AcHtmlContext","AcHtmlDirective","_handleView","_views","$implicit","viewRef","_viewContainerRef","createEmbeddedView","_templateRef","_changeDetector","_acHtmlManager","Directive","TemplateRef","ViewContainerRef","AcHtmlDescComponent","acHtmlCreator","acHtmlTemplate","ViewChild","ContentChild","htmlDrawer","AcHtmlContainerDirective","_id","AcContextMenuWrapperComponent","contextMenuChangeSubscription","contextMenuChangeNotifier","contextMenuOpenSubscription","onOpen","componentFactory","componentFactoryResolver","resolveComponentFactory","viewContainerRef","createComponent","data","ComponentFactoryResolver","read","AcArrayDescComponent","acForString","arrayPath","layer","layerServiceSubscription","arrayObservable$","basicDescs","_results","component","arrayDescs","entitiesArray","_get","previousEntitiesIdArray","entitiesMap","entitiesIdArray","arrayItemId","generateCombinedId","entitiesToRemove","idGetter","getAcForString","arrayItem","MAX_SAFE_INTEGER","ContentChildren","descendants","AcPointPrimitiveDescComponent","AcPrimitivePolylineComponent","PARSE_PIPES_CONFIG_MAP","pipeName","pipeInstance","AcCzmlDescComponent","czmlDrawer","AngularCesiumModule","forRoot","ngModule","useValue","PIPES_CONFIG","multi","customPipes","Angular2ParseModule","declarations","exports","DisposableObservable","ALT","KeyboardEventModifier","CTRL","SHIFT","SelectionManagerService","selectedEntities$","selectedEntitiesItems$","asObservable","selectedEntities","selectedEntity$","selectedEntitySubject$","toggleSelection","addSelectedIndicator","addToSelected","removeSelected","current","entityIndex","initSelection","selectionOptions","eventPriority","mapComponent","mapsManager","mapEventsManagerService","BehaviorSubject","h337","CesiumHeatMapMaterialCreator","calcCircleContainingRect","calcEllipseContainingRect","ellipsePoints","Rectangle","fromCartesianArray","calculateContainingRectFromPoints","points","setData","heatmap","setWGS84Data","convdata","gp","hp","wgs84PointToHeatmapPoint","mercatorPointToHeatmapPoint","pn","_xoffset","_factor","_spacing","_yoffset","createContainer","containerCanvasCounter","container","setAttribute","wgs84ToMercator","mp","WMP","project","wgs84ToMercatorBB","bb","sw","west","south","ne","east","north","mercatorToWgs84BB","unproject","rad2deg","setWidthAndHeight","mbb","abs","heatmapOptionsDefaults","maxCanvasSize","minCanvasSize","containingBoundingRect","heatmapDataSet","heatmapOptions","userBB","heatPointsData","finalHeatmapOptions","_mbounds","radiusFactor","spacingFactor","bounds","_rectangle","_c","h337.create","heatMapCanvas","_renderer","heatMapMaterial","ImageMaterialProperty","image","transparent","setClear","elem","parentNode","maxOpacity","minOpacity","blur","gradient",".3",".65",".8",".95","WebMercatorProjection","CREATE","EDIT","CREATE_OR_EDIT","INIT","ADD_POINT","ADD_LAST_POINT","CHANGE_TO_EDIT","REMOVE_POINT","DRAG_POINT","DRAG_POINT_FINISH","DRAG_SHAPE","DRAG_SHAPE_FINISH","DISABLE","ENABLE","DISPOSE","SET_EDIT_LABELS_RENDER_CALLBACK","UPDATE_EDIT_LABELS","SET_MANUALLY","TRANSFORM","EditPoint","pointProps","isVirtualEditPoint","_virtualEditPoint","setVirtualEditPoint","getEditedEntityId","editedEntityId","getPosition","setPosition","generateId","virtualPoint","EditPolyline","_polylineProps","getPositions","validatePositions","getStartPosition","getEndPosition","setStartPosition","setEndPosition","polylineProps","defaultLabelProps","backgroundColor","backgroundPadding","eyeOffset","fillColor","font","heightReference","HeightReference","NONE","horizontalOrigin","HorizontalOrigin","LEFT","outlineColor","BLACK","outlineWidth","ZERO","pixelOffsetScaleByDistance","scale","scaleByDistance","showBackground","LabelStyle","FILL","text","translucencyByDistance","verticalOrigin","VerticalOrigin","BASELINE","EditablePolygon","_labels","labels","getRealPositions","_defaultPolylineProps","_defaultPointProps","_polygonProps","_enableEdit","updatePointsLayer","createFromExisting","addPointFromExisting","addAllVirtualEditPoints","updatePolygonsLayer","doneCreation","setPointsManually","polygonProps","pointsLayer","newPoints","pointOrCartesian","newPoint","defaultPointProps","currentPoints","pos","currentPoint","nextIndex","nextPoint","midPoint","setMiddleVirtualPoint","firstP","secondP","currentCart","nextCart","midPointCartesian3","firstIndex","updateMiddleVirtualPoint","virtualEditPoint","prevPoint","prevPointCart","nextPointCart","changeVirtualPointToRealPoint","pointsCount","pointIndex","preIndex","prePoint","firstMidPoint","secMidPoint","renderPolylines","polylines","polylinesLayer","realPoints","defaultPolylineProps","addPoint","movingPoint","movePoint","toPosition","editPoint","nextVirtualPoint","nextRealPoint","prevVirtualPoint","prevRealPoint","moveTempMovingPoint","movePolygon","startMovingPosition","draggedToPosition","lastDraggedToPosition","endMovePolygon","removePoint","pointToRemove","removePosition","getPointsCount","polygonsLayer","addLastPoint","getRealPoints","getPositionsHierarchy","getPositionsHierarchyCallbackProperty","findIndex","line","polygonOptions","PolygonsManagerService","createEditablePolygon","editPolygonsLayer","editPointsLayer","editPolylinesLayer","editablePolygon","polygons","generateKey","possible","charAt","floor","random","DEFAULT_POLYGON_OPTIONS","addPointEvent","addLastPointEvent","removePointEvent","dragPointEvent","dragShapeEvent","allowDrag","withAlpha","pixelSize","virtualPointPixelSize","showVirtual","PolygonsEditorService","cameraService","polygonsManager","updatePublisher","onUpdate","setOptions","clientEditSubject","editAction","editMode","EditModes","finishedCreate","updateSubject","EditActions","mouseMoveRegistration","addPointRegistration","addLastPointRegistration","observablesMap","editorObservable","createEditorObservable","updatedPosition","allPositions","find","updateValue","getPoints","maximumNumberOfPoints","switchToEditMode","changeMode","editPolygon","edit","editSubject","editObservable","shapeDragRegistration","pointDragRegistration","pointRemoveRegistration","_b","updatedPoint","endDragPosition","startDragPosition","draggedPosition","observables","warn","defaultClone","parse","observableToExtend","obs","enable","disable","setManually","setLabelsRenderFn","labelsRenderFn","updateLabels","getCurrentPoints","getEditValue","getLabels","PolygonsEditorComponent","startListeningToEditorUpdates","polygonsEditor","handleCreateUpdates","handleEditUpdates","getLabelId","renderEditLabels","editLabelsRenderFn","removeEditLabels","enableEdit","getPointSize","getPointShow","editPoints$","editPolylines$","editPolygons$","PerInstanceColorAppearance","fromColor","polygonColor","lineColor","EditArc","_arcProps","_angle","_delta","_radius","_center","updateCenter","EditableCircle","_radiusPoint","_pointProps","_circleProps","radiusPoint","centerPointProp","radiusPointProp","circleProp","circleProps","_outlineArc","getRadius","createOutlineArc","updateArcsLayer","updateCirclesLayer","moveCircle","dragStartPosition","dragEndPosition","getCenter","getRadiusCallbackProperty","getCenterCallbackProperty","getRadiusPoint","arcsLayer","circlesLayer","CirclesManagerService","createEditableCircle","editCirclesLayer","editArcsLayer","circleOptions","editableCircle","circles","circle","DEFAULT_CIRCLE_OPTIONS","GREEN","outline","CirclesEditorService","circlesManager","getCircleProperties","editCircle","pointIsCenter","getCenterPoint","getCenterPosition","getRadiusPosition","CirclesEditorComponent","circlesEditor","editCircles$","editArcs$","EditableEllipse","_majorRadiusPoint","midpoint","_minorRadiusPoints","_minorRadius","getMinorRadiusPointPosition","_ellipseProps","getMajorRadiusPointPosition","majorRadius","minorRadius","ellipseProp","ellipseProps","_rotation","_majorRadius","majorRadiusPosition","updateMinorRadiusEditPoints","updateEllipsesLayer","updateRotation","transformToEllipse","getMajorRadius","newRadius","circleToEllipseTransformation","majorRadiusPoint","moveEllipse","getRotation","endMoveEllipse","getMinorRadius","azimuthInDegrees","getRotationCallbackProperty","getMinorRadiusCallbackProperty","getMajorRadiusCallbackProperty","ellipsesLayer","EllipsesManagerService","createEditableEllipse","editEllipsesLayer","ellipseOptions","editableEllipse","ellipses","DEFAULT_ELLIPSE_OPTIONS","circleToEllipseTransformEvent","circleToEllipseTransformEventModifier","CesiumEventModifier","EllipsesEditorService","ellipsesManager","editEllipse","addSecondRadiusRegistration","getEllipseProperties","minorRadiusPointPosition","majorRadiusPointPosition","EllipsesEditorComponent","ellipsesEditor","editEllipses$","EditablePolyline","moveShape","endMoveShape","editOptions","EditorObservable","PolylineEditorObservable","PolygonEditorObservable","CircleEditorObservable","EllipseEditorObservable","HippodromeEditorObservable","EditableHippodrome","_hippodromeProps","createHeightEditPoints","updateHippdromeLayer","widthMeters","hippodromeProps","secP","lerp","bearingDeg","upAzimuth","createMiddleEditablePoint","downAzimuth","azimuth","upEditCartesian3","changeWidthByNewPoint","normalizedBearingDeb","bearingDegHippodromeDots","fixedBearingDeg","distanceMeters","radiusWidth","endMovePoint","getRealPositionsCallbackProperty","getWidth","hippodromeLayer","DEFAULT_POLYLINE_OPTIONS","PolylinesEditorService","polylinesManager","polylineOptions","editPolyline","PolylinesManagerService","createEditablePolyline","editablePolyline","PolylinesEditorComponent","polylinesEditor","polylineLabelsLayer","polylineLabels$","HippodromeManagerService","createEditableHippodrome","editHippodromeLayer","hippodromeEditOptions","editableHippodrome","hippodromes","hippodrome","DEFAULT_HIPPODROME_OPTIONS","HippodromeEditorService","managerService","hippodromeManager","hippodromeOptions","isFirstPoint","editHippodrome","firstPosition","secondPosition","firstPointProp","secondPointProp","getCurrentWidth","HippodromeEditorComponent","hippodromesEditor","editHippodromesLayer","hippodromesManager","editHippodromes$","DraggableToMapService","setCoordinateConverter","drag","imageSrc","cancel","imgElement","src","visibility","createDragObservable","dragObservable","clientWidth","clientHeight","mainSubject","dragUpdates","pointerUp","observableFromEvent","moveObservable","initialScreenPosition","mapPosition","DraggableToMapDirective","draggableToMap","onMouseDown","iconDragService","HostListener","el","AcToolbarComponent","mouseDown$","mouseMove$_1","mouseUp$_1","drag$","subscription","dragStyle","height.px","width.px","DragIconComponent","AcToolbarButtonComponent","onClick","RangeAndBearingComponent","lineEditOptions","labelsStyle","distanceLabelsStyle","bearingLabelsStyle","_d","_e","_f","bearingStringFn","distanceStringFn","rnb","polylineEditor","totalDistance","previousPosition","bearing","toFixed","ZoomToRectangleService","activate","mapZoomData","mapsZoomElements","borderElement","mouse","endX","endY","startX","startY","resetOnEscapePress","resetKeyCode","onmousedown","onStart","rect","offsetX","clientX","offsetY","clientY","border","borderStyle","onmouseup","zoomApplied","zoomCameraToRectangle","animationDurationInSeconds","onComplete","autoDisableOnZoom","onmousemove","resetOnEscapePressFunc","animationDuration","cartesian1","cartesian2","cartographic1","cartographic2","AngularCesiumWidgetsModule"],"mappings":"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","sourcesContent":["/**\n * Fix for the constant entity shadowing.\n * PR in Cesium repo: https://github.com/AnalyticalGraphicsInc/cesium/pull/5736\n */\n\n// tslint:disable\nconst AssociativeArray = Cesium.AssociativeArray;\nconst Color = Cesium.Color;\nconst ColorGeometryInstanceAttribute = Cesium.ColorGeometryInstanceAttribute;\nconst defined = Cesium.defined;\nconst DistanceDisplayCondition = Cesium.DistanceDisplayCondition;\nconst DistanceDisplayConditionGeometryInstanceAttribute = Cesium.DistanceDisplayConditionGeometryInstanceAttribute;\nconst ShowGeometryInstanceAttribute = Cesium.ShowGeometryInstanceAttribute;\nconst Primitive = Cesium.Primitive;\nconst ShadowMode = Cesium.ShadowMode;\nconst BoundingSphereState = Cesium.BoundingSphereState;\nconst ColorMaterialProperty = Cesium.ColorMaterialProperty;\nconst MaterialProperty = Cesium.MaterialProperty;\nconst Property = Cesium.Property;\n\nvar colorScratch = new Color();\nvar distanceDisplayConditionScratch = new DistanceDisplayCondition();\nvar defaultDistanceDisplayCondition = new DistanceDisplayCondition();\n\nfunction Batch(primitives, translucent, appearanceType, depthFailAppearanceType, depthFailMaterialProperty, closed, shadows) {\n  this.translucent = translucent;\n  this.appearanceType = appearanceType;\n  this.depthFailAppearanceType = depthFailAppearanceType;\n  this.depthFailMaterialProperty = depthFailMaterialProperty;\n  this.depthFailMaterial = undefined;\n  this.closed = closed;\n  this.shadows = shadows;\n  this.primitives = primitives;\n  this.createPrimitive = false;\n  this.waitingOnCreate = false;\n  this.primitive = undefined;\n  this.oldPrimitive = undefined;\n  this.geometry = new AssociativeArray();\n  this.updaters = new AssociativeArray();\n  this.updatersWithAttributes = new AssociativeArray();\n  this.attributes = new AssociativeArray();\n  this.subscriptions = new AssociativeArray();\n  this.showsUpdated = new AssociativeArray();\n  this.itemsToRemove = [];\n  this.invalidated = false;\n  \n  var removeMaterialSubscription;\n  if (defined(depthFailMaterialProperty)) {\n    removeMaterialSubscription = depthFailMaterialProperty.definitionChanged.addEventListener(Batch.prototype.onMaterialChanged, this);\n  }\n  this.removeMaterialSubscription = removeMaterialSubscription;\n}\n\nBatch.prototype.onMaterialChanged = function () {\n  this.invalidated = true;\n};\n\nBatch.prototype.isMaterial = function (updater) {\n  var material = this.depthFailMaterialProperty;\n  var updaterMaterial = updater.depthFailMaterialProperty;\n  if (updaterMaterial === material) {\n    return true;\n  }\n  if (defined(material)) {\n    return material.equals(updaterMaterial);\n  }\n  return false;\n};\n\nBatch.prototype.add = function (updater, instance) {\n  var id = updater.id;\n  this.createPrimitive = true;\n  this.geometry.set(id, instance);\n  this.updaters.set(id, updater);\n  if (!updater.hasConstantFill || !updater.fillMaterialProperty.isConstant || !Property.isConstant(updater.distanceDisplayConditionProperty)) {\n    this.updatersWithAttributes.set(id, updater);\n  } else {\n    var that = this;\n    this.subscriptions.set(id, updater.entity.definitionChanged.addEventListener(function (entity, propertyName, newValue, oldValue) {\n      if (propertyName === 'isShowing') {\n        that.showsUpdated.set(updater.id, updater);\n      }\n    }));\n  }\n};\n\nBatch.prototype.remove = function (updater) {\n  var id = updater.id;\n  this.createPrimitive = this.geometry.remove(id) || this.createPrimitive;\n  if (this.updaters.remove(id)) {\n    this.updatersWithAttributes.remove(id);\n    var unsubscribe = this.subscriptions.get(id);\n    if (defined(unsubscribe)) {\n      unsubscribe();\n      this.subscriptions.remove(id);\n    }\n  }\n};\n\nBatch.prototype.update = function (time) {\n  var isUpdated = true;\n  var removedCount = 0;\n  var primitive = this.primitive;\n  var primitives = this.primitives;\n  var attributes;\n  var i;\n  \n  if (this.createPrimitive) {\n    var geometries = this.geometry.values;\n    var geometriesLength = geometries.length;\n    if (geometriesLength > 0) {\n      if (defined(primitive)) {\n        if (!defined(this.oldPrimitive)) {\n          this.oldPrimitive = primitive;\n        } else {\n          primitives.remove(primitive);\n        }\n      }\n      \n      for (i = 0; i < geometriesLength; i++) {\n        var geometryItem = geometries[i];\n        var originalAttributes = geometryItem.attributes;\n        attributes = this.attributes.get(geometryItem.id.id);\n        \n        if (defined(attributes)) {\n          if (defined(originalAttributes.show)) {\n            originalAttributes.show.value = attributes.show;\n          }\n          if (defined(originalAttributes.color)) {\n            originalAttributes.color.value = attributes.color;\n          }\n          if (defined(originalAttributes.depthFailColor)) {\n            originalAttributes.depthFailColor.value = attributes.depthFailColor;\n          }\n        }\n      }\n      \n      var depthFailAppearance;\n      if (defined(this.depthFailAppearanceType)) {\n        if (defined(this.depthFailMaterialProperty)) {\n          this.depthFailMaterial = MaterialProperty.getValue(time, this.depthFailMaterialProperty, this.depthFailMaterial);\n        }\n        depthFailAppearance = new this.depthFailAppearanceType({\n          material: this.depthFailMaterial,\n          translucent: this.translucent,\n          closed: this.closed\n        });\n      }\n      \n      primitive = new Primitive({\n        show: false,\n        asynchronous: true,\n        geometryInstances: geometries,\n        appearance: new this.appearanceType({\n          flat: this.shadows === ShadowMode.DISABLED || this.shadows === ShadowMode.CAST_ONLY,\n          translucent: this.translucent,\n          closed: this.closed\n        }),\n        depthFailAppearance: depthFailAppearance,\n        shadows: this.shadows\n      });\n      primitives.add(primitive);\n      isUpdated = false;\n    } else {\n      if (defined(primitive)) {\n        primitives.remove(primitive);\n        primitive = undefined;\n      }\n      var oldPrimitive = this.oldPrimitive;\n      if (defined(oldPrimitive)) {\n        primitives.remove(oldPrimitive);\n        this.oldPrimitive = undefined;\n      }\n    }\n    \n    this.attributes.removeAll();\n    this.primitive = primitive;\n    this.createPrimitive = false;\n    this.waitingOnCreate = true;\n  } else if (defined(primitive) && primitive.ready) {\n    primitive.show = true;\n    if (defined(this.oldPrimitive)) {\n      primitives.remove(this.oldPrimitive);\n      this.oldPrimitive = undefined;\n    }\n    \n    if (defined(this.depthFailAppearanceType) && !(this.depthFailMaterialProperty instanceof ColorMaterialProperty)) {\n      this.depthFailMaterial = MaterialProperty.getValue(time, this.depthFailMaterialProperty, this.depthFailMaterial);\n      this.primitive.depthFailAppearance.material = this.depthFailMaterial;\n    }\n    \n    var updatersWithAttributes = this.updatersWithAttributes.values;\n    var length = updatersWithAttributes.length;\n    var waitingOnCreate = this.waitingOnCreate;\n    for (i = 0; i < length; i++) {\n      var updater = updatersWithAttributes[i];\n      var instance = this.geometry.get(updater.id);\n      \n      attributes = this.attributes.get(instance.id.id);\n      if (!defined(attributes)) {\n        attributes = primitive.getGeometryInstanceAttributes(instance.id);\n        this.attributes.set(instance.id.id, attributes);\n      }\n      \n      if (!updater.fillMaterialProperty.isConstant || waitingOnCreate) {\n        var colorProperty = updater.fillMaterialProperty.color;\n        var resultColor = Property.getValueOrDefault(colorProperty, time, Color.WHITE, colorScratch);\n        if (!Color.equals(attributes._lastColor, resultColor)) {\n          attributes._lastColor = Color.clone(resultColor, attributes._lastColor);\n          attributes.color = ColorGeometryInstanceAttribute.toValue(resultColor, attributes.color);\n          if ((this.translucent && attributes.color[3] === 255) || (!this.translucent && attributes.color[3] !== 255)) {\n            this.itemsToRemove[removedCount++] = updater;\n          }\n        }\n      }\n      \n      if (defined(this.depthFailAppearanceType) && updater.depthFailMaterialProperty instanceof ColorMaterialProperty && (!updater.depthFailMaterialProperty.isConstant || waitingOnCreate)) {\n        var depthFailColorProperty = updater.depthFailMaterialProperty.color;\n        var depthColor = Property.getValueOrDefault(depthFailColorProperty, time, Color.WHITE, colorScratch);\n        if (!Color.equals(attributes._lastDepthFailColor, depthColor)) {\n          attributes._lastDepthFailColor = Color.clone(depthColor, attributes._lastDepthFailColor);\n          attributes.depthFailColor = ColorGeometryInstanceAttribute.toValue(depthColor, attributes.depthFailColor);\n        }\n      }\n      \n      var show = updater.entity.isShowing && (updater.hasConstantFill || updater.isFilled(time));\n      var currentShow = attributes.show[0] === 1;\n      if (show !== currentShow) {\n        attributes.show = ShowGeometryInstanceAttribute.toValue(show, attributes.show);\n      }\n      \n      var distanceDisplayConditionProperty = updater.distanceDisplayConditionProperty;\n      if (!Property.isConstant(distanceDisplayConditionProperty)) {\n        var distanceDisplayCondition = Property.getValueOrDefault(distanceDisplayConditionProperty, time, defaultDistanceDisplayCondition, distanceDisplayConditionScratch);\n        if (!DistanceDisplayCondition.equals(distanceDisplayCondition, attributes._lastDistanceDisplayCondition)) {\n          attributes._lastDistanceDisplayCondition = DistanceDisplayCondition.clone(distanceDisplayCondition, attributes._lastDistanceDisplayCondition);\n          attributes.distanceDisplayCondition = DistanceDisplayConditionGeometryInstanceAttribute.toValue(distanceDisplayCondition, attributes.distanceDisplayCondition);\n        }\n      }\n    }\n    \n    this.updateShows(primitive);\n    this.waitingOnCreate = false;\n  } else if (defined(primitive) && !primitive.ready) {\n    isUpdated = false;\n  }\n  this.itemsToRemove.length = removedCount;\n  return isUpdated;\n};\n\nBatch.prototype.updateShows = function (primitive) {\n  var showsUpdated = this.showsUpdated.values;\n  var length = showsUpdated.length;\n  for (var i = 0; i < length; i++) {\n    var updater = showsUpdated[i];\n    var instance = this.geometry.get(updater.id);\n    \n    var attributes = this.attributes.get(instance.id.id);\n    if (!defined(attributes)) {\n      attributes = primitive.getGeometryInstanceAttributes(instance.id);\n      this.attributes.set(instance.id.id, attributes);\n    }\n    \n    var show = updater.entity.isShowing;\n    var currentShow = attributes.show[0] === 1;\n    if (show !== currentShow) {\n      attributes.show = ShowGeometryInstanceAttribute.toValue(show, attributes.show);\n    }\n  }\n  this.showsUpdated.removeAll();\n};\n\nBatch.prototype.contains = function (updater) {\n  return this.updaters.contains(updater.id);\n};\n\nBatch.prototype.getBoundingSphere = function (updater, result) {\n  var primitive = this.primitive;\n  if (!primitive.ready) {\n    return BoundingSphereState.PENDING;\n  }\n  var attributes = primitive.getGeometryInstanceAttributes(updater.entity);\n  if (!defined(attributes) || !defined(attributes.boundingSphere) ||//\n    (defined(attributes.show) && attributes.show[0] === 0)) {\n    return BoundingSphereState.FAILED;\n  }\n  attributes.boundingSphere.clone(result);\n  return BoundingSphereState.DONE;\n};\n\nBatch.prototype.removeAllPrimitives = function () {\n  var primitives = this.primitives;\n  \n  var primitive = this.primitive;\n  if (defined(primitive)) {\n    primitives.remove(primitive);\n    this.primitive = undefined;\n    this.geometry.removeAll();\n    this.updaters.removeAll();\n  }\n  \n  var oldPrimitive = this.oldPrimitive;\n  if (defined(oldPrimitive)) {\n    primitives.remove(oldPrimitive);\n    this.oldPrimitive = undefined;\n  }\n};\n\nBatch.prototype.destroy = function () {\n  var primitive = this.primitive;\n  var primitives = this.primitives;\n  if (defined(primitive)) {\n    primitives.remove(primitive);\n  }\n  var oldPrimitive = this.oldPrimitive;\n  if (defined(oldPrimitive)) {\n    primitives.remove(oldPrimitive);\n  }\n  if (defined(this.removeMaterialSubscription)) {\n    this.removeMaterialSubscription();\n  }\n};\n\n\nlet wasFixed = false;\n\nexport function fixCesiumEntitiesShadows() {\n  if (wasFixed) {\n    return;\n  }\n  Cesium.StaticGeometryColorBatch.prototype.add = function (time: any, updater: any) {\n    var items;\n    var translucent;\n    var instance = updater.createFillGeometryInstance(time);\n    if (instance.attributes.color.value[3] === 255) {\n      items = this._solidItems;\n      translucent = false;\n    } else {\n      items = this._translucentItems;\n      translucent = true;\n    }\n    \n    var length = items.length;\n    for (var i = 0; i < length; i++) {\n      var item = items[i];\n      if (item.isMaterial(updater)) {\n        item.add(updater, instance);\n        return;\n      }\n      \n    }\n    \n    var batch: any = new Batch(this._primitives, translucent, this._appearanceType, this._depthFailAppearanceType, updater.depthFailMaterialProperty, this._closed, this._shadows);\n    batch.add(updater, instance);\n    items.push(batch);\n  };\n  wasFixed = true;\n}\n","import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { fixCesiumEntitiesShadows } from './StaticGeometryColorBatch';\n\nexport const ANGULAR_CESIUM_CONFIG = new InjectionToken('ANGULAR_CESIUM_CONFIG');\n\n@Injectable()\nexport class ConfigurationService {\n  constructor(@Optional() @Inject(ANGULAR_CESIUM_CONFIG) private config: any) {\n    const fixEntitiesShadows = config ? config.fixEntitiesShadows : true;\n    if (fixEntitiesShadows !== false) {\n      fixCesiumEntitiesShadows();\n    }\n  }\n}\n","/**\n * Cesium scene modes\n */\nexport enum SceneMode {\n  SCENE3D,\n  COLUMBUS_VIEW,\n  SCENE2D,\n  PERFORMANCE_SCENE2D\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../cesium/cesium.service';\nimport { SceneMode } from '../../models/scene-mode.enum';\n\n/**\n *  The service exposes the scene's camera and screenSpaceCameraController\n *  SceneMode.PERFORMANCE_SCENE2D -  is a 3D scene mode that acts like Cesium 2D mode,\n *  but is more efficient performance wise.\n */\n@Injectable()\nexport class CameraService {\n  static PERFORMANCE_2D_ALTITUDE = 25000000;\n\n  private viewer: any;\n  private scene: any;\n  private camera: any;\n  private screenSpaceCameraController: any;\n  private morphListenerCancelFn: any;\n  private lastRotate: boolean;\n  private lastTilt: boolean;\n  private lastLook: boolean;\n  private isSceneModePerformance2D = false;\n\n  constructor() {\n  }\n\n  init(cesiumService: CesiumService) {\n    this.viewer = cesiumService.getViewer();\n    this.scene = cesiumService.getScene();\n    this.screenSpaceCameraController = this.scene.screenSpaceCameraController;\n    this.camera = this.scene.camera;\n    this.lastRotate = this.screenSpaceCameraController.enableRotate;\n    this.lastTilt = this.screenSpaceCameraController.enableTilt;\n    this.lastLook = this.screenSpaceCameraController.enableLook;\n  }\n\n  _listenToSceneModeMorph(callback: Function) {\n    this.morphListenerCancelFn = this.scene.morphStart.addEventListener(\n      callback\n    );\n  }\n\n  _revertCameraProperties() {\n    this.isSceneModePerformance2D = false;\n    this.enableTilt(this.lastTilt);\n    this.enableRotate(this.lastRotate);\n    this.enableLook(this.lastLook);\n  }\n\n  /**\n   * Gets the scene's camera\n   */\n  getCamera() {\n    return this.camera;\n  }\n\n  /**\n   * Gets the scene's screenSpaceCameraController\n   */\n  getScreenSpaceCameraController() {\n    return this.screenSpaceCameraController;\n  }\n\n  /**\n   * Gets the minimum zoom value in meters\n   */\n  getMinimumZoom(): number {\n    return this.screenSpaceCameraController.minimumZoomDistance;\n  }\n\n  /**\n   * Sets the minimum zoom value in meters\n   * @param zoom amount\n   */\n  setMinimumZoom(amount: number): void {\n    this.screenSpaceCameraController.minimumZoomDistance = amount;\n  }\n\n  /**\n   * Gets the maximum zoom value in meters\n   */\n  getMaximumZoom(): number {\n    return this.screenSpaceCameraController.maximumZoomDistance;\n  }\n\n  /**\n   * Sets the maximum zoom value in meters\n   * @param zoom amount\n   */\n  setMaximumZoom(amount: number): void {\n    this.screenSpaceCameraController.maximumZoomDistance = amount;\n  }\n\n  /**\n   * Sets if the camera is able to tilt\n   */\n  enableTilt(tilt: boolean): void {\n    this.screenSpaceCameraController.enableTilt = tilt;\n  }\n\n  /**\n   * Sets if the camera is able to rotate\n   */\n  enableRotate(rotate: boolean): void {\n    this.screenSpaceCameraController.enableRotate = rotate;\n  }\n\n  /**\n   * Sets if the camera is able to free-look\n   */\n  enableLook(lock: boolean): void {\n    this.screenSpaceCameraController.enableLook = lock;\n  }\n\n  /**\n   * Sets if the camera is able to translate\n   */\n  enableTranslate(translate: boolean): void {\n    this.screenSpaceCameraController.enableTranslate = translate;\n  }\n\n  /**\n   * Sets if the camera is able to zoom\n   */\n  enableZoom(zoom: boolean): void {\n    this.screenSpaceCameraController.enableZoom = zoom;\n  }\n\n  /**\n   * Sets if the camera receives inputs\n   */\n  enableInputs(inputs: boolean): void {\n    this.screenSpaceCameraController.enableInputs = inputs;\n  }\n\n  /**\n   * Sets the map's SceneMode\n   * @param sceneMode - The SceneMode to morph the scene into.\n   * @param duration - The duration of scene morph animations, in seconds\n   */\n  setSceneMode(sceneMode: SceneMode, duration?: number) {\n    switch (sceneMode) {\n      case SceneMode.SCENE3D: {\n        if (this.isSceneModePerformance2D) {\n          this._revertCameraProperties();\n        }\n\n        this.scene.morphTo3D(duration);\n\n        break;\n      }\n      case SceneMode.COLUMBUS_VIEW: {\n        if (this.isSceneModePerformance2D) {\n          this._revertCameraProperties();\n        }\n\n        this.scene.morphToColumbusView(duration);\n\n        break;\n      }\n      case SceneMode.SCENE2D: {\n        if (this.isSceneModePerformance2D) {\n          this._revertCameraProperties();\n        }\n        this.scene.morphTo2D(duration);\n\n        break;\n      }\n      case SceneMode.PERFORMANCE_SCENE2D: {\n        this.isSceneModePerformance2D = true;\n        this.lastLook = this.screenSpaceCameraController.enableLook;\n        this.lastTilt = this.screenSpaceCameraController.enableTilt;\n        this.lastRotate = this.screenSpaceCameraController.enableRotate;\n        this.screenSpaceCameraController.enableTilt = false;\n        this.screenSpaceCameraController.enableRotate = false;\n        this.screenSpaceCameraController.enableLook = false;\n        if (this.morphListenerCancelFn) {\n          this.morphListenerCancelFn();\n        }\n        this.scene.morphToColumbusView(duration);\n        const morphCompleteEventListener = this.scene.morphComplete.addEventListener(\n          () => {\n            this.camera.setView({\n              destination: Cesium.Cartesian3.fromDegrees(\n                0.0,\n                0.0,\n                Math.min(\n                  CameraService.PERFORMANCE_2D_ALTITUDE,\n                  this.getMaximumZoom()\n                )\n              ),\n              orientation: {\n                pitch: Cesium.Math.toRadians(-90)\n              }\n            });\n            morphCompleteEventListener();\n            this._listenToSceneModeMorph(\n              this._revertCameraProperties.bind(this)\n            );\n          }\n        );\n\n        break;\n      }\n    }\n  }\n\n  /**\n   * Flies the camera to a destination\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Camera.html?classFilter=cam#flyTo\n   */\n  cameraFlyTo(options: any) {\n    if (options) {\n      return this.camera.flyTo(options);\n    }\n  }\n\n  /**\n   * Flies the camera to a target\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=viewer#flyTo\n   * @returns Promise<boolean>\n   */\n  flyTo(target: any, options?: any) {\n    return this.viewer.flyTo(target, options);\n  }\n\n  /**\n   * Zooms amount along the camera's view vector.\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Camera.html#zoomIn\n   */\n  zoomIn(amount: number) {\n    return this.camera.zoomIn(amount || this.camera.defaultZoomAmount);\n  }\n\n  /**\n   * Zooms amount along the opposite direction of the camera's view vector.\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Camera.html#zoomOut\n   */\n  zoomOut(amount: number) {\n    return this.camera.zoomIn(amount || this.camera.defaultZoomAmount);\n  }\n\n  /**\n   * Zoom the camera to a target\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=viewer#zoomTo\n   * @returns Promise<boolean>\n   */\n  zoomTo(target: any, offset?: any) {\n    return this.viewer.zoomTo(target, offset);\n  }\n\n  /**\n   * Flies the camera to a destination\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Camera.html?classFilter=camera#setView\n   * @param options viewer options\n   */\n  setView(options: any) {\n    this.camera.setView(options);\n  }\n\n  /**\n   * Set camera's rotation\n   */\n  setRotation(degreesInRadians: number) {\n    this.setView({orientation: {heading: degreesInRadians}});\n  }\n\n  /**\n   * Locks or unlocks camera rotation\n   */\n  lockRotation(lock: boolean) {\n    this.scene.screenSpaceCameraController.enableRotate = !lock;\n  }\n\n  /**\n   * Make the camera track a specific entity\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=viewer#trackedEntity\n   * @param entity - entity to track\n   * @param options - track entity options\n   */\n  trackEntity(\n    entity?: any,\n    options?: { flyTo: boolean; flyToDuration?: number; altitude?: number }\n  ) {\n    const flyTo = (options && options.flyTo) || false;\n\n    this.viewer.trackedEntity = undefined;\n    return new Promise(resolve => {\n      if (flyTo) {\n        const flyToDuration = (options && options.flyToDuration) || 1;\n        const altitude = (options && options.altitude) || 10000;\n\n        // Calc entity flyTo position and wanted altitude\n        const entPosCar3 = entity.position.getValue(Cesium.JulianDate.now());\n        const entPosCart = Cesium.Cartographic.fromCartesian(entPosCar3);\n        const zoomAmount = altitude - entPosCart.height;\n        entPosCart.height = altitude;\n        const flyToPosition = Cesium.Cartesian3.fromRadians(\n          entPosCart.longitude,\n          entPosCart.latitude,\n          entPosCart.height\n        );\n\n        this.cameraFlyTo({\n          duration: flyToDuration,\n          destination: flyToPosition,\n          complete: () => {\n            this.viewer.trackedEntity = entity;\n            setTimeout(() => {\n              if (zoomAmount > 0) {\n                this.camera.zoomOut(zoomAmount);\n              } else {\n                this.camera.zoomIn(zoomAmount);\n              }\n            }, 0);\n            resolve();\n          }\n        });\n      } else {\n        this.viewer.trackedEntity = entity;\n        resolve();\n      }\n    });\n  }\n\n  untrackEntity() {\n    this.trackEntity();\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ViewerFactory {\n  cesium: any;\n\n\n  constructor() {\n    this.cesium = Cesium;\n  }\n\n  /**\n   * Creates a viewer with default or custom options\n   * @param mapContainer - container to initialize the viewer on\n   * @param options - Options to create the viewer with - Optional\n   *\n   * @returns new viewer\n   */\n  createViewer(mapContainer: HTMLElement, options?: any) {\n    let viewer = null;\n    if (options) {\n      viewer = new this.cesium.Viewer(mapContainer, {\n        contextOptions: {\n          webgl: {preserveDrawingBuffer: true}\n        },\n        ...options\n      });\n    } else {\n      viewer = new this.cesium.Viewer(mapContainer,\n        {\n          // Poor internet connection - use default globe image, TODO: should be removed\n          imageryProvider: Cesium.createTileMapServiceImageryProvider({\n            url: Cesium.buildModuleUrl('Assets/Textures/NaturalEarthII')\n          }),\n          baseLayerPicker: false,\n          geocoder: false,\n          contextOptions: {\n            webgl: {preserveDrawingBuffer: true}\n          },\n        });\n    }\n\n    return viewer;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Service for setting cesium viewer map options.\n * defaulty angular-cesium doesnt provide this service and viewer is created with default options.\n * In order set specific options you must set this service as provider in your component and\n * set the wanted options.\n * ```typescript\n * constructor(viewerConf :ViewerConfiguration ) {\n *   viewerConf.viewerOptions = { timeline: false };\n * }\n * ```\n * notice this configuration will be for all <ac-maps> in your component.\n */\n@Injectable()\nexport class ViewerConfiguration {\n  /**\n   * cesium viewer options According to [Viewer]{@link https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=vie}\n   */\n  private _viewerOptions: object | object[];\n  private _viewerModifier: Function | Function[];\n  private nextViewerOptionsIndex = 0;\n  private nextViewerModifierIndex = 0;\n\n  get viewerOptions(): object | object[] {\n    return this._viewerOptions;\n  }\n\n  Ã;\n\n  getNextViewerOptions(): object | object[] {\n    if (this._viewerOptions instanceof Array) {\n      return this._viewerOptions[this.nextViewerOptionsIndex++];\n    } else {\n      return this._viewerOptions;\n    }\n  }\n\n  /**\n   * Can be used to set initial map viewer options.\n   * If there is more than one map you can give the function an array of options.\n   * The map initialized first will be set with the first option object in the options array and so on.\n   */\n  set viewerOptions(value: object | object[]) {\n    this._viewerOptions = value;\n  }\n\n  get viewerModifier(): Function | Function[] {\n    return this._viewerModifier;\n  }\n\n  getNextViewerModifier(): Function | Function[] {\n    if (this._viewerModifier instanceof Array) {\n      return this._viewerModifier[this.nextViewerModifierIndex++];\n    } else {\n      return this._viewerModifier;\n    }\n  }\n\n  /**\n   * Can be used to set map viewer options after the map has been initialized.\n   * If there is more than one map you can give the function an array of functions.\n   * The map initialized first will be set with the first option object in the options array and so on.\n   */\n  set viewerModifier(value: Function | Function[]) {\n    this._viewerModifier = value;\n  }\n}\n","import { Injectable, NgZone, Optional } from '@angular/core';\nimport { ViewerFactory } from '../viewer-factory/viewer-factory.service';\nimport { ViewerConfiguration } from '../viewer-configuration/viewer-configuration.service';\nimport { AcMapComponent } from '../../components/ac-map/ac-map.component';\n\n/**\n *  Service that initialize cesium viewer and expose cesium viewer and scene.\n */\n@Injectable()\nexport class CesiumService {\n  private cesiumViewer: any;\n  private map: AcMapComponent;\n\n  constructor(private ngZone: NgZone, private viewerFactory: ViewerFactory, @Optional() private viewerConfiguration: ViewerConfiguration) {\n  }\n\n  init(mapContainer: HTMLElement, map: AcMapComponent) {\n    this.map = map;\n    this.ngZone.runOutsideAngular(() => {\n      const options = this.viewerConfiguration ? this.viewerConfiguration.getNextViewerOptions() : undefined;\n      this.cesiumViewer = this.viewerFactory.createViewer(mapContainer, options);\n\n      const viewerModifier = this.viewerConfiguration && this.viewerConfiguration.getNextViewerModifier();\n      if (typeof viewerModifier === 'function') {\n        viewerModifier(this.cesiumViewer);\n      }\n    });\n  }\n\n  /**\n   * For more information see https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=viewe\n   * @returns cesiumViewer\n   */\n  getViewer() {\n    return this.cesiumViewer;\n  }\n\n  /**\n   * For more information see https://cesiumjs.org/Cesium/Build/Documentation/Scene.html?classFilter=scene\n   * @returns cesium scene\n   */\n  getScene() {\n    return this.cesiumViewer.scene;\n  }\n\n  /**\n   * For more information see https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API\n   * @returns cesium canvas\n   */\n  getCanvas(): HTMLCanvasElement {\n    return this.cesiumViewer.canvas as HTMLCanvasElement;\n  }\n\n  getMap(): AcMapComponent {\n    return this.map;\n  }\n}\n","/**\n * Event options for registration on map-event-manager.\n */\nexport enum CesiumEvent {\n  MOUSE_MOVE = Cesium.ScreenSpaceEventType.MOUSE_MOVE,\n  LEFT_CLICK = Cesium.ScreenSpaceEventType.LEFT_CLICK,\n  LEFT_DOUBLE_CLICK = Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK,\n  LEFT_DOWN = Cesium.ScreenSpaceEventType.LEFT_DOWN,\n  LEFT_UP = Cesium.ScreenSpaceEventType.LEFT_UP,\n  MIDDLE_CLICK = Cesium.ScreenSpaceEventType.MIDDLE_CLICK,\n  MIDDLE_DOUBLE_CLICK = Cesium.ScreenSpaceEventType.MIDDLE_DOUBLE_CLICK,\n  MIDDLE_DOWN = Cesium.ScreenSpaceEventType.MIDDLE_DOWN,\n  MIDDLE_UP = Cesium.ScreenSpaceEventType.MIDDLE_UP,\n  PINCH_START = Cesium.ScreenSpaceEventType.PINCH_START,\n  PINCH_END = Cesium.ScreenSpaceEventType.PINCH_END,\n  PINCH_MOVE = Cesium.ScreenSpaceEventType.PINCH_MOVE,\n  RIGHT_CLICK = Cesium.ScreenSpaceEventType.RIGHT_CLICK,\n  RIGHT_DOUBLE_CLICK = Cesium.ScreenSpaceEventType.RIGHT_DOUBLE_CLICK,\n  RIGHT_DOWN = Cesium.ScreenSpaceEventType.RIGHT_DOWN,\n  RIGHT_UP = Cesium.ScreenSpaceEventType.RIGHT_UP,\n  WHEEL = Cesium.ScreenSpaceEventType.WHEEL,\n  LONG_LEFT_PRESS = 110,\n  LONG_RIGHT_PRESS,\n  LONG_MIDDLE_PRESS,\n  LEFT_CLICK_DRAG,\n  RIGHT_CLICK_DRAG,\n  MIDDLE_CLICK_DRAG,\n}\n","/**\n *  NO_PICK,    - will not pick entities\n *  PICK_FIRST  - first entity will be picked . use Cesium.scene.pick()\n *  PICK_ONE    - in case a few entities are picked plonter is resolved . use Cesium.scene.drillPick()\n *  PICK_ALL    - all entities are picked. use Cesium.scene.drillPick()\n */\nexport enum PickOptions {\n  NO_PICK,\n  PICK_FIRST,\n  PICK_ONE,\n  PICK_ALL\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { Cartesian3 } from '../../models/cartesian3';\nimport { ContextMenuOptions } from '../../models/context-menu-options';\nimport { MapEventsManagerService } from '../map-events-mananger/map-events-manager';\nimport { CesiumEvent } from '../map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../map-events-mananger/consts/pickOptions.enum';\nimport { DisposableObservable } from '../map-events-mananger/disposable-observable';\nimport { BasicContextMenu } from '../../models/basic-context-menu';\nimport { Subscription } from 'rxjs';\n\n\n/**\n * The Service manages a singleton context menu over the map. It should be initialized with MapEventsManager.\n * The Service allows opening and closing of the context menu and passing data to the context menu inner component.\n */\n\n@Injectable()\nexport class ContextMenuService {\n  private _showContextMenu = false;\n  private _options: ContextMenuOptions;\n  private _position: Cartesian3;\n  private _content: BasicContextMenu;\n  private mapEventsManager: MapEventsManagerService;\n  private leftClickRegistration: DisposableObservable<any>;\n  private leftClickSubscription: Subscription;\n  private _contextMenuChangeNotifier = new EventEmitter();\n  private _onOpen = new EventEmitter();\n  private _onClose = new EventEmitter();\n  private _defaultContextMenuOptions: ContextMenuOptions = {\n    closeOnLeftCLick: true,\n    closeOnLeftClickPriority: 10,\n  };\n\n  get contextMenuChangeNotifier(): EventEmitter<any> {\n    return this._contextMenuChangeNotifier;\n  }\n\n  get showContextMenu(): boolean {\n    return this._showContextMenu;\n  }\n\n  get options(): ContextMenuOptions {\n    return this._options;\n  }\n\n  get position(): Cartesian3 {\n    return this._position;\n  }\n\n  get content(): BasicContextMenu {\n    return this._content;\n  }\n\n  get onOpen(): EventEmitter<any> {\n    return this._onOpen;\n  }\n\n  get onClose(): EventEmitter<any> {\n    return this._onClose;\n  }\n\n\n  init(mapEventsManager: MapEventsManagerService) {\n    this.mapEventsManager = mapEventsManager;\n  }\n\n  open(content: any, position: Cartesian3, options: ContextMenuOptions = {}) {\n    this.close();\n    this._content = content;\n    this._position = position;\n    this._options = Object.assign({}, this._defaultContextMenuOptions, options);\n    this._showContextMenu = true;\n    if (this.mapEventsManager && this._options.closeOnLeftCLick) {\n      this.leftClickRegistration = this.mapEventsManager.register({\n        event: CesiumEvent.LEFT_CLICK,\n        pick: PickOptions.NO_PICK,\n        priority: this._options.closeOnLeftClickPriority,\n      });\n      this.leftClickSubscription = this.leftClickRegistration.subscribe(() => {\n        this.leftClickSubscription.unsubscribe();\n        this.close();\n      });\n    }\n\n    this._contextMenuChangeNotifier.emit();\n    this._onOpen.emit();\n  }\n\n  close() {\n    this._content = undefined;\n    this._position = undefined;\n    this._options = undefined;\n    this._showContextMenu = false;\n    if (this.leftClickRegistration) {\n      this.leftClickRegistration.dispose();\n      this.leftClickRegistration = undefined;\n    }\n    if (this.leftClickSubscription) {\n      this.leftClickSubscription.unsubscribe();\n      this.leftClickSubscription = undefined;\n    }\n\n    this._contextMenuChangeNotifier.emit();\n    this._onClose.emit();\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { CesiumService } from '../cesium/cesium.service';\nimport * as geodesy from 'geodesy';\nimport { hemisphere, LatLon, LatLonEllipsoidal, Utm } from 'geodesy';\nimport { Cartesian3 } from '../../models/cartesian3';\n\nconst LatLonVectors = geodesy['LatLonVectors']; // doesnt exists on typings\n\nwindow['geodesy'] = geodesy;\n\n/**\n *  Given different types of coordinates, we provide you a service converting those types to the most common other types.\n *  We are using the geodesy implementation of UTM conversion. see: https://github.com/chrisveness/geodesy.\n *\n * @example\n * import { Component, OnInit } from '@angular/core';\n * import { CoordinateConverter } from 'angular2-cesium';\n *\n * @Component({\n * \t\tselector:'my-component',\n * \t\ttemplate:'<div>{{showCartographic}}</div>',\n * \t\tproviders:[CoordinateConverter]\n * })\n * export class MyComponent implements OnInit {\n * \t\tshowCartographic;\n *\n * \t\tconstructor(private coordinateConverter:CoordinateConverter){\n * \t\t}\n *\n * \t\tngOnInit(){\n * \t\t\tthis.showCartographic = this.coordinateConverter.degreesToCartographic(5, 5, 5);\n *  }\n * }\n *\n */\n@Injectable()\nexport class CoordinateConverter {\n  constructor(@Optional() private cesiumService?: CesiumService) {\n  }\n\n  screenToCartesian3(screenPos: { x: number, y: number }, addMapCanvasBoundsToPos?: boolean) {\n    if (!this.cesiumService) {\n      throw new Error('ANGULAR2-CESIUM - Cesium service should be provided in order' +\n        ' to do screen position calculations');\n    } else {\n      const screenPosition = { ...screenPos };\n      if (addMapCanvasBoundsToPos) {\n        const mapBounds = this.cesiumService.getViewer().canvas.getBoundingClientRect();\n        screenPosition.x += mapBounds.left;\n        screenPosition.y += mapBounds.top;\n      }\n\n      const camera = this.cesiumService.getViewer().camera;\n      return camera.pickEllipsoid(screenPosition);\n    }\n  }\n\n  screenToCartographic(screenPos: { x: number, y: number }, ellipsoid?: any) {\n    return this.cartesian3ToCartographic(this.screenToCartesian3(screenPos), ellipsoid);\n  }\n\n  cartesian3ToCartographic(cartesian: Cartesian3, ellipsoid?: any) {\n    return Cesium.Cartographic.fromCartesian(cartesian, ellipsoid);\n  }\n\n  degreesToCartographic(longitude: number, latitude: number, height?: number) {\n    return Cesium.Cartographic.fromDegrees(longitude, latitude, height);\n  }\n\n  radiansToCartographic(longitude: number, latitude: number, height?: number) {\n    return Cesium.Cartographic.fromRadians(longitude, latitude, height);\n  }\n\n  degreesToUTM(longitude: number, latitude: number) {\n    return new LatLonEllipsoidal(latitude, longitude).toUtm();\n  }\n\n  UTMToDegrees(zone: number, hemisphereType: hemisphere, easting: number, northing: number) {\n    return this.geodesyToCesiumObject(new Utm(zone, hemisphereType, easting, northing).toLatLonE());\n  }\n\n  private geodesyToCesiumObject(geodesyRadians: LatLon) {\n    return {\n      longitude: geodesyRadians.lon,\n      latitude: geodesyRadians.lat,\n      height: geodesyRadians['height'] ? geodesyRadians['height'] : 0\n    };\n  }\n\n  /**\n   * middle point between two points\n   * @param first  (latitude,longitude) in radians\n   * @param second (latitude,longitude) in radians\n   */\n  midPointToCartesian3(first: { latitude: number, longitude: number }, second: { latitude: number, longitude: number }) {\n    const toDeg = (rad: number) => Cesium.Math.toDegrees(rad);\n    const firstPoint = new LatLonVectors(toDeg(first.latitude), toDeg(first.longitude));\n    const secondPoint = new LatLonVectors(toDeg(second.latitude), toDeg(second.longitude));\n    const middlePoint: any = firstPoint.midpointTo(secondPoint);\n\n    return Cesium.Cartesian3.fromDegrees(middlePoint.lon, middlePoint.lat);\n  }\n\n  middlePointByScreen(position0: Cartesian3, position1: Cartesian3): Cartesian3 {\n    const scene = this.cesiumService.getScene();\n    const screenPosition1 = Cesium.SceneTransforms.wgs84ToWindowCoordinates(scene, position0);\n    const screenPosition2 = Cesium.SceneTransforms.wgs84ToWindowCoordinates(scene, position1);\n    const middleScreenPoint =\n      new Cesium.Cartesian2((screenPosition2.x + screenPosition1.x) / 2.0, (screenPosition2.y + screenPosition1.y) / 2.0);\n    return scene.pickPosition(middleScreenPoint);\n  }\n\n  /**\n   * initial bearing between two points\n   *\n   * * @return bearing in degrees\n   * @param first - {latitude,longitude} in radians\n   * @param second - {latitude,longitude} in radians\n   */\n  bearingTo(first: { latitude: number, longitude: number }, second: { latitude: number, longitude: number }) {\n    const toDeg = (rad: number) => Cesium.Math.toDegrees(rad);\n    const firstPoint = new LatLonVectors(toDeg(first.latitude), toDeg(first.longitude));\n    const secondPoint = new LatLonVectors(toDeg(second.latitude), toDeg(second.longitude));\n    const bearing = firstPoint.bearingTo(secondPoint);\n\n    return bearing;\n  }\n\n  /**\n   * initial bearing between two points\n   *\n   * @return bearing in degrees\n   */\n  bearingToCartesian(firstCartesian3: Cartesian3, secondCartesian3: Cartesian3) {\n    const firstCart = Cesium.Cartographic.fromCartesian(firstCartesian3);\n    const secondCart = Cesium.Cartographic.fromCartesian(secondCartesian3);\n\n    return this.bearingTo(firstCart, secondCart);\n  }\n}\n","/**\n *  Abstract drawer. All drawers extends this class.\n */\n\nexport abstract class BasicDrawerService {\n  protected _propsAssigner: Function;\n\n  constructor() {\n  }\n\n  abstract add(cesiumProps: any, ...args: any[]): any;\n\n  abstract update(primitive: any, cesiumProps: any, ...args: any[]): void;\n\n  abstract remove(primitive: any): void;\n\n  abstract removeAll(): void;\n\n  abstract setShow(showValue: boolean): void;\n\n  abstract init(options?: any): any;\n\n  setPropsAssigner(assigner: Function) {\n    this._propsAssigner = assigner;\n  }\n}\n","import { CesiumService } from '../../cesium/cesium.service';\nimport { BasicDrawerService } from '../basic-drawer/basic-drawer.service';\n\n/**\n *  General primitives drawer responsible of drawing Cesium primitives.\n *  Drawers the handle Cesium primitives extend it.\n */\nexport abstract class PrimitivesDrawerService extends BasicDrawerService {\n  private _show = true;\n  private _primitiveCollectionWrap: any;\n  protected _cesiumCollection: any;\n  protected _propsAssigner: Function;\n\n  constructor(private drawerType: any, private cesiumService: CesiumService) {\n    super();\n  }\n\n  init() {\n    this._cesiumCollection = new this.drawerType();\n    this._primitiveCollectionWrap = new Cesium.PrimitiveCollection({destroyPrimitives: false});\n    this._primitiveCollectionWrap.add(this._cesiumCollection);\n    this.cesiumService.getScene().primitives.add(this._primitiveCollectionWrap);\n  }\n\n  add(cesiumProps: any, ...args: any[]): any {\n    return this._cesiumCollection.add(cesiumProps);\n  }\n\n  update(entity: any, cesiumProps: any, ...args: any[]) {\n    if (this._propsAssigner) {\n      this._propsAssigner(entity, cesiumProps);\n    } else {\n      Object.assign(entity, cesiumProps);\n    }\n  }\n\n  remove(entity: any) {\n    this._cesiumCollection.remove(entity);\n  }\n\n  removeAll() {\n    this._cesiumCollection.removeAll();\n  }\n\n  setShow(showValue: boolean) {\n    this._show = showValue;\n    this._primitiveCollectionWrap.show = showValue;\n  }\n\n  getShow(): boolean {\n    return this._show;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../cesium/cesium.service';\nimport { Cartesian3 } from '../../models/cartesian3';\nimport { Vec3 } from '../../models/vec3';\n\n@Injectable()\nexport class GeoUtilsService {\n  static pointByLocationDistanceAndAzimuth(currentLocation: any, meterDistance: number, radianAzimuth: number, deprecated?) {\n    const distance = meterDistance / Cesium.Ellipsoid.WGS84.maximumRadius;\n    const cartographicLocation =\n      currentLocation instanceof Cesium.Cartesian3 ? Cesium.Cartographic.fromCartesian(currentLocation) : currentLocation;\n    const cartesianLocation =\n      currentLocation instanceof Cesium.Cartesian3\n        ? currentLocation\n        : Cesium.Cartesian3.fromRadians(currentLocation.longitude, currentLocation.latitude, currentLocation.height);\n\n    let resultPosition;\n    let resultDistance;\n    let counter = 0;\n    let distanceFactorRangeMax = 0.1;\n    let distanceFactorRangeMin = -0.1;\n    while (\n      counter === 0 ||\n      (counter < 16 && Math.max(resultDistance, meterDistance) / Math.min(resultDistance, meterDistance) > 1.000001)\n      ) {\n      const factor = distanceFactorRangeMin + (distanceFactorRangeMax - distanceFactorRangeMin) / 2;\n      resultPosition = GeoUtilsService._pointByLocationDistanceAndAzimuth(cartographicLocation, distance * (1 + factor), radianAzimuth);\n      resultDistance = this.distance(cartesianLocation, resultPosition);\n\n      if (resultDistance > meterDistance) {\n        distanceFactorRangeMax = distanceFactorRangeMin + (distanceFactorRangeMax - distanceFactorRangeMin) / 2;\n      } else {\n        distanceFactorRangeMin = distanceFactorRangeMin + (distanceFactorRangeMax - distanceFactorRangeMin) / 2;\n      }\n      counter++;\n    }\n\n    return resultPosition;\n  }\n\n  static _pointByLocationDistanceAndAzimuth(cartographicLocation: any, distance: number, radianAzimuth: number) {\n    const curLat = cartographicLocation.latitude;\n    const curLon = cartographicLocation.longitude;\n    const destinationLat = Math.asin(\n      Math.sin(curLat) * Math.cos(distance) + Math.cos(curLat) * Math.sin(distance) * Math.cos(radianAzimuth),\n    );\n\n    let destinationLon =\n      curLon +\n      Math.atan2(\n        Math.sin(radianAzimuth) * Math.sin(distance) * Math.cos(curLat),\n        Math.cos(distance) - Math.sin(curLat) * Math.sin(destinationLat),\n      );\n\n    destinationLon = ((destinationLon + 3 * Math.PI) % (2 * Math.PI)) - Math.PI;\n\n    return Cesium.Cartesian3.fromRadians(destinationLon, destinationLat);\n  }\n\n  static distance(pos0: Cartesian3, pos1: Cartesian3): number {\n    return Cesium.Cartesian3.distance(pos0, pos1);\n  }\n\n  static getPositionsDelta(position0: Cartesian3, position1: Cartesian3): Vec3 {\n    return {\n      x: position1.x - position0.x,\n      y: position1.y - position0.y,\n      z: position1.z - position0.z,\n    };\n  }\n\n  static addDeltaToPosition(position: Cartesian3, delta: Vec3, updateReference = false): Cartesian3 {\n    if (updateReference) {\n      position.x += delta.x;\n      position.y += delta.y;\n      position.z += delta.z;\n      const cartographic = Cesium.Cartographic.fromCartesian(position);\n      cartographic.height = 0;\n      const cartesian = Cesium.Cartesian3.fromRadians(cartographic.longitude, cartographic.latitude, cartographic.height);\n      position.x = cartesian.x;\n      position.y = cartesian.y;\n      position.z = cartesian.z;\n      return position;\n    } else {\n      const cartesian = new Cesium.Cartesian3(position.x + delta.x, position.y + delta.y, position.z + delta.z);\n      const cartographic = Cesium.Cartographic.fromCartesian(cartesian);\n      cartographic.height = 0;\n      return Cesium.Cartesian3.fromRadians(cartographic.longitude, cartographic.latitude, cartographic.height);\n    }\n  }\n\n  static middleCartesian3Point(position0: Cartesian3, position1: Cartesian3) {\n    return new Cesium.Cartesian3(position1.x - position0.x / 2, position1.y - position0.y / 2, position1.z - position0.z / 2);\n  }\n\n  constructor(private cesiumService: CesiumService) {\n  }\n\n  screenPositionToCartesian3(screenPos: { x: number; y: number }) {\n    const camera = this.cesiumService.getViewer().camera;\n    return camera.pickEllipsoid(screenPos);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\nimport { GeoUtilsService } from '../../geo-utils/geo-utils.service';\n\n/**\n +  This drawer is responsible for drawing an arc over the Cesium map.\n +  This implementation uses simple PolylineGeometry and Primitive parameters.\n +  This doesn't allow us to change the position, color, etc.. of the arc but setShow only.\n */\n\n@Injectable()\nexport class ArcDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PolylineCollection, cesiumService);\n  }\n\n  _calculateArcPositions(cesiumProps: any) {\n    const quality = cesiumProps.quality || 18;\n    const delta = (cesiumProps.delta) / quality;\n    const pointsArray = [];\n    for (let i = 0; i < quality + 1; ++i) {\n      const point =\n        GeoUtilsService.pointByLocationDistanceAndAzimuth(cesiumProps.center, cesiumProps.radius, cesiumProps.angle + delta * i, true);\n      pointsArray.push(point);\n    }\n\n    return pointsArray;\n  }\n\n  _calculateTriangle(cesiumProps: any) {\n    return [\n      cesiumProps.center,\n      GeoUtilsService.pointByLocationDistanceAndAzimuth(cesiumProps.center, cesiumProps.radius, cesiumProps.angle, true)\n    ];\n  }\n\n  _calculateArc(cesiumProps: any) {\n    const arcPoints = this._calculateArcPositions(cesiumProps);\n    return cesiumProps.drawEdges ? arcPoints.concat(this._calculateTriangle(cesiumProps)) : arcPoints;\n  }\n\n  add(cesiumProps: any): any {\n    cesiumProps.positions = this._calculateArc(cesiumProps);\n    if (cesiumProps.color) {\n      const material = Cesium.Material.fromType('Color');\n      material.uniforms.color = cesiumProps.color;\n      cesiumProps.material = material;\n    }\n\n    return this._cesiumCollection.add(cesiumProps);\n  }\n\n  update(primitive: any, cesiumProps: any) {\n    if (!cesiumProps.constantColor && cesiumProps.color &&\n      !primitive.material.uniforms.color.equals(cesiumProps.color)) {\n      primitive.material.uniforms.color = cesiumProps.color;\n    }\n    primitive.width = cesiumProps.width !== undefined ? cesiumProps.width : primitive.width;\n    primitive.show = cesiumProps.show !== undefined ? cesiumProps.show : primitive.show;\n    primitive.distanceDisplayCondition = cesiumProps.distanceDisplayCondition !== undefined ?\n      cesiumProps.distanceDisplayCondition : primitive.distanceDisplayCondition;\n    primitive.positions = this._calculateArc(cesiumProps);\n\n    return primitive;\n  }\n}\n","export enum GraphicsType {\n  ellipse = Cesium.EllipseGraphics,\n  ellipsoid = Cesium.EllipsoidGraphics,\n  polygon = Cesium.PolygonGraphics,\n  polyline = Cesium.PolylineGraphics,\n  polylineVolume = Cesium.PolylineVolumeGraphics,\n  box = Cesium.BoxGraphics,\n  corridor = Cesium.CorridorGraphics,\n  cylinder = Cesium.CylinderGraphics,\n  label = Cesium.LabelGraphics,\n  billboard = Cesium.BillboardGraphics,\n  model = Cesium.ModelGraphics,\n  path = Cesium.PathGraphics,\n  point = Cesium.PointGraphics,\n  rectangle = Cesium.RectangleGraphics,\n  wall = Cesium.WallGraphics,\n}\n","export class OptimizedEntityCollection {\n  private _updateRate: number;\n  private _collectionSize: number;\n  private _isSuspended = false;\n  private _isHardSuspend = false;\n  private _suspensionTimeout: any;\n  private _onEventSuspensionCallback: { once: boolean, callback: Function };\n  private _onEventResumeCallback: { once: boolean, callback: Function };\n\n  constructor(private entityCollection: any, collectionSize = -1, updateRate = -1) {\n    this._updateRate = updateRate;\n    this._collectionSize = collectionSize;\n\n  }\n\n  setShow(show: boolean) {\n    this.entityCollection.show = show;\n  }\n\n  get isSuspended(): boolean {\n    return this._isSuspended;\n  }\n\n  get updateRate(): number {\n    return this._updateRate;\n  }\n\n  set updateRate(value: number) {\n    this._updateRate = value;\n  }\n\n  get collectionSize(): number {\n    return this._collectionSize;\n  }\n\n  set collectionSize(value: number) {\n    this._collectionSize = value;\n  }\n\n  collection() {\n    return this.entityCollection;\n  }\n\n  isFree(): boolean {\n    return this._collectionSize < 1 || this.entityCollection.values.length < this._collectionSize;\n  }\n\n  add(entity: any) {\n    this.suspend();\n    return this.entityCollection.add(entity);\n  }\n\n  remove(entity: any) {\n    this.suspend();\n    return this.entityCollection.remove(entity);\n  }\n\n  removeNoSuspend(entity: any) {\n    this.entityCollection.remove(entity);\n  }\n\n  removeAll() {\n    this.suspend();\n    this.entityCollection.removeAll();\n  }\n\n  onEventSuspension(callback: Function, once = false): Function {\n    this._onEventSuspensionCallback = {callback, once};\n    return () => {\n      this._onEventSuspensionCallback = undefined;\n    };\n  }\n\n  onEventResume(callback: Function, once = false): Function {\n    this._onEventResumeCallback = {callback, once};\n    if (!this._isSuspended) {\n      this.triggerEventResume();\n    }\n    return () => {\n      this._onEventResumeCallback = undefined;\n    };\n  }\n\n  triggerEventSuspension() {\n    if (this._onEventSuspensionCallback !== undefined) {\n      const callback = this._onEventSuspensionCallback.callback;\n      if (this._onEventSuspensionCallback.once) {\n        this._onEventSuspensionCallback = undefined;\n      }\n      callback();\n    }\n  }\n\n  triggerEventResume() {\n    if (this._onEventResumeCallback !== undefined) {\n      const callback = this._onEventResumeCallback.callback;\n      if (this._onEventResumeCallback.once) {\n        this._onEventResumeCallback = undefined;\n      }\n      callback();\n    }\n  }\n\n  public suspend() {\n    if (this._updateRate < 0) {\n      return;\n    }\n    if (this._isHardSuspend) {\n      return;\n    }\n    if (!this._isSuspended) {\n      this._isSuspended = true;\n      this.entityCollection.suspendEvents();\n      this.triggerEventSuspension();\n      this._suspensionTimeout = setTimeout(() => {\n        this.entityCollection.resumeEvents();\n        this.triggerEventResume();\n        this._isSuspended = false;\n        this._suspensionTimeout = undefined;\n      }, this._updateRate);\n    }\n  }\n\n  public hardSuspend() {\n    this.entityCollection.suspendEvents();\n    this._isHardSuspend = true;\n  }\n\n  public hardResume() {\n    this.entityCollection.resumeEvents();\n    this._isHardSuspend = false;\n  }\n\n}\n","import { BasicDrawerService } from '../basic-drawer/basic-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from './enums/graphics-type.enum';\nimport { EntitiesDrawerOptions } from '../../../models/entities-drawer-options';\nimport { OptimizedEntityCollection } from './optimized-entity-collection';\n\n/**\n *  General primitives drawer responsible of drawing Cesium primitives.\n *  Drawers the handle Cesium primitives extend it.\n */\n\nexport class EntitiesDrawerService extends BasicDrawerService {\n  private entityCollections = new Map<any, OptimizedEntityCollection>();\n  private graphicsTypeName: string;\n\n  constructor(\n    private cesiumService: CesiumService,\n    private graphicsType: GraphicsType,\n    private defaultOptions: EntitiesDrawerOptions = {\n      collectionMaxSize: -1,\n      collectionSuspensionTime: -1,\n      collectionsNumber: 1,\n    },\n  ) {\n    super();\n    this.graphicsTypeName = GraphicsType[this.graphicsType];\n\n    // Fix bad enum compilation\n    for (const i in GraphicsType) {\n      if (GraphicsType[i] as any === this.graphicsType) {\n        this.graphicsTypeName = i;\n      }\n    }\n  }\n\n  private getFreeEntitiesCollection(): OptimizedEntityCollection {\n    let freeEntityCollection = null;\n    this.entityCollections.forEach(entityCollection => {\n      if (entityCollection.isFree()) {\n        freeEntityCollection = entityCollection;\n      }\n    });\n\n    return freeEntityCollection;\n  }\n\n  init(options?: EntitiesDrawerOptions) {\n    const finalOptions = options || this.defaultOptions;\n    const dataSources = [];\n    for (let i = 0; i < finalOptions.collectionsNumber; i++) {\n      const dataSource = new Cesium.CustomDataSource(this.graphicsTypeName);\n      dataSources.push(dataSource);\n      this.cesiumService.getViewer().dataSources.add(dataSource);\n      this.entityCollections.set(\n        dataSource.entities,\n        new OptimizedEntityCollection(dataSource.entities, finalOptions.collectionMaxSize, finalOptions.collectionSuspensionTime),\n      );\n    }\n\n    return dataSources;\n  }\n\n  add(cesiumProps: any): any {\n    const optimizedEntityCollection = this.getFreeEntitiesCollection();\n    if (optimizedEntityCollection === null) {\n      throw new Error('No more free entity collections');\n    }\n\n    const graphicsClass = this.graphicsType as any;\n    const entityObject = {\n      position: cesiumProps.position !== undefined ? cesiumProps.position : undefined,\n      description: cesiumProps.description !== undefined ? cesiumProps.description : undefined,\n      orientation: cesiumProps.orientation !== undefined ? cesiumProps.orientation : undefined,\n      viewFrom: cesiumProps.viewFrom !== undefined ? cesiumProps.viewFrom : undefined,\n      [this.graphicsTypeName]: cesiumProps,\n    };\n\n    if (cesiumProps.name !== undefined) {\n      entityObject.name = cesiumProps.name;\n    }\n\n    return optimizedEntityCollection.add(entityObject);\n  }\n\n  update(entity: any, cesiumProps: any) {\n    this.suspendEntityCollection(entity);\n\n    if (entity.position instanceof Cesium.CallbackProperty) {\n      if (entity.position._isConstant) {\n        entity.position = cesiumProps.position;\n      }\n    }\n    entity.position = cesiumProps.position !== undefined ? cesiumProps.position : undefined;\n    entity.name = cesiumProps.name !== undefined ? cesiumProps.name : entity.name;\n    entity.description = cesiumProps.description !== undefined ? cesiumProps.description : entity.description;\n    entity.orientation = cesiumProps.orientation !== undefined ? cesiumProps.orientation : entity.orientation;\n    entity.viewFrom = cesiumProps.viewFrom !== undefined ? cesiumProps.viewFrom : entity.viewFrom;\n\n    if (this._propsAssigner) {\n      this._propsAssigner(entity[this.graphicsTypeName], cesiumProps);\n    } else {\n      Object.assign(entity[this.graphicsTypeName], cesiumProps);\n    }\n  }\n\n  remove(entity: any) {\n    const optimizedEntityCollection = this.entityCollections.get(entity.entityCollection);\n    optimizedEntityCollection.remove(entity);\n  }\n\n  removeAll() {\n    this.entityCollections.forEach(entityCollection => {\n      entityCollection.removeAll();\n    });\n  }\n\n  setShow(showValue: boolean) {\n    this.entityCollections.forEach(entityCollection => {\n      entityCollection.setShow(showValue);\n    });\n  }\n\n  private suspendEntityCollection(entity: any) {\n    const id = entity.entityCollection;\n    if (!this.entityCollections.has(id)) {\n      throw new Error('No EntityCollection for entity.entityCollection');\n    }\n\n    const entityCollection = this.entityCollections.get(id);\n    entityCollection.suspend();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing billboards.\n */\n@Injectable()\nexport class BillboardDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.billboard);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { BasicDrawerService } from '../basic-drawer/basic-drawer.service';\nimport { EntitiesDrawerOptions } from '../../../models/entities-drawer-options';\n\n/**\n *  This drawer is responsible for drawing czml dataSources.\n */\n@Injectable()\nexport class CzmlDrawerService extends BasicDrawerService {\n\n  czmlStream: any;\n\n  constructor(\n    private cesiumService: CesiumService,\n  ) {\n    super();\n  }\n\n\n  init(options?: EntitiesDrawerOptions) {\n    const dataSources = [];\n\n    this.czmlStream = new Cesium.CzmlDataSource('czml');\n\n    dataSources.push(this.czmlStream);\n\n    this.cesiumService.getViewer().dataSources.add(this.czmlStream);\n\n    return dataSources;\n  }\n\n  // returns the packet, provided by the stream\n  add(cesiumProps: any): any {\n\n    this.czmlStream.process(cesiumProps.czmlPacket);\n\n    return cesiumProps;\n  }\n\n  update(entity: any, cesiumProps: any) {\n    this.czmlStream.process(cesiumProps.czmlPacket);\n  }\n\n  remove(entity: any) {\n    this.czmlStream.entities.removeById(entity.acEntity.id);\n  }\n\n  removeAll() {\n    this.czmlStream.entities.removeAll();\n  }\n\n  setShow(showValue: boolean) {\n    this.czmlStream.entities.show = showValue;\n  }\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing ellipses.\n */\n@Injectable()\nexport class EllipseDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.ellipse, {\n      collectionsNumber: 10,\n      collectionMaxSize: 450,\n      collectionSuspensionTime: 100\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing labels.\n */\n@Injectable()\nexport class LabelDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.label);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing points.\n */\n@Injectable()\nexport class PointDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.point);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing polygons.\n */\n@Injectable()\nexport class PolygonDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.polygon);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible of drawing polylines.\n */\n@Injectable()\nexport class PolylineDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.polyline);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\n\n/**\n *  This drawer is responsible of drawing polylines as primitives.\n *  This drawer is more efficient than PolylineDrawerService when drawing dynamic polylines.\n */\n@Injectable()\nexport class PolylinePrimitiveDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PolylineCollection, cesiumService);\n  }\n\n  add(cesiumProps: any) {\n    return this._cesiumCollection.add(this.withColorMaterial(cesiumProps));\n  }\n\n  update(cesiumObject: any, cesiumProps: any) {\n    if (cesiumProps.material instanceof Cesium.Color) {\n      if (cesiumObject.material && cesiumObject.material.uniforms &&\n        cesiumObject.material.uniforms.color instanceof Cesium.Color) {\n        this.withColorMaterial(cesiumProps);\n      } else if (!cesiumObject.material.uniforms.color.equals(cesiumProps.material)) {\n        cesiumObject.material.uniforms.color = cesiumProps.material;\n      }\n    }\n    super.update(cesiumObject, cesiumProps);\n  }\n\n  withColorMaterial(cesiumProps: any) {\n    if (cesiumProps.material instanceof Cesium.Color) {\n      const material = Cesium.Material.fromType('Color');\n      material.uniforms.color = cesiumProps.material;\n      cesiumProps.material = material;\n    }\n\n    return cesiumProps;\n  }\n}\n","export enum KeyboardAction {\n  CAMERA_FORWARD,\n  CAMERA_BACKWARD,\n  CAMERA_RIGHT,\n  CAMERA_LEFT,\n  CAMERA_UP,\n  CAMERA_DOWN,\n  CAMERA_LOOK_RIGHT,\n  CAMERA_LOOK_LEFT,\n  CAMERA_LOOK_UP,\n  CAMERA_LOOK_DOWN,\n  CAMERA_TWIST_RIGHT,\n  CAMERA_TWIST_LEFT,\n  CAMERA_ROTATE_RIGHT,\n  CAMERA_ROTATE_LEFT,\n  CAMERA_ROTATE_UP,\n  CAMERA_ROTATE_DOWN,\n  CAMERA_ZOOM_IN,\n  CAMERA_ZOOM_OUT,\n}\n","import { KeyboardAction } from '../../models/ac-keyboard-action.enum';\nimport { KeyboardControlActionFn } from './keyboard-control.service';\nimport { CesiumService } from '../cesium/cesium.service';\n\nconst CAMERA_MOVEMENT_DEFAULT_FACTOR = 100.0;\nconst CAMERA_LOOK_DEFAULT_FACTOR = 0.01;\nconst CAMERA_TWIST_DEFAULT_FACTOR = 0.01;\nconst CAMERA_ROTATE_DEFAULT_FACTOR = 0.01;\n\nexport const PREDEFINED_KEYBOARD_ACTIONS: { [key: number]: KeyboardControlActionFn } = {\n  /**\n   * Moves the camera forward, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_FORWARD]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveForward(moveRate);\n  },\n  /**\n   * Moves the camera backward, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_BACKWARD]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveBackward(moveRate);\n  },\n  /**\n   * Moves the camera up, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_UP]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveUp(moveRate);\n  },\n  /**\n   * Moves the camera down, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_DOWN]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveDown(moveRate);\n  },\n  /**\n   * Moves the camera right, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_RIGHT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveRight(moveRate);\n  },\n  /**\n   * Moves the camera left, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_LEFT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveLeft(moveRate);\n  },\n  /**\n   * Changes the camera to look to the right, accepts a numeric parameter named `lookFactor` that controls\n   * the factor of looking, according to the camera current position.\n   */\n  [KeyboardAction.CAMERA_LOOK_RIGHT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const currentPosition = camera.positionCartographic;\n    const lookFactor = params.lookFactor || CAMERA_LOOK_DEFAULT_FACTOR;\n    camera.lookRight(currentPosition.latitude * lookFactor);\n  },\n  /**\n   * Changes the camera to look to the left, accepts a numeric parameter named `lookFactor` that controls\n   * the factor of looking, according to the camera current position.\n   */\n  [KeyboardAction.CAMERA_LOOK_LEFT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const currentPosition = camera.positionCartographic;\n    const lookFactor = params.lookFactor || CAMERA_LOOK_DEFAULT_FACTOR;\n    camera.lookLeft(currentPosition.latitude * lookFactor);\n  },\n  /**\n   * Changes the camera to look up, accepts a numeric parameter named `lookFactor` that controls\n   * the factor of looking, according to the camera current position.\n   */\n  [KeyboardAction.CAMERA_LOOK_UP]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const currentPosition = camera.positionCartographic;\n    const lookFactor = params.lookFactor || CAMERA_LOOK_DEFAULT_FACTOR;\n    camera.lookUp(currentPosition.longitude * (lookFactor * -1));\n  },\n  /**\n   * Changes the camera to look down, accepts a numeric parameter named `lookFactor` that controls\n   * the factor of looking, according to the camera current position.\n   */\n  [KeyboardAction.CAMERA_LOOK_DOWN]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const currentPosition = camera.positionCartographic;\n    const lookFactor = params.lookFactor || CAMERA_LOOK_DEFAULT_FACTOR;\n    camera.lookDown(currentPosition.longitude * (lookFactor * -1));\n  },\n  /**\n   * Twists the camera to the right, accepts a numeric parameter named `amount` that controls\n   * the twist amount\n   */\n  [KeyboardAction.CAMERA_TWIST_RIGHT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.amount || CAMERA_TWIST_DEFAULT_FACTOR;\n    camera.twistRight(lookFactor);\n  },\n  /**\n   * Twists the camera to the left, accepts a numeric parameter named `amount` that controls\n   * the twist amount\n   */\n  [KeyboardAction.CAMERA_TWIST_LEFT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.amount || CAMERA_TWIST_DEFAULT_FACTOR;\n    camera.twistLeft(lookFactor);\n  },\n  /**\n   * Rotates the camera to the right, accepts a numeric parameter named `angle` that controls\n   * the rotation angle\n   */\n  [KeyboardAction.CAMERA_ROTATE_RIGHT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.angle || CAMERA_ROTATE_DEFAULT_FACTOR;\n    camera.rotateRight(lookFactor);\n  },\n  /**\n   * Rotates the camera to the left, accepts a numeric parameter named `angle` that controls\n   * the rotation angle\n   */\n  [KeyboardAction.CAMERA_ROTATE_LEFT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.angle || CAMERA_ROTATE_DEFAULT_FACTOR;\n    camera.rotateLeft(lookFactor);\n  },\n  /**\n   * Rotates the camera upwards, accepts a numeric parameter named `angle` that controls\n   * the rotation angle\n   */\n  [KeyboardAction.CAMERA_ROTATE_UP]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.angle || CAMERA_ROTATE_DEFAULT_FACTOR;\n    camera.rotateUp(lookFactor);\n  },\n  /**\n   * Rotates the camera downwards, accepts a numeric parameter named `angle` that controls\n   * the rotation angle\n   */\n  [KeyboardAction.CAMERA_ROTATE_DOWN]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.angle || CAMERA_ROTATE_DEFAULT_FACTOR;\n    camera.rotateDown(lookFactor);\n  },\n  /**\n   * Zoom in into the current camera center position, accepts a numeric parameter named\n   * `amount` that controls the amount of zoom in meters.\n   */\n  [KeyboardAction.CAMERA_ZOOM_IN]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const amount = params.amount;\n    camera.zoomIn(amount);\n  },\n  /**\n   * Zoom out from the current camera center position, accepts a numeric parameter named\n   * `amount` that controls the amount of zoom in meters.\n   */\n  [KeyboardAction.CAMERA_ZOOM_OUT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const amount = params.amount;\n    camera.zoomOut(amount);\n  },\n};\n","import { isNumber } from 'util';\nimport { Inject, Injectable, NgZone } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { KeyboardAction } from '../../models/ac-keyboard-action.enum';\nimport { CesiumService } from '../cesium/cesium.service';\nimport { PREDEFINED_KEYBOARD_ACTIONS } from './predefined-actions';\n\nexport type KeyboardControlActionFn = (cesiumService: CesiumService, params: any, event: KeyboardEvent) => boolean | void;\nexport type KeyboardControlValidationFn = (cesiumService: CesiumService, params: any, event: KeyboardEvent) => boolean;\nexport type KeyboardControlDoneFn = (cesiumService: CesiumService, event: KeyboardEvent) => boolean;\n\nexport interface KeyboardControlParams {\n  action: KeyboardAction | KeyboardControlActionFn;\n  validation?: KeyboardControlValidationFn;\n  params?: { [paramName: string]: any };\n  done?: KeyboardControlDoneFn;\n}\n\nexport interface KeyboardControlDefinition {\n  [keyboardCharCode: string]: KeyboardControlParams;\n}\n\nenum KeyEventState {\n  IGNORED,\n  NOT_PRESSED,\n  PRESSED,\n}\n\ninterface ActiveDefinition {\n  keyboardEvent: KeyboardEvent;\n  state: KeyEventState;\n  action: KeyboardControlParams;\n}\n\n/**\n *  Service that manages keyboard keys and execute actions per request.\n *  Inject the keyboard control service into any layer, under your `ac-map` component,\n *  And defined you keyboard handlers using `setKeyboardControls`.\n *\n * <caption>Simple Example</caption>\n * ```typescript\n * Component({\n *   selector: 'keyboard-control-layer',\n *   template: '',\n * })\n * export class KeyboardControlLayerComponent implements OnInit, OnDestroy {\n *   constructor(private keyboardControlService: KeyboardControlService) {}\n *\n *   ngOnInit() {\n *     this.keyboardControlService.setKeyboardControls({\n *       W: { action: KeyboardAction.CAMERA_FORWARD },\n *       S: { action: KeyboardAction.CAMERA_BACKWARD },\n *       D: { action: KeyboardAction.CAMERA_RIGHT },\n *       A: { action: KeyboardAction.CAMERA_LEFT },\n *     });\n *    }\n *\n *   ngOnDestroy() {\n *     this.keyboardControlService.removeKeyboardControls();\n *   }\n * }\n * ```\n *\n * <caption>Advanced Example</caption>\n * ```typescript\n * Component({\n *   selector: 'keyboard-control-layer',\n *   template: '',\n * })\n * export class KeyboardControlLayerComponent implements OnInit, OnDestroy {\n *   constructor(private keyboardControlService: KeyboardControlService) {}\n *\n *   private myCustomValue = 10;\n *\n *   ngOnInit() {\n *     this.keyboardControlService.setKeyboardControls({\n *       W: {\n *          action: KeyboardAction.CAMERA_FORWARD,\n *          validate: (camera, scene, params, key) => {\n *            // Replace `checkCamera` you with your validation logic\n *            if (checkCamera(camera) || params.customParams === true) {\n *              return true;\n *            }\n *\n *            return false;\n *          },\n *          params: () => {\n *            return {\n *              myValue: this.myCustomValue,\n *            };\n *          },\n *        }\n *     });\n *    }\n *\n *   ngOnDestroy() {\n *     this.keyboardControlService.removeKeyboardControls();\n *   }\n * }\n * ```\n * <b>Predefined keyboard actions:</b>\n * + `KeyboardAction.CAMERA_FORWARD` - Moves the camera forward, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_BACKWARD` - Moves the camera backward, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_UP` - Moves the camera up, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_DOWN` - Moves the camera down, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_RIGHT` - Moves the camera right, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_LEFT` - Moves the camera left, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_LOOK_RIGHT` - Changes the camera to look to the right, accepts a numeric parameter named `lookFactor` that\n * controls the factor of looking, according to the camera current position.\n * + `KeyboardAction.CAMERA_LOOK_LEFT` - Changes the camera to look to the left, accepts a numeric parameter named `lookFactor` that\n * controls the factor of looking, according to the camera current position.\n * + `KeyboardAction.CAMERA_LOOK_UP` - Changes the camera to look up, accepts a numeric parameter named `lookFactor` that controls\n * the factor of looking, according to the camera current position.\n * + `KeyboardAction.CAMERA_LOOK_DOWN` - Changes the camera to look down, accepts a numeric parameter named `lookFactor` that controls\n * the factor of looking, according to the camera current position.\n * + `KeyboardAction.CAMERA_TWIST_RIGHT` - Twists the camera to the right, accepts a numeric parameter named `amount` that controls\n * the twist amount\n * + `KeyboardAction.CAMERA_TWIST_LEFT` - Twists the camera to the left, accepts a numeric parameter named `amount` that controls\n * the twist amount\n * + `KeyboardAction.CAMERA_ROTATE_RIGHT` - Rotates the camera to the right, accepts a numeric parameter named `angle` that controls\n * the rotation angle\n * + `KeyboardAction.CAMERA_ROTATE_LEFT` - Rotates the camera to the left, accepts a numeric parameter named `angle` that controls\n * the rotation angle\n * + `KeyboardAction.CAMERA_ROTATE_UP` - Rotates the camera upwards, accepts a numeric parameter named `angle` that controls\n * the rotation angle\n * + `KeyboardAction.CAMERA_ROTATE_DOWN` - Rotates the camera downwards, accepts a numeric parameter named `angle` that controls\n * the rotation angle\n * + `KeyboardAction.CAMERA_ZOOM_IN` - Zoom in into the current camera center position, accepts a numeric parameter named\n * `amount` that controls the amount of zoom in meters.\n * + `KeyboardAction.CAMERA_ZOOM_OUT` -  Zoom out from the current camera center position, accepts a numeric parameter named\n * `amount` that controls the amount of zoom in meters.\n */\n@Injectable()\nexport class KeyboardControlService {\n  private _currentDefinitions: KeyboardControlDefinition = null;\n  private _activeDefinitions: { [definitionKey: string]: ActiveDefinition } = {};\n  private _keyMappingFn: Function = this.defaultKeyMappingFn;\n\n  /**\n   * Creats the keyboard control service.\n   */\n  constructor(private ngZone: NgZone, private cesiumService: CesiumService, @Inject(DOCUMENT) private document: any) {\n  }\n\n  /**\n   * Initializes the keyboard control service.\n   */\n  init() {\n    const canvas = this.cesiumService.getCanvas();\n    canvas.addEventListener('click', () => {\n      canvas.focus();\n    });\n\n    this.handleKeydown = this.handleKeydown.bind(this);\n    this.handleKeyup = this.handleKeyup.bind(this);\n    this.handleTick = this.handleTick.bind(this);\n  }\n\n  /**\n   * Sets the current map keyboard control definitions.\n   * The definitions is a key mapping between a key string and a KeyboardControlDefinition:\n   * - `action` is a predefine action from `KeyboardAction` enum, or a custom method:\n   * `(camera, scene, params, key) => boolean | void` - returning false will cancel the current keydown.\n   * - `validation` is a method that validates if the event should occur or not (`camera, scene, params, key`)\n   * - `params` is an object (or function that returns object) that will be passed into the action executor.\n   * - `done` is a function that will be triggered when `keyup` is triggered.\n   * @param definitions Keyboard Control Definition\n   * @param keyMappingFn - Mapping function for custom keys\n   * @param outsideOfAngularZone - if key down events will run outside of angular zone.\n   */\n  setKeyboardControls(definitions: KeyboardControlDefinition,\n                      keyMappingFn?: (keyEvent: KeyboardEvent) => string,\n                      outsideOfAngularZone = false) {\n    if (!definitions) {\n      return this.removeKeyboardControls();\n    }\n\n    if (!this._currentDefinitions) {\n      this.registerEvents(outsideOfAngularZone);\n    }\n\n    this._currentDefinitions = definitions;\n    this._keyMappingFn = keyMappingFn || this.defaultKeyMappingFn;\n\n    Object.keys(this._currentDefinitions).forEach(key => {\n      this._activeDefinitions[key] = {\n        state: KeyEventState.NOT_PRESSED,\n        action: null,\n        keyboardEvent: null,\n      };\n    });\n  }\n\n  /**\n   * Removes the current set of keyboard control items, and unregister from map events.\n   */\n  removeKeyboardControls() {\n    this.unregisterEvents();\n    this._currentDefinitions = null;\n  }\n\n  /**\n   * Returns the current action that handles `char` key string, or `null` if not exists\n   */\n  private getAction(char: string): KeyboardControlParams {\n    return this._currentDefinitions[char] || null;\n  }\n\n  /**\n   * The default `defaultKeyMappingFn` that maps `KeyboardEvent` into a key string.\n   */\n  private defaultKeyMappingFn(keyEvent: KeyboardEvent): string {\n    return String.fromCharCode(keyEvent.keyCode);\n  }\n\n  /**\n   * document's `keydown` event handler\n   */\n  private handleKeydown(e: KeyboardEvent) {\n    const char = this._keyMappingFn(e);\n    const action = this.getAction(char);\n\n    if (action) {\n      const actionState = this._activeDefinitions[char];\n\n      if (actionState.state !== KeyEventState.IGNORED) {\n        let execute = true;\n\n        const params = this.getParams(action.params, e);\n\n        if (action.validation) {\n          execute = action.validation(this.cesiumService, params, e);\n        }\n\n        if (execute === true) {\n          this._activeDefinitions[char] = {\n            state: KeyEventState.PRESSED,\n            action,\n            keyboardEvent: e,\n          };\n        }\n      }\n    }\n  }\n\n  /**\n   * document's `keyup` event handler\n   */\n  private handleKeyup(e: KeyboardEvent) {\n    const char = this._keyMappingFn(e);\n    const action = this.getAction(char);\n\n    if (action) {\n      this._activeDefinitions[char] = {\n        state: KeyEventState.NOT_PRESSED,\n        action: null,\n        keyboardEvent: e,\n      };\n\n      if (action.done && typeof action.done === 'function') {\n        action.done(this.cesiumService, e);\n      }\n    }\n  }\n\n  /**\n   * `tick` event handler that triggered by Cesium render loop\n   */\n  private handleTick() {\n    const activeKeys = Object.keys(this._activeDefinitions);\n\n    activeKeys.forEach(key => {\n      const actionState = this._activeDefinitions[key];\n\n      if (actionState !== null && actionState.action !== null && actionState.state === KeyEventState.PRESSED) {\n        this.executeAction(actionState.action, key, actionState.keyboardEvent);\n      }\n    });\n  }\n\n  /**\n   *\n   * Params resolve function, returns object.\n   * In case of params function, executes it and returns it's return value.\n   *\n   */\n  private getParams(paramsDef: any, keyboardEvent: KeyboardEvent): { [paramName: string]: any } {\n    if (!paramsDef) {\n      return {};\n    }\n\n    if (typeof paramsDef === 'function') {\n      return paramsDef(this.cesiumService, keyboardEvent);\n    }\n\n    return paramsDef;\n  }\n\n  /**\n   *\n   * Executes a given `KeyboardControlParams` object.\n   *\n   */\n  private executeAction(execution: KeyboardControlParams, key: string, keyboardEvent: KeyboardEvent) {\n    if (!this._currentDefinitions) {\n      return;\n    }\n\n    const params = this.getParams(execution.params, keyboardEvent);\n\n    if (isNumber(execution.action)) {\n      const predefinedAction = PREDEFINED_KEYBOARD_ACTIONS[execution.action as number];\n\n      if (predefinedAction) {\n        predefinedAction(this.cesiumService, params, keyboardEvent);\n      }\n    } else if (typeof execution.action === 'function') {\n      const shouldCancelEvent = execution.action(this.cesiumService, params, keyboardEvent);\n\n      if (shouldCancelEvent === false) {\n        this._activeDefinitions[key] = {\n          state: KeyEventState.IGNORED,\n          action: null,\n          keyboardEvent: null,\n        };\n      }\n    }\n  }\n\n  /**\n   * Registers to keydown, keyup of `document`, and `tick` of Cesium.\n   */\n  private registerEvents(outsideOfAngularZone: boolean) {\n    const registerToEvents = () => {\n      this.document.addEventListener('keydown', this.handleKeydown);\n      this.document.addEventListener('keyup', this.handleKeyup);\n      this.cesiumService.getViewer().clock.onTick.addEventListener(this.handleTick);\n    };\n\n    if (outsideOfAngularZone) {\n      this.ngZone.runOutsideAngular(registerToEvents);\n    } else {\n      registerToEvents();\n    }\n  }\n\n  /**\n   * Unregisters to keydown, keyup of `document`, and `tick` of Cesium.\n   */\n  private unregisterEvents() {\n    this.document.removeEventListener('keydown', this.handleKeydown);\n    this.document.removeEventListener('keyup', this.handleKeyup);\n    this.cesiumService.getViewer().clock.onTick.removeEventListener(this.handleTick);\n  }\n}\n","import { Observable, Subscriber } from 'rxjs';\nimport { CesiumEvent } from '../consts/cesium-event.enum';\nimport { CesiumEventModifier } from '../consts/cesium-event-modifier.enum';\n\nexport class CesiumPureEventObserver {\n  public observer: Observable<any>;\n\n  constructor(protected event: CesiumEvent, protected modifier: CesiumEventModifier) {\n  }\n\n  init(eventsHandler: any): Observable<any> {\n    this.observer = Observable.create((observer: Subscriber<any>) => {\n        eventsHandler.setInputAction((movement: any) => {\n          if (movement.position) {\n            movement.startPosition = movement.position;\n            movement.endPosition = movement.position;\n          }\n          observer.next(movement);\n        }, this.event, this.modifier);\n      }\n    );\n    return this.observer;\n  }\n}\n","import { ConnectableObservable, of as observableOf } from 'rxjs';\n\nimport { delay, mergeMap, publish, takeUntil } from 'rxjs/operators';\nimport { CesiumPureEventObserver } from './cesium-pure-event-observer';\nimport { CesiumEvent } from '../consts/cesium-event.enum';\nimport { CesiumEventModifier } from '../consts/cesium-event-modifier.enum';\nimport { CesiumEventBuilder } from '../cesium-event-builder';\n\nexport class CesiumLongPressObserver extends CesiumPureEventObserver {\n  public static LONG_PRESS_EVENTS_DURATION = 250;\n\n  constructor(protected event: CesiumEvent,\n              protected modifier: CesiumEventModifier,\n              private eventFactory: CesiumEventBuilder) {\n    super(event, modifier);\n  }\n\n  init(): ConnectableObservable<any> {\n    let startEvent: CesiumEvent;\n    let stopEvent: CesiumEvent;\n\n    if (this.event === CesiumEvent.LONG_LEFT_PRESS) {\n      startEvent = CesiumEvent.LEFT_DOWN;\n      stopEvent = CesiumEvent.LEFT_UP;\n    } else if (this.event === CesiumEvent.LONG_RIGHT_PRESS) {\n      startEvent = CesiumEvent.RIGHT_DOWN;\n      stopEvent = CesiumEvent.RIGHT_UP;\n    } else if (this.event === CesiumEvent.LONG_MIDDLE_PRESS) {\n      startEvent = CesiumEvent.MIDDLE_DOWN;\n      stopEvent = CesiumEvent.MIDDLE_UP;\n    }\n\n    const startEventObservable = this.eventFactory.get(startEvent, this.modifier);\n    const stopEventObservable = this.eventFactory.get(stopEvent, this.modifier);\n\n    // publish for preventing side effect\n    const longPressObservable = publish()(startEventObservable.pipe(\n      mergeMap((e) => observableOf(e).pipe(\n        delay(CesiumLongPressObserver.LONG_PRESS_EVENTS_DURATION),\n        takeUntil(stopEventObservable))),\n    ));\n    return longPressObservable;\n  }\n}\n","import { publish } from 'rxjs/operators';\nimport { CesiumService } from '../cesium/cesium.service';\nimport { CesiumEvent } from './consts/cesium-event.enum';\nimport { CesiumEventModifier } from './consts/cesium-event-modifier.enum';\nimport { Injectable } from '@angular/core';\nimport { CesiumPureEventObserver } from './event-observers/cesium-pure-event-observer';\nimport { CesiumLongPressObserver } from './event-observers/cesium-long-press-observer';\nimport { ConnectableObservable } from 'rxjs';\n\n@Injectable()\nexport class CesiumEventBuilder {\n\n  constructor(private cesiumService: CesiumService) {\n  }\n\n  public static longPressEvents: Set<CesiumEvent> = new Set([\n    CesiumEvent.LONG_LEFT_PRESS,\n    CesiumEvent.LONG_RIGHT_PRESS,\n    CesiumEvent.LONG_MIDDLE_PRESS\n  ]);\n\n  private eventsHandler: any;\n  private cesiumEventsObservables = new Map<string, ConnectableObservable<any>>();\n\n  public static getEventFullName(event: CesiumEvent, modifier?: CesiumEventModifier): string {\n    if (modifier) {\n      return `${event}_${modifier}`;\n    } else {\n      return event.toString();\n    }\n  }\n\n  init() {\n    this.eventsHandler = this.cesiumService.getViewer().screenSpaceEventHandler;\n  }\n\n  get(event: CesiumEvent, modifier?: CesiumEventModifier): ConnectableObservable<any> {\n    const eventName = CesiumEventBuilder.getEventFullName(event, modifier);\n    if (this.cesiumEventsObservables.has(eventName)) {\n      return this.cesiumEventsObservables.get(eventName);\n    } else {\n      const eventObserver = this.createCesiumEventObservable(event, modifier);\n      this.cesiumEventsObservables.set(eventName, eventObserver);\n      return eventObserver;\n    }\n  }\n\n  private createCesiumEventObservable(event: CesiumEvent, modifier?: CesiumEventModifier): ConnectableObservable<any> {\n    let cesiumEventObservable: ConnectableObservable<any>;\n    if (CesiumEventBuilder.longPressEvents.has(event)) {\n      cesiumEventObservable = this.createSpecialCesiumEventObservable(event, modifier);\n    } else {\n      cesiumEventObservable = publish()(new CesiumPureEventObserver(event, modifier).init(this.eventsHandler));\n    }\n    cesiumEventObservable.connect();\n    return cesiumEventObservable;\n  }\n\n  private createSpecialCesiumEventObservable(event: CesiumEvent, modifier: CesiumEventModifier): ConnectableObservable<any> {\n    // could support more events if needed\n    return new CesiumLongPressObserver(event, modifier, this).init();\n  }\n}\n\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { AcEntity } from '../../models/ac-entity';\nimport { Subject } from 'rxjs';\nimport { EventResult, Movement } from '../map-events-mananger/map-events-manager';\n\n/**\n * Service for solving plonter.\n * Used by map-event-manager and plonter context component\n */\n@Injectable()\nexport class PlonterService {\n  private _plonterShown: boolean;\n  private _entitesToPlonter: AcEntity[] = [];\n  private _plonterObserver: Subject<EventResult>;\n  private _eventResult: EventResult;\n  private _plonterChangeNotifier: EventEmitter<any> = new EventEmitter();\n\n  constructor() {\n    this._plonterObserver = new Subject<EventResult>();\n  }\n\n  get plonterChangeNotifier(): EventEmitter<any> {\n    return this._plonterChangeNotifier;\n  }\n\n  get plonterShown(): boolean {\n    return this._plonterShown;\n  }\n\n  get entitesToPlonter(): AcEntity[] {\n    return this._entitesToPlonter;\n  }\n\n  get plonterClickPosition(): Movement {\n    return this._eventResult.movement;\n  }\n\n  plonterIt(eventResult: EventResult) {\n    this._eventResult = eventResult;\n    this._entitesToPlonter = eventResult.entities;\n    this._plonterShown = true;\n\n    this._plonterChangeNotifier.emit();\n    return this._plonterObserver;\n  }\n\n  resolvePlonter(entity: AcEntity) {\n    this._plonterShown = false;\n    this._eventResult.entities = [entity];\n\n    this._plonterChangeNotifier.emit();\n    this._plonterObserver.next(this._eventResult);\n  }\n}\n","export const UtilsService = {\n  unique: (array: any[]): any[] => {\n    return array.reduce((accumulator, currentValue) => {\n      if (accumulator.indexOf(currentValue) < 0) {\n        accumulator.push(currentValue);\n      }\n      return accumulator;\n    }, []);\n  }\n};\n\n","import { CesiumEvent } from '../consts/cesium-event.enum';\n\nexport class CesiumDragDropHelper {\n\n  public static dragEvents: Set<CesiumEvent> = new Set([\n    CesiumEvent.LEFT_CLICK_DRAG,\n    CesiumEvent.RIGHT_CLICK_DRAG,\n    CesiumEvent.MIDDLE_CLICK_DRAG\n  ]);\n\n\n  public static getDragEventTypes(dragEvent: CesiumEvent) {\n    let mouseDownEvent;\n    let mouseUpEvent;\n    if (dragEvent === CesiumEvent.LEFT_CLICK_DRAG) {\n      mouseDownEvent = CesiumEvent.LEFT_DOWN;\n      mouseUpEvent = CesiumEvent.LEFT_UP;\n    } else if (dragEvent === CesiumEvent.RIGHT_CLICK_DRAG) {\n      mouseDownEvent = CesiumEvent.RIGHT_DOWN;\n      mouseUpEvent = CesiumEvent.RIGHT_UP;\n    } else if (dragEvent === CesiumEvent.MIDDLE_CLICK_DRAG) {\n      mouseDownEvent = CesiumEvent.MIDDLE_DOWN;\n      mouseUpEvent = CesiumEvent.MIDDLE_UP;\n    }\n\n    return {mouseDownEvent, mouseUpEvent};\n  }\n}\n","import { merge, Observable, of as observableOf, Subject } from 'rxjs';\n\nimport { filter, map, mergeMap, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { CesiumService } from '../cesium/cesium.service';\nimport { CesiumEventBuilder } from './cesium-event-builder';\nimport { EventRegistrationInput } from './event-registration-input';\nimport { DisposableObservable } from './disposable-observable';\nimport { PickOptions } from './consts/pickOptions.enum';\nimport { CesiumEvent } from './consts/cesium-event.enum';\nimport { CesiumEventModifier } from './consts/cesium-event-modifier.enum';\nimport { PlonterService } from '../plonter/plonter.service';\nimport { UtilsService } from '../../utils/utils.service';\nimport { CesiumDragDropHelper } from './event-observers/cesium-drag-drop-helper';\n\nclass Registration {\n  constructor(public observable: Observable<EventResult>,\n              public  stopper: Subject<any>,\n              public  priority: number,\n              public  isPaused: boolean) {\n  }\n}\n\n/**\n * Returns screen position, drag boolean for drag events only\n */\nexport interface Movement {\n  startPosition: { x: number, y: number };\n  endPosition: { x: number, y: number };\n  drop?: boolean;\n}\n\nexport interface EventResult {\n  movement: Movement;\n  cesiumEntities: any[];\n  entities: any[];\n}\n\n/**\n * Manages all map events. Notice events will run outside of Angular zone.\n * Provided by `<ac-map/>` component there for could be injected at any component under `<ac-map/>` hierarchy\n * or from the `<ac-map/>` component reference `acMapComponent.getMapEventsManager()`\n *\n * __usage:__\n * ```\n * MapEventsManagerService.register({event, modifier, priority, entityType, pickOption}).subscribe()\n * ```\n * __param:__ {CesiumEvent} event\n * __param:__ {CesiumEventModifier} modifier\n * __param:__ priority - the bigger the number the bigger the priority. default : 0.\n * __param:__ entityType - entity type class that you are interested like (Track). the class must extends AcEntity\n * __param:__ pickOption - self explained\n */\n@Injectable()\nexport class MapEventsManagerService {\n\n  private scene: any;\n  private eventRegistrations = new Map<string, Registration[]>();\n\n  constructor(private cesiumService: CesiumService,\n              private eventBuilder: CesiumEventBuilder,\n              private plonterService: PlonterService) {\n  }\n\n  init() {\n    this.eventBuilder.init();\n    this.scene = this.cesiumService.getScene();\n  }\n\n  /**\n   * Register to map event\n   * @param input Event Registration Input\n   *\n   * @returns DisposableObservable<EventResult>\n   */\n  register(input: EventRegistrationInput): DisposableObservable<EventResult> {\n    if (this.scene === undefined) {\n      throw new Error('CesiumService has not been initialized yet - MapEventsManagerService must be injected  under ac-map');\n    }\n\n    input.pick = input.pick || PickOptions.NO_PICK;\n    input.priority = input.priority || 0;\n\n    if (input.entityType && input.pick === PickOptions.NO_PICK) {\n      throw new Error('MapEventsManagerService: can\\'t register an event ' +\n        'with entityType and PickOptions.NO_PICK - It doesn\\'t make sense ');\n    }\n\n    const eventName = CesiumEventBuilder.getEventFullName(input.event, input.modifier);\n\n    if (!this.eventRegistrations.has(eventName)) {\n      this.eventRegistrations.set(eventName, []);\n    }\n\n    const eventRegistration = this.createEventRegistration(\n      input.event,\n      input.modifier,\n      input.entityType,\n      input.pick,\n      input.priority,\n      input.pickFilter);\n    const registrationObservable: any = eventRegistration.observable;\n    registrationObservable.dispose = () => this.disposeObservable(eventRegistration, eventName);\n    this.eventRegistrations.get(eventName).push(eventRegistration);\n\n    this.sortRegistrationsByPriority(eventName);\n    return <DisposableObservable<EventResult>> registrationObservable;\n  }\n\n  private disposeObservable(eventRegistration: Registration, eventName: string) {\n    eventRegistration.stopper.next(1);\n    const registrations = this.eventRegistrations.get(eventName);\n    const index = registrations.indexOf(eventRegistration);\n    if (index !== -1) {\n      registrations.splice(index, 1);\n    }\n    this.sortRegistrationsByPriority(eventName);\n  }\n\n  private sortRegistrationsByPriority(eventName: string) {\n    const registrations = this.eventRegistrations.get(eventName);\n    registrations.sort((a, b) => b.priority - a.priority);\n    if (registrations.length === 0) {\n      return;\n    }\n\n    // Active registrations by priority\n    const currentPriority = registrations[0].priority;\n    registrations.forEach((registration) => {\n      registration.isPaused = registration.priority < currentPriority;\n    });\n\n  }\n\n  private createEventRegistration(event: CesiumEvent,\n                                  modifier: CesiumEventModifier,\n                                  entityType: any,\n                                  pickOption: PickOptions,\n                                  priority: number,\n                                  pickFilter?: (any) => boolean): Registration {\n    const cesiumEventObservable = this.eventBuilder.get(event, modifier);\n    const stopper = new Subject<any>();\n\n    const registration = new Registration(undefined, stopper, priority, false);\n    let observable: Observable<EventResult>;\n\n    if (!CesiumDragDropHelper.dragEvents.has(event)) {\n      observable = cesiumEventObservable.pipe(\n        filter(() => !registration.isPaused),\n        map((movement) => this.triggerPick(movement, pickOption)),\n        filter((result) => result.cesiumEntities !== null || entityType === undefined),\n        map((picksAndMovement) => this.addEntities(picksAndMovement, entityType, pickOption, pickFilter)),\n        filter((result) => result.entities !== null || (entityType === undefined && !pickFilter)),\n        switchMap((entitiesAndMovement) => this.plonter(entitiesAndMovement, pickOption)),\n        takeUntil(stopper), );\n    } else {\n      observable = this.createDragEvent(event, modifier, entityType, pickOption, priority, pickFilter).pipe(takeUntil(stopper));\n    }\n\n    registration.observable = observable;\n    return registration;\n  }\n\n  private createDragEvent(event: CesiumEvent,\n                          modifier: CesiumEventModifier,\n                          entityType: any,\n                          pickOption: PickOptions,\n                          priority: number,\n                          pickFilter?: (any) => boolean): Observable<EventResult> {\n    const { mouseDownEvent, mouseUpEvent } = CesiumDragDropHelper.getDragEventTypes(event);\n\n    const mouseUpObservable = this.eventBuilder.get(mouseUpEvent);\n    const mouseMoveObservable = this.eventBuilder.get(CesiumEvent.MOUSE_MOVE);\n\n    const mouseDownRegistration = this.createEventRegistration(mouseDownEvent, modifier, entityType, pickOption, priority, pickFilter);\n\n    const dropSubject = new Subject<EventResult>();\n    const dragObserver = mouseDownRegistration.observable.pipe(mergeMap(e => {\n      let lastMove: any = null;\n      const dragStartPositionX = e.movement.startPosition.x;\n      const dragStartPositionY = e.movement.startPosition.y;\n      return mouseMoveObservable.pipe(map((movement) => {\n        lastMove = {\n          movement: {\n            drop: false,\n            startPosition: {\n              x: dragStartPositionX,\n              y: dragStartPositionY,\n            },\n            endPosition: movement.endPosition,\n          },\n          entities: e.entities,\n          cesiumEntities: e.cesiumEntities\n        };\n        return lastMove;\n      }), takeUntil(mouseUpObservable), tap(undefined, undefined, () => {\n        // On complete\n        if (lastMove) {\n          const dropEvent = Object.assign({}, lastMove);\n          dropEvent.movement.drop = true;\n          dropSubject.next(dropEvent);\n        }\n      }), );\n    }));\n\n    return merge(dragObserver, dropSubject);\n\n  }\n\n  private triggerPick(movement: any, pickOptions: PickOptions) {\n    let picks: any = [];\n    switch (pickOptions) {\n      case PickOptions.PICK_ONE:\n      case PickOptions.PICK_ALL:\n        picks = this.scene.drillPick(movement.endPosition);\n        picks = picks.length === 0 ? null : picks;\n        break;\n      case PickOptions.PICK_FIRST:\n        const pick = this.scene.pick(movement.endPosition);\n        picks = pick === undefined ? null : [pick];\n        break;\n      case PickOptions.NO_PICK:\n        break;\n      default:\n        break;\n    }\n\n    // Picks can be cesium entity or cesium primitive\n    if (picks) {\n      picks = picks.map((pick: any) => pick.id && pick.id instanceof Cesium.Entity ? pick.id : pick.primitive);\n    }\n\n    return { movement: movement, cesiumEntities: picks };\n  }\n\n  private addEntities(picksAndMovement: any, entityType: any, pickOption: PickOptions, pickFilter?: (any) => boolean): EventResult {\n\n    if (picksAndMovement.cesiumEntities === null) {\n      picksAndMovement.entities = null;\n      return picksAndMovement;\n    }\n    let entities = [];\n    if (pickOption !== PickOptions.NO_PICK) {\n      if (entityType) {\n        entities = picksAndMovement.cesiumEntities.map((pick: any) => pick.acEntity).filter((acEntity: any) => {\n          return acEntity && acEntity instanceof entityType;\n        });\n      } else {\n        entities = picksAndMovement.cesiumEntities.map((pick: any) => pick.acEntity);\n      }\n\n      entities = UtilsService.unique(entities);\n      entities = (pickFilter && entities) ? entities.filter(pickFilter) : entities;\n      if (entities.length === 0) {\n        entities = null;\n      }\n    }\n\n    picksAndMovement.entities = entities;\n\n    return picksAndMovement;\n  }\n\n  private plonter(entitiesAndMovement: EventResult, pickOption: PickOptions): Observable<EventResult> {\n    if (pickOption === PickOptions.PICK_ONE && entitiesAndMovement.entities !== null && entitiesAndMovement.entities.length > 1) {\n      return this.plonterService.plonterIt(entitiesAndMovement);\n    } else {\n      return observableOf(entitiesAndMovement);\n    }\n  }\n}\n","import { CesiumService } from '../cesium/cesium.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MapLayersService {\n\n  private layersDataSources: any[] = [];\n\n  constructor(private cesiumService: CesiumService) {\n\n  }\n\n  registerLayerDataSources(dataSources: any[], zIndex: number) {\n    dataSources.forEach(ds => {\n      ds.zIndex = zIndex;\n      this.layersDataSources.push(ds);\n    });\n  }\n\n  drawAllLayers() {\n    this.layersDataSources.sort((a, b) => a.zIndex - b.zIndex);\n\n    this.layersDataSources.forEach((dataSource) => {\n      this.cesiumService.getViewer().dataSources.add(dataSource);\n    });\n  }\n\n  updateAndRefresh(dataSources: any[], newZIndex: number) {\n    if (dataSources && dataSources.length) {\n      dataSources.forEach((ds) => {\n        const index = this.layersDataSources.indexOf(ds);\n        if (index !== -1) {\n          this.layersDataSources[index].zIndex = newZIndex;\n        }\n      });\n\n      this.cesiumService.getViewer().dataSources.removeAll();\n      this.drawAllLayers();\n    }\n  }\n\n  removeDataSources(dataSources: any[]) {\n    dataSources.forEach(ds => {\n      const index = this.layersDataSources.indexOf(ds);\n      if (index !== -1) {\n        this.layersDataSources.splice(index, 1);\n        this.cesiumService.getViewer().dataSources.remove(ds, true);\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AcMapComponent } from '../../components/ac-map/ac-map.component';\n\n/**\n *  The service manages `ac-map` instances. `ac-map` register itself to this service.\n *  This allows retrieval of maps provided services outside of `ac-map` scope.\n */\n@Injectable()\nexport class MapsManagerService {\n  private defaultIdCounter = 0;\n  private _Maps = new Map<string, AcMapComponent>();\n  private firstMap: any;\n  private eventRemoveCallbacks: Function[] = [];\n\n  constructor() {\n  }\n\n  getMap(id?: string): AcMapComponent | undefined {\n    if (!id) {\n      return this.firstMap;\n    }\n    return this._Maps.get(id);\n  }\n\n  _registerMap(id: string, acMap: AcMapComponent): string {\n    if (!this.firstMap) {\n      this.firstMap = acMap;\n    }\n\n    const mapId = id ? id : this.generateDefaultId();\n    if (this._Maps.has(mapId)) {\n      throw new Error(`Map with id: ${mapId} already exist`);\n    }\n    this._Maps.set(mapId, acMap);\n    return mapId;\n  }\n\n  _removeMapById(id: string) {\n    if (this._Maps.has(id) && this._Maps.get(id) === this.firstMap) {\n      const iter = this._Maps.values();\n      iter.next(); // skip firstMap\n      this.firstMap = iter.next().value;\n    }\n    return this._Maps.delete(id);\n  }\n\n  private generateDefaultId(): string {\n    this.defaultIdCounter++;\n    return 'default-map-id-' + this.defaultIdCounter;\n  }\n\n  /**\n   * Binds multiple 2D map's cameras together.\n   * @param mapsConfiguration - binding options.\n   * mapId - the id of the maps to bind.\n   * sensitivity - the amount the camera position should change in order to sync other maps.\n   * bindZoom - should bind zoom level\n   */\n  sync2DMapsCameras(mapsConfiguration: { id: string; sensitivity?: number; bindZoom?: boolean }[]) {\n    const DEFAULT_SENSITIVITY = 0.01;\n    this.unsyncMapsCameras();\n    const maps: { map: AcMapComponent; options?: { sensitivity?: number; bindZoom?: boolean } }[] = mapsConfiguration.map(config => {\n      const map = this.getMap(config.id);\n      if (!map) {\n        throw new Error(`Couldn't find map with id: ${config.id}`);\n      }\n\n      return {map, options: {sensitivity: config.sensitivity, bindZoom: config.bindZoom}};\n    });\n\n    maps.forEach(masterMapConfig => {\n      const masterMap = masterMapConfig.map;\n      const options = masterMapConfig.options;\n      const masterCamera = masterMap.getCameraService().getCamera();\n      const masterCameraCartographic = masterCamera.positionCartographic;\n      masterCamera.percentageChanged = options.sensitivity || DEFAULT_SENSITIVITY;\n      const removeCallback = masterCamera.changed.addEventListener(() => {\n        maps.forEach(slaveMapConfig => {\n          const slaveMap = slaveMapConfig.map;\n          const slaveMapOptions = slaveMapConfig.options;\n          if (slaveMap === masterMap) {\n            return;\n          }\n\n          const slaveCamera = slaveMap.getCameraService().getCamera();\n          const slaveCameraCartographic = slaveCamera.positionCartographic;\n          const position = Cesium.Ellipsoid.WGS84.cartographicToCartesian({\n            longitude: masterCameraCartographic.longitude,\n            latitude: masterCameraCartographic.latitude,\n            height: slaveMapOptions.bindZoom ? masterCameraCartographic.height : slaveCameraCartographic.height,\n          });\n\n          if (slaveMap.getCesiumViewer().scene.mode !== Cesium.SceneMode.MORPHING) {\n            slaveCamera.setView({\n              destination: position,\n              orientation: {\n                heading: slaveCamera.heading,\n                pitch: slaveCamera.pitch,\n              },\n            });\n          }\n        });\n      });\n      this.eventRemoveCallbacks.push(removeCallback);\n    });\n  }\n\n  /**\n   * Unsyncs maps cameras\n   */\n  unsyncMapsCameras() {\n    this.eventRemoveCallbacks.forEach(removeCallback => removeCallback());\n    this.eventRemoveCallbacks = [];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../cesium/cesium.service';\n\n/**\n * Take screenshot of your cesium globe.\n *\n * usage:\n * ```typescript\n * // get base 64 data url\n * const dataUrl = screenshotService.getMapScreenshotDataUrl();\n *\n * // or download as png\n * screenshotService.downloadMapScreenshot('my-map.png');\n *\n * ```\n *\n */\n@Injectable()\nexport class ScreenshotService {\n  constructor(private cesiumService: CesiumService) {\n  }\n\n  getMapScreenshotDataUrlBase64() {\n    const canvas = this.cesiumService.getCanvas();\n    return canvas.toDataURL();\n  }\n\n\n  downloadMapScreenshot(filename = 'map.png') {\n    const dataUrl = this.getMapScreenshotDataUrlBase64();\n    this.downloadURI(dataUrl, filename);\n  }\n\n  private downloadURI(uri: string, name: string) {\n    const link = document.createElement('a');\n    link.download = name;\n    link.href = uri;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { AfterViewInit, Component, ElementRef, Inject, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { ConfigurationService } from '../../cesium-enhancements/ConfigurationService';\nimport { SceneMode } from '../../models/scene-mode.enum';\nimport { CameraService } from '../../services/camera/camera.service';\nimport { CesiumService } from '../../services/cesium/cesium.service';\nimport { ContextMenuService } from '../../services/context-menu/context-menu.service';\nimport { CoordinateConverter } from '../../services/coordinate-converter/coordinate-converter.service';\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\nimport { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\nimport { CzmlDrawerService } from '../../services/drawers/czml-drawer/czml-drawer.service';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\nimport { PolylineDrawerService } from '../../services/drawers/polyline-drawer/polyline-drawer.service';\nimport { PolylinePrimitiveDrawerService } from '../../services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service';\nimport { KeyboardControlService } from '../../services/keyboard-control/keyboard-control.service';\nimport { CesiumEventBuilder } from '../../services/map-events-mananger/cesium-event-builder';\nimport { MapEventsManagerService } from '../../services/map-events-mananger/map-events-manager';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\nimport { MapsManagerService } from '../../services/maps-manager/maps-manager.service';\nimport { PlonterService } from '../../services/plonter/plonter.service';\nimport { ScreenshotService } from '../../services/screenshot/screenshot.service';\n\n/**\n * This is a map implementation, creates the cesium map.\n * Every layer should be tag inside ac-map tag\n *\n * Accessing cesium viewer:\n * 1. acMapComponent.getCesiumViewer()\n * 2. Use MapManagerService.getMap().getCesiumViewer() or if more then one map: MapManagerService.getMap(mapId).getCesiumViewer()\n *\n *\n * @example\n * <ac-map>\n *     <ac-map-layer-provider></ac-map-layer-provider>\n *     <dynamic-ellipse-layer #layer></dynamic-ellipse-layer>\n * </ac-map>\n */\n@Component({\n  selector: 'ac-map',\n  template: `\n    <ac-default-plonter *ngIf=\"!disableDefaultPlonter\"></ac-default-plonter>\n    <ac-context-menu-wrapper></ac-context-menu-wrapper>\n    <ng-content></ng-content>\n  `,\n  providers: [\n    CesiumService,\n    BillboardDrawerService,\n    CesiumEventBuilder,\n    KeyboardControlService,\n    MapEventsManagerService,\n    PlonterService,\n    LabelDrawerService,\n    PolylineDrawerService,\n    PolylinePrimitiveDrawerService,\n    EllipseDrawerService,\n    PointDrawerService,\n    ArcDrawerService,\n    CzmlDrawerService,\n    PolygonDrawerService,\n    MapLayersService,\n    CameraService,\n    ScreenshotService,\n    ContextMenuService,\n    CoordinateConverter,\n  ],\n})\nexport class AcMapComponent implements OnChanges, OnInit, AfterViewInit, OnDestroy {\n  /**\n   * Disable default plonter context menu\n   */\n  @Input()\n  disableDefaultPlonter = false;\n\n  /**\n   * Set the id name of the map\n   * default: 'default-map-id-[index]'\n   */\n  @Input()\n  mapId: string;\n\n  /**\n   * flyTo options according to https://cesiumjs.org/Cesium/Build/Documentation/Camera.html?classFilter=cam#flyTo\n   */\n  @Input()\n  flyTo: any;\n\n  /**\n   * Sets the map's SceneMode\n   */\n  @Input()\n  sceneMode: SceneMode;\n\n  /**\n   * Optional - the container element's id in which the map's canvas will be appended to.\n   * If not supplied - the container element will be the parent element of ac-map;\n   */\n  @Input()\n  containerId: string;\n\n  private mapContainer: HTMLElement;\n\n  constructor(\n    private _cesiumService: CesiumService,\n    private _cameraService: CameraService,\n    private _elemRef: ElementRef,\n    @Inject(DOCUMENT) private document,\n    private mapsManagerService: MapsManagerService,\n    private billboardDrawerService: BillboardDrawerService,\n    private labelDrawerService: LabelDrawerService,\n    private ellipseDrawerService: EllipseDrawerService,\n    private polylineDrawerService: PolylineDrawerService,\n    private polygonDrawerService: PolygonDrawerService,\n    private arcDrawerService: ArcDrawerService,\n    private pointDrawerService: PointDrawerService,\n    private czmlDrawerService: CzmlDrawerService,\n    private mapEventsManager: MapEventsManagerService,\n    private keyboardControlService: KeyboardControlService,\n    private mapLayersService: MapLayersService,\n    private configurationService: ConfigurationService,\n    private screenshotService: ScreenshotService,\n    public contextMenuService: ContextMenuService,\n    private coordinateConverter: CoordinateConverter,\n  ) {\n    this.mapContainer = this.document.createElement('div');\n    this.mapContainer.style.width = '100%';\n    this.mapContainer.style.height = '100%';\n    this.mapContainer.className = 'map-container';\n    this._cesiumService.init(this.mapContainer, this);\n    this._cameraService.init(this._cesiumService);\n    this.mapEventsManager.init();\n    this.billboardDrawerService.init();\n    this.labelDrawerService.init();\n    this.ellipseDrawerService.init();\n    this.polylineDrawerService.init();\n    this.polygonDrawerService.init();\n    this.arcDrawerService.init();\n    this.pointDrawerService.init();\n    this.czmlDrawerService.init();\n    this.keyboardControlService.init();\n    this.contextMenuService.init(this.mapEventsManager);\n  }\n\n  ngOnInit() {\n    this.mapId = this.mapsManagerService._registerMap(this.mapId, this);\n    if (!this.containerId) {\n      this._elemRef.nativeElement.appendChild(this.mapContainer);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['sceneMode']) {\n      this._cameraService.setSceneMode(changes['sceneMode'].currentValue);\n    }\n    if (changes['flyTo']) {\n      this._cameraService.cameraFlyTo(changes['flyTo'].currentValue);\n    }\n    if (changes['containerId'] && !changes['containerId'].firstChange) {\n      const element = this.document.getElementById(changes['containerId'].currentValue);\n      if (element) {\n        element.appendChild(this.mapContainer);\n      } else {\n        throw new Error(`No element found with id: ${changes['containerId'].currentValue}`);\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.mapLayersService.drawAllLayers();\n    if (this.containerId) {\n      setTimeout(() => {\n        const element = this.document.getElementById(this.containerId);\n        if (element) {\n          element.appendChild(this.mapContainer);\n        } else {\n          throw new Error(`No element found with id: ${this.containerId}`);\n        }\n      }, 0);\n    }\n  }\n\n  ngOnDestroy(): void {\n    const viewer = this.getCesiumViewer();\n    viewer.destroy();\n    this.mapContainer.remove();\n    this.mapsManagerService._removeMapById(this.mapId);\n  }\n\n  /**\n   * @returns ac-map's cesium service\n   */\n  getCesiumSerivce() {\n    return this._cesiumService;\n  }\n\n  /**\n   * @returns map's cesium viewer\n   */\n  getCesiumViewer() {\n    return this._cesiumService.getViewer();\n  }\n\n\n  getCameraService(): CameraService {\n    return this._cameraService;\n  }\n\n  getId() {\n    return this.mapId;\n  }\n\n\n  getMapContainer() {\n    return this.mapContainer;\n  }\n\n\n  getMapEventsManager(): MapEventsManagerService {\n    return this.mapEventsManager;\n  }\n\n  getContextMenuService(): ContextMenuService {\n    return this.contextMenuService;\n  }\n\n  getScreenshotService() {\n    return this.screenshotService;\n  }\n\n  getKeyboardControlService() {\n    return this.keyboardControlService;\n  }\n\n  getCoordinateConverter() {\n    return this.coordinateConverter;\n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { IDescription } from '../../models/description';\nimport { LayerOptions } from '../../models/layer-options';\n\n@Injectable()\nexport class LayerService {\n  private _context: any;\n  private _options: LayerOptions;\n  private _show: boolean;\n  private _zIndex: number;\n  private _entityName: string;\n  private _cache = true;\n  private descriptions: IDescription[] = [];\n  private layerUpdate = new EventEmitter();\n\n  get cache(): boolean {\n    return this._cache;\n  }\n\n  set cache(value: boolean) {\n    this._cache = value;\n  }\n\n  get zIndex(): number {\n    return this._zIndex;\n  }\n\n  set zIndex(value: number) {\n    if (value !== this._zIndex) {\n      this.layerUpdate.emit();\n    }\n    this._zIndex = value;\n  }\n\n  get show(): boolean {\n    return this._show;\n  }\n\n  set show(value: boolean) {\n    if (value !== this._show) {\n      this.layerUpdate.emit();\n    }\n    this._show = value;\n  }\n\n  get options(): LayerOptions {\n    return this._options;\n  }\n\n  set options(value: LayerOptions) {\n    this._options = value;\n    this.layerUpdate.emit();\n  }\n\n  get context(): any {\n    return this._context;\n  }\n\n  set context(context) {\n    this._context = context;\n    this.layerUpdate.emit();\n  }\n\n  setEntityName(name: string) {\n    this._entityName = name;\n  }\n\n  getEntityName(): string {\n    return this._entityName;\n  }\n\n  registerDescription(descriptionComponent: IDescription) {\n    if (this.descriptions.indexOf(descriptionComponent) < 0) {\n      this.descriptions.push(descriptionComponent);\n    }\n  }\n\n  unregisterDescription(descriptionComponent: IDescription) {\n    const index = this.descriptions.indexOf(descriptionComponent);\n    if (index > -1) {\n      this.descriptions.splice(index, 1);\n    }\n  }\n\n  getDescriptions(): IDescription[] {\n    return this.descriptions;\n  }\n\n  layerUpdates(): EventEmitter<any> {\n    return this.layerUpdate;\n  }\n}\n","/**\n * Action to do on entity\n */\nexport enum ActionType {\n  ADD_UPDATE,\n  DELETE\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ComputationCache {\n  private _cache = new Map<string, any>();\n\n  get(expression: string, insertFn: (() => any)): any {\n    if (this._cache.has(expression)) {\n      return this._cache.get(expression);\n    }\n\n    const value = insertFn();\n    this._cache.set(expression, value);\n    return value;\n  }\n\n  clear() {\n    this._cache.clear();\n  }\n}\n","export class Checker {\n  static throwIfAnyNotPresent(values: Object, propertyNames: string[]) {\n    propertyNames.forEach(propertyName => Checker.throwIfNotPresent(values, propertyName));\n  }\n\n  static throwIfNotPresent(value: any, name: string) {\n    if (!Checker.present(value[name])) {\n      throw new Error(`Error: ${name} was not given.`);\n    }\n  }\n\n  static present(value: any) {\n    return value !== undefined && value !== null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../../cesium/cesium.service';\nimport { Checker } from '../../../../utils/checker';\nimport { EllipsePrimitive } from 'primitive-primitives';\nimport { PrimitivesDrawerService } from '../../primitives-drawer/primitives-drawer.service';\n\n\n/**\n *  This drawer is responsible for creating the dynamic version of the ellipse component.\n *  We are using the primitive-primitives implementation of an ellipse. see: https://github.com/gotenxds/Primitive-primitives\n *  This allows us to change the position of the ellipses without creating a new primitive object\n *  as Cesium does not allow updating an ellipse.\n */\n@Injectable()\nexport class DynamicEllipseDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PrimitiveCollection, cesiumService);\n  }\n\n  add(cesiumProps: any): any {\n    Checker.throwIfAnyNotPresent(cesiumProps, ['center', 'semiMajorAxis', 'semiMinorAxis']);\n\n    return super.add(new EllipsePrimitive(cesiumProps));\n  }\n\n  update(ellipse: any, cesiumProps: any): any {\n    ellipse.updateLocationData(cesiumProps);\n\n    return ellipse;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../../primitives-drawer/primitives-drawer.service';\n\n/**\n *  This drawer is responsible for creating the dynamic version of the polyline component.\n */\n@Injectable()\nexport class DynamicPolylineDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PolylineCollection, cesiumService);\n  }\n}\n","import { PrimitivesDrawerService } from '../../primitives-drawer/primitives-drawer.service';\nimport { CesiumService } from '../../../cesium/cesium.service';\n\n/**\n *\n * This drawer is deprecated.\n * General static primitives drawer responsible of drawing static Cesium primitives with material.\n */\nexport abstract class StaticPrimitiveDrawer extends PrimitivesDrawerService {\n  constructor(private geometryType: any, cesiumService: CesiumService) {\n    super(Cesium.PrimitiveCollection, cesiumService);\n  }\n\n  add(geometryProps: any, instanceProps: any, primitiveProps: any): any {\n    instanceProps.geometry = new this.geometryType(geometryProps);\n    primitiveProps.geometryInstances = new Cesium.GeometryInstance(instanceProps);\n    primitiveProps.asynchronous = false;\n    const primitive = new Cesium.Primitive(primitiveProps);\n    return super.add(primitive);\n  }\n\n  update(primitive: any, geometryProps: any, instanceProps: any, primitiveProps: any) {\n    instanceProps.geometry = new this.geometryType(geometryProps);\n    primitiveProps.geometryInstances = new Cesium.GeometryInstance(instanceProps);\n    this._cesiumCollection.remove(primitive);\n    return super.add(new Cesium.Primitive(primitiveProps));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../../cesium/cesium.service';\nimport { StaticPrimitiveDrawer } from '../static-primitive-drawer/static-primitive-drawer.service';\n\n/**\n *  This drawer is responsible for creating the static version of the circle component.\n */\n@Injectable()\nexport class StaticCircleDrawerService extends StaticPrimitiveDrawer {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.CircleGeometry, cesiumService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../../cesium/cesium.service';\nimport { StaticPrimitiveDrawer } from '../static-primitive-drawer/static-primitive-drawer.service';\n\n/**\n *  This drawer is responsible for creating the static version of the polyline component.\n *  This also allows us to change the color of the polylines.\n */\n@Injectable()\nexport class StaticPolylineDrawerService extends StaticPrimitiveDrawer {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PolylineGeometry, cesiumService);\n  }\n\n  /**\n   * Update function can only change the primitive color.\n   */\n  update(primitive: any, geometryProps: any, instanceProps: any, primitiveProps: any) {\n    const color = instanceProps.attributes.color.value;\n\n    if (primitive.ready) {\n      primitive.getGeometryInstanceAttributes().color = color;\n    } else {\n      Cesium.when(primitive.readyPromise).then((readyPrimitive: any) => {\n        readyPrimitive.getGeometryInstanceAttributes().color.value = color;\n      });\n    }\n\n    return primitive;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { StaticPrimitiveDrawer } from '../static-primitive-drawer/static-primitive-drawer.service';\nimport { CesiumService } from '../../../cesium/cesium.service';\n\n/**\n + This drawer is responsible for drawing a polygon over the Cesium map.\n + This implementation uses simple PolygonGeometry and Primitive parameters.\n + This doesn't allow us to change the position, color, etc.. of the polygons. For that you may use the dynamic polygon component.\n */\n@Injectable()\nexport class StaticPolygonDrawerService extends StaticPrimitiveDrawer {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PolygonGeometry, cesiumService);\n  }\n}\n","import { CesiumService } from '../../../cesium/cesium.service';\nimport { Injectable } from '@angular/core';\nimport { StaticPrimitiveDrawer } from '../static-primitive-drawer/static-primitive-drawer.service';\n\n\n/**\n + *  This drawer is responsible for drawing an ellipse over the Cesium map.\n + *  This implementation uses simple EllipseGeometry and Primitive parameters.\n + *  This doesn't allow us to change the position, color, etc.. of the ellipses. For that you may use the dynamic ellipse component.\n + */\n@Injectable()\nexport class StaticEllipseDrawerService extends StaticPrimitiveDrawer {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.EllipseGeometry, cesiumService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing models.\n */\n@Injectable()\nexport class ModelDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.model);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing box.\n */\n@Injectable()\nexport class BoxDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.box);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing corridors .\n */\n@Injectable()\nexport class CorridorDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.corridor);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing cylinders.\n */\n@Injectable()\nexport class CylinderDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.cylinder);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing ellipsoid.\n */\n@Injectable()\nexport class EllipsoidDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.ellipsoid);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing polylines.\n */\n@Injectable()\nexport class PolylineVolumeDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.polylineVolume);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing polygons.\n */\n@Injectable()\nexport class WallDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.wall);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing rectangle.\n */\n@Injectable()\nexport class RectangleDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.rectangle);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\n\n/**\n *  This drawer is responsible for drawing labels as primitives.\n *  This drawer is more efficient than LabelDrawerService when drawing dynamic labels.\n */\n@Injectable()\nexport class LabelPrimitiveDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.LabelCollection, cesiumService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\n\n/**\n *  This drawer is responsible for drawing billboards as primitives.\n *  This drawer is more efficient than BillboardDrawerService when drawing dynamic billboards.\n */\n@Injectable()\nexport class BillboardPrimitiveDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.BillboardCollection, cesiumService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\n\n/**\n *  This drawer is responsible of drawing points as primitives.\n *  This drawer is more efficient than PointDrawerService when drawing dynamic points.\n */\n@Injectable()\nexport class PointPrimitiveDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PointPrimitiveCollection, cesiumService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\n\n@Injectable()\nexport class HtmlDrawerService extends PrimitivesDrawerService {\n  constructor(private _cesiumService: CesiumService) {\n    super(Cesium.HtmlCollection, _cesiumService);\n  }\n\n  add(cesiumProps: any): any {\n    cesiumProps.scene = this._cesiumService.getScene();\n    cesiumProps.mapContainer = this._cesiumService.getMap().getMapContainer();\n    return super.add(cesiumProps);\n  }\n}\n","import { from as observableFrom, merge as observableMerge, Observable, Subject } from 'rxjs';\n\nimport { takeUntil } from 'rxjs/operators';\n// tslint:disable\nimport { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\nimport { AfterContentInit, ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { AcNotification } from '../../models/ac-notification';\nimport { ActionType } from '../../models/action-type.enum';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\nimport { PolylineDrawerService } from '../../services/drawers/polyline-drawer/polyline-drawer.service';\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\nimport { AcEntity } from '../../models/ac-entity';\nimport { BasicDrawerService } from '../../services/drawers/basic-drawer/basic-drawer.service';\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\nimport { LayerOptions } from '../../models/layer-options';\nimport { DynamicEllipseDrawerService } from '../../services/drawers/static-dynamic/ellipse-drawer/dynamic-ellipse-drawer.service';\nimport { DynamicPolylineDrawerService } from '../../services/drawers/static-dynamic/dynamic-polyline-drawer/dynamic-polyline-drawer.service';\nimport { StaticCircleDrawerService } from '../../services/drawers/static-dynamic/static-circle-drawer/static-circle-drawer.service';\nimport { StaticPolylineDrawerService } from '../../services/drawers/static-dynamic/static-polyline-drawer/static-polyline-drawer.service';\nimport { StaticPolygonDrawerService } from '../../services/drawers/static-dynamic/static-polygon-drawer/polygon-drawer.service';\nimport { StaticEllipseDrawerService } from '../../services/drawers/static-dynamic/ellipse-drawer/ellipse-drawer.service';\nimport { ModelDrawerService } from '../../services/drawers/model-drawer/model-drawer.service';\nimport { BoxDrawerService } from '../../services/drawers/box-dawer/box-drawer.service';\nimport { CorridorDrawerService } from '../../services/drawers/corridor-dawer/corridor-drawer.service';\nimport { CylinderDrawerService } from '../../services/drawers/cylinder-dawer/cylinder-drawer.service';\nimport { EllipsoidDrawerService } from '../../services/drawers/ellipoid-drawer/ellipsoid-drawer.service';\nimport { PolylineVolumeDrawerService } from '../../services/drawers/polyline-volume-dawer/polyline-volume-drawer.service';\nimport { WallDrawerService } from '../../services/drawers/wall-dawer/wall-drawer.service';\nimport { RectangleDrawerService } from '../../services/drawers/rectangle-dawer/rectangle-drawer.service';\nimport { PolylinePrimitiveDrawerService } from '../../services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service';\nimport { LabelPrimitiveDrawerService } from '../../services/drawers/label-primitive-drawer/label-primitive-drawer.service';\nimport { BillboardPrimitiveDrawerService } from '../../services/drawers/billboard-primitive-drawer/billboard-primitive-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\nimport { PointPrimitiveDrawerService } from '../../services/drawers/point-primitive-drawer/point-primitive-drawer.service';\nimport { HtmlDrawerService } from '../../services/drawers/html-drawer/html-drawer.service';\nimport { CzmlDrawerService } from '../../services/drawers/czml-drawer/czml-drawer.service';\n\n// tslint:enable\n/**\n *  This is a ac-layer implementation.\n *  The ac-layer element must be a child of ac-map element.\n *  + acFor `{string}` - get the tracked observable and entityName (see the example).\n *  + show `{boolean}` - show/hide layer's entities.\n *  + context `{any}` - get the context layer that will use the componnet (most of the time equal to \"this\").\n *  + options `{LayerOptions}` - sets the layer options for each drawer.\n *  + zIndex `{number}` - controls the zIndex (order) of the layer, layers with greater zIndex will be in front of layers with lower zIndex\n *    (Exception For `Billboard` and `Label`, should use `[eyeOffset]` prop instead)</br>\n *    zIndex won't work for pritimitve descs (like ac-primitive-polyline...)\n *\n *\n *  __Usage :__\n *  ```\n *  <ac-map>\n *    <ac-layer acFor=\"let track of tracks$\" [show]=\"show\" [context]=\"this\" [options]=\"options\" [zIndex]=\"1\">\n *      <ac-billboard-desc props=\"{\n *        image: track.image,\n *        position: track.position,\n *        scale: track.scale,\n *        color: track.color,\n *        name: track.name\n *      }\">\n *      </ac-billboard-desc>\n *        <ac-label-desc props=\"{\n *          position: track.position,\n *          pixelOffset : [-15,20] | pixelOffset,\n *          text: track.name,\n *          font: '15px sans-serif'\n *        }\">\n *      </ac-label-desc>\n *    </ac-layer>\n *  </ac-map>\n *  ```\n */\n@Component({\n  selector: 'ac-layer',\n  template: '<ng-content></ng-content>',\n  providers: [\n    LayerService,\n    ComputationCache,\n    BillboardDrawerService,\n    LabelDrawerService,\n    EllipseDrawerService,\n    PolylineDrawerService,\n    ArcDrawerService,\n    PointDrawerService,\n    PolygonDrawerService,\n    ModelDrawerService,\n    BoxDrawerService,\n    CorridorDrawerService,\n    CylinderDrawerService,\n    EllipsoidDrawerService,\n    PolylineVolumeDrawerService,\n    WallDrawerService,\n    RectangleDrawerService,\n    PolylinePrimitiveDrawerService,\n    LabelPrimitiveDrawerService,\n    BillboardPrimitiveDrawerService,\n    PointPrimitiveDrawerService,\n    HtmlDrawerService,\n    CzmlDrawerService,\n\n    DynamicEllipseDrawerService,\n    DynamicPolylineDrawerService,\n    StaticCircleDrawerService,\n    StaticPolylineDrawerService,\n    StaticPolygonDrawerService,\n    StaticEllipseDrawerService,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AcLayerComponent implements OnInit, OnChanges, AfterContentInit, OnDestroy {\n  @Input()\n  show = true;\n  @Input()\n  acFor: string;\n  @Input()\n  context: any;\n  @Input()\n  store = false;\n  @Input()\n  options: LayerOptions;\n  @Input()\n  zIndex = 0;\n\n  private readonly acForRgx = /^let\\s+.+\\s+of\\s+.+$/;\n  private entityName: string;\n  private stopObservable = new Subject<any>();\n  private observable: Observable<AcNotification>;\n  private _drawerList: Map<string, BasicDrawerService>;\n  private _updateStream: Subject<AcNotification> = new Subject<AcNotification>();\n  private entitiesStore = new Map<string, any>();\n  private layerDrawerDataSources: any[] = [];\n\n  constructor(private layerService: LayerService,\n              private _computationCache: ComputationCache,\n              private mapLayersService: MapLayersService,\n              billboardDrawerService: BillboardDrawerService,\n              labelDrawerService: LabelDrawerService,\n              ellipseDrawerService: EllipseDrawerService,\n              polylineDrawerService: PolylineDrawerService,\n              polygonDrawerService: PolygonDrawerService,\n              arcDrawerService: ArcDrawerService,\n              pointDrawerService: PointDrawerService,\n              modelDrawerService: ModelDrawerService,\n              boxDrawerService: BoxDrawerService,\n              corridorDrawerService: CorridorDrawerService,\n              cylinderDrawerService: CylinderDrawerService,\n              ellipsoidDrawerSerice: EllipsoidDrawerService,\n              polylineVolumeDrawerService: PolylineVolumeDrawerService,\n              wallDrawerService: WallDrawerService,\n              rectangleDrawerService: RectangleDrawerService,\n              dynamicEllipseDrawerService: DynamicEllipseDrawerService,\n              dynamicPolylineDrawerService: DynamicPolylineDrawerService,\n              staticCircleDrawerService: StaticCircleDrawerService,\n              staticPolylineDrawerService: StaticPolylineDrawerService,\n              staticPolygonDrawerService: StaticPolygonDrawerService,\n              staticEllipseDrawerService: StaticEllipseDrawerService,\n              polylinePrimitiveDrawerService: PolylinePrimitiveDrawerService,\n              labelPrimitiveDrawerService: LabelPrimitiveDrawerService,\n              billboardPrimitiveDrawerService: BillboardPrimitiveDrawerService,\n              pointPrimitiveDrawerService: PointPrimitiveDrawerService,\n              htmlDrawerService: HtmlDrawerService,\n              czmlDrawerService: CzmlDrawerService\n  ) {\n    this._drawerList = new Map([\n      ['billboard', billboardDrawerService],\n      ['label', labelDrawerService],\n      ['ellipse', ellipseDrawerService],\n      ['polyline', polylineDrawerService],\n      ['polygon', polygonDrawerService as BasicDrawerService],\n      ['arc', arcDrawerService],\n      ['point', pointDrawerService],\n      ['model', modelDrawerService],\n      ['box', boxDrawerService],\n      ['corridor', corridorDrawerService],\n      ['cylinder', cylinderDrawerService],\n      ['ellipsoid', ellipsoidDrawerSerice],\n      ['polylineVolume', polylineVolumeDrawerService],\n      ['rectangle', rectangleDrawerService],\n      ['wall', wallDrawerService],\n      ['polylinePrimitive', polylinePrimitiveDrawerService],\n      ['labelPrimitive', labelPrimitiveDrawerService],\n      ['billboardPrimitive', billboardPrimitiveDrawerService],\n      ['pointPrimitive', pointPrimitiveDrawerService],\n      ['html', htmlDrawerService],\n      ['czml', czmlDrawerService],\n\n      ['dynamicEllipse', dynamicEllipseDrawerService],\n      ['dynamicPolyline', dynamicPolylineDrawerService],\n      ['staticCircle', staticCircleDrawerService],\n      ['staticPolyline', staticPolylineDrawerService],\n      ['staticPolygon', staticPolygonDrawerService],\n      ['staticEllipse', staticEllipseDrawerService],\n    ]);\n  }\n\n  init() {\n    this.initValidParams();\n\n    observableMerge(this._updateStream, this.observable).pipe<AcNotification>(takeUntil(this.stopObservable)).subscribe((notification) => {\n      this._computationCache.clear();\n\n      let contextEntity = notification.entity;\n      if (this.store) {\n        contextEntity = this.updateStore(notification);\n      }\n\n      this.context[this.entityName] = contextEntity;\n      this.layerService.getDescriptions().forEach((descriptionComponent) => {\n        switch (notification.actionType) {\n          case ActionType.ADD_UPDATE:\n            descriptionComponent.draw(this.context, notification.id, contextEntity);\n            break;\n          case ActionType.DELETE:\n            descriptionComponent.remove(notification.id);\n            break;\n          default:\n            console.error('[ac-layer] unknown AcNotification.actionType for notification: ' + notification);\n        }\n      });\n    });\n  }\n\n  private updateStore(notification: AcNotification): any {\n    if (notification.actionType === ActionType.DELETE) {\n      this.entitiesStore.delete(notification.id);\n      return undefined;\n    } else {\n      if (this.entitiesStore.has(notification.id)) {\n        const entity = this.entitiesStore.get(notification.id);\n        Object.assign(entity, notification.entity);\n        return entity;\n      } else {\n        this.entitiesStore.set(notification.id, notification.entity);\n        return notification.entity;\n      }\n    }\n  }\n\n  private initValidParams() {\n    if (!this.context) {\n      throw new Error('ac-layer: must initialize [context] ');\n    }\n\n    if (!this.acForRgx.test(this.acFor)) {\n      throw new Error(`ac-layer: Invalid [acFor] syntax. Expected: [acFor]=\"let item of observable\" .Instead received: ${this.acFor}`);\n    }\n    const acForArr = this.acFor.split(' ');\n    this.observable = this.context[acForArr[3]];\n    this.entityName = acForArr[1];\n    if (!this.isObservable(this.observable)) {\n      throw new Error('ac-layer: must initailize [acFor] with rx observable, instead received: ' + this.observable);\n    }\n\n    this.layerService.context = this.context;\n    this.layerService.setEntityName(this.entityName);\n  }\n\n  /** Test for a rxjs Observable */\n  private isObservable(obj: any): boolean {\n    /* check via duck-typing rather than instance of\n     * to allow passing between window contexts */\n    return obj && typeof obj.subscribe === 'function';\n  }\n\n  ngAfterContentInit(): void {\n    this.init();\n  }\n\n  ngOnInit(): void {\n    this.layerService.context = this.context;\n    this.layerService.options = this.options;\n    this.layerService.show = this.show;\n    this.layerService.zIndex = this.zIndex;\n    this._drawerList.forEach((drawer, drawerName) => {\n      const initOptions = this.options ? this.options[drawerName] : undefined;\n      const drawerDataSources = drawer.init(initOptions);\n      // only entities drawers create data sources\n      if (drawerDataSources) {\n        // this.mapLayersService.registerLayerDataSources(drawerDataSources, this.zIndex);\n        // TODO: Check if the following line causes Bad Performance\n        this.layerDrawerDataSources.push(...drawerDataSources);\n      }\n      drawer.setShow(this.show);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.show && !changes.show.firstChange) {\n      const showValue = changes['show'].currentValue;\n      this.layerService.show = showValue;\n      this._drawerList.forEach((drawer) => drawer.setShow(showValue));\n    }\n\n    if (changes.zIndex && !changes.zIndex.firstChange) {\n      const zIndexValue = changes['zIndex'].currentValue;\n      this.layerService.zIndex = zIndexValue;\n      this.mapLayersService.updateAndRefresh(this.layerDrawerDataSources, zIndexValue);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.mapLayersService.removeDataSources(this.layerDrawerDataSources);\n    this.stopObservable.next(true);\n    this.removeAll();\n  }\n\n  getLayerService(): LayerService {\n    return this.layerService;\n  }\n\n  /**\n   * Returns an array of DataSources registered by a drawer of this layer\n   * @return Array of Cesium.DataSources\n   */\n  getLayerDrawerDataSources(): any[] {\n    return this.layerDrawerDataSources;\n  }\n\n  /**\n   * Returns an Array of DataSources of the drawer with the provided DataSource.name\n   * Example: getDataSourceOfDrawer('polyline') returns the dataSource of polyline drawer\n   * @return Array of Cesium.DataSources\n   */\n  getDrawerDataSourcesByName(name: string): any[] {\n    return this.layerDrawerDataSources.filter(d => d.name === name);\n  }\n\n  /**\n   * Returns the store.\n   */\n  getStore(): Map<string, any> {\n    return this.entitiesStore;\n  }\n\n  /**\n   * Remove all the entities from the layer.\n   */\n  removeAll(): void {\n    this.layerService.getDescriptions().forEach((description) => description.removeAll());\n    this.entitiesStore.clear();\n  }\n\n  /**\n   * remove entity from the layer\n   */\n  remove(entityId: string) {\n    this._updateStream.next({id: entityId, actionType: ActionType.DELETE});\n    this.entitiesStore.delete(entityId);\n  }\n\n  /**\n   * add/update entity to/from the layer\n   */\n  updateNotification(notification: AcNotification): void {\n    this._updateStream.next(notification);\n  }\n\n  /**\n   * add/update entity to/from the layer\n   */\n  update(entity: AcEntity, id: string): void {\n    this._updateStream.next({entity, id, actionType: ActionType.ADD_UPDATE});\n  }\n\n  refreshAll(collection: AcNotification[]): void {\n    // TODO make entity interface: collection of type entity not notification\n    observableFrom(collection).subscribe((entity) => this._updateStream.next(entity));\n  }\n}\n","import { Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { BasicDrawerService } from '../drawers/basic-drawer/basic-drawer.service';\nimport { MapLayersService } from '../map-layers/map-layers.service';\n\n/**\n *  Extend this class to create drawing on map components.\n */\nexport class EntityOnMapComponent implements OnInit, OnChanges, OnDestroy {\n  @Input()\n  props: any;\n\n  protected selfPrimitive: any;\n  protected selfPrimitiveIsDraw: boolean;\n  protected dataSources: any;\n\n  constructor(protected _drawer: BasicDrawerService, private mapLayers: MapLayersService) {\n  }\n\n  ngOnInit(): void {\n    this.selfPrimitiveIsDraw = false;\n    const dataSources = this._drawer.init();\n    if (dataSources) {\n      this.dataSources = dataSources;\n      // this.mapLayers.registerLayerDataSources(dataSources, 0);\n    }\n    this.drawOnMap();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const props = changes['props'];\n    if (props.currentValue !== props.previousValue) {\n      this.updateOnMap();\n    }\n  }\n\n  drawOnMap() {\n    this.selfPrimitiveIsDraw = true;\n    return this.selfPrimitive = this._drawer.add(this.props);\n  }\n\n  removeFromMap() {\n    this.selfPrimitiveIsDraw = false;\n    return this._drawer.remove(this.selfPrimitive);\n  }\n\n  updateOnMap() {\n    if (this.selfPrimitiveIsDraw) {\n      return this._drawer.update(this.selfPrimitive, this.props);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.mapLayers.removeDataSources(this.dataSources);\n    this.removeFromMap();\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a billboard implementation.\n *  The element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and BillboardGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/BillboardGraphics.html\n *\n *  __Usage :__\n *  ```\n *    <ac-billboard [props]=\"{\n *      image: image,\n *      position: position,\n *      scale: scale,\n *      color: color,\n *      name: name\n *    }\">;\n *    </ac-billboard>\n *  ```\n */\n\n@Component({\n  selector: 'ac-billboard',\n  template: '',\n})\nexport class AcBillboardComponent extends EntityOnMapComponent {\n\n  constructor(billboardDrawer: BillboardDrawerService, mapLayers: MapLayersService) {\n    super(billboardDrawer, mapLayers);\n  }\n}\n","import { EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { LayerService } from '../layer-service/layer-service.service';\nimport { ComputationCache } from '../computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../cesium-properties/cesium-properties.service';\nimport { AcEntity } from '../../models/ac-entity';\nimport { BasicDrawerService } from '../drawers/basic-drawer/basic-drawer.service';\nimport { IDescription } from '../../models/description';\n\nexport interface OnDrawParams {\n  acEntity: AcEntity;\n  entityId: string;\n  cesiumEntity: any;\n}\n\n/**\n *  the ancestor class for creating components.\n *  extend this class to create desc component.\n */\nexport class BasicDesc implements OnInit, OnDestroy, IDescription {\n  @Input()\n  props: any;\n\n  @Output()\n  onDraw: EventEmitter<OnDrawParams> = new EventEmitter<OnDrawParams>();\n\n  @Output()\n  onRemove: EventEmitter<OnDrawParams> = new EventEmitter<OnDrawParams>();\n\n  protected _cesiumObjectsMap: Map<string, any> = new Map<string, any>();\n  private _propsEvaluateFn: Function;\n  private _propsAssignerFn: Function;\n\n  constructor(protected _drawer: BasicDrawerService,\n              protected _layerService: LayerService,\n              protected _computationCache: ComputationCache,\n              protected _cesiumProperties: CesiumProperties) {\n  }\n\n  protected _propsEvaluator(context: Object): any {\n    return this._propsEvaluateFn(this._computationCache, context);\n  }\n\n  protected _getPropsAssigner(): (cesiumObject: Object, desc: Object) => Object {\n    return (cesiumObject: Object, desc: Object) => this._propsAssignerFn(cesiumObject, desc);\n  }\n\n  getLayerService(): LayerService {\n    return this._layerService;\n  }\n\n  setLayerService(layerService: LayerService) {\n    this._layerService.unregisterDescription(this);\n    this._layerService = layerService;\n    this._layerService.registerDescription(this);\n    this._propsEvaluateFn = this._cesiumProperties.createEvaluator(this.props, this._layerService.cache, true);\n    this._propsAssignerFn = this._cesiumProperties.createAssigner(this.props);\n  }\n\n  ngOnInit(): void {\n    if (!this.props) {\n      console.error('ac-desc components error: [props] input is mandatory');\n    }\n\n    this._layerService.registerDescription(this);\n    this._propsEvaluateFn = this._cesiumProperties.createEvaluator(this.props, this._layerService.cache);\n    this._propsAssignerFn = this._cesiumProperties.createAssigner(this.props);\n  }\n\n  public getCesiumObjectsMap(): Map<string, any> {\n    return this._cesiumObjectsMap;\n  }\n\n  draw(context: any, id: string, entity: AcEntity): void {\n    const cesiumProps = this._propsEvaluator(context);\n\n    if (!this._cesiumObjectsMap.has(id)) {\n      const cesiumObject = this._drawer.add(cesiumProps);\n      this.onDraw.emit({\n        acEntity: entity,\n        cesiumEntity: cesiumObject,\n        entityId: id,\n      });\n      cesiumObject.acEntity = entity; // set the entity on the cesiumObject for later usage\n      this._cesiumObjectsMap.set(id, cesiumObject);\n    } else {\n      const cesiumObject = this._cesiumObjectsMap.get(id);\n      this.onDraw.emit({\n        acEntity: entity,\n        cesiumEntity: cesiumObject,\n        entityId: id,\n      });\n      cesiumObject.acEntity = entity; // set the entity on the cesiumObject for later usage\n      this._drawer.setPropsAssigner(this._getPropsAssigner());\n      this._drawer.update(cesiumObject, cesiumProps);\n    }\n  }\n\n  remove(id: string) {\n    const cesiumObject = this._cesiumObjectsMap.get(id);\n    if (cesiumObject) {\n      this.onRemove.emit({\n        acEntity: cesiumObject.acEntity,\n        cesiumEntity: cesiumObject,\n        entityId: id,\n      });\n      this._drawer.remove(cesiumObject);\n      this._cesiumObjectsMap.delete(id);\n    }\n  }\n\n  removeAll() {\n    this._cesiumObjectsMap.clear();\n    this._drawer.removeAll();\n  }\n\n  ngOnDestroy() {\n    this._layerService.unregisterDescription(this);\n    this.removeAll();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { JsonStringMapper } from 'json-string-mapper';\n\n@Injectable()\nexport class JsonMapper {\n  private _mapper: JsonStringMapper;\n\n  constructor() {\n    this._mapper = new JsonStringMapper();\n  }\n\n  map(expression: string): Map<string, string> {\n    return this._mapper.map(expression);\n  }\n}\n","/**\n * Service for effective assignment.\n */\nexport class SmartAssigner {\n\n  static create(props: string[] = [], allowUndefined: boolean = true): (obj1: Object, obj2: Object) => Object {\n    let fnBody = ``;\n\n    props.forEach(prop => {\n      if (!allowUndefined) {\n        // tslint:disable-next-line:max-line-length\n        fnBody += `if (!(obj1['${prop}'] instanceof Cesium.CallbackProperty) && obj2['${prop}'] !== undefined) { obj1['${prop}'] = obj2['${prop}']; } `;\n      } else {\n        fnBody += `if(!(obj1['${prop}'] instanceof Cesium.CallbackProperty))obj1['${prop}'] = obj2['${prop}']; `;\n      }\n    });\n\n    fnBody += `return obj1`;\n    const assignFn = new Function('obj1', 'obj2', fnBody);\n\n    return function smartAssigner(obj1: Object, obj2: Object) {\n      return assignFn(obj1, obj2);\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { JsonMapper } from '../json-mapper/json-mapper.service';\nimport { Parse } from 'angular2parse';\nimport { SmartAssigner } from '../smart-assigner/smart-assigner.service';\nimport { ComputationCache } from '../computation-cache/computation-cache.service';\n\n@Injectable()\nexport class CesiumProperties {\n  private _assignersCache = new Map<string, (oldVal: Object, newVal: Object) => Object>();\n  private _evaluatorsCache = new Map<string, (cache: ComputationCache, context: Object) => Object>();\n\n  constructor(private _parser: Parse,\n              private _jsonMapper: JsonMapper) {\n  }\n\n  _compile(expression: string, withCache = true): (cache: ComputationCache, context: Object) => Object {\n    const cesiumDesc = {};\n    const propsMap = new Map<string, { expression: string, get: Function }>();\n\n    const resultMap = this._jsonMapper.map(expression);\n\n    resultMap.forEach((resultExpression, prop) => propsMap.set(prop, {\n      expression: resultExpression,\n      get: this._parser.eval(resultExpression)\n    }));\n\n    propsMap.forEach((value, prop) => {\n      if (withCache) {\n        cesiumDesc[prop || 'undefined'] = `cache.get(\\`${value.expression}\\`, () => propsMap.get('${prop}').get(context))`;\n      } else {\n        cesiumDesc[prop || 'undefined'] = `propsMap.get('${prop}').get(context)`;\n      }\n    });\n\n    const fnBody = `return ${JSON.stringify(cesiumDesc).replace(/\"/g, '')};`;\n    const getFn = new Function('propsMap', 'cache', 'context', fnBody);\n\n    return function evaluateCesiumProps(cache: ComputationCache, context: Object): Object {\n      return getFn(propsMap, cache, context);\n    };\n  }\n\n  _build(expression: string): (oldVal: Object, newVal: Object) => Object {\n    const props = Array.from(this._jsonMapper.map(expression).keys());\n    const smartAssigner = SmartAssigner.create(props);\n\n    return function assignCesiumProps(oldVal: Object, newVal: Object) {\n      return smartAssigner(oldVal, newVal);\n    };\n  }\n\n  createEvaluator(expression: string, withCache = true, newEvaluator = false): (cache: ComputationCache, context: Object) => Object {\n    if (!newEvaluator && this._evaluatorsCache.has(expression)) {\n      return this._evaluatorsCache.get(expression);\n    }\n\n    const evaluatorFn = this._compile(expression, withCache);\n    this._evaluatorsCache.set(expression, evaluatorFn);\n\n    return evaluatorFn;\n  }\n\n  createAssigner(expression: string): (oldVal: Object, newVal: Object) => Object {\n    if (this._assignersCache.has(expression)) {\n      return this._assignersCache.get(expression);\n    }\n\n    const assignFn = this._build(expression);\n    this._assignersCache.set(expression, assignFn);\n\n    return assignFn;\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\n\n/**\n *  This is a billboard implementation.\n *  The element must be a child of ac-layer element.\n *  The properties of props are the same as the properties of Entity and BillboardGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/BillboardGraphics.html\n *\n *  __Usage :__\n *  ```\n *    <ac-billboard-desc props=\"{\n *      image: track.image,\n *      position: track.position,\n *      scale: track.scale,\n *      color: track.color,\n *      name: track.name\n *    }\">\n *    </ac-billboard-desc>\n *  ```\n */\n\n@Component({\n  selector: 'ac-billboard-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcBillboardDescComponent)}],\n})\nexport class AcBillboardDescComponent extends BasicDesc {\n\n  constructor(billboardDrawer: BillboardDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(billboardDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\n\n/**\n *  This is an ellipse implementation.\n *  The element must be a child of ac-layer element.\n *  _Set `height` prop for performance enhancement_\n *  The properties of props are the same as the properties of Entity and EllipseGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipseGraphics.html\n *\n *  __Usage :__\n *  ```\n *    <ac-ellipse-desc props=\"{\n *      position: data.position,\n *      semiMajorAxis:250000.0,\n *      semiMinorAxis:400000.0,\n *      height: 0\n *    }\">\n *    </ac-ellipse-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-ellipse-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcEllipseDescComponent)}],\n})\nexport class AcEllipseDescComponent extends BasicDesc {\n  constructor(ellipseDrawer: EllipseDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { PolylineDrawerService } from '../../services/drawers/polyline-drawer/polyline-drawer.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\n\n/**\n *  This is a polyline implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and PolylineGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PolylineGraphics.html\n *\n *  __Usage:__\n *  ```\n *    <ac-polyline-desc props=\"{\n *      width : polyline.width,\n *      positions: polyline.positions,\n *      material: polyline.material\n *    }\">\n *    </ac-polyline-desc>\n * ```\n */\n@Component({\n  selector: 'ac-polyline-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcPolylineDescComponent)}],\n})\nexport class AcPolylineDescComponent extends BasicDesc {\n\n  constructor(dynamicPolylineDrawerService: PolylineDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(dynamicPolylineDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * @example\n * <ac-label-desc props=\"{\n *            position: track.position,\n *            pixelOffset : [-15,20] | pixelOffset,\n *            text: track.name,\n *            font: '15px sans-serif'\n *    }\">\n * </ac-label-desc>\n */\n@Pipe({\n  name: 'pixelOffset'\n})\nexport class PixelOffsetPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return new Cesium.Cartesian2(value[0], value[1]);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'radiansToDegrees'\n})\nexport class RadiansToDegreesPipe implements PipeTransform {\n\n  transform(value: any, args?: any): number {\n    return (360 - Math.round(180 * value / Math.PI)) % 360;\n  }\n\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\n\n/**\n *  This is a label implementation.\n *  The ac-label element must be a child of ac-layer element.\n *  The properties of props are the same as the properties of Entity and LabelGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/LabelGraphics.html\n *\n *  __Usage :__\n *  ```\n *    <ac-label-desc props=\"{\n *      position: track.position,\n *      pixelOffset : [-15,20] | pixelOffset,\n *      text: track.name,\n *      font: '15px sans-serif'\n *    }\">\n *    </ac-label-desc>\n *  ```\n */\n\n@Component({\n  selector: 'ac-label-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcLabelDescComponent)}],\n})\nexport class AcLabelDescComponent extends BasicDesc {\n\n  constructor(labelDrawer: LabelDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(labelDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: []\n})\nexport class UtilsModule {\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\n\n/**\n *  This is a circle implementation.\n *  The element must be a child of ac-layer element.\n *  semiMajorAxis ans semiMinorAxis are replaced with radius property.\n *  All other properties of props are the same as the properties of Entity and EllipseGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipseGraphics.html\n *\n *__Usage :__\n *  ```\n *    <ac-circle-desc props=\"{\n *      position: data.position,\n *      radius: 5\n *      granularity:0.08 // Optional\n *    }\">\n *    </ac-circle-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-circle-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcCircleDescComponent)}],\n})\nexport class AcCircleDescComponent extends BasicDesc {\n  constructor(ellipseDrawer: EllipseDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n  protected _propsEvaluator(context: Object): any {\n    const cesiumProps = super._propsEvaluator(context);\n\n    cesiumProps.semiMajorAxis = cesiumProps.radius;\n    cesiumProps.semiMinorAxis = cesiumProps.radius;\n    delete cesiumProps.radius;\n\n    return cesiumProps;\n  }\n\n  protected _getPropsAssigner(): (cesiumObject: Object, desc: Object) => Object {\n    return (cesiumObject: Object, desc: Object) => Object.assign(cesiumObject, desc);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\n\n/**\n *  This is an implementation of an arc.\n *  The element must be a child of ac-layer element.\n *  An arc is not cesium natively implemented and therefore it's API doesn't appear anywhere\n *\n *  __Usage :__\n *  ```\n *    <ac-arc-desc props=\"{\n *          center: arc.center,\n *          angle: arc.angle,\n *          delta: arc.delta,\n *          radius: arc.radius,\n *          color : arc.color - The color should be Cesium.Color type\n *    }\">\n *    </ac-arc-desc>\n *    ```\n *\n *    description of the props :\n *    center - The arc is a section of an outline of a circle, This is the center of the circle\n *    angle - the initial angle of the arc in radians\n *    delta - the spreading of the arc,\n *    radius - the distance from the center to the arc\n *\n *    for example :\n *    angle - 0\n *    delta - Ï\n *\n *    will draw an half circle\n */\n\n@Component({\n  selector: 'ac-arc-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcArcDescComponent)}],\n})\nexport class AcArcDescComponent extends BasicDesc {\n\n  constructor(arcDrawer: ArcDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(arcDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n}\n","/**\n * Angular Cesium parent entity, all entities should inherit from it.\n * ```typescript\n * entity= new AcEntity({\n *  \tid: 0,\n *  \tname: 'click me',\n *  \tposition: Cesium.Cartesian3.fromRadians(0.5, 0.5),\n * });\n * ```\n */\nexport class AcEntity {\n\n  /**\n   * Creates entity from a json\n   * @param json entity object\n   * @returns entity as AcEntity\n   */\n  static create(json?: any) {\n    if (json) {\n      return Object.assign(new AcEntity(), json);\n    }\n    return new AcEntity();\n  }\n\n  /**\n   * Creates entity from a json\n   * @param json (Optional) entity object\n   */\n  constructor(json?: any) {\n    Object.assign(this, json);\n  }\n}\n","import { ActionType } from './action-type.enum';\nimport { AcEntity } from './ac-entity';\n\n/**\n * Interface of  Angular2Cesium notification.\n * ac-layer receives an observer of AcNotifications\n */\nexport interface AcNotification {\n  id: string;\n  entity?: AcEntity;\n  actionType: ActionType;\n}\n\nexport class AcNotification {\n  id: string;\n  entity?: AcEntity;\n  actionType: ActionType;\n}\n","export enum MapLayerProviderOptions {\n  ArcGisMapServer = Cesium.ArcGisMapServerImageryProvider,\n  WebMapTileService = Cesium.WebMapTileServiceImageryProvider,\n  MapTileService = Cesium.createTileMapServiceImageryProvider,\n  WebMapService = Cesium.WebMapServiceImageryProvider,\n  SingleTileImagery = Cesium.SingleTileImageryProvider,\n  OpenStreetMap = Cesium.createOpenStreetMapImageryProvider,\n  BingMaps = Cesium.BingMapsImageryProvider,\n  GoogleEarthEnterpriseMaps = Cesium.GoogleEarthEnterpriseMapsProvider,\n  MapBox = Cesium.MapboxImageryProvider,\n  UrlTemplateImagery = Cesium.UrlTemplateImageryProvider,\n  OFFLINE = null,\n}\n\n","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { CesiumService } from '../../services/cesium/cesium.service';\nimport { Checker } from '../../utils/checker';\nimport { MapLayerProviderOptions } from '../../models';\n\n/**\n *  This component is used for adding a map provider service to the map (ac-map)\n *  options according to selected map provider MapLayerProviderOptions enum.\n *  additional setting can be done with cesium imageryLayer (exposed as class member)\n *  check out: https://cesiumjs.org/Cesium/Build/Documentation/ImageryLayer.html\n *  and: https://cesiumjs.org/Cesium/Build/Documentation/ImageryLayerCollection.html\n *\n *\n *  __Usage :__\n *  ```\n *    <ac-map-layer-provider [options]=\"optionsObject\" [provider]=\"myProvider\">\n *    </ac-map-layer-provider>\n *  ```\n */\n@Component({\n  selector: 'ac-map-layer-provider',\n  template: '',\n})\nexport class AcMapLayerProviderComponent implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * refer to cesium docs for details https://cesiumjs.org/Cesium/Build/Documentation/ImageryProvider.html\n   */\n  @Input()\n  options: { url?: string } = {};\n\n  /**\n   * the provider\n   */\n  @Input()\n  provider: any = MapLayerProviderOptions.OFFLINE;\n\n  /**\n   * index (optional) - The index to add the layer at. If omitted, the layer will added on top of all existing layers.\n   */\n  @Input()\n  index: Number;\n\n  /**\n   * show (optional) - Determines if the map layer is shown.\n   */\n  @Input()\n  show = true;\n\n  /**\n   * The alpha blending value of this layer: 0.0 to 1.0\n   */\n  @Input()\n  alpha = 1.0;\n\n  /**\n   * The brightness of this layer: 0.0 to 1.0\n   */\n  @Input()\n  brightness = 1.0;\n\n  /**\n   * The contrast of this layer: 0.0 to 1.0\n   */\n  @Input()\n  contrast = 1.0;\n\n  public imageryLayer: any;\n  public imageryLayersCollection: any;\n  public layerProvider: any;\n\n  constructor(private cesiumService: CesiumService) {\n    this.imageryLayersCollection = this.cesiumService.getScene().imageryLayers;\n  }\n\n  private createOfflineMapProvider() {\n    return Cesium.createTileMapServiceImageryProvider({\n      url: Cesium.buildModuleUrl('Assets/Textures/NaturalEarthII')\n    });\n  }\n\n  ngOnInit() {\n    if (!Checker.present(this.options.url) && this.provider !== MapLayerProviderOptions.OFFLINE) {\n      throw new Error('options must have a url');\n    }\n    switch (this.provider) {\n      case MapLayerProviderOptions.WebMapService:\n      case MapLayerProviderOptions.WebMapTileService:\n      case MapLayerProviderOptions.ArcGisMapServer:\n      case MapLayerProviderOptions.SingleTileImagery:\n      case MapLayerProviderOptions.BingMaps:\n      case MapLayerProviderOptions.GoogleEarthEnterpriseMaps:\n      case MapLayerProviderOptions.MapBox:\n      case MapLayerProviderOptions.UrlTemplateImagery:\n        this.layerProvider = new this.provider(this.options);\n        break;\n      case MapLayerProviderOptions.MapTileService:\n      case MapLayerProviderOptions.OpenStreetMap:\n        this.layerProvider = this.provider(this.options);\n        break;\n      case MapLayerProviderOptions.OFFLINE:\n        this.layerProvider = this.createOfflineMapProvider();\n        break;\n      default:\n        console.log('ac-map-layer-provider: [provider] wasn\\'t found. setting OFFLINE provider as default');\n        this.layerProvider = this.createOfflineMapProvider();\n        break;\n    }\n    if (this.show) {\n      this.imageryLayer = this.imageryLayersCollection.addImageryProvider(this.layerProvider, this.index);\n      this.imageryLayer.alpha = this.alpha;\n      this.imageryLayer.contrast = this.contrast;\n      this.imageryLayer.brightness = this.brightness;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['show'] && !changes['show'].isFirstChange()) {\n      const showValue = changes['show'].currentValue;\n      if (showValue) {\n        if (this.imageryLayer) {\n          this.imageryLayersCollection.add(this.imageryLayer, this.index);\n        } else {\n          this.imageryLayer = this.imageryLayersCollection.addImageryProvider(this.layerProvider, this.index);\n          this.imageryLayer.alpha = this.alpha;\n          this.imageryLayer.contrast = this.contrast;\n          this.imageryLayer.brightness = this.brightness;\n        }\n      } else if (this.imageryLayer) {\n        this.imageryLayersCollection.remove(this.imageryLayer, false);\n      }\n    }\n\n    if (changes['alpha'] && !changes['alpha'].isFirstChange() && this.imageryLayer) {\n      this.imageryLayer.alpha = this.alpha;\n    }\n    if (changes['contrast'] && !changes['contrast'].isFirstChange() && this.imageryLayer) {\n      this.imageryLayer.contrast = this.contrast;\n    }\n    if (changes['brightness'] && !changes['brightness'].isFirstChange() && this.imageryLayer) {\n      this.imageryLayer.brightness = this.brightness;\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.imageryLayer) {\n      this.imageryLayersCollection.remove(this.imageryLayer, true);\n    }\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\n\n/**\n *  This is a point implementation.\n *  The ac-label element must be a child of ac-layer element.\n *  The properties of props are the same as the properties of Entity and PointGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PointGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-point-desc props=\"{\n *     pixelSize : point.pixelSize, //optional\n *     position : point.positions,\n *     color : point.color  //optional\n *   }\">\n *   </ac-point-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-point-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcPointDescComponent)}],\n})\nexport class AcPointDescComponent extends BasicDesc {\n\n  constructor(pointDrawerService: PointDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(pointDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a label implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and LabelGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/LabelGraphics.html\n *\n *  __Usage:__\n *  ```\n *  <ac-label [props]=\"{\n *    position: position,\n *    text: 'labelText',\n *    font: '30px sans-serif',\n *    fillColor : aquamarine\n *  }\">\n *  </ac-label>;\n *  ```\n */\n\n@Component({\n  selector: 'ac-label',\n  template: '',\n})\nexport class AcLabelComponent extends EntityOnMapComponent {\n\n  constructor(labelDrawer: LabelDrawerService, mapLayers: MapLayersService) {\n    super(labelDrawer, mapLayers);\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\nimport { PolylineDrawerService } from '../../services/drawers/polyline-drawer/polyline-drawer.service';\n\n/**\n *  This is a polyline implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Polyline Primitive:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Polyline.html\n *\n *  __Usage:__\n *  ```\n *  <ac-polyline [props]=\"{\n *    position: position,\n *    text: 'labelText',\n *    font: '30px sans-serif'\n *    color: Cesium.Color.GREEN\n *  }\">;\n *  </ac-polyline>\n *  ```\n */\n\n@Component({\n  selector: 'ac-polyline',\n  template: '',\n})\nexport class AcPolylineComponent extends EntityOnMapComponent {\n\n  constructor(polylineDrawer: PolylineDrawerService, mapLayers: MapLayersService) {\n    super(polylineDrawer, mapLayers);\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is an ellipse implementation.\n *  The element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and EllipseGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipseGraphics.html\n *\n *  __Usage:__\n *  ```\n *  <ac-ellipse [props]=\"{\n *    position: position,\n *    semiMajorAxis:40000.0,\n *    semiMinorAxis:25000.0,\n *    rotation : 0.785398\n *  }\">\n *  </ac-ellipse>\n *  ```\n */\n\n@Component({\n  selector: 'ac-ellipse',\n  template: '',\n})\nexport class AcEllipseComponent extends EntityOnMapComponent {\n\n  constructor(ellipseDrawer: EllipseDrawerService, mapLayers: MapLayersService) {\n    super(ellipseDrawer, mapLayers);\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a point implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and PointGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PointGraphics.html\n *\n *  __Usage:__\n *  ```\n *  <ac-point [props]=\"{\n *    position: position,\n *    width: 3\n *  }\">\n *  </ac-point>\n *  ```\n */\n\n@Component({\n  selector: 'ac-point',\n  template: '',\n})\nexport class AcPointComponent extends EntityOnMapComponent {\n\n  constructor(pointDrawer: PointDrawerService, mapLayers: MapLayersService) {\n    super(pointDrawer, mapLayers);\n  }\n}\n","import { Component, DoCheck, ElementRef, Input, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { CesiumService } from '../../services/cesium/cesium.service';\n\n/**\n *  This is an html implementation.\n *  The ac-html element must be a child of ac-map element.\n *  __Usage:__\n *  ```\n *  <ac-html [props]=\"{position: position, show: true}\">;\n *    <p>html element</p>\n *  </ac-html>\n *  ```\n */\n\n@Component({\n  selector: 'ac-html',\n  template: `<ng-content></ng-content>`,\n  styles: [`:host {\n                position: absolute;\n                z-index: 100;\n\t\t\t\t}`]\n})\nexport class AcHtmlComponent implements DoCheck, OnDestroy, OnInit {\n\n\n  @Input() props: any;\n  private isDraw = false;\n  preRenderEventListener: () => void;\n\n  constructor(private cesiumService: CesiumService, private elementRef: ElementRef, private renderer: Renderer2) {\n  }\n\n  setScreenPosition(screenPosition: any) {\n    if (screenPosition) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'top', `${screenPosition.y}px`);\n      this.renderer.setStyle(this.elementRef.nativeElement, 'left', `${screenPosition.x}px`);\n    }\n  }\n\n  ngOnInit(): void {\n    this.cesiumService.getMap().getMapContainer().appendChild(this.elementRef.nativeElement);\n    if (this.props.show === false) {\n      this.hideElement();\n    }\n  }\n\n  remove() {\n    if (this.isDraw) {\n      this.isDraw = false;\n      this.cesiumService.getScene().preRender.removeEventListener(this.preRenderEventListener);\n      this.hideElement();\n    }\n  }\n\n  hideElement() {\n    this.renderer.setStyle(this.elementRef.nativeElement, 'display', `none`);\n  }\n\n  add() {\n    if (!this.isDraw) {\n      this.isDraw = true;\n      this.preRenderEventListener = () => {\n        const screenPosition = Cesium.SceneTransforms.wgs84ToWindowCoordinates(this.cesiumService.getScene(),\n          this.props.position);\n        this.setScreenPosition(screenPosition);\n      };\n      this.renderer.setStyle(this.elementRef.nativeElement, 'display', `block`);\n      this.cesiumService.getScene().preRender.addEventListener(this.preRenderEventListener);\n    }\n  }\n\n  ngDoCheck() {\n    if (this.props.show === undefined || this.props.show) {\n      this.add();\n    } else {\n      this.remove();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.remove();\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a circle implementation.\n *  The element must be a child of ac-map element.\n *  semiMajorAxis ans semiMinorAxis are replaced with radius property.\n *  All other properties of props are the same as the properties of Entity and EllipseGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipseGraphics.html\n *\n *  __Usage:__\n *  ```\n *  <ac-circle [props]=\"{\n *    position: position,\n *    radius:40000.0,\n *    granularity:0.03,\n *  }\">\n *  </ac-circle>\n *  ```\n */\n\n@Component({\n  selector: 'ac-circle',\n  template: '',\n})\nexport class AcCircleComponent extends EntityOnMapComponent {\n\n  constructor(ellipseDrawerService: EllipseDrawerService, mapLayers: MapLayersService) {\n    super(ellipseDrawerService, mapLayers);\n  }\n\n  private updateEllipseProps() {\n    this.props.semiMajorAxis = this.props.radius;\n    this.props.semiMinorAxis = this.props.radius;\n    this.props.rotation = 0.0;\n  }\n\n  drawOnMap() {\n    this.updateEllipseProps();\n    super.drawOnMap();\n  }\n\n  updateOnMap() {\n    this.updateEllipseProps();\n    super.updateOnMap();\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is an implementation of an arc.\n *  The element must be a child of ac-map element.\n *  An arc is not natively implemented in cesium.\n *\n *  __Usage :__\n *  ```\n *    <ac-arc-desc geometryProps=\"{\n *          center: arc.center,\n *          angle: arc.angle,\n *          delta: arc.delta,\n *          radius: arc.radius\n *       }\"\n *       instanceProps=\"{\n *          attributes: arc.attributes\n *       }\"\n *       primitiveProps=\"{\n *          appearance: arc.appearance\n *       }\">\n *    </ac-arc-desc>\n *    ```\n */\n\n@Component({\n  selector: 'ac-arc',\n  template: '',\n})\nexport class AcArcComponent extends EntityOnMapComponent implements OnChanges {\n\n  @Input()\n  geometryProps: any;\n  @Input()\n  instanceProps: any;\n  @Input()\n  primitiveProps: any;\n\n  constructor(arcDrawer: ArcDrawerService, mapLayers: MapLayersService) {\n    super(arcDrawer, mapLayers);\n  }\n\n  updateOnMap() {\n    if (this.selfPrimitiveIsDraw) {\n      this.removeFromMap();\n      this.drawOnMap();\n    }\n  }\n\n  drawOnMap() {\n    this.selfPrimitiveIsDraw = true;\n    return this.selfPrimitive = this._drawer.add(this.geometryProps, this.instanceProps, this.primitiveProps);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const geometryProps = changes['geometryProps'];\n    const instanceProps = changes['instanceProps'];\n    const primitiveProps = changes['primitiveProps'];\n    if (geometryProps.currentValue !== geometryProps.previousValue ||\n      instanceProps.currentValue !== instanceProps.previousValue ||\n      primitiveProps.currentValue !== primitiveProps.previousValue) {\n      this.updateOnMap();\n    }\n  }\n}\n","import { Component, forwardRef, OnInit } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\n\n/**\n *  This is a polygon implementation.\n *  The properties of props are the same as the properties of Entity and PolygonGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PolygonGraphics.html\n *\n *  __Usage:__\n *  ```\n *    <ac-polygon-desc props=\"{\n *      hierarchy: polygon.hierarchy,\n *      material: polygon.material,\n *      height: polygon.height\n *    }\">\n *    </ac-polygon-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-polygon-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcPolygonDescComponent)}],\n})\nexport class AcPolygonDescComponent extends BasicDesc implements OnInit {\n\n  constructor(polygonDrawer: PolygonDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(polygonDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { PlonterService } from '../../services/plonter/plonter.service';\nimport { CoordinateConverter } from '../../services/coordinate-converter/coordinate-converter.service';\n\n@Component(\n  {\n    selector: 'ac-default-plonter',\n    template: `\n      <ac-html *ngIf=\"plonterService.plonterShown\" [props]=\"{\n        position: plonterPosition\n      }\">\n        <div class=\"plonter-context-menu\">\n          <div *ngFor=\"let entity of plonterService.entitesToPlonter\">\n            <div class=\"plonter-item\" (click)=\"chooseEntity(entity)\">{{ entity?.name || entity?.id }}\n            </div>\n          </div>\n        </div>\n      </ac-html>\n    `,\n    styles: [`\n        .plonter-context-menu {\n            background-color: rgba(250, 250, 250, 0.8);\n            box-shadow: 1px 1px 5px 0px rgba(0, 0, 0, 0.15);\n        }\n\n        .plonter-item {\n            cursor: pointer;\n            padding: 2px 15px;\n            text-align: start;\n        }\n\n        .plonter-item:hover {\n            background-color: rgba(0, 0, 0, 0.15);\n        }\n\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [CoordinateConverter],\n  }\n)\nexport class AcDefaultPlonterComponent implements OnInit {\n\n  constructor(public plonterService: PlonterService,\n              private cd: ChangeDetectorRef,\n              private geoConverter: CoordinateConverter) {\n  }\n\n  ngOnInit() {\n    this.plonterService.plonterChangeNotifier.subscribe(() => this.cd.detectChanges());\n  }\n\n  get plonterPosition() {\n    if (this.plonterService.plonterShown) {\n      const screenPos = this.plonterService.plonterClickPosition.endPosition;\n      return this.geoConverter.screenToCartesian3(screenPos);\n    }\n  }\n\n  chooseEntity(entity: any) {\n    this.plonterService.resolvePlonter(entity);\n  }\n}\n","import { Component } from '@angular/core';\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a polygon implementation.\n *  The ac-label element must be a child of ac-map element.\n *  _Set `height` prop for performance enhancement_\n *  The properties of props are the same as the properties of Entity and PolygonGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PolygonGraphics.html\n *\n *  __Usage:__\n *  ```\n *    <ac-polygon props=\"{\n *      hierarchy: polygon.hierarchy,\n *      material: polygon.material,\n *      height: polygon.height\n *    }\">\n *    </ac-polygon>\n *  ```\n */\n@Component({\n  selector: 'ac-polygon',\n  template: '',\n})\nexport class AcPolygonComponent extends EntityOnMapComponent {\n  constructor(polygonDrawer: PolygonDrawerService, mapLayers: MapLayersService) {\n    super(polygonDrawer, mapLayers);\n  }\n}\n","import { Input, OnInit } from '@angular/core';\nimport { BasicDesc } from '../basic-desc/basic-desc.service';\nimport { LayerService } from '../layer-service/layer-service.service';\nimport { ComputationCache } from '../computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../cesium-properties/cesium-properties.service';\nimport { StaticPrimitiveDrawer } from '../drawers/static-dynamic/static-primitive-drawer/static-primitive-drawer.service';\nimport { AcEntity } from '../../models/ac-entity';\n\nexport class BasicStaticPrimitiveDesc extends BasicDesc implements OnInit {\n  @Input()\n  geometryProps: any;\n  @Input()\n  instanceProps: any;\n  @Input()\n  primitiveProps: any;\n\n  private _geometryPropsEvaluator: Function;\n  private _instancePropsEvaluator: Function;\n  private _primitivePropsEvaluator: Function;\n\n  constructor(protected _staticPrimitiveDrawer: StaticPrimitiveDrawer, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(_staticPrimitiveDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n  ngOnInit(): void {\n    this._layerService.registerDescription(this);\n\n    this._geometryPropsEvaluator = this._cesiumProperties.createEvaluator(this.geometryProps);\n    this._instancePropsEvaluator = this._cesiumProperties.createEvaluator(this.instanceProps);\n    this._primitivePropsEvaluator = this._cesiumProperties.createEvaluator(this.primitiveProps);\n  }\n\n  draw(context: any, id: string, entity: AcEntity): any {\n    const geometryProps = this._geometryPropsEvaluator(this._computationCache, context);\n    const instanceProps = this._instancePropsEvaluator(this._computationCache, context);\n    const primitiveProps = this._primitivePropsEvaluator(this._computationCache, context);\n\n    if (!this._cesiumObjectsMap.has(id)) {\n      const primitive = this._staticPrimitiveDrawer.add(geometryProps, instanceProps, primitiveProps);\n      primitive.acEntity = entity; // set the entity on the primitive for later usage\n      this._cesiumObjectsMap.set(id, primitive);\n    } else {\n      const primitive = this._cesiumObjectsMap.get(id);\n      this._staticPrimitiveDrawer.update(primitive, geometryProps, instanceProps, primitiveProps);\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { BasicStaticPrimitiveDesc } from '../../../services/basic-primitive-desc/basic-static-primitive-desc.service';\nimport { StaticEllipseDrawerService } from '../../../services/drawers/static-dynamic/ellipse-drawer/ellipse-drawer.service';\n\n/**\n *\n * @deprecated use ac-ellipse-desc instead\n *\n *  This is a static (position, color, etc.. are not updated) implementation of an ellipse.\n *  __usage:__\n *  ```\n *  &lt;ac-static-ellipse-desc-desc\n *      geometryProps=\"{\n *          center: ellipse.geometry.center,\n *          semiMajorAxis: ellipse.geometry.semiMajorAxis,\n *          semiMinorAxis: ellipse.geometry.semiMinorAxis,\n *          height: ellipse.geometry.height,\n *          rotation: ellipse.geometry.rotation\n *      }\"\n *      instanceProps=\"{\n *          attributes: ellipse.attributes //Optional\n *      }\"\n *      primitiveProps=\"{\n *          appearance: ellipse.appearance //Optional\n *      }\"&gt;\n *  &lt;/ac-static-ellipse-desc-desc&gt;\n *  ```\n */\n@Component({\n  selector: 'ac-static-ellipse-desc',\n  template: ''\n})\nexport class AcStaticEllipseDescComponent extends BasicStaticPrimitiveDesc {\n  constructor(ellipseDrawer: StaticEllipseDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { BasicDesc } from '../../../services/basic-desc/basic-desc.service';\nimport { DynamicEllipseDrawerService } from '../../../services/drawers/static-dynamic/ellipse-drawer/dynamic-ellipse-drawer.service';\n\n/**\n *\n *\n *  This is a dynamic(position is updatable) implementation of an ellipse.\n *\n *  __Usage :__\n *  ```\n *    &lt;ac-dynamic-ellipse-desc props=\"{\n *      center: data.position,\n *      semiMajorAxis:250000.0,\n *      semiMinorAxis:400000.0,\n *      rotation : 0.785398,\n *      width:3, // Optional\n *      granularity:0.08 // Optional\n *      }\"&gt;\n *    \">\n *    &lt;/ac-dynamic-ellipse-desc&gt;\n *  ```\n *  __param:__ {Cesium.Cartesian3} center\n *  __param:__ {number} semiMajorAxis\n *  __param:__ {number} semiMinorAxis\n *  __param:__ {number} rotation\n *   __param__: {number} [1] width\n *   __param__: {number} [0.003] granularity\n */\n@Component({\n  selector: 'ac-dynamic-ellipse-desc',\n  template: '',\n})\nexport class AcDynamicEllipseDescComponent extends BasicDesc {\n  constructor(ellipseDrawer: DynamicEllipseDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","// tslint:disable\nimport { Component } from '@angular/core';\nimport { BasicDesc } from '../../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { DynamicPolylineDrawerService } from '../../../services/drawers/static-dynamic/dynamic-polyline-drawer/dynamic-polyline-drawer.service';\n\n// tslint:enable\n/**\n * @deprecated use ac-polylinc-desc instead\n *\n *  This is a dynamic(position is updatable) implementation of an polyline.\n *  The ac-dynamic-polyline-desc element must be a child of ac-layer element.\n *  __Usage:__\n *  ```\n *    &lt;ac-dynamic-polyline-desc props=\"{width : polyline.width, //optional\n *                                      positions: polyline.positions,\n *                                      material: polyline.material //optional\n *                                      }\"\n *    &gt;\n *    &lt;/ac-dynamic-polyline-desc&gt;\n * ```\n */\n@Component({\n  selector: 'ac-dynamic-polyline-desc',\n  template: ''\n})\nexport class AcDynamicPolylineDescComponent extends BasicDesc {\n\n  constructor(dynamicPolylineDrawerService: DynamicPolylineDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(dynamicPolylineDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","// tslint:disable\nimport { Component } from '@angular/core';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { BasicStaticPrimitiveDesc } from '../../../services/basic-primitive-desc/basic-static-primitive-desc.service';\nimport { StaticPolygonDrawerService } from '../../../services/drawers/static-dynamic/static-polygon-drawer/polygon-drawer.service';\n\n// tslint:enable\n/**\n * @deprecated use ac-ploygon-desc instead\n *\n *  This is a static (position, color, etc.. are not updated) implementation of a polygon.\n *  __Usage:__\n *  ```\n *    &lt;ac-static-polygon-desc\n *          geometryProps=\"{\n *                     polygonHierarchy: polygon.geometry.polygonHierarchy,\n *                     height: polygon.geometry.height,\n *                     granularity: polygon.geometry.granularity\n *                 }\"\n *          instanceProps=\"{\n *                     attributes: polygon.attributes\n *                 }\"\n *          primitiveProps=\"{\n *                     appearance: polygon.appearance\n *                 }\"\n *    &gt;&lt;/ac-static-polygon-desc&gt;\n *    ```\n */\n@Component({\n  selector: 'ac-static-polygon-desc',\n  template: '',\n})\nexport class AcStaticPolygonDescComponent extends BasicStaticPrimitiveDesc {\n  constructor(polygonDrawer: StaticPolygonDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(polygonDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { BasicStaticPrimitiveDesc } from '../../../services/basic-primitive-desc/basic-static-primitive-desc.service';\nimport { StaticCircleDrawerService } from '../../../services/drawers/static-dynamic/static-circle-drawer/static-circle-drawer.service';\n\n/**\n * @deprecated use ac-circle-desc\n *\n *  This is a static (position, color, etc.. are not updated) implementation of an circle.\n *  __usage:__\n *  ```\n *    &lt;ac-static-circle-desc\n *      geometryProps=\"{\n *          center: circle.geometry.center,\n *          radius: circle.geometry.radius,\n *      }\"\n *      instanceProps=\"{\n *          attributes: circle.attributes //Optional\n *      }\"\n *      primitiveProps=\"{\n *          appearance: circle.appearance //Optional\n *      }\"&gt;\n *    &lt;/ac-static-circle-desc&gt;\n *    ```\n */\n@Component({\n  selector: 'ac-static-circle',\n  template: ''\n})\nexport class AcStaticCircleDescComponent extends BasicStaticPrimitiveDesc {\n  constructor(staticCircleDrawer: StaticCircleDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(staticCircleDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { BasicDesc } from '../../../services/basic-desc/basic-desc.service';\nimport { DynamicEllipseDrawerService } from '../../../services/drawers/static-dynamic/ellipse-drawer/dynamic-ellipse-drawer.service';\n\n/**\n * @deprecated use ac-circle-desc instead\n *\n *  This is a dynamic(position is updatable) implementation of an circle.\n __Usage :__\n *  ```\n *    &lt;ac-dynamic-circle-desc props=\"{\n *      center: data.position,\n *      radius: 5\n *      rotation : 0.785398,\n *      width:3, // Optional\n *      granularity:0.08 // Optional\n *      }\"&gt;\n *    &lt;/ac-dynamic-circle-desc&gt;\n *  ```\n *\n *  __param__: {Cesium.Cartesian3} center\n *   __param__: {number} rotation\n *   __param__: {number} radius in meters\n *   __param__: {number} [1] width\n *   __param__: {number} [0.003] granularity\n */\n@Component({\n  selector: 'ac-dynamic-circle-desc',\n  template: ''\n})\nexport class AcDynamicCircleDescComponent extends BasicDesc {\n  constructor(ellipseDrawer: DynamicEllipseDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n  protected _propsEvaluator(context: Object): any {\n    const cesiumProps = super._propsEvaluator(context);\n\n    cesiumProps.semiMajorAxis = cesiumProps.radius;\n    cesiumProps.semiMinorAxis = cesiumProps.radius;\n\n    return cesiumProps;\n  }\n}\n","// tslint:disable\nimport { Component } from '@angular/core';\nimport { StaticPolylineDrawerService } from '../../../services/drawers/static-dynamic/static-polyline-drawer/static-polyline-drawer.service';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { BasicStaticPrimitiveDesc } from '../../../services/basic-primitive-desc/basic-static-primitive-desc.service';\n\n// tslint:enable\n\n/**\n * @deprecated use ac-ployline-desc instead\n *\n *  This is a static implementation of an polyline.\n *  __usage:__\n *  ```\n *    &ltac-static-polyline-desc\n *            geometryProps=\"{\n *            \twidth: poly.geometry.width,\n *            \tpositions: poly.geometry.positions\n *            }\"\n *            instanceProps=\"{\n *              attributes: {\n *                  Cesium.ColorGeometryInstanceAttribute.fromColor(Cesium.Color.fromRandom())\n *              }\n *            }\"\n *            primitiveProps=\"{\n *              appearance: new Cesium.PolylineColorAppearance()\n *    }\"&gt&lt/ac-static-polyline-desc&gt\n *  ```\n */\n@Component({\n  selector: 'ac-static-polyline-desc',\n  template: ''\n})\nexport class AcStaticPolylineDescComponent extends BasicStaticPrimitiveDesc {\n  constructor(polylineDrawerService: StaticPolylineDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(polylineDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef, OnInit } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ModelDrawerService } from '../../services/drawers/model-drawer/model-drawer.service';\n\n/**\n *  This is a model implementation.\n *  The ac-model element must be a child of ac-layer element.\n *  The properties of props are the same as the properties of Entity and ModelGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/ModelGraphics.html\n *\n *  __Usage:__\n *  ```\n *    <ac-model-desc props=\"{\n *       position : Cesium.Cartesian3.fromDegrees(-123.0744619, 44.0503706),\n *       uri : '../../SampleData/models/CesiumGround/Cesium_Ground.gltf'\n *   }\n *    }\">\n *    </ac-model-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-model-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcModelDescComponent)}],\n})\nexport class AcModelDescComponent extends BasicDesc implements OnInit {\n\n  constructor(modelDrawer: ModelDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(modelDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { CesiumService } from '../../services/cesium/cesium.service';\nimport { Checker } from '../../utils/checker';\n\n/**\n *  This component is used for adding a 3d tileset layer to the map (ac-map).\n *  options according to `Cesium3DTileset` definition.\n *  check out: https://cesiumjs.org/Cesium/Build/Documentation/Cesium3DTileset.html\n *\n *\n *  __Usage :__\n *  ```\n *    <ac-3d-tile-layer [options]=\"optionsObject\">\n *    </ac-3d-tile-layer>\n *  ```\n */\n@Component({\n  selector: 'ac-3d-tile-layer',\n  template: '',\n})\nexport class AcTileset3dComponent implements OnInit, OnChanges, OnDestroy {\n  /**\n   * refer to cesium docs for details https://cesiumjs.org/Cesium/Build/Documentation/Cesium3DTileset.html\n   */\n  @Input()\n  options: { url?: string } = {};\n\n  /**\n   * index (optional) - The index to add the layer at. If omitted, the layer will added on top of all existing layers.\n   */\n  @Input()\n  index: Number;\n\n  /**\n   * show (optional) - Determines if the map layer is shown.\n   */\n  @Input()\n  show = true;\n\n  /**\n   * show (optional) - Sets 3Dtiles style.\n   */\n  @Input()\n  style: any;\n\n  public tilesetInstance: any = null;\n  private _3dtilesCollection: any;\n\n  constructor(private cesiumService: CesiumService) {\n  }\n\n  ngOnInit() {\n    if (!Checker.present(this.options.url)) {\n      throw new Error('Options must have a url');\n    }\n\n    this._3dtilesCollection = new Cesium.PrimitiveCollection();\n    this.cesiumService.getScene().primitives.add(this._3dtilesCollection);\n\n    if (this.show) {\n      this.tilesetInstance = this._3dtilesCollection.add(new Cesium.Cesium3DTileset(this.options), this.index);\n      if (this.style) {\n        this.tilesetInstance.style = new Cesium.Cesium3DTileStyle(this.style);\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['show'] && !changes['show'].isFirstChange()) {\n      const showValue = changes['show'].currentValue;\n\n      if (showValue) {\n        if (this.tilesetInstance) {\n          this._3dtilesCollection.add(this.tilesetInstance, this.index);\n        } else {\n          this.tilesetInstance = this._3dtilesCollection.add(new Cesium.Cesium3DTileset(this.options), this.index);\n          if (this.style) {\n            this.tilesetInstance.style = new Cesium.Cesium3DTileStyle(this.style);\n          }\n        }\n      } else if (this.tilesetInstance) {\n        this._3dtilesCollection.remove(this.tilesetInstance, false);\n      }\n    }\n    if (changes['style'] && !changes['style'].isFirstChange()) {\n      const styleValue = changes['style'].currentValue;\n      if (this.tilesetInstance) {\n        this.tilesetInstance.style = new Cesium.Cesium3DTileStyle(this.style);\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.tilesetInstance) {\n      this._3dtilesCollection.remove(this.tilesetInstance, false);\n    }\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { BoxDrawerService } from '../../services/drawers/box-dawer/box-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-box-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity (like `position`)\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/BoxGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-box-desc props=\"{\n *     show : point.show, //optional\n *     position : point.positions,\n *     material : point.color  //optional\n *   }\">\n *   </ac-box-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-box-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcBoxDescComponent)}],\n})\nexport class AcBoxDescComponent extends BasicDesc {\n\n  constructor(drawerService: BoxDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { CylinderDrawerService } from '../../services/drawers/cylinder-dawer/cylinder-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-box-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity (like `position`)\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/CylinderGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-cylinder-desc props=\"{\n *     show : cylinder.show, //optional\n *     position : cylinder.position,\n *     material : cylinder.color  //optional\n *   }\">\n *   </ac-cylinder-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-cylinder-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcCylinderDescComponent)}],\n})\nexport class AcCylinderDescComponent extends BasicDesc {\n\n  constructor(drawerService: CylinderDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { CorridorDrawerService } from '../../services/drawers/corridor-dawer/corridor-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-box-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/CorridorGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-corridor-desc props=\"{\n *     show : point.show, //optional\n *     positions : point.positions,\n *     material : point.color  //optional\n *   }\">\n *   </ac-corridor-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-corridor-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcCorridorDescComponent)}],\n})\nexport class AcCorridorDescComponent extends BasicDesc {\n\n  constructor(drawerService: CorridorDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { EllipsoidDrawerService } from '../../services/drawers/ellipoid-drawer/ellipsoid-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-box-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipsoidGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-ellipsoid-desc props=\"{\n *     show : ellipsoid.show, //optional\n *     radii : ellipsoid.radii,\n *     material : ellipsoid.color  //optional\n *   }\">\n *   </ac-ellipsoid-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-ellipsoid-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcEllipsoidDescComponent)}],\n})\nexport class AcEllipsoidDescComponent extends BasicDesc {\n\n  constructor(drawerService: EllipsoidDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { PolylineVolumeDrawerService } from '../../services/drawers/polyline-volume-dawer/polyline-volume-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PolylineVolumeGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-polyline-volume-desc props=\"{\n *     show : line.show, //optional\n *     positions : line.positions,\n *     material : line.color  //optional\n *   }\">\n *   </ac-polyline-volume-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-polyline-volume-desc',\n  template: ''\n})\nexport class AcPolylineVolumeDescComponent extends BasicDesc {\n\n  constructor(drawerService: PolylineVolumeDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { WallDrawerService } from '../../services/drawers/wall-dawer/wall-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-box-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/WallGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-wall-desc props=\"{\n *     show : wall.show, //optional\n *     positions : wall.positions,\n *     material : wall.color  //optional\n *   }\">\n *   </ac-wall-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-wall-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcWallDescComponent)}],\n})\nexport class AcWallDescComponent extends BasicDesc {\n\n  constructor(drawerService: WallDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { RectangleDrawerService } from '../../services/drawers/rectangle-dawer/rectangle-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-rectangle-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/RectangleGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-rectangle-desc props=\"{\n *     show : rectangle.show, //optional\n *     coordinates : rectangle.positions,\n *     material : rectangle.color  //optional\n *   }\">\n *   </ac-rectangle-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-rectangle-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcRectangleDescComponent)}],\n})\nexport class AcRectangleDescComponent extends BasicDesc {\n\n  constructor(drawerService: RectangleDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { BillboardPrimitiveDrawerService } from '../../services/drawers/billboard-primitive-drawer/billboard-primitive-drawer.service';\n\n/**\n *  This is a billboard primitive implementation.\n *  The element must be a child of ac-layer element.\n *  The properties of props are:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Billboard.html\n *\n *  __Usage :__\n *  ```\n *    <ac-billboard-primitive-desc props=\"{\n *      image: track.image,\n *      position: track.position,\n *      scale: track.scale,\n *      color: track.color,\n *      name: track.name\n *    }\">\n *    </ac-billboard-primitive-desc>\n *  ```\n */\n\n@Component({\n  selector: 'ac-billboard-primitive-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcBillboardPrimitiveDescComponent)}],\n})\nexport class AcBillboardPrimitiveDescComponent extends BasicDesc {\n\n  constructor(billboardPrimitiveDrawer: BillboardPrimitiveDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(billboardPrimitiveDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { LabelPrimitiveDrawerService } from '../../services/drawers/label-primitive-drawer/label-primitive-drawer.service';\n\n/**\n *  This is a label primitive implementation.\n *  The ac-label element must be a child of ac-layer element.\n *  The properties of props are:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Label.html\n *\n *  __Usage :__\n *  ```\n *    <ac-label-primitive-desc props=\"{\n *      position: track.position,\n *      pixelOffset : [-15,20] | pixelOffset,\n *      text: track.name,\n *      font: '15px sans-serif'\n *    }\">\n *    </ac-label-primitive-desc>\n *  ```\n */\n\n@Component({\n  selector: 'ac-label-primitive-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcLabelPrimitiveDescComponent)}],\n})\nexport class AcLabelPrimitiveDescComponent extends BasicDesc {\n\n  constructor(labelPrimitiveDrawer: LabelPrimitiveDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(labelPrimitiveDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { PolylinePrimitiveDrawerService } from '../../services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service';\n\n/**\n *  This is a polyline primitive implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Polyline Primitive:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Polyline.html\n *\n *  __Usage:__\n *  ```\n *    <ac-polyline-primitive-desc props=\"{\n *      width : polyline.width,\n *      positions: polyline.positions,\n *      material: polyline.material\n *    }\">\n *    </ac-polyline-primitive-desc>\n * ```\n */\n@Component({\n  selector: 'ac-polyline-primitive-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcPolylinePrimitiveDescComponent)}],\n})\nexport class AcPolylinePrimitiveDescComponent extends BasicDesc {\n\n  constructor(polylinePrimitiveDrawerService: PolylinePrimitiveDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(polylinePrimitiveDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { HtmlCollection } from '../collections';\nimport { Cartesian2 } from '../../angular-cesium/models/cartesian2';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\n\nexport class HtmlPrimitive {\n\n  private _scene: any;\n  private _show: boolean;\n  private _position: Cartesian3;\n  private _lastPosition: Cartesian2;\n  private _pixelOffset: Cartesian2;\n  private _element: HTMLElement;\n  private _collection: HtmlCollection;\n  private _mapContainer;\n\n  constructor(options: any, collection: HtmlCollection = null) {\n    if (typeof options !== 'object') {\n      throw new Error('HtmlPrimitive ERROR: invalid html options!');\n    }\n\n    this.scene = options.scene;\n    this._mapContainer = options.mapContainer;\n    this.show = options.show || true;\n    this.position = options.position;\n    this.pixelOffset = options.pixelOffset;\n    this.element = options.element;\n    this.collection = collection;\n  }\n\n  set scene(scene: any) {\n    this._scene = scene;\n  }\n\n  set show(show: boolean) {\n    this._show = show;\n\n    if (Cesium.defined(this.element)) {\n      if (show) {\n        this._element.style.display = 'block';\n      } else {\n        this._element.style.display = 'none';\n      }\n    }\n  }\n\n  get show(): boolean {\n    return this._show;\n  }\n\n  set position(position: Cartesian3) {\n    this._position = position;\n  }\n\n  get position(): Cartesian3 {\n    return this._position;\n  }\n\n  set pixelOffset(pixelOffset: Cartesian2) {\n    this._pixelOffset = pixelOffset;\n  }\n\n  get pixelOffset(): Cartesian2 {\n    return this._pixelOffset;\n  }\n\n  set element(element: HTMLElement) {\n    this._element = element;\n\n    if (Cesium.defined(element)) {\n      this._mapContainer.appendChild(element);\n      this._element.style.position = 'absolute';\n      this._element.style.zIndex = Number.MAX_VALUE.toString();\n    }\n  }\n\n  get element(): HTMLElement {\n    return this._element;\n  }\n\n  set collection(collection: HtmlCollection) {\n    this._collection = collection;\n  }\n\n  get collection() {\n    return this._collection;\n  }\n\n  update() {\n    if (!Cesium.defined(this._show) || !Cesium.defined(this._element)) {\n      return;\n    }\n\n    let screenPosition = Cesium.SceneTransforms.wgs84ToWindowCoordinates(this._scene, this._position);\n\n    if (!Cesium.defined(screenPosition)) {\n      screenPosition = new Cesium.Cartesian2((-1000), (-1000));\n    } else if (Cesium.defined(this._pixelOffset) && Cesium.defined(this._pixelOffset.x) && Cesium.defined(this._pixelOffset.y)) {\n      screenPosition.y += this._pixelOffset.y;\n      screenPosition.x += this._pixelOffset.x;\n    }\n\n    if (this._lastPosition && this._lastPosition.equals(screenPosition)) {\n      return;\n    }\n\n    this._element.style.top = `${screenPosition.y}px`;\n    this._element.style.left = `${screenPosition.x}px`;\n    this._lastPosition = screenPosition;\n  }\n}\n","import { HtmlPrimitive } from '../primitives';\n\nexport class HtmlCollection {\n  private _collection: HtmlPrimitive[] = [];\n\n  get length() {\n    return this._collection.length;\n  }\n\n  get(index: number) {\n    return this._collection[index];\n  }\n\n  add(options: any): HtmlPrimitive {\n    const html = new HtmlPrimitive(options, this);\n    this._collection.push(html);\n\n    return html;\n  }\n\n  remove(html: HtmlPrimitive): boolean {\n    const index = this._collection.indexOf(html);\n\n    if (index === (-1)) {\n      return false;\n    }\n\n    this._collection.splice(index, 1);\n    return true;\n  }\n\n  update() {\n    for (let i = 0, len = this._collection.length; i < len; i++) {\n      this._collection[i].update();\n    }\n  }\n\n  removeAll() {\n    while (this._collection.length > 0) {\n      this._collection.pop();\n    }\n  }\n\n  contains(html: HtmlPrimitive): boolean {\n    return Cesium.defined(html) && html.collection === this;\n  }\n}\n","import { HtmlPrimitive } from './primitives';\nimport { HtmlCollection } from './collections';\n\nexport class CesiumExtender {\n  static extend() {\n    Cesium.HtmlPrimitive = HtmlPrimitive;\n    Cesium.HtmlCollection = HtmlCollection;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AcHtmlManager {\n  private _entities: Map<any, any>;\n\n  constructor() {\n    this._entities = new Map<any, any>();\n  }\n\n  has(id: string): boolean {\n    return this._entities.has(id);\n  }\n\n  get(id: string): { entity: any, primitive: any } {\n    return this._entities.get(id);\n  }\n\n  addOrUpdate(id: any, info: { entity: any, primitive: any }) {\n    this._entities.set(id, info);\n  }\n\n  remove(id: string) {\n    this._entities.delete(id);\n  }\n\n  forEach(callback: any) {\n    this._entities.forEach(callback);\n  }\n}\n","import { ChangeDetectorRef, Directive, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { AcHtmlManager } from '../../services/ac-html-manager/ac-html-manager.service';\n\nexport class AcHtmlContext {\n  constructor(\n    public id: any,\n    public context: any\n  ) {\n  }\n}\n\n@Directive({\n  selector: '[acHtml]',\n})\nexport class AcHtmlDirective implements OnInit {\n\n  private _views = new Map<any, { viewRef: any, context: any }>();\n\n  constructor(\n    private _templateRef: TemplateRef<AcHtmlContext>,\n    private _viewContainerRef: ViewContainerRef,\n    private _changeDetector: ChangeDetectorRef,\n    private _layerService: LayerService,\n    private _acHtmlManager: AcHtmlManager\n  ) {\n  }\n\n  ngOnInit() {\n\n  }\n\n  private _handleView(id: any, primitive: any, entity: any) {\n    if (!this._views.has(id) && primitive.show) {\n      const context = new AcHtmlContext(id, {$implicit: entity});\n      const viewRef = this._viewContainerRef.createEmbeddedView(this._templateRef, context);\n      this._views.set(id, {viewRef, context});\n      this._changeDetector.detectChanges();\n    } else if (this._views.has(id) && !primitive.show) {\n      this.remove(id, primitive);\n    } else if (this._views.has(id) && primitive.show) {\n      this._changeDetector.detectChanges();\n    }\n  }\n\n  addOrUpdate(id: any, primitive: any) {\n    const context = this._layerService.context;\n    const entity = context[this._layerService.getEntityName()];\n\n    if (this._views.has(id)) {\n      this._views.get(id).context.context.$implicit = entity;\n    }\n\n    this._acHtmlManager.addOrUpdate(id, {entity, primitive});\n    this._handleView(id, primitive, entity);\n  }\n\n  remove(id: any, primitive: any) {\n    if (!this._views.has(id)) {\n      return;\n    }\n\n    const {viewRef} = this._views.get(id);\n    this._viewContainerRef.remove(this._viewContainerRef.indexOf(viewRef));\n    this._views.delete(id);\n    this._acHtmlManager.remove(id);\n    primitive.element = null;\n  }\n}\n","import { Component, ContentChild, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { HtmlDrawerService } from '../../services/drawers/html-drawer/html-drawer.service';\nimport { AcHtmlDirective } from '../../directives/ac-html/ac-html.directive';\nimport { AcHtmlManager } from '../../services/ac-html-manager/ac-html-manager.service';\n\n/**\n *  This is an html implementation.\n *  The ac-html element must be a child of ac-layer element.\n *  <br>\n *  [props] accepts position(Cartesian3) and show(boolean).\n *\n *  __Usage:__\n *  ```\n *  <ac-layer acFor=\"let html of htmls$\" [context]=\"this\">\n <ac-html-desc props=\"{position: html.position, show: html.show}\">\n <ng-template let-html>\n <div>\n <h1>This is ac-html {{html.name}}</h1>\n <button (click)=\"changeText(html, 'Test')\">change text</button>\n </div>\n </ng-template>\n </ac-html-desc>\n *  <ac-html [props]=\"{position: position, show: true}\">;\n *    <p>html element</p>\n *  </ac-html>\n *  ```\n */\n@Component({\n  selector: 'ac-html-desc',\n  providers: [AcHtmlManager],\n  template: `\n      <div *acHtml=\"let acHtmlEntityId = id; let acHtmlContext = context\">\n          <div [acHtmlContainer]=\"acHtmlEntityId\">\n              <ng-template [ngTemplateOutlet]=\"acHtmlTemplate\"\n                           [ngTemplateOutletContext]=\"acHtmlContext\"></ng-template>\n          </div>\n      </div>`\n})\nexport class AcHtmlDescComponent extends BasicDesc implements OnInit {\n\n  @ViewChild(AcHtmlDirective) acHtmlCreator: AcHtmlDirective;\n  @ContentChild(TemplateRef) acHtmlTemplate: TemplateRef<any>;\n\n  constructor(htmlDrawer: HtmlDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(htmlDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    if (!this.acHtmlCreator) {\n      throw new Error(`AcHtml desc ERROR: ac html directive not found.`);\n    }\n\n    if (!this.acHtmlTemplate) {\n      throw new Error(`AcHtml desc ERROR: html template not found.`);\n    }\n  }\n\n  draw(context: any, id: any): any {\n    const cesiumProps = this._propsEvaluator(context);\n    if (!this._cesiumObjectsMap.has(id)) {\n      const primitive = this._drawer.add(cesiumProps);\n      this._cesiumObjectsMap.set(id, primitive);\n      this.acHtmlCreator.addOrUpdate(id, primitive);\n    } else {\n      const primitive = this._cesiumObjectsMap.get(id);\n      this._drawer.update(primitive, cesiumProps);\n      this.acHtmlCreator.addOrUpdate(id, primitive);\n    }\n  }\n\n  remove(id: string): void {\n    const primitive = this._cesiumObjectsMap.get(id);\n    this._drawer.remove(primitive);\n    this._cesiumObjectsMap.delete(id);\n    this.acHtmlCreator.remove(id, primitive);\n  }\n\n  removeAll(): void {\n    this._cesiumObjectsMap.forEach(((primitive, id) => {\n      this.acHtmlCreator.remove(id, primitive);\n    }));\n    this._cesiumObjectsMap.clear();\n    this._drawer.removeAll();\n  }\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\nimport { AcHtmlManager } from '../../services/ac-html-manager/ac-html-manager.service';\n\n@Directive({\n  selector: '[acHtmlContainer]'\n})\nexport class AcHtmlContainerDirective implements OnInit {\n\n  private _id: any;\n\n  constructor(\n    private _element: ElementRef,\n    private _acHtmlManager: AcHtmlManager\n  ) {\n  }\n\n  @Input()\n  set acHtmlContainer(id: string) {\n    this._id = id;\n  }\n\n  ngOnInit() {\n    if (this._id === undefined) {\n      throw new Error(`AcHtml container ERROR: entity id not defined`);\n    }\n\n    const entity = this._acHtmlManager.get(this._id);\n    entity.primitive.element = this._element.nativeElement;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport { ContextMenuService } from '../../services/context-menu/context-menu.service';\nimport { Subscription } from 'rxjs';\nimport { BasicContextMenu } from '../../models/basic-context-menu';\n\n/**\n * This component is used to inject the component that is passed to the ContextMenuService when opening a context menu.\n * It shouldn't be used directly.\n *\n * usage:\n * ```typescript\n * // We want to open the context menu on mouse right click.\n * // Register to mouse right click with the MapEventsManager\n * this.mapEventsManager.register({ event: CesiumEvent.RIGHT_CLICK, pick: PickOptions.NO_PICK })\n *    .subscribe(event => {\n *       const position = this.coordinateConverter.screenToCartesian3(event.movement.endPosition, true);\n *       if (!position) {\n *         return;\n *       }\n *       // Open the context menu on the position that was clicked and pass some data to ContextMenuComponent.\n *       this.contextMenuService.open(\n *         ContextMenuComponent,\n *         position,\n *         { data: { items: ['New Track', 'Change Map', 'Context Menu', 'Do Something'] } }\n *       )\n *    });\n *\n * ```\n */\n\n@Component({\n  selector: 'ac-context-menu-wrapper',\n  template: `\n    <ac-html *ngIf=\"contextMenuService.showContextMenu\" [props]=\"{position: contextMenuService.position}\">\n      <div #contextMenuContainer></div>\n    </ac-html>\n  `,\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AcContextMenuWrapperComponent implements OnInit, OnDestroy {\n\n  private contextMenuChangeSubscription: Subscription;\n  private contextMenuOpenSubscription: Subscription;\n\n  @ViewChild('contextMenuContainer', {read: ViewContainerRef}) viewContainerRef: ViewContainerRef;\n\n  constructor(public contextMenuService: ContextMenuService,\n              private cd: ChangeDetectorRef,\n              private componentFactoryResolver: ComponentFactoryResolver) {\n  }\n\n  ngOnInit() {\n    this.contextMenuChangeSubscription =\n      this.contextMenuService.contextMenuChangeNotifier.subscribe(() => this.cd.detectChanges());\n    this.contextMenuOpenSubscription =\n      this.contextMenuService.onOpen.subscribe(() => {\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.contextMenuService.content as any);\n        this.viewContainerRef.clear();\n        const componentRef = this.viewContainerRef.createComponent(componentFactory);\n        (componentRef.instance as BasicContextMenu).data = this.contextMenuService.options.data;\n        this.cd.detectChanges();\n      });\n  }\n\n  ngOnDestroy(): void {\n    if (this.contextMenuChangeSubscription) {\n      this.contextMenuChangeSubscription.unsubscribe();\n    }\n\n    if (this.contextMenuOpenSubscription) {\n      this.contextMenuOpenSubscription.unsubscribe();\n    }\n  }\n}\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { AcNotification } from '../../models/ac-notification';\nimport { Subject, Subscription } from 'rxjs';\nimport { IDescription } from '../../models/description';\nimport * as _get from 'lodash.get';\nimport { AcLayerComponent } from '../ac-layer/ac-layer.component';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\n\n/**\n *  This is component represents an array under `ac-layer`.\n *  The element must be a child of ac-layer element.\n *  + acFor `{string}` - get the tracked array and entityName (see the example).\n *  + idGetter `{Function}` - a function that gets the id for a given element in the array -should be defined for maximum performance.\n *  + show `{boolean}` - show/hide array's entities.\n *\n *  __Usage :__\n *  ```\n *<ac-layer acFor=\"let track of tracks$\" [show]=\"show\" [context]=\"this\" [store]=\"true\">\n *  <ac-array-desc acFor=\"let arrayItem of track.array\" [idGetter]=\"trackArrayIdGetter\">\n *    <ac-array-desc acFor=\"let innerArrayItem of arrayItem.innerArray\" [idGetter]=\"trackArrayIdGetter\">\n *      <ac-point-desc props=\"{\n *        position: innerArrayItem.pos,\n *        pixelSize: 10,\n *        color: getTrackColor(track),\n *        outlineColor: Cesium.Color.BLUE,\n *        outlineWidth: 1\n *      }\">\n *      </ac-point-desc>\n *    </ac-array-desc>\n *  </ac-array-desc>\n *</ac-layer>\n *  ```\n */\n\n@Component({\n  selector: 'ac-array-desc',\n  template: `\n    <ac-layer #layer [acFor]=\"getAcForString()\"\n              [context]=\"layerService.context\"\n              [options]=\"layerService.options\"\n              [show]=\"layerService.show && show\"\n              [zIndex]=\"layerService.zIndex\">\n      <ng-content #content></ng-content>\n    </ac-layer>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AcArrayDescComponent implements OnChanges, OnInit, AfterContentInit, OnDestroy, IDescription {\n\n  @Input() acFor: string;\n\n  @Input() idGetter: (item: any, index: number) => string;\n\n  @Input() show = true;\n  @ViewChild('layer') private layer: AcLayerComponent;\n  @ContentChildren(BasicDesc, {descendants: false}) private basicDescs: any;\n  @ContentChildren(AcArrayDescComponent, {descendants: false}) private arrayDescs: any;\n  private entitiesMap = new Map<string, string[]>();\n  private layerServiceSubscription: Subscription;\n  private id = 0;\n  private readonly acForRgx = /^let\\s+.+\\s+of\\s+.+$/;\n  entityName: string;\n  arrayPath: string;\n  arrayObservable$ = new Subject<AcNotification>();\n\n  constructor(public layerService: LayerService, private cd: ChangeDetectorRef) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['acFor'].firstChange) {\n      const acForString = changes['acFor'].currentValue;\n      if (!this.acForRgx.test(acForString)) {\n        throw new Error(`ac-layer: Invalid [acFor] syntax. Expected: [acFor]=\"let item of observable\" .Instead received: ${acForString}`);\n      }\n      const acForArr = changes['acFor'].currentValue.split(' ');\n      this.arrayPath = acForArr[3];\n      this.entityName = acForArr[1];\n    }\n  }\n\n  ngOnInit(): void {\n    this.layer.getLayerService().cache = false;\n    this.layerServiceSubscription = this.layerService.layerUpdates().subscribe(() => {\n      this.cd.detectChanges();\n    });\n  }\n\n  ngAfterContentInit(): void {\n    this.layerService.context['arrayObservable$'] = this.arrayObservable$;\n    this.layerService.registerDescription(this);\n    this.basicDescs._results.forEach((component: BasicDesc) => {\n      component.setLayerService(this.layer.getLayerService());\n    });\n    this.arrayDescs._results.splice(0, 1);\n    this.arrayDescs._results.forEach((component: AcArrayDescComponent) => {\n      this.layerService.unregisterDescription(component);\n      this.layer.getLayerService().registerDescription(component);\n      component.layerService = this.layer.getLayerService();\n      component.setLayerService(this.layer.getLayerService());\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.layerServiceSubscription) {\n      this.layerServiceSubscription.unsubscribe();\n    }\n  }\n\n  setLayerService(layerService: LayerService) {\n    this.layerService = layerService;\n  }\n\n  draw(context: any, id: string, contextEntity: any) {\n    const get = _get;\n    const entitiesArray: any[] = get(context, this.arrayPath);\n    if (!entitiesArray) {\n      return;\n    }\n    const previousEntitiesIdArray = this.entitiesMap.get(id);\n    const entitiesIdArray: any[] = [];\n    this.entitiesMap.set(id, entitiesIdArray);\n\n    entitiesArray.forEach((item, index) => {\n      this.layerService.context[this.entityName] = item;\n      const arrayItemId = this.generateCombinedId(id, item, index);\n      entitiesIdArray.push(arrayItemId);\n      this.layer.update(contextEntity, arrayItemId);\n    });\n\n    if (previousEntitiesIdArray) {\n      const entitiesToRemove = this.idGetter ?\n        previousEntitiesIdArray.filter((entityId) => entitiesIdArray.indexOf(entityId) < 0) :\n        previousEntitiesIdArray;\n      if (entitiesToRemove) {\n        entitiesToRemove.forEach((entityId) => this.layer.remove(entityId));\n      }\n    }\n  }\n\n  remove(id: string) {\n    const entitiesIdArray = this.entitiesMap.get(id);\n    if (entitiesIdArray) {\n      entitiesIdArray.forEach((entityId) => this.layer.remove(entityId));\n    }\n    this.entitiesMap.delete(id);\n  }\n\n  removeAll() {\n    this.layer.removeAll();\n    this.entitiesMap.clear();\n  }\n\n  getAcForString() {\n    return `let ${this.entityName + '___temp'} of arrayObservable$`;\n  }\n\n  private generateCombinedId(entityId: string, arrayItem: any, index: number): string {\n    let arrayItemId;\n    if (this.idGetter) {\n      arrayItemId = this.idGetter(arrayItem, index);\n    } else {\n      arrayItemId = (this.id++) % Number.MAX_SAFE_INTEGER;\n    }\n    return entityId + arrayItemId;\n  }\n}\n","import { Component } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { PointPrimitiveDrawerService } from '../../services/drawers/point-primitive-drawer/point-primitive-drawer.service';\n\n/**\n *  This is a label primitive implementation.\n *  The ac-label element must be a child of ac-layer element.\n *  The properties of props are:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Point.html\n *\n *  __Usage :__\n *  ```\n *    <ac-point-primitive-desc props=\"{\n *      position: track.position,\n *      color: Cesium.Color.RED\n *    }\">\n *    </ac-point-primitive-desc>\n *  ```\n */\n\n@Component({\n  selector: 'ac-point-primitive-desc',\n  template: '',\n})\nexport class AcPointPrimitiveDescComponent extends BasicDesc {\n\n  constructor(pointPrimitiveDrawerService: PointPrimitiveDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(pointPrimitiveDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\nimport { PolylinePrimitiveDrawerService } from '../../services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service';\n\n/**\n *  This is a polyline implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Polyline Primitive:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Polyline.html\n *\n *  __Usage:__\n *  ```\n *  <ac-polyline [props]=\"{\n *    position: position,\n *    text: 'labelText',\n *    font: '30px sans-serif'\n *    color: Cesium.Color.GREEN\n *  }\">;\n *  </ac-polyline>\n *  ```\n */\n\n@Component({\n  selector: 'ac-primitive-polyline',\n  template: '',\n})\nexport class AcPrimitivePolylineComponent extends EntityOnMapComponent {\n\n  constructor(polylineDrawer: PolylinePrimitiveDrawerService, mapLayers: MapLayersService) {\n    super(polylineDrawer, mapLayers);\n  }\n}\n","import { PixelOffsetPipe } from './pixel-offset/pixel-offset.pipe';\nimport { RadiansToDegreesPipe } from './radians-to-degrees/radians-to-degrees.pipe';\n\n// For angular parse usage\nexport default [\n  {pipeName: 'pixelOffset', pipeInstance: new PixelOffsetPipe()},\n  {pipeName: 'radiansToDegrees', pipeInstance: new RadiansToDegreesPipe()},\n];\n","import { Component, OnInit } from '@angular/core';\n\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CzmlDrawerService } from '../../services/drawers/czml-drawer/czml-drawer.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\n\n/**\n *  This is a czml implementation.\n *  The ac-czml-desc element must be a child of ac-layer element.\n *\n *  See CZML Guide for the structure of props.czmlPacket:\n *  + https://github.com/AnalyticalGraphicsInc/czml-writer/wiki/CZML-Structure\n *\n *  Attention: the first czmlPacket in the stream needs to be a document\n *  with an id and a name attribute. See this example\n *  + https://cesiumjs.org/Cesium/Apps/Sandcastle/index.html?src=CZML%20Point%20-%20Time%20Dynamic.html&label=CZML\n *\n *  To see a working example, use the demo app and\n *  + uncomment <czml-layer></czml-layer> in demo-map.component.html\n *  + set the properties 'timeline', 'animation' and 'shouldAnimate' true in viewerOptions of demo-map.component.ts\n *\n *\n *  __Usage:__\n *  ```\n *    <ac-czml-desc props=\"{\n *      czmlPacket: czmlPacket\n *    }\">\n *    </ac-czml-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-czml-desc',\n  template: '',\n})\nexport class AcCzmlDescComponent extends BasicDesc implements OnInit {\n  constructor(czmlDrawer: CzmlDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(czmlDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AcMapComponent } from './components/ac-map/ac-map.component';\nimport { AcLayerComponent } from './components/ac-layer/ac-layer.component';\nimport { AcBillboardComponent } from './components/ac-billboard/ac-billboard.component';\nimport { AcBillboardDescComponent } from './components/ac-billborad-desc/ac-billborad-desc.component';\nimport { AcEllipseDescComponent } from './components/ac-ellipse-desc/ac-ellipse-desc.component';\nimport { AcPolylineDescComponent } from './components/ac-polyline-desc/ac-polyline-desc.component';\nimport { Angular2ParseModule, PIPES_CONFIG } from 'angular2parse';\nimport { PixelOffsetPipe } from './pipes/pixel-offset/pixel-offset.pipe';\nimport { RadiansToDegreesPipe } from './pipes/radians-to-degrees/radians-to-degrees.pipe';\nimport { JsonMapper } from './services/json-mapper/json-mapper.service';\nimport { CesiumProperties } from './services/cesium-properties/cesium-properties.service';\nimport { AcLabelDescComponent } from './components/ac-label-desc/ac-label-desc.component';\nimport { UtilsModule } from './utils/utils.module';\nimport { ViewerFactory } from './services/viewer-factory/viewer-factory.service';\nimport { GeoUtilsService } from './services/geo-utils/geo-utils.service';\nimport { AcCircleDescComponent } from './components/ac-circle-desc/ac-circle-desc.component';\nimport { AcArcDescComponent } from './components/ac-arc-desc/ac-arc-desc.component';\nimport { AcMapLayerProviderComponent } from './components/ac-map-layer-provider/ac-map-layer-provider.component';\nimport { AcPointDescComponent } from './components/ac-point-desc/ac-point-desc.component';\nimport { AcLabelComponent } from './components/ac-label/ac-label.component';\nimport { AcPolylineComponent } from './components/ac-polyline/ac-polyline.component';\nimport { AcEllipseComponent } from './components/ac-ellipse/ac-ellipse.component';\nimport { AcPointComponent } from './components/ac-point/ac-point.component';\nimport { AcHtmlComponent } from './components/ac-html/ac-html.component';\nimport { AcCircleComponent } from './components/ac-circle/ac-circle.component';\nimport { AcArcComponent } from './components/ac-arc/ac-arc.component';\nimport { AcPolygonDescComponent } from './components/ac-polygon-desc/ac-polygon-desc.component';\nimport { AcDefaultPlonterComponent } from './components/ac-default-plonter/ac-default-plonter.component';\nimport { AcPolygonComponent } from './components/ac-polygon/ac-polygon.component';\nimport { MapsManagerService } from './services/maps-manager/maps-manager.service';\nimport { AcStaticEllipseDescComponent } from './components/static-dynamic/ac-static-ellipse-desc/ac-static-ellipse-desc.component';\nimport { AcDynamicEllipseDescComponent } from './components/static-dynamic/ac-dynamic-ellipse-desc/ac-dynamic-ellipse-desc.component';\nimport { AcDynamicPolylineDescComponent } from './components/static-dynamic/ac-dynamic-polyline-desc/ac-dynamic-polyline-desc.component';\nimport { AcStaticPolygonDescComponent } from './components/static-dynamic/ac-static-polygon-desc/ac-static-polygon-desc.component';\nimport { AcStaticCircleDescComponent } from './components/static-dynamic/ac-static-circle-desc/ac-static-circle-desc.component';\nimport { AcDynamicCircleDescComponent } from './components/static-dynamic/ac-dynamic-circle-desc/ac-dynamic-circle-desc.component';\nimport { AcStaticPolylineDescComponent } from './components/static-dynamic/ac-static-polyline-desc/ac-static-polyline-desc.component';\nimport { AcModelDescComponent } from './components/ac-model-desc/ac-model-desc.component';\nimport { AcTileset3dComponent } from './components/ac-3d-tileset/ac-tileset-3d.component';\nimport { AcBoxDescComponent } from './components/ac-box-desc/ac-box-desc.component';\nimport { AcCylinderDescComponent } from './components/ac-cylinder-desc/ac-cylinder-desc.component';\nimport { AcCorridorDescComponent } from './components/ac-corridor-desc/ac-corridor-desc.component';\nimport { AcEllipsoidDescComponent } from './components/ac-ellipsoid-desc/ac-ellipsoid-desc.component';\nimport { AcPolylineVolumeDescComponent } from './components/ac-polyline-volume-desc/ac-polyline-volume-desc.component';\nimport { AcWallDescComponent } from './components/ac-wall-desc/ac-wall-desc.component';\nimport { AcRectangleDescComponent } from './components/ac-rectangle-desc/ac-rectangle-desc.component';\nimport { AcBillboardPrimitiveDescComponent } from './components/ac-billboard-primitive-desc/ac-billboard-primitive-desc.component';\nimport { AcLabelPrimitiveDescComponent } from './components/ac-label-primitive-desc/ac-label-primitive-desc.component';\nimport { AcPolylinePrimitiveDescComponent } from './components/ac-polyline-primitive-desc/ac-polyline-primitive-desc.component';\nimport { ModuleConfiguration } from './models/module-options';\nimport { ANGULAR_CESIUM_CONFIG, ConfigurationService } from './cesium-enhancements/ConfigurationService';\nimport { CesiumExtender } from '../cesium-extender/extender';\nimport { AcHtmlDescComponent } from './components/ac-html-desc/ac-html-desc.component';\nimport { AcHtmlDirective } from './directives/ac-html/ac-html.directive';\nimport { AcHtmlContainerDirective } from './directives/ac-html-container/ac-html-container.directive';\nimport { AcContextMenuWrapperComponent } from './components/ac-context-menu-wrapper/ac-context-menu-wrapper.component';\nimport { AcArrayDescComponent } from './components/ac-array-desc/ac-array-desc.component';\nimport { AcPointPrimitiveDescComponent } from './components/ac-point-primitive-desc/ac-point-primitive-desc.component';\nimport { AcPrimitivePolylineComponent } from './components/ac-primitive-polyline/ac-primitive-polyline.component';\nimport PARSE_PIPES_CONFIG_MAP from './pipes/pipe-config-map';\n\nimport { AcCzmlDescComponent } from './components/ac-czml-desc/ac-czml-desc.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    Angular2ParseModule,\n    UtilsModule,\n  ],\n  declarations: [\n    AcMapComponent,\n    AcLayerComponent,\n    AcBillboardComponent,\n    AcBillboardDescComponent,\n    AcBillboardPrimitiveDescComponent,\n    AcLabelDescComponent,\n    AcLabelPrimitiveDescComponent,\n    AcEllipseDescComponent,\n    AcPolylineDescComponent,\n    AcPolylinePrimitiveDescComponent,\n    PixelOffsetPipe,\n    RadiansToDegreesPipe,\n    AcCircleDescComponent,\n    AcArcDescComponent,\n    AcMapLayerProviderComponent,\n    AcPointDescComponent,\n    AcLabelComponent,\n    AcPolylineComponent,\n    AcPrimitivePolylineComponent,\n    AcEllipseComponent,\n    AcPointComponent,\n    AcBillboardComponent,\n    AcHtmlComponent,\n    AcCircleComponent,\n    AcArcComponent,\n    AcPolygonDescComponent,\n    AcPolygonComponent,\n    AcDefaultPlonterComponent,\n    AcModelDescComponent,\n    AcTileset3dComponent,\n    AcBoxDescComponent,\n    AcCylinderDescComponent,\n    AcCorridorDescComponent,\n    AcEllipsoidDescComponent,\n    AcPolylineVolumeDescComponent,\n    AcWallDescComponent,\n    AcRectangleDescComponent,\n    AcContextMenuWrapperComponent,\n    AcPointPrimitiveDescComponent,\n    AcHtmlDescComponent,\n    AcHtmlDirective,\n    AcHtmlContainerDirective,\n    AcArrayDescComponent,\n    AcCzmlDescComponent,\n\n    AcStaticEllipseDescComponent,\n    AcDynamicEllipseDescComponent,\n    AcDynamicPolylineDescComponent,\n    AcStaticPolylineDescComponent,\n    AcDynamicCircleDescComponent,\n    AcStaticCircleDescComponent,\n    AcStaticPolygonDescComponent,\n  ],\n  exports: [\n    AcMapComponent,\n    AcBillboardComponent,\n    AcBillboardDescComponent,\n    AcBillboardPrimitiveDescComponent,\n    AcLabelDescComponent,\n    AcLabelPrimitiveDescComponent,\n    AcEllipseDescComponent,\n    AcPolylineDescComponent,\n    AcPolylinePrimitiveDescComponent,\n    AcLayerComponent,\n    AcCircleDescComponent,\n    AcArcDescComponent,\n    AcMapLayerProviderComponent,\n    AcPointDescComponent,\n    AcLabelComponent,\n    AcPolylineComponent,\n    AcPrimitivePolylineComponent,\n    AcEllipseComponent,\n    AcPointComponent,\n    AcBillboardComponent,\n    AcHtmlComponent,\n    AcCircleComponent,\n    AcArcComponent,\n    AcPolygonDescComponent,\n    AcPolygonComponent,\n    AcDefaultPlonterComponent,\n    AcModelDescComponent,\n    AcTileset3dComponent,\n    AcBoxDescComponent,\n    AcCylinderDescComponent,\n    AcCorridorDescComponent,\n    AcEllipsoidDescComponent,\n    AcPolylineVolumeDescComponent,\n    AcWallDescComponent,\n    AcRectangleDescComponent,\n    AcContextMenuWrapperComponent,\n    AcPointPrimitiveDescComponent,\n    AcHtmlDescComponent,\n    AcArrayDescComponent,\n    AcCzmlDescComponent,\n\n    AcStaticEllipseDescComponent,\n    AcDynamicEllipseDescComponent,\n    AcDynamicPolylineDescComponent,\n    AcStaticPolylineDescComponent,\n    AcDynamicCircleDescComponent,\n    AcStaticCircleDescComponent,\n    AcStaticPolygonDescComponent,\n  ],\n  providers: [JsonMapper, CesiumProperties, GeoUtilsService, ViewerFactory, MapsManagerService, ConfigurationService],\n})\nexport class AngularCesiumModule {\n  static forRoot(config?: ModuleConfiguration): ModuleWithProviders {\n    return {\n      ngModule: AngularCesiumModule,\n      providers: [\n        {provide: ANGULAR_CESIUM_CONFIG, useValue: config},\n        {provide: PIPES_CONFIG, multi: true, useValue: config && config.customPipes || []},\n        {provide: PIPES_CONFIG, multi: true, useValue: PARSE_PIPES_CONFIG_MAP},\n      ],\n    };\n  }\n\n  constructor() {\n    CesiumExtender.extend();\n  }\n}\n","import { Observable } from 'rxjs';\n\nexport class DisposableObservable<T> extends Observable<T> {\n  dispose: Function;\n}\n","/**\n * EventModifier options for registration on map-event-manager.\n */\nexport enum CesiumEventModifier {\n  ALT = Cesium.KeyboardEventModifier.ALT,\n  CTRL = Cesium.KeyboardEventModifier.CTRL,\n  SHIFT = Cesium.KeyboardEventModifier.SHIFT,\n}\n","import { filter, map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { AcEntity } from '../../models/ac-entity';\nimport { CesiumEvent } from '../map-events-mananger/consts/cesium-event.enum';\nimport { MapEventsManagerService } from '../map-events-mananger/map-events-manager';\nimport { PickOptions } from '../map-events-mananger/consts/pickOptions.enum';\nimport { CesiumEventModifier } from '../map-events-mananger/consts/cesium-event-modifier.enum';\nimport { MapsManagerService } from '../maps-manager/maps-manager.service';\n\n\nexport interface SelectionOptions {\n  event?: CesiumEvent;\n  modifier?: CesiumEventModifier;\n  entityType?: any;\n}\n\n/**\n * Manages entity selection service for any given mouse event and modifier\n * the service will manage the list of selected items.\n * check out the example\n * you must provide the service yourself\n *\n *  __Usage :__\n * ```\n * // provide the service in some component\n * @Component({\n * //...\n *  providers: [SelectionManagerService]\n * }\n *\n * // Usage example:\n * // init selection\n * const selectedIndicator = ture; // optional default true, if true a boolean \"selected\" property will be added to the selected entity\n * selectionManagerService.initSelection({ event: CesiumEvent.LEFT_CLICK,\n * \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmodifier: CesiumEventModifier.CTRL\n * \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},selectedIndicator);\n * // Get selected\n * const selected = selectionManagerService.selected();\n *\n * // Or as observer\n * const selected$ = selectionManagerService.selected$();\n *\n * ```\n *\n */\n@Injectable()\nexport class SelectionManagerService {\n  selectedEntitiesItems$: BehaviorSubject<AcEntity[]> = new BehaviorSubject<AcEntity[]>([]);\n  selectedEntitySubject$: Subject<AcEntity> = new Subject<AcEntity>();\n  private mapEventsManagerService: MapEventsManagerService;\n\n  constructor(private mapsManager: MapsManagerService) {\n  }\n\n  selectedEntities$(): Observable<AcEntity[]> {\n    return this.selectedEntitiesItems$.asObservable();\n  }\n\n  selectedEntities(): AcEntity[] {\n    return this.selectedEntitiesItems$.getValue();\n  }\n\n  selectedEntity$() {\n    return this.selectedEntitySubject$;\n  }\n\n  toggleSelection(entity: AcEntity, addSelectedIndicator: boolean) {\n    const current = this.selectedEntities();\n    if (current.indexOf(entity) === -1) {\n      this.addToSelected(entity, addSelectedIndicator);\n    } else {\n      this.removeSelected(entity, addSelectedIndicator);\n    }\n  }\n\n  private addToSelected(entity: AcEntity, addSelectedIndicator: boolean) {\n    if (addSelectedIndicator) {\n      entity['selected'] = true;\n    }\n\n    const current = this.selectedEntities();\n    this.selectedEntitySubject$.next(entity);\n    this.selectedEntitiesItems$.next([...current, entity]);\n  }\n\n  private removeSelected(entity: AcEntity, addSelectedIndicator: boolean) {\n    if (addSelectedIndicator) {\n      entity['selected'] = false;\n    }\n\n    const current = this.selectedEntities();\n    const entityIndex = current.indexOf(entity);\n    if (entityIndex !== -1) {\n      current.splice(entityIndex, 1);\n      this.selectedEntitiesItems$.next(current);\n      this.selectedEntitySubject$.next(entity);\n    }\n  }\n\n  initSelection(selectionOptions?: SelectionOptions, addSelectedIndicator = true, eventPriority?: number, mapId?: string) {\n    const mapComponent = this.mapsManager.getMap(mapId);\n    if (!mapComponent) {\n      return;\n    }\n\n    this.mapEventsManagerService = mapComponent.getMapEventsManager();\n\n    if (!selectionOptions) {\n      Object.assign(selectionOptions, {event: CesiumEvent.LEFT_CLICK});\n    }\n\n    const eventSubscription = this.mapEventsManagerService.register({\n      event: selectionOptions.event,\n      pick: PickOptions.PICK_ONE,\n      modifier: selectionOptions.modifier,\n      entityType: selectionOptions.entityType,\n      priority: eventPriority,\n    });\n\n    eventSubscription.pipe(\n      map(result => result.entities),\n      filter(entities => entities && entities.length > 0))\n      .subscribe(entities => {\n        const entity = entities[0];\n        this.toggleSelection(entity, addSelectedIndicator);\n      });\n  }\n}\n","import { Cartesian2 } from '../angular-cesium/models/cartesian2';\nimport { Cartesian3 } from '../angular-cesium/models/cartesian3';\nimport { GeoUtilsService } from '../angular-cesium/services/geo-utils/geo-utils.service';\nimport * as h337 from 'heatmap.js/build/heatmap.js';\nimport { Injectable } from '@angular/core';\n\n// Consider moving to a different package.\n\nif (!h337) {\n  throw new Error('must install heatmap.js. please do npm -i heatmap.js ');\n}\n\n\nexport interface Rectangle {\n  west: number;\n  south: number;\n  east: number;\n  north: number;\n}\n\n\n/**\n *  x: lon\n *  y: lat\n *  value: point value\n */\nexport interface HeatPointDataPoint {\n  x: number;\n  y: number;\n  value: number;\n}\n\n/**\n *   min:  the minimum allowed value for the data values\n *  max:  the maximum allowed value for the data values\n *  heatPointsData: an array of data points in WGS84 coordinates and values like { x:lon, y:lat, value)\n */\nexport interface HeatmapDataSet {\n  min?: number;\n  max?: number;\n  heatPointsData: HeatPointDataPoint[];\n}\n\n/**\n * a heatmap.js options object (see http://www.patrick-wied.at/static/heatmapjs/docs.html#h337-create)\n */\nexport interface HeatMapOptions {\n  [propName: string]: any;\n\n  gradient?: any;\n  radius?: number;\n  opacity?: number;\n  maxOpacity?: number;\n  minOpacity?: number;\n  blur?: any;\n}\n\n/**\n * Create heatmap material (Cesium.ImageMaterialProperty with heatmap as the image)\n * works with http://www.patrick-wied.at/static/heatmapjs. must do npm -i heatmap.js\n * usage:\n * ```\n *\n const mCreator = new CesiumHeatMapMaterialCreator();\n const containingRect = CesiumHeatMapMaterialCreator.calcCircleContainingRect(this.circleCenter, this.circleRadius);\n const userHeatmapOptions = {\n\t\t\tradius : 2000,\n\t\t\tminOpacity : 0,\n\t\t\tmaxOpacity : 0.9,\n\t\t} as any;\n\n this.circleHeatMapMaterial = mCreator.create(containingRect, {\n\t\t\theatPointsData : [\n\t\t\t\t{\n\t\t\t\t\tx : -100.0,\n\t\t\t\t\ty : 24.0,\n\t\t\t\t\tvalue : 95\n\t\t\t\t}\n\t\t\t],\n\t\t\tmin : 0,\n\t\t\tmax : 100,\n\t\t}, userHeatmapOptions);\n * ```\n *\n * inspired by https://github.com/danwild/CesiumHeatmap\n */\n@Injectable()\nexport class CesiumHeatMapMaterialCreator {\n\n\n  private static containerCanvasCounter = 0;\n\n  heatmapOptionsDefaults = {\n    minCanvasSize: 700,           // minimum size (in pixels) for the heatmap canvas\n    maxCanvasSize: 2000,          // maximum size (in pixels) for the heatmap canvas\n    radiusFactor: 60,             // data point size factor used if no radius is given\n    // (the greater of height and width divided by this number yields the used radius)\n    spacingFactor: 1,           // extra space around the borders (point radius multiplied by this number yields the spacing)\n    maxOpacity: 0.8,              // the maximum opacity used if not given in the heatmap options object\n    minOpacity: 0.1,              // the minimum opacity used if not given in the heatmap options object\n    blur: 0.85,                   // the blur used if not given in the heatmap options object\n    gradient: {                   // the gradient used if not given in the heatmap options object\n      '.3': 'blue',\n      '.65': 'yellow',\n      '.8': 'orange',\n      '.95': 'red'\n    },\n  };\n\n  WMP = new Cesium.WebMercatorProjection();\n  _spacing: number;\n  width: number;\n  height: number;\n  _mbounds: any;\n  bounds: any;\n  _factor: number;\n  _rectangle: Rectangle;\n  heatmap: any;\n  _xoffset: any;\n  _yoffset: any;\n\n  /**\n   *\n   * @param center - Cartesian3\n   * @param radius - Meters\n   */\n  static calcCircleContainingRect(center: Cartesian3, radius: number) {\n    return CesiumHeatMapMaterialCreator.calcEllipseContainingRect(center, radius, radius);\n  }\n\n  /**\n   *\n   * @param center - Cartesian3\n   * @param semiMinorAxis - meters\n   * @param semiMajorAxis - meters\n   */\n  static calcEllipseContainingRect(center: Cartesian3, semiMajorAxis: number, semiMinorAxis: number) {\n    const top = GeoUtilsService.pointByLocationDistanceAndAzimuth(\n      center,\n      semiMinorAxis,\n      0,\n      true\n    );\n    const right = GeoUtilsService.pointByLocationDistanceAndAzimuth(\n      center,\n      semiMajorAxis,\n      Math.PI / 2,\n      true\n    );\n    const bottom = GeoUtilsService.pointByLocationDistanceAndAzimuth(\n      center,\n      semiMajorAxis,\n      Math.PI,\n      true\n    );\n    const left = GeoUtilsService.pointByLocationDistanceAndAzimuth(\n      center,\n      semiMajorAxis,\n      Math.PI * 1.5,\n      true\n    );\n\n    const ellipsePoints = [top, right, bottom, left];\n    return Cesium.Rectangle.fromCartesianArray(ellipsePoints);\n  }\n\n  /**\n   *\n   * @param points Cartesian3\n   */\n  static calculateContainingRectFromPoints(points: Cartesian3[]) {\n    return Cesium.Rectangle.fromCartesianArray(points);\n  }\n\n\n  /**  Set an array of heatmap locations\n   *\n   *  min:  the minimum allowed value for the data values\n   *  max:  the maximum allowed value for the data values\n   *  data: an array of data points in heatmap coordinates and values like {x, y, value}\n   */\n  setData(min: any, max: any, data: any) {\n    if (data && data.length > 0 && min !== null && min !== false && max !== null && max !== false) {\n      this.heatmap.setData({\n        min: min,\n        max: max,\n        data: data\n      });\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**  Set an array of WGS84 locations\n   *\n   *  min:  the minimum allowed value for the data values\n   *  max:  the maximum allowed value for the data values\n   *  data: an array of data points in WGS84 coordinates and values like { x:lon, y:lat, value }\n   */\n  private setWGS84Data(min: any, max: any, data: any) {\n    if (data && data.length > 0 && min !== null && min !== false && max !== null && max !== false) {\n      const convdata = [];\n\n      for (let i = 0; i < data.length; i++) {\n        const gp = data[i];\n\n        const hp = this.wgs84PointToHeatmapPoint(gp);\n        if (gp.value || gp.value === 0) {\n          hp.value = gp.value;\n        }\n\n        convdata.push(hp);\n      }\n\n      return this.setData(min, max, convdata);\n    }\n\n    return false;\n  }\n\n  /**  Convert a mercator location to the corresponding heatmap location\n   *\n   *  p: a WGS84 location like {x: lon, y:lat}\n   */\n  private mercatorPointToHeatmapPoint(p: Cartesian2) {\n    const pn: any = {};\n\n    pn.x = Math.round((p.x - this._xoffset) / this._factor + this._spacing);\n    pn.y = Math.round((p.y - this._yoffset) / this._factor + this._spacing);\n    pn.y = this.height - pn.y;\n\n    return pn;\n  }\n\n  /**  Convert a WGS84 location to the corresponding heatmap location\n   *\n   *  p: a WGS84 location like {x:lon, y:lat}\n   */\n  private wgs84PointToHeatmapPoint = function (p: Cartesian2) {\n    return this.mercatorPointToHeatmapPoint(this.wgs84ToMercator(p));\n  };\n\n\n  private createContainer(height: number, width: number) {\n    const id = 'heatmap' + CesiumHeatMapMaterialCreator.containerCanvasCounter++;\n    const container = document.createElement('div');\n    container.setAttribute('id', id);\n    container.setAttribute('style', 'width: ' + width + 'px; height: ' + height + 'px; margin: 0px; display: none;');\n    document.body.appendChild(container);\n    return {container, id};\n  }\n\n  /**  Convert a WGS84 location into a mercator location\n   *\n   *  p: the WGS84 location like {x: lon, y: lat}\n   */\n  private wgs84ToMercator(p: Cartesian2) {\n    const mp = this.WMP.project(Cesium.Cartographic.fromDegrees(p.x, p.y));\n    return {\n      x: mp.x,\n      y: mp.y\n    };\n  }\n\n  private rad2deg = function (r: number) {\n    const d = r / (Math.PI / 180.0);\n    return d;\n  };\n\n  /**  Convert a WGS84 bounding box into a mercator bounding box*\n   *  bb: the WGS84 bounding box like {north, east, south, west}\n   */\n  private wgs84ToMercatorBB(bb: any) {\n    // TODO validate rad or deg\n    const sw = this.WMP.project(Cesium.Cartographic.fromRadians(bb.west, bb.south));\n    const ne = this.WMP.project(Cesium.Cartographic.fromRadians(bb.east, bb.north));\n    return {\n      north: ne.y,\n      east: ne.x,\n      south: sw.y,\n      west: sw.x\n    };\n  }\n\n  /**  Convert a mercator bounding box into a WGS84 bounding box\n   *\n   *  bb: the mercator bounding box like {north, east, south, west}\n   */\n  private mercatorToWgs84BB(bb: any) {\n    const sw = this.WMP.unproject(new Cesium.Cartesian3(bb.west, bb.south));\n    const ne = this.WMP.unproject(new Cesium.Cartesian3(bb.east, bb.north));\n    return {\n      north: this.rad2deg(ne.latitude),\n      east: this.rad2deg(ne.longitude),\n      south: this.rad2deg(sw.latitude),\n      west: this.rad2deg(sw.longitude)\n    };\n  }\n\n  private setWidthAndHeight(mbb: any) {\n    this.width = ((mbb.east > 0 && mbb.west < 0) ? mbb.east + Math.abs(mbb.west) : Math.abs(mbb.east - mbb.west));\n    this.height = ((mbb.north > 0 && mbb.south < 0) ? mbb.north + Math.abs(mbb.south) : Math.abs(mbb.north - mbb.south));\n    this._factor = 1;\n\n    if (this.width > this.height && this.width > this.heatmapOptionsDefaults.maxCanvasSize) {\n      this._factor = this.width / this.heatmapOptionsDefaults.maxCanvasSize;\n\n      if (this.height / this._factor < this.heatmapOptionsDefaults.minCanvasSize) {\n        this._factor = this.height / this.heatmapOptionsDefaults.minCanvasSize;\n      }\n    } else if (this.height > this.width && this.height > this.heatmapOptionsDefaults.maxCanvasSize) {\n      this._factor = this.height / this.heatmapOptionsDefaults.maxCanvasSize;\n\n      if (this.width / this._factor < this.heatmapOptionsDefaults.minCanvasSize) {\n        this._factor = this.width / this.heatmapOptionsDefaults.minCanvasSize;\n      }\n    } else if (this.width < this.height && this.width < this.heatmapOptionsDefaults.minCanvasSize) {\n      this._factor = this.width / this.heatmapOptionsDefaults.minCanvasSize;\n\n      if (this.height / this._factor > this.heatmapOptionsDefaults.maxCanvasSize) {\n        this._factor = this.height / this.heatmapOptionsDefaults.maxCanvasSize;\n      }\n    } else if (this.height < this.width && this.height < this.heatmapOptionsDefaults.minCanvasSize) {\n      this._factor = this.height / this.heatmapOptionsDefaults.minCanvasSize;\n\n      if (this.width / this._factor > this.heatmapOptionsDefaults.maxCanvasSize) {\n        this._factor = this.width / this.heatmapOptionsDefaults.maxCanvasSize;\n      }\n    }\n\n    this.width = this.width / this._factor;\n    this.height = this.height / this._factor;\n  }\n\n  /**\n   * containingBoundingRect: Cesium.Rectangle like {north, east, south, west}\n   * min:  the minimum allowed value for the data values\n   * max:  the maximum allowed value for the data values\n   * datapoint: {x,y,value}\n   * heatmapOptions: a heatmap.js options object (see http://www.patrick-wied.at/static/heatmapjs/docs.html#h337-create)\n   *\n   */\n  public create(containingBoundingRect: Rectangle, heatmapDataSet: HeatmapDataSet, heatmapOptions: HeatMapOptions) {\n    const userBB = containingBoundingRect;\n    const {heatPointsData, min = 0, max = 100} = heatmapDataSet;\n    const finalHeatmapOptions = Object.assign({}, this.heatmapOptionsDefaults, heatmapOptions);\n\n    this._mbounds = this.wgs84ToMercatorBB(userBB);\n    this.setWidthAndHeight(this._mbounds);\n\n    finalHeatmapOptions.radius = Math.round((heatmapOptions.radius) ?\n      heatmapOptions.radius : ((this.width > this.height) ?\n        this.width / this.heatmapOptionsDefaults.radiusFactor :\n        this.height / this.heatmapOptionsDefaults.radiusFactor));\n    this._spacing = finalHeatmapOptions.radius * this.heatmapOptionsDefaults.spacingFactor;\n    this._xoffset = this._mbounds.west;\n    this._yoffset = this._mbounds.south;\n\n    this.width = Math.round(this.width + this._spacing * 2);\n    this.height = Math.round(this.height + this._spacing * 2);\n\n    this._mbounds.west -= this._spacing * this._factor;\n    this._mbounds.east += this._spacing * this._factor;\n    this._mbounds.south -= this._spacing * this._factor;\n    this._mbounds.north += this._spacing * this._factor;\n\n    this.bounds = this.mercatorToWgs84BB(this._mbounds);\n    this._rectangle = Cesium.Rectangle.fromDegrees(this.bounds.west, this.bounds.south, this.bounds.east, this.bounds.north);\n\n    const {container, id} = this.createContainer(this.height, this.width);\n    Object.assign(finalHeatmapOptions, {container});\n\n    this.heatmap = h337.create(finalHeatmapOptions);\n\n\n    this.setWGS84Data(0, 100, heatPointsData);\n    const heatMapCanvas = this.heatmap._renderer.canvas;\n    const heatMapMaterial = new Cesium.ImageMaterialProperty({\n      image: heatMapCanvas,\n      transparent: true,\n    });\n    this.setClear(heatMapMaterial, id);\n\n    return heatMapMaterial;\n  }\n\n  private setClear(heatMapMaterial: any, id: string) {\n    heatMapMaterial.clear = () => {\n      const elem = document.getElementById(id);\n      return elem.parentNode.removeChild(elem);\n    };\n  }\n}\n\n","export enum EditModes {\n  CREATE,\n  EDIT,\n  CREATE_OR_EDIT\n}\n","export enum EditActions {\n  INIT,\n  MOUSE_MOVE,\n  ADD_POINT,\n  ADD_LAST_POINT,\n  CHANGE_TO_EDIT,\n  REMOVE_POINT,\n  DRAG_POINT,\n  DRAG_POINT_FINISH,\n  DRAG_SHAPE,\n  DRAG_SHAPE_FINISH,\n  DONE,\n  DISABLE,\n  ENABLE,\n  DISPOSE,\n  SET_EDIT_LABELS_RENDER_CALLBACK,\n  UPDATE_EDIT_LABELS,\n  SET_MANUALLY,\n  TRANSFORM,\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { PointProps } from './polyline-edit-options';\n\nexport class EditPoint extends AcEntity {\n  static counter = 0;\n  private id: string;\n  private editedEntityId: string;\n  private position: Cartesian3;\n  private _virtualEditPoint: boolean;\n  private pointProps: PointProps;\n  private _show = true;\n\n  constructor(entityId: string, position: Cartesian3, pointProps?: PointProps, virtualPoint = false) {\n    super();\n    this.editedEntityId = entityId;\n    this.position = position;\n    this.id = this.generateId();\n    this.pointProps = pointProps;\n    this._virtualEditPoint = virtualPoint;\n  }\n\n  get show() {\n    return this._show;\n  }\n\n  set show(value) {\n    this._show = value;\n  }\n\n  get props(): PointProps {\n    return this.pointProps;\n  }\n\n  set props(value: PointProps) {\n    this.pointProps = value;\n  }\n\n  isVirtualEditPoint(): boolean {\n    return this._virtualEditPoint;\n  }\n\n  setVirtualEditPoint(value: boolean) {\n    this._virtualEditPoint = value;\n  }\n\n  getEditedEntityId(): string {\n    return this.editedEntityId;\n  }\n\n  getPosition(): Cartesian3 {\n    return this.position;\n  }\n\n  setPosition(position: Cartesian3) {\n    this.position.x = position.x;\n    this.position.y = position.y;\n    this.position.z = position.z;\n  }\n\n  getId(): string {\n    return this.id;\n  }\n\n  private generateId(): string {\n    return 'edit-point-' + EditPoint.counter++;\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { PolylineProps } from './polyline-edit-options';\n\nexport class EditPolyline extends AcEntity {\n  static counter = 0;\n  private editedEntityId: string;\n  private id: string;\n  private positions: Cartesian3[];\n  private _polylineProps: PolylineProps;\n\n  constructor(entityId: string, startPosition: Cartesian3, endPosition: Cartesian3, polylineProps?: PolylineProps) {\n    super();\n    this.editedEntityId = entityId;\n    this.id = this.generateId();\n    this.positions = [startPosition, endPosition];\n    this._polylineProps = polylineProps;\n  }\n\n  get props(): PolylineProps {\n    return this._polylineProps;\n  }\n\n  set props(value: PolylineProps) {\n    this._polylineProps = value;\n  }\n\n  getEditedEntityId(): string {\n    return this.editedEntityId;\n  }\n\n  getPositions(): any[] {\n    return this.positions;\n  }\n\n  validatePositions(): boolean {\n    return this.positions[0] !== undefined && this.positions[1] !== undefined;\n  }\n\n  getStartPosition() {\n    return this.positions[0];\n  }\n\n  getEndPosition() {\n    return this.positions[1];\n  }\n\n  setStartPosition(position: Cartesian3) {\n    this.positions[0] = position;\n  }\n\n  setEndPosition(position: Cartesian3) {\n    this.positions[1] = position;\n  }\n\n  getId(): string {\n    return this.id;\n  }\n\n  private generateId(): string {\n    return 'edit-polyline-' + EditPolyline.counter++;\n  }\n}\n","import { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { Cartesian2 } from '../../angular-cesium/models/cartesian2';\n\nexport interface LabelStyle {\n  show?: boolean;\n  font?: string;\n  style?: any;\n  fillColor?: any;\n  outlineColor?: any;\n  backgroundColor?: any;\n  backgroundPadding?: any;\n  showBackground?: boolean;\n  scale?: number;\n  distanceDisplayCondition?: any;\n  heightReference?: any;\n  horizontalOrigin?: any;\n  eyeOffset?: Cartesian3;\n  position?: Cartesian3;\n  pixelOffset?: Cartesian2;\n  pixelOffsetScaleByDistance?: any;\n  outlineWidth?: any;\n  scaleByDistance?: any;\n  translucencyByDistance?: any;\n  verticalOrigin?: any;\n}\n\nexport interface LabelProps {\n  text: string;\n  show?: boolean;\n  font?: string;\n  style?: any;\n  fillColor?: any;\n  outlineColor?: any;\n  backgroundColor?: any;\n  backgroundPadding?: any;\n  showBackground?: boolean;\n  scale?: number;\n  distanceDisplayCondition?: any;\n  heightReference?: any;\n  horizontalOrigin?: any;\n  eyeOffset?: Cartesian3;\n  position?: Cartesian3;\n  pixelOffset?: Cartesian2;\n  pixelOffsetScaleByDistance?: any;\n  outlineWidth?: any;\n  scaleByDistance?: any;\n  translucencyByDistance?: any;\n  verticalOrigin?: any;\n}\n\nexport const defaultLabelProps: LabelProps = {\n  backgroundColor: new Cesium.Color(0.165, 0.165, 0.165, 0.7),\n  backgroundPadding: new Cesium.Cartesian2(7, 5),\n  distanceDisplayCondition: undefined,\n  eyeOffset: new Cesium.Cartesian3(0, 0, -999),\n  fillColor: Cesium.Color.WHITE,\n  font: '30px sans-serif',\n  heightReference: Cesium.HeightReference.NONE,\n  horizontalOrigin: Cesium.HorizontalOrigin.LEFT,\n  outlineColor: Cesium.Color.BLACK,\n  outlineWidth: 1.0,\n  pixelOffset: Cesium.Cartesian2.ZERO,\n  pixelOffsetScaleByDistance: undefined,\n  scale: 1.0,\n  scaleByDistance: undefined,\n  show: true,\n  showBackground: false,\n  style: Cesium.LabelStyle.FILL,\n  text: '',\n  translucencyByDistance: undefined,\n  verticalOrigin: Cesium.VerticalOrigin.BASELINE,\n};\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { EditPolyline } from './edit-polyline';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { PolygonEditOptions, PolygonProps } from './polygon-edit-options';\nimport { PointProps, PolylineProps } from './polyline-edit-options';\nimport { defaultLabelProps, LabelProps } from './label-props';\n\nexport class EditablePolygon extends AcEntity {\n  private positions: EditPoint[] = [];\n  private polylines: EditPolyline[] = [];\n  private movingPoint: EditPoint;\n  private doneCreation = false;\n  private _enableEdit = true;\n  private _polygonProps: PolygonProps;\n  private _defaultPointProps: PointProps;\n  private _defaultPolylineProps: PolylineProps;\n  private lastDraggedToPosition: Cartesian3;\n  private _labels: LabelProps[] = [];\n\n  constructor(private id: string,\n              private polygonsLayer: AcLayerComponent,\n              private pointsLayer: AcLayerComponent,\n              private polylinesLayer: AcLayerComponent,\n              private coordinateConverter: CoordinateConverter,\n              polygonOptions: PolygonEditOptions,\n              positions?: Cartesian3[]) {\n    super();\n    this.polygonProps = polygonOptions.polygonProps;\n    this.defaultPointProps = polygonOptions.pointProps;\n    this.defaultPolylineProps = polygonOptions.polylineProps;\n    if (positions && positions.length >= 3) {\n      this.createFromExisting(positions);\n    }\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels) {\n      return;\n    }\n    const positions = this.getRealPositions();\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        label.position = positions[index];\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get defaultPolylineProps(): PolylineProps {\n    return this._defaultPolylineProps;\n  }\n\n  set defaultPolylineProps(value: PolylineProps) {\n    this._defaultPolylineProps = value;\n  }\n\n  get defaultPointProps(): PointProps {\n    return this._defaultPointProps;\n  }\n\n  get polygonProps(): PolygonProps {\n    return this._polygonProps;\n  }\n\n  set polygonProps(value: PolygonProps) {\n    this._polygonProps = value;\n  }\n\n  set defaultPointProps(value: PointProps) {\n    this._defaultPointProps = value;\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this.positions.forEach(point => {\n      point.show = value;\n      this.updatePointsLayer(false, point);\n    });\n  }\n\n  private createFromExisting(positions: Cartesian3[]) {\n    positions.forEach((position) => {\n      this.addPointFromExisting(position);\n    });\n    this.addAllVirtualEditPoints();\n    this.updatePolygonsLayer();\n    this.doneCreation = true;\n  }\n\n  setPointsManually(points: { position: Cartesian3, pointProps: PointProps }[] | Cartesian3[], polygonProps?: PolygonProps) {\n    if (!this.doneCreation) {\n      throw new Error('Update manually only in edit mode, after polygon is created');\n    }\n\n    this.positions.forEach(p => this.pointsLayer.remove(p.getId()));\n    const newPoints: EditPoint[] = [];\n    for (let i = 0; i < points.length; i++) {\n      const pointOrCartesian: any = points[i];\n      let newPoint = null;\n      if (pointOrCartesian.pointProps) {\n        newPoint = new EditPoint(this.id, pointOrCartesian.position, pointOrCartesian.pointProps);\n      } else {\n        newPoint = new EditPoint(this.id, pointOrCartesian, this.defaultPointProps);\n      }\n      newPoints.push(newPoint);\n    }\n    this.positions = newPoints;\n    this.polygonProps = polygonProps ? polygonProps : this.polygonProps;\n    this.updatePointsLayer(true, ...this.positions);\n    this.addAllVirtualEditPoints();\n    this.updatePolygonsLayer();\n  }\n\n  private addAllVirtualEditPoints() {\n    const currentPoints = [...this.positions];\n    currentPoints.forEach((pos, index) => {\n      const currentPoint = pos;\n      const nextIndex = (index + 1) % (currentPoints.length);\n      const nextPoint = currentPoints[nextIndex];\n      const midPoint = this.setMiddleVirtualPoint(currentPoint, nextPoint);\n      this.updatePointsLayer(false, midPoint);\n    });\n  }\n\n  private setMiddleVirtualPoint(firstP: EditPoint, secondP: EditPoint): EditPoint {\n    const currentCart = Cesium.Cartographic.fromCartesian(firstP.getPosition());\n    const nextCart = Cesium.Cartographic.fromCartesian(secondP.getPosition());\n    const midPointCartesian3 = this.coordinateConverter.midPointToCartesian3(currentCart, nextCart);\n    const midPoint = new EditPoint(this.id, midPointCartesian3, this.defaultPointProps);\n    midPoint.setVirtualEditPoint(true);\n\n    const firstIndex = this.positions.indexOf(firstP);\n    this.positions.splice(firstIndex + 1, 0, midPoint);\n    return midPoint;\n  }\n\n  private updateMiddleVirtualPoint(virtualEditPoint: EditPoint, prevPoint: EditPoint, nextPoint: EditPoint) {\n    const prevPointCart = Cesium.Cartographic.fromCartesian(prevPoint.getPosition());\n    const nextPointCart = Cesium.Cartographic.fromCartesian(nextPoint.getPosition());\n    virtualEditPoint.setPosition(this.coordinateConverter.midPointToCartesian3(prevPointCart, nextPointCart));\n  }\n\n  changeVirtualPointToRealPoint(point: EditPoint) {\n    point.setVirtualEditPoint(false); // virtual point becomes a real point\n    const pointsCount = this.positions.length;\n    const pointIndex = this.positions.indexOf(point);\n    const nextIndex = (pointIndex + 1) % (pointsCount);\n    const preIndex = ((pointIndex - 1) + pointsCount) % pointsCount;\n\n    const nextPoint = this.positions[nextIndex];\n    const prePoint = this.positions[preIndex];\n\n    const firstMidPoint = this.setMiddleVirtualPoint(prePoint, point);\n    const secMidPoint = this.setMiddleVirtualPoint(point, nextPoint);\n    this.updatePointsLayer(true, firstMidPoint, secMidPoint, point);\n    this.updatePolygonsLayer();\n\n  }\n\n  private renderPolylines() {\n    this.polylines.forEach(polyline => this.polylinesLayer.remove(polyline.getId()));\n    this.polylines = [];\n    const realPoints = this.positions.filter(pos => !pos.isVirtualEditPoint());\n    realPoints.forEach((point, index) => {\n      const nextIndex = (index + 1) % (realPoints.length);\n      const nextPoint = realPoints[nextIndex];\n      const polyline = new EditPolyline(this.id, point.getPosition(), nextPoint.getPosition(), this.defaultPolylineProps);\n      this.polylines.push(polyline);\n      this.polylinesLayer.update(polyline, polyline.getId());\n    });\n  }\n\n  addPointFromExisting(position: Cartesian3) {\n    const newPoint = new EditPoint(this.id, position, this.defaultPointProps);\n    this.positions.push(newPoint);\n    this.updatePointsLayer(true, newPoint);\n  }\n\n\n  addPoint(position: Cartesian3) {\n    if (this.doneCreation) {\n      return;\n    }\n    const isFirstPoint = !this.positions.length;\n    if (isFirstPoint) {\n      const firstPoint = new EditPoint(this.id, position, this.defaultPointProps);\n      this.positions.push(firstPoint);\n      this.updatePointsLayer(true, firstPoint);\n    }\n\n    this.movingPoint = new EditPoint(this.id, position.clone(), this.defaultPointProps);\n    this.positions.push(this.movingPoint);\n\n    this.updatePointsLayer(true, this.movingPoint);\n    this.updatePolygonsLayer();\n  }\n\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\n    editPoint.setPosition(toPosition);\n    this.updatePolygonsLayer();\n    if (this.doneCreation) {\n      if (editPoint.isVirtualEditPoint()) {\n        this.changeVirtualPointToRealPoint(editPoint);\n      }\n      const pointsCount = this.positions.length;\n      const pointIndex = this.positions.indexOf(editPoint);\n      const nextVirtualPoint = this.positions[(pointIndex + 1) % (pointsCount)];\n      const nextRealPoint = this.positions[(pointIndex + 2) % (pointsCount)];\n      const prevVirtualPoint = this.positions[((pointIndex - 1) + pointsCount) % pointsCount];\n      const prevRealPoint = this.positions[((pointIndex - 2) + pointsCount) % pointsCount];\n      this.updateMiddleVirtualPoint(nextVirtualPoint, editPoint, nextRealPoint);\n      this.updateMiddleVirtualPoint(prevVirtualPoint, editPoint, prevRealPoint);\n      this.updatePointsLayer(false, nextVirtualPoint);\n      this.updatePointsLayer(false, prevVirtualPoint);\n    }\n    this.updatePointsLayer(true, editPoint);\n  }\n\n  moveTempMovingPoint(toPosition: Cartesian3) {\n    if (this.movingPoint) {\n      this.movePoint(toPosition, this.movingPoint);\n    }\n  }\n\n  movePolygon(startMovingPosition: Cartesian3, draggedToPosition: Cartesian3) {\n    if (!this.doneCreation) {\n      return;\n    }\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = startMovingPosition;\n    }\n\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, draggedToPosition);\n    this.positions.forEach(point => {\n      GeoUtilsService.addDeltaToPosition(point.getPosition(), delta, true);\n    });\n    this.updatePointsLayer();\n    this.lastDraggedToPosition = draggedToPosition;\n    this.positions.forEach(point => this.updatePointsLayer(true, point));\n  }\n\n  endMovePolygon() {\n    this.lastDraggedToPosition = undefined;\n  }\n\n  removePoint(pointToRemove: EditPoint) {\n    this.removePosition(pointToRemove);\n    this.positions\n      .filter(p => p.isVirtualEditPoint())\n      .forEach(p => this.removePosition(p));\n    this.addAllVirtualEditPoints();\n\n    this.renderPolylines();\n    if (this.getPointsCount() >= 3) {\n      this.polygonsLayer.update(this, this.id);\n    }\n  }\n\n  addLastPoint(position: Cartesian3) {\n    this.doneCreation = true;\n    this.removePosition(this.movingPoint); // remove movingPoint\n    this.movingPoint = null;\n    this.updatePolygonsLayer();\n\n    this.addAllVirtualEditPoints();\n  }\n\n  getRealPositions(): Cartesian3[] {\n    return this.getRealPoints().map(position => position.getPosition());\n  }\n\n  getRealPoints(): EditPoint[] {\n    return this.positions.filter(position => !position.isVirtualEditPoint() && position !== this.movingPoint);\n  }\n\n  getPositionsHierarchy(): Cartesian3[] {\n    return this.positions.filter(position => !position.isVirtualEditPoint()).map(position => position.getPosition());\n  }\n\n  getPositionsHierarchyCallbackProperty(): Cartesian3[] {\n    return new Cesium.CallbackProperty(this.getPositionsHierarchy.bind(this), false);\n  }\n\n  private removePosition(point: EditPoint) {\n    const index = this.positions.findIndex((p) => p === point);\n    if (index < 0) {\n      return;\n    }\n    this.positions.splice(index, 1);\n    this.pointsLayer.remove(point.getId());\n  }\n\n  private updatePolygonsLayer() {\n    if (this.getPointsCount() >= 3) {\n      this.polygonsLayer.update(this, this.id);\n    }\n  }\n\n  private updatePointsLayer(renderPolylines = true, ...points: EditPoint[]) {\n    if (renderPolylines) {\n      this.renderPolylines();\n    }\n    points.forEach(p => this.pointsLayer.update(p, p.getId()));\n  }\n\n  dispose() {\n    this.polygonsLayer.remove(this.id);\n\n    this.positions.forEach(editPoint => {\n      this.pointsLayer.remove(editPoint.getId());\n    });\n    this.polylines.forEach(line => this.polylinesLayer.remove(line.getId()));\n    if (this.movingPoint) {\n      this.pointsLayer.remove(this.movingPoint.getId());\n      this.movingPoint = undefined;\n    }\n    this.positions.length = 0;\n  }\n\n  getPointsCount(): number {\n    return this.positions.length;\n  }\n\n  getId() {\n    return this.id;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EditablePolygon } from '../../../models/editable-polygon';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { PolygonEditOptions } from '../../../models/polygon-edit-options';\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\n\n@Injectable()\nexport class PolygonsManagerService {\n  polygons: Map<string, EditablePolygon> = new Map<string, EditablePolygon>();\n\n  createEditablePolygon(id: string, editPolygonsLayer: AcLayerComponent, editPointsLayer: AcLayerComponent,\n                        editPolylinesLayer: AcLayerComponent, coordinateConverter: CoordinateConverter,\n                        polygonOptions?: PolygonEditOptions, positions?: Cartesian3[]) {\n    const editablePolygon = new EditablePolygon(\n      id,\n      editPolygonsLayer,\n      editPointsLayer,\n      editPolylinesLayer,\n      coordinateConverter,\n      polygonOptions,\n      positions);\n    this.polygons.set(id, editablePolygon\n    );\n  }\n\n  dispose(id: string) {\n    this.polygons.get(id).dispose();\n    this.polygons.delete(id);\n  }\n\n  get(id: string): EditablePolygon {\n    return this.polygons.get(id);\n  }\n\n  clear() {\n    this.polygons.forEach(polygon => polygon.dispose());\n    this.polygons.clear();\n  }\n}\n","export function generateKey(length = 12): string {\n  let id = '';\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (let i = 0; i < length; i++) {\n    id += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return id;\n}\n","import { publish, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { PolygonEditUpdate } from '../../../models/polygon-edit-update';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from '../../../models/edit-point';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { PolygonsManagerService } from './polygons-manager.service';\nimport { PolygonEditorObservable } from '../../../models/polygon-editor-observable';\nimport { EditablePolygon } from '../../../models/editable-polygon';\nimport { PolygonEditOptions, PolygonProps } from '../../../models/polygon-edit-options';\nimport { PointProps } from '../../../models/polyline-edit-options';\nimport { LabelProps } from '../../../models/label-props';\nimport { generateKey } from '../../utils';\n\nexport const DEFAULT_POLYGON_OPTIONS: PolygonEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  addLastPointEvent: CesiumEvent.LEFT_DOUBLE_CLICK,\n  removePointEvent: CesiumEvent.RIGHT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  allowDrag: true,\n  pointProps: {\n    color: Cesium.Color.WHITE.withAlpha(0.9),\n    outlineColor: Cesium.Color.BLACK,\n    outlineWidth: 1,\n    pixelSize: 15,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n  },\n  polygonProps: {\n    material: new Cesium.Color(0.1, 0.5, 0.2, 0.4),\n  },\n  polylineProps: {\n    material: () => Cesium.Color.BLACK,\n    width: 1,\n  },\n};\n\n/**\n * Service for creating editable polygons\n *\n * You must provide `PolygonsEditorService` yourself.\n * PolygonsEditorService works together with `<polygons-editor>` component. Therefor you need to create `<polygons-editor>`\n * for each `PolygonsEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `PolygonEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `PolygonEditorObservable`.\n * + To stop editing call `dsipose()` from the `PolygonEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over editted shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `PolygonEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n * usage:\n * ```typescript\n *  // Start creating polygon\n *  const editing$ = polygonsEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit polygon from existing polygon positions\n *  const editing$ = this.polygonsEditorService.edit(initialPos);\n *\n * ```\n */\n@Injectable()\nexport class PolygonsEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<PolygonEditUpdate>();\n  private updatePublisher = publish<PolygonEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private polygonsManager: PolygonsManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n\n  init(mapEventsManager: MapEventsManagerService,\n       coordinateConverter: CoordinateConverter,\n       cameraService: CameraService,\n       polygonsManager: PolygonsManagerService) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.polygonsManager = polygonsManager;\n    this.updatePublisher.connect();\n  }\n\n  onUpdate(): Observable<PolygonEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  create(options = DEFAULT_POLYGON_OPTIONS, priority = 100): PolygonEditorObservable {\n    const positions: Cartesian3[] = [];\n    const id = generateKey();\n    const polygonOptions = this.setOptions(options);\n\n    const clientEditSubject = new BehaviorSubject<PolygonEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      positions,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      polygonOptions: polygonOptions,\n    });\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      priority,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: polygonOptions.addPointEvent,\n      pick: PickOptions.NO_PICK,\n      priority,\n    });\n    const addLastPointRegistration = this.mapEventsManager.register({\n      event: polygonOptions.addLastPointEvent,\n      pick: PickOptions.NO_PICK,\n      priority,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration, addLastPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id);\n\n    mouseMoveRegistration.subscribe(({movement: {endPosition}}) => {\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n\n      if (position) {\n        this.updateSubject.next({\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.CREATE,\n          updatedPosition: position,\n          editAction: EditActions.MOUSE_MOVE,\n        });\n      }\n    });\n\n    addPointRegistration.subscribe(({movement: {endPosition}}) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (!position) {\n        return;\n      }\n      const allPositions = this.getPositions(id);\n      if (allPositions.find((cartesian) => cartesian.equals(position))) {\n        return;\n      }\n\n      const updateValue = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.CREATE,\n        updatedPosition: position,\n        editAction: EditActions.ADD_POINT,\n      };\n      this.updateSubject.next(updateValue);\n      clientEditSubject.next({\n        ...updateValue,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n      });\n\n      if (polygonOptions.maximumNumberOfPoints && allPositions.length + 1 === polygonOptions.maximumNumberOfPoints) {\n        finishedCreate = this.switchToEditMode(\n          id,\n          position,\n          clientEditSubject,\n          positions,\n          priority,\n          polygonOptions,\n          editorObservable,\n          finishedCreate);\n      }\n    });\n\n\n    addLastPointRegistration.subscribe(({movement: {endPosition}}) => {\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (!position) {\n        return;\n      }\n      // position already added by addPointRegistration\n      finishedCreate = this.switchToEditMode(\n        id,\n        position,\n        clientEditSubject,\n        positions,\n        priority,\n        polygonOptions,\n        editorObservable,\n        finishedCreate);\n    });\n\n    return editorObservable;\n  }\n\n  private switchToEditMode(id,\n                           position,\n                           clientEditSubject,\n                           positions: Cartesian3[],\n                           priority,\n                           polygonOptions,\n                           editorObservable,\n                           finishedCreate: boolean) {\n    const updateValue = {\n      id,\n      positions: this.getPositions(id),\n      editMode: EditModes.CREATE,\n      updatedPosition: position,\n      editAction: EditActions.ADD_LAST_POINT,\n    };\n    this.updateSubject.next(updateValue);\n    clientEditSubject.next({\n      ...updateValue,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n    });\n\n    const changeMode = {\n      id,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.CHANGE_TO_EDIT,\n    };\n    this.updateSubject.next(changeMode);\n    clientEditSubject.next(changeMode);\n    if (this.observablesMap.has(id)) {\n      this.observablesMap.get(id).forEach(registration => registration.dispose());\n    }\n    this.observablesMap.delete(id);\n    this.editPolygon(id, positions, priority, clientEditSubject, polygonOptions, editorObservable);\n    finishedCreate = true;\n    return finishedCreate;\n  }\n\n  edit(positions: Cartesian3[], options = DEFAULT_POLYGON_OPTIONS, priority = 100): PolygonEditorObservable {\n    if (positions.length < 3) {\n      throw new Error('Polygons editor error edit(): polygon should have at least 3 positions');\n    }\n    const id = generateKey();\n    const polygonOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<PolygonEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT\n    });\n    const update = {\n      id,\n      positions: positions,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      polygonOptions: polygonOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n    });\n    return this.editPolygon(\n      id,\n      positions,\n      priority,\n      editSubject,\n      polygonOptions\n    );\n  }\n\n  private editPolygon(id: string,\n                      positions: Cartesian3[],\n                      priority: number,\n                      editSubject: Subject<PolygonEditUpdate>,\n                      options: PolygonEditOptions,\n                      editObservable?: PolygonEditorObservable): PolygonEditorObservable {\n\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: options.dragPointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: options.dragShapeEvent,\n        entityType: EditablePolygon,\n        pick: PickOptions.PICK_FIRST,\n        priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n    const pointRemoveRegistration = this.mapEventsManager.register({\n      event: options.removePointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    pointDragRegistration.pipe(\n      tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n      .subscribe(({movement: {endPosition, drop}, entities}) => {\n        const position = this.coordinateConverter.screenToCartesian3(endPosition);\n        if (!position) {\n          return;\n        }\n        const point: EditPoint = entities[0];\n\n        const update = {\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.EDIT,\n          updatedPosition: position,\n          updatedPoint: point,\n          editAction: drop ? EditActions.DRAG_POINT_FINISH : EditActions.DRAG_POINT,\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n          positions: this.getPositions(id),\n          points: this.getPoints(id),\n        });\n      });\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n        .subscribe(({movement: {startPosition, endPosition, drop}, entities}) => {\n          const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n          const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n          if (!endDragPosition) {\n            return;\n          }\n\n          const update = {\n            id,\n            positions: this.getPositions(id),\n            editMode: EditModes.EDIT,\n            updatedPosition: endDragPosition,\n            draggedPosition: startDragPosition,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n            positions: this.getPositions(id),\n            points: this.getPoints(id),\n          });\n        });\n    }\n\n    pointRemoveRegistration.subscribe(({entities}) => {\n      const point: EditPoint = entities[0];\n      const allPositions = [...this.getPositions(id)];\n      if (allPositions.length < 4) {\n        return;\n      }\n      const index = allPositions.findIndex(position => point.getPosition().equals(position as Cartesian3));\n      if (index < 0) {\n        return;\n      }\n\n      const update = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.EDIT,\n        updatedPoint: point,\n        editAction: EditActions.REMOVE_POINT,\n      };\n      this.updateSubject.next(update);\n      editSubject.next({\n        ...update,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n      });\n    });\n\n    const observables = [pointDragRegistration, pointRemoveRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n\n    this.observablesMap.set(id, observables);\n    return editObservable || this.createEditorObservable(editSubject, id);\n  }\n\n  private setOptions(options: PolygonEditOptions) {\n    if (options.maximumNumberOfPoints && options.maximumNumberOfPoints < 3) {\n      console.warn('Warn: PolygonEditor invalid option.' +\n        ' maximumNumberOfPoints smaller then 3, maximumNumberOfPoints changed to 3');\n      options.maximumNumberOfPoints = 3;\n    }\n\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_POLYGON_OPTIONS));\n    const polygonOptions = Object.assign(defaultClone, options);\n    polygonOptions.pointProps = Object.assign({}, DEFAULT_POLYGON_OPTIONS.pointProps, options.pointProps);\n    polygonOptions.polygonProps = Object.assign({}, DEFAULT_POLYGON_OPTIONS.polygonProps, options.polygonProps);\n    polygonOptions.polylineProps = Object.assign({}, DEFAULT_POLYGON_OPTIONS.polylineProps, options.polylineProps);\n    return polygonOptions;\n  }\n\n\n  private createEditorObservable(observableToExtend: any, id: string): PolygonEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      });\n    };\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n      });\n    };\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n      });\n    };\n    observableToExtend.setManually = (points: {\n      position: Cartesian3, pointProps: PointProps\n    }[] | Cartesian3[], polygonProps?: PolygonProps) => {\n      const polygon = this.polygonsManager.get(id);\n      polygon.setPointsManually(points, polygonProps);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: any) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      });\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      });\n    };\n\n    observableToExtend.getCurrentPoints = () => this.getPoints(id);\n\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n\n    observableToExtend.getLabels = (): LabelProps[] => this.polygonsManager.get(id).labels;\n\n    return observableToExtend as PolygonEditorObservable;\n  }\n\n  private getPositions(id: string) {\n    const polygon = this.polygonsManager.get(id);\n    return polygon.getRealPositions();\n  }\n\n  private getPoints(id: string) {\n    const polygon = this.polygonsManager.get(id);\n    return polygon.getRealPoints();\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { PolygonEditUpdate } from '../../models/polygon-edit-update';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { PolygonsManagerService } from '../../services/entity-editors/polygons-editor/polygons-manager.service';\nimport { PolygonsEditorService } from '../../services/entity-editors/polygons-editor/polygons-editor.service';\nimport { LabelProps } from '../../models/label-props';\nimport { EditablePolygon } from '../../models/editable-polygon';\n\n@Component({\n  selector: 'polygons-editor',\n  template: /*html*/ `\n    <ac-layer #editPolylinesLayer acFor=\"let polyline of editPolylines$\" [context]=\"this\">\n      <ac-polyline-primitive-desc\n        props=\"{\n        positions: polyline.getPositions(),\n        width: polyline.props.width,\n        material: polyline.props.material()\n    }\"\n      >\n      </ac-polyline-primitive-desc>\n    </ac-layer>\n\n    <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n      <ac-point-desc\n        props=\"{\n        position: point.getPosition(),\n        pixelSize: getPointSize(point),\n        color: point.props.color,\n        outlineColor: point.props.outlineColor,\n        outlineWidth: point.props.outlineWidth,\n        show: getPointShow(point)\n    }\"\n      >\n      </ac-point-desc>\n    </ac-layer>\n\n    <ac-layer #editPolygonsLayer acFor=\"let polygon of editPolygons$\" [context]=\"this\">\n      <ac-polygon-desc\n        props=\"{\n        hierarchy: polygon.getPositionsHierarchyCallbackProperty(),\n        material: polygon.polygonProps.material\n    }\"\n      >\n      </ac-polygon-desc>\n      <!-- <ac-static-polygon-desc -->\n      <!-- geometryProps=\"{ -->\n      <!-- polygonHierarchy: polygon.getHierarchy(), -->\n      <!-- height: 1 -->\n      <!-- }\" -->\n      <!-- instanceProps=\"{ -->\n      <!-- attributes: attributes -->\n      <!-- }\" -->\n      <!-- primitiveProps=\"{ -->\n      <!-- appearance: appearance -->\n      <!-- }\"> -->\n      <!-- </ac-static-polygon-desc -->\n      <ac-array-desc acFor=\"let label of polygon.labels\" [idGetter]=\"getLabelId\">\n        <ac-label-primitive-desc\n          props=\"{\n            position: label.position,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            text: label.text,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin\n        }\"\n        >\n        </ac-label-primitive-desc>\n      </ac-array-desc>\n    </ac-layer>\n  `,\n  providers: [CoordinateConverter, PolygonsManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PolygonsEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: PolygonEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editPolylines$ = new Subject<AcNotification>();\n  public editPolygons$ = new Subject<AcNotification>();\n\n  public appearance = new Cesium.PerInstanceColorAppearance({flat: true});\n  public attributes = {color: Cesium.ColorGeometryInstanceAttribute.fromColor(new Cesium.Color(0.2, 0.2, 0.5, 0.5))};\n  public polygonColor = new Cesium.Color(0.1, 0.5, 0.2, 0.4);\n  public lineColor = new Cesium.Color(0, 0, 0, 0.6);\n\n  @ViewChild('editPolygonsLayer') private editPolygonsLayer: AcLayerComponent;\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\n  @ViewChild('editPolylinesLayer') private editPolylinesLayer: AcLayerComponent;\n\n  constructor(\n    private polygonsEditor: PolygonsEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private polygonsManager: PolygonsManagerService,\n  ) {\n    this.polygonsEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, polygonsManager);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.polygonsEditor.onUpdate().subscribe((update: PolygonEditUpdate) => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(polygon: EditablePolygon, update: PolygonEditUpdate, labels?: LabelProps[]) {\n    update.positions = polygon.getRealPositions();\n    update.points = polygon.getRealPoints();\n\n    if (labels) {\n      polygon.labels = labels;\n      this.editPolygonsLayer.update(polygon, polygon.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    polygon.labels = this.editLabelsRenderFn(update, polygon.labels);\n    this.editPolygonsLayer.update(polygon, polygon.getId());\n  }\n\n  removeEditLabels(polygon: EditablePolygon) {\n    polygon.labels = [];\n    this.editPolygonsLayer.update(polygon, polygon.getId());\n  }\n\n  handleCreateUpdates(update: PolygonEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.polygonsManager.createEditablePolygon(\n          update.id,\n          this.editPolygonsLayer,\n          this.editPointsLayer,\n          this.editPolylinesLayer,\n          this.coordinateConverter,\n          update.polygonOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (update.updatedPosition) {\n          polygon.moveTempMovingPoint(update.updatedPosition);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (update.updatedPosition) {\n          polygon.addPoint(update.updatedPosition);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.ADD_LAST_POINT: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (update.updatedPosition) {\n          polygon.addLastPoint(update.updatedPosition);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const polygon = this.polygonsManager.get(update.id);\n        polygon.dispose();\n        this.removeEditLabels(polygon);\n        this.editLabelsRenderFn = undefined;\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const polygon = this.polygonsManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(polygon, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const polygon = this.polygonsManager.get(update.id);\n        this.renderEditLabels(polygon, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const polygon = this.polygonsManager.get(update.id);\n        this.renderEditLabels(polygon, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: PolygonEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.polygonsManager.createEditablePolygon(\n          update.id,\n          this.editPolygonsLayer,\n          this.editPointsLayer,\n          this.editPolylinesLayer,\n          this.coordinateConverter,\n          update.polygonOptions,\n          update.positions,\n        );\n        break;\n      }\n      case EditActions.DRAG_POINT: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon && polygon.enableEdit) {\n          polygon.movePoint(update.updatedPosition, update.updatedPoint);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon && polygon.enableEdit && update.updatedPoint.isVirtualEditPoint()) {\n          polygon.changeVirtualPointToRealPoint(update.updatedPoint);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.REMOVE_POINT: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon && polygon.enableEdit) {\n          polygon.removePoint(update.updatedPoint);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon) {\n          polygon.enableEdit = false;\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon && polygon.enableEdit) {\n          polygon.movePolygon(update.draggedPosition, update.updatedPosition);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon && polygon.enableEdit) {\n          polygon.endMovePolygon();\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon) {\n          polygon.enableEdit = true;\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.polygonsManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { PolylineProps } from './polyline-edit-options';\n\nexport class EditArc extends AcEntity {\n  static counter = 0;\n  private id: string;\n  private editedEntityId: string;\n  private _center: Cartesian3;\n  private _radius: number;\n  private _delta: number;\n  private _angle: number;\n\n  constructor(entityId: string, center: Cartesian3, radius: number, delta: number, angle: number, private _arcProps: PolylineProps) {\n    super();\n    this.id = this.generateId();\n    this.editedEntityId = entityId;\n    this._center = center;\n    this._radius = radius;\n    this._delta = delta;\n    this._angle = angle;\n  }\n\n  get props() {\n    return this._arcProps;\n  }\n\n  set props(props: PolylineProps) {\n    this._arcProps = props;\n  }\n\n  get angle(): number {\n    return this._angle;\n  }\n\n  set angle(value: number) {\n    this._angle = value;\n  }\n\n  get delta(): number {\n    return this._delta;\n  }\n\n  set delta(value: number) {\n    this._delta = value;\n  }\n\n  get radius(): number {\n    return this._radius;\n  }\n\n  set radius(value: number) {\n    this._radius = value;\n  }\n\n  get center(): Cartesian3 {\n    return this._center;\n  }\n\n  set center(value: Cartesian3) {\n    this._center = value;\n  }\n\n  updateCenter(center: Cartesian3) {\n    this._center.x = center.x;\n    this._center.y = center.y;\n    this._center.z = center.z;\n  }\n\n  getId(): string {\n    return this.id;\n  }\n\n  private generateId(): string {\n    return 'edit-arc-' + EditArc.counter++;\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { EditArc } from './edit-arc';\nimport { CircleEditOptions } from './circle-edit-options';\nimport { PointProps, PolylineProps } from './polyline-edit-options';\nimport { defaultLabelProps, LabelProps } from './label-props';\nimport { EllipseProps } from './ellipse-edit-options';\n\nexport class EditableCircle extends AcEntity {\n  private _center: EditPoint;\n  private _radiusPoint: EditPoint;\n  private _outlineArc: EditArc;\n  private doneCreation = false;\n  private _enableEdit = true;\n  private lastDraggedToPosition: any;\n  private _circleProps: EllipseProps;\n  private _pointProps: PointProps;\n  private _polylineProps: PolylineProps;\n  private _labels: LabelProps[] = [];\n\n  constructor(\n    private id: string,\n    private circlesLayer: AcLayerComponent,\n    private pointsLayer: AcLayerComponent,\n    private arcsLayer: AcLayerComponent,\n    private options: CircleEditOptions,\n  ) {\n    super();\n    this._circleProps = options.circleProps;\n    this._pointProps = options.pointProps;\n    this._polylineProps = options.polylineProps;\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels || !this._center || !this._radiusPoint) {\n      return;\n    }\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        if (index !== labels.length - 1) {\n          label.position = this._center.getPosition();\n        } else {\n          label.position = this._radiusPoint.getPosition();\n        }\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get polylineProps(): PolylineProps {\n    return this._polylineProps;\n  }\n\n  set polylineProps(value: PolylineProps) {\n    this._polylineProps = value;\n  }\n\n  get pointProps(): PointProps {\n    return this._pointProps;\n  }\n\n  set pointProps(value: PointProps) {\n    this._pointProps = value;\n  }\n\n  get circleProps(): EllipseProps {\n    return this._circleProps;\n  }\n\n  set circleProps(value: EllipseProps) {\n    this._circleProps = value;\n  }\n\n  get center(): EditPoint {\n    return this._center;\n  }\n\n  get radiusPoint(): EditPoint {\n    return this._radiusPoint;\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this._center.show = value;\n    this._radiusPoint.show = value;\n    this.updatePointsLayer();\n  }\n\n  setManually(\n    center: Cartesian3,\n    radiusPoint: Cartesian3,\n    centerPointProp = this.pointProps,\n    radiusPointProp = this.pointProps,\n    circleProp = this.circleProps,\n  ) {\n    if (!this._center) {\n      this._center = new EditPoint(this.id, center, centerPointProp);\n    } else {\n      this._center.setPosition(center);\n    }\n\n    if (!this._radiusPoint) {\n      this._radiusPoint = new EditPoint(this.id, radiusPoint, radiusPointProp);\n    } else {\n      this._radiusPoint.setPosition(radiusPoint);\n    }\n\n    if (!this._outlineArc) {\n      this.createOutlineArc();\n    } else {\n      this._outlineArc.radius = this.getRadius();\n    }\n\n    this.circleProps = circleProp;\n    this.doneCreation = true;\n    this.updateArcsLayer();\n    this.updatePointsLayer();\n    this.updateCirclesLayer();\n  }\n\n  addPoint(position: Cartesian3) {\n    if (this.doneCreation) {\n      return;\n    }\n\n    if (!this._center) {\n      this._center = new EditPoint(this.id, position, this.pointProps);\n      this._radiusPoint = new EditPoint(this.id, position.clone(), this.pointProps);\n      if (!this._outlineArc) {\n        this.createOutlineArc();\n      }\n    }\n\n    this.updateArcsLayer();\n    this.updatePointsLayer();\n    this.updateCirclesLayer();\n  }\n\n  addLastPoint(position: Cartesian3) {\n    if (this.doneCreation || !this._center || !this._radiusPoint) {\n      return;\n    }\n\n    this._radiusPoint.setPosition(position);\n    this.doneCreation = true;\n\n    this.updatePointsLayer();\n    this.updateCirclesLayer();\n  }\n\n  movePoint(toPosition: Cartesian3) {\n    if (!this._center || !this._radiusPoint) {\n      return;\n    }\n\n    this._radiusPoint.setPosition(toPosition);\n    this._outlineArc.radius = this.getRadius();\n\n    this.updateArcsLayer();\n    this.updatePointsLayer();\n    this.updateCirclesLayer();\n  }\n\n  moveCircle(dragStartPosition: Cartesian3, dragEndPosition: Cartesian3) {\n    if (!this.doneCreation) {\n      return;\n    }\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = dragStartPosition;\n    }\n\n    const radius = this.getRadius();\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, dragEndPosition);\n    GeoUtilsService.addDeltaToPosition(this.getCenter(), delta, true);\n    this.radiusPoint.setPosition(GeoUtilsService.pointByLocationDistanceAndAzimuth(this.getCenter(), radius, Math.PI / 2, true));\n    this._outlineArc.radius = this.getRadius();\n    this.updateArcsLayer();\n    this.updatePointsLayer();\n    this.updateCirclesLayer();\n    this.lastDraggedToPosition = dragEndPosition;\n  }\n\n  endMovePolygon() {\n    this.lastDraggedToPosition = undefined;\n  }\n\n  getRadius(): number {\n    if (!this._center || !this._radiusPoint) {\n      return 0;\n    }\n    return GeoUtilsService.distance(this._center.getPosition(), this._radiusPoint.getPosition());\n  }\n\n  getRadiusCallbackProperty() {\n    return new Cesium.CallbackProperty(this.getRadius.bind(this), false);\n  }\n\n  getCenter(): Cartesian3 {\n    return this._center ? this._center.getPosition() : undefined;\n  }\n\n  getCenterCallbackProperty() {\n    return new Cesium.CallbackProperty(this.getCenter.bind(this), false);\n  }\n\n  getRadiusPoint(): Cartesian3 {\n    return this._radiusPoint ? this._radiusPoint.getPosition() : undefined;\n  }\n\n  dispose() {\n    if (this._center) {\n      this.pointsLayer.remove(this._center.getId());\n    }\n\n    if (this._radiusPoint) {\n      this.pointsLayer.remove(this._radiusPoint.getId());\n    }\n\n    if (this._outlineArc) {\n      this.arcsLayer.remove(this._outlineArc.getId());\n    }\n\n    this.circlesLayer.remove(this.id);\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  private updateCirclesLayer() {\n    this.circlesLayer.update(this, this.id);\n  }\n\n  private updatePointsLayer() {\n    if (this._center) {\n      this.pointsLayer.update(this._center, this._center.getId());\n    }\n    if (this._radiusPoint) {\n      this.pointsLayer.update(this._radiusPoint, this._radiusPoint.getId());\n    }\n  }\n\n  private updateArcsLayer() {\n    if (!this._outlineArc) {\n      return;\n    }\n    this.arcsLayer.update(this._outlineArc, this._outlineArc.getId());\n  }\n\n  private createOutlineArc() {\n    if (!this._center || !this._radiusPoint) {\n      return;\n    }\n    this._outlineArc = new EditArc(this.id, this.getCenter(), this.getRadius(), Math.PI * 2, 0, this.polylineProps);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EditableCircle } from '../../../models/editable-circle';\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CircleEditOptions } from '../../../models/circle-edit-options';\n\n@Injectable()\nexport class CirclesManagerService {\n  private circles = new Map<string, EditableCircle>();\n\n  createEditableCircle(id: string,\n                       editCirclesLayer: AcLayerComponent,\n                       editPointsLayer: AcLayerComponent,\n                       editArcsLayer: AcLayerComponent,\n                       circleOptions: CircleEditOptions): EditableCircle {\n    const editableCircle = new EditableCircle(id, editCirclesLayer, editPointsLayer, editArcsLayer, circleOptions);\n    this.circles.set(id, editableCircle);\n    return editableCircle;\n  }\n\n  dispose(id: string) {\n    this.circles.get(id).dispose();\n    this.circles.delete(id);\n  }\n\n  get(id: string): EditableCircle {\n    return this.circles.get(id);\n  }\n\n  clear() {\n    this.circles.forEach(circle => circle.dispose());\n    this.circles.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { publish, tap } from 'rxjs/operators';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { GeoUtilsService } from '../../../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BasicEditUpdate } from '../../../models/basic-edit-update';\nimport { CircleEditOptions } from '../../../models/circle-edit-options';\nimport { CircleEditUpdate } from '../../../models/circle-edit-update';\nimport { CircleEditorObservable } from '../../../models/circle-editor-observable';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditPoint } from '../../../models/edit-point';\nimport { EditableCircle } from '../../../models/editable-circle';\nimport { EllipseProps } from '../../../models/ellipse-edit-options';\nimport { LabelProps } from '../../../models/label-props';\nimport { PointProps } from '../../../models/polyline-edit-options';\nimport { generateKey } from '../../utils';\nimport { CirclesManagerService } from './circles-manager.service';\n\nexport const DEFAULT_CIRCLE_OPTIONS: CircleEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  allowDrag: true,\n  circleProps: {\n    material: Cesium.Color.GREEN.withAlpha(0.5),\n    outline: false,\n    outlineWidth: 1,\n    outlineColor: Cesium.Color.BLACK,\n  },\n  pointProps: {\n    color: Cesium.Color.WHITE.withAlpha(0.9),\n    outlineColor: Cesium.Color.BLACK,\n    outlineWidth: 1,\n    pixelSize: 15,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n  },\n  polylineProps: {\n    width: 1,\n    material: () => Cesium.Color.BLACK,\n  },\n};\n\n/**\n * Service for creating editable circles\n *\n * You must provide `CircleEditorService` yourself.\n * PolygonsEditorService works together with `<circle-editor>` component. Therefor you need to create `<circle-editor>`\n * for each `CircleEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `CircleEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `CircleEditorObservable`.\n * + To stop editing call `dsipose()` from the `CircleEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over editted shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `CircleEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n * usage:\n * ```typescript\n *  // Start creating circle\n *  const editing$ = circlesEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit circle from existing center point and radius\n *  const editing$ = this.circlesEditorService.edit(center, radius);\n *\n * ```\n */\n@Injectable()\nexport class CirclesEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<CircleEditUpdate>();\n  private updatePublisher = publish<CircleEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private circlesManager: CirclesManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n\n  init(\n    mapEventsManager: MapEventsManagerService,\n    coordinateConverter: CoordinateConverter,\n    cameraService: CameraService,\n    circlesManager: CirclesManagerService,\n  ) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.circlesManager = circlesManager;\n    this.updatePublisher.connect();\n  }\n\n  onUpdate(): Observable<CircleEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  create(options = DEFAULT_CIRCLE_OPTIONS, priority = 100): CircleEditorObservable {\n    let center: any;\n    const id = generateKey();\n    const circleOptions = this.setOptions(options);\n    const clientEditSubject = new BehaviorSubject<CircleEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE,\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      circleOptions,\n    });\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      priority,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.LEFT_CLICK,\n      pick: PickOptions.NO_PICK,\n      priority,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id);\n\n    addPointRegistration.subscribe(({movement: {endPosition}}) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (!position) {\n        return;\n      }\n\n      if (!center) {\n        const update = {\n          id,\n          center: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.ADD_POINT,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n          ...this.getCircleProperties(id),\n        });\n        center = position;\n      } else {\n        const update = {\n          id,\n          center,\n          radiusPoint: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.ADD_LAST_POINT,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n          ...this.getCircleProperties(id),\n        });\n\n        const changeMode = {\n          id,\n          center,\n          radiusPoint: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.CHANGE_TO_EDIT,\n        };\n\n        this.updateSubject.next(changeMode);\n        clientEditSubject.next({\n          ...update,\n          ...this.getCircleProperties(id),\n        });\n        if (this.observablesMap.has(id)) {\n          this.observablesMap.get(id).forEach(registration => registration.dispose());\n        }\n        this.observablesMap.delete(id);\n        this.editCircle(id, priority, clientEditSubject, circleOptions, editorObservable);\n        finishedCreate = true;\n      }\n    });\n\n    mouseMoveRegistration.subscribe(({movement: {endPosition}}) => {\n      if (!center) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n\n      if (position) {\n        const update = {\n          id,\n          center,\n          radiusPoint: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.MOUSE_MOVE,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n          ...this.getCircleProperties(id),\n        });\n      }\n    });\n\n    return editorObservable;\n  }\n\n  edit(center: Cartesian3, radius: number, options = DEFAULT_CIRCLE_OPTIONS, priority = 100): CircleEditorObservable {\n    const id = generateKey();\n    const circleOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<CircleEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT,\n    });\n\n    const radiusPoint: Cartesian3 = GeoUtilsService.pointByLocationDistanceAndAzimuth(center, radius, Math.PI / 2, true);\n\n    const update = {\n      id,\n      center,\n      radiusPoint,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      circleOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n      ...this.getCircleProperties(id),\n    });\n\n    return this.editCircle(id, priority, editSubject, circleOptions);\n  }\n\n  private editCircle(\n    id: string,\n    priority: number,\n    editSubject: Subject<CircleEditUpdate>,\n    options: CircleEditOptions,\n    editObservable?: CircleEditorObservable,\n  ): CircleEditorObservable {\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.LEFT_CLICK_DRAG,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: CesiumEvent.LEFT_CLICK_DRAG,\n        entityType: EditableCircle,\n        pick: PickOptions.PICK_FIRST,\n        priority: priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n\n    pointDragRegistration\n      .pipe(tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n      .subscribe(({movement: {endPosition, startPosition, drop}, entities}) => {\n        const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n        const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n        if (!endDragPosition) {\n          return;\n        }\n\n        const point: EditPoint = entities[0];\n        const pointIsCenter = point === this.getCenterPoint(id);\n        let editAction;\n        if (drop) {\n          editAction = pointIsCenter ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_POINT_FINISH;\n        } else {\n          editAction = pointIsCenter ? EditActions.DRAG_SHAPE : EditActions.DRAG_POINT;\n        }\n\n        if (!options.allowDrag && (editAction === EditActions.DRAG_SHAPE || editAction === EditActions.DRAG_SHAPE_FINISH)) {\n          this.cameraService.enableInputs(true);\n          return;\n        }\n\n        const update = {\n          id,\n          center: this.getCenterPosition(id),\n          radiusPoint: this.getRadiusPosition(id),\n          startDragPosition,\n          endDragPosition,\n          editMode: EditModes.EDIT,\n          editAction,\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n          ...this.getCircleProperties(id),\n        });\n      });\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n        .subscribe(({movement: {startPosition, endPosition, drop}}) => {\n          const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n          const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n          if (!endDragPosition || !startDragPosition) {\n            return;\n          }\n\n          const update = {\n            id,\n            center: this.getCenterPosition(id),\n            radiusPoint: this.getRadiusPosition(id),\n            startDragPosition,\n            endDragPosition,\n            editMode: EditModes.EDIT,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n            ...this.getCircleProperties(id),\n          });\n        });\n    }\n\n    const observables = [pointDragRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n\n    this.observablesMap.set(id, observables);\n    return editObservable || this.createEditorObservable(editSubject, id);\n  }\n\n  private createEditorObservable(observableToExtend: any, id: string): CircleEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        center: this.getCenterPosition(id),\n        radiusPoint: this.getRadiusPosition(id),\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      });\n    };\n\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        center: this.getCenterPosition(id),\n        radiusPoint: this.getRadiusPosition(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n      });\n    };\n\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        center: this.getCenterPosition(id),\n        radiusPoint: this.getRadiusPosition(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n      });\n    };\n\n    observableToExtend.setManually = (\n      center: Cartesian3,\n      radius: number,\n      centerPointProp?: PointProps,\n      radiusPointProp?: PointProps,\n      circleProp?: EllipseProps,\n    ) => {\n      const radiusPoint = GeoUtilsService.pointByLocationDistanceAndAzimuth(center, radius, Math.PI / 2, true);\n      const circle = this.circlesManager.get(id);\n      circle.setManually(center, radiusPoint, centerPointProp, radiusPointProp, circleProp);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: (update: BasicEditUpdate<any>, labels: LabelProps[]) => LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      });\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      });\n    };\n\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n\n    observableToExtend.getLabels = (): LabelProps[] => this.circlesManager.get(id).labels;\n    observableToExtend.getCenter = (): Cartesian3 => this.getCenterPosition(id);\n    observableToExtend.getRadius = (): number => this.getRadius(id);\n\n    return observableToExtend as CircleEditorObservable;\n  }\n\n  private setOptions(options: CircleEditOptions): CircleEditOptions {\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_CIRCLE_OPTIONS));\n    const circleOptions = Object.assign(defaultClone, options);\n    circleOptions.pointProps = Object.assign({}, DEFAULT_CIRCLE_OPTIONS.pointProps, options.pointProps);\n    circleOptions.circleProps = Object.assign({}, DEFAULT_CIRCLE_OPTIONS.circleProps, options.circleProps);\n    circleOptions.polylineProps = Object.assign({}, DEFAULT_CIRCLE_OPTIONS.polylineProps, options.polylineProps);\n    return circleOptions;\n  }\n\n  private getCenterPosition(id: string): Cartesian3 {\n    return this.circlesManager.get(id).getCenter();\n  }\n\n  private getCenterPoint(id: string): EditPoint {\n    return this.circlesManager.get(id).center;\n  }\n\n  private getRadiusPosition(id: string): Cartesian3 {\n    return this.circlesManager.get(id).getRadiusPoint();\n  }\n\n  private getRadius(id: string): number {\n    return this.circlesManager.get(id).getRadius();\n  }\n\n  private getCircleProperties(id: string) {\n    const circle = this.circlesManager.get(id);\n    return {\n      center: circle.getCenter(),\n      radiusPoint: circle.getRadiusPoint(),\n      radius: circle.getRadius(),\n    };\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { CirclesManagerService } from '../../services/entity-editors/circles-editor/circles-manager.service';\nimport { CirclesEditorService } from '../../services/entity-editors/circles-editor/circles-editor.service';\nimport { CircleEditUpdate } from '../../models/circle-edit-update';\nimport { LabelProps } from '../../models/label-props';\nimport { EditableCircle } from '../../models/editable-circle';\n\n@Component({\n  selector: 'circles-editor',\n  template: /*html*/ `\n    <ac-layer #editArcsLayer acFor=\"let arc of editArcs$\" [context]=\"this\">\n      <ac-arc-desc\n        props=\"{\n        angle: arc.angle,\n        delta: arc.delta,\n        center: arc.center,\n        radius: arc.radius,\n        quality: 30,\n        color: arc.props.material()\n    }\"\n      >\n      </ac-arc-desc>\n    </ac-layer>\n\n    <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n      <ac-point-desc\n        props=\"{\n        position: point.getPosition(),\n        pixelSize: getPointSize(point),\n        color: point.props.color,\n        outlineColor: point.props.outlineColor,\n        outlineWidth: point.props.outlineWidth,\n        show: getPointShow(point)\n    }\"\n      >\n      </ac-point-desc>\n    </ac-layer>\n\n    <ac-layer #editCirclesLayer acFor=\"let circle of editCircles$\" [context]=\"this\" [zIndex]=\"0\">\n      <ac-ellipse-desc\n        props=\"{\n        position: circle.getCenterCallbackProperty(),\n        semiMajorAxis: circle.getRadiusCallbackProperty(),\n        semiMinorAxis: circle.getRadiusCallbackProperty(),\n        material: circle.circleProps.material,\n        outline: circle.circleProps.outline,\n        height: 0\n    }\"\n      >\n      </ac-ellipse-desc>\n\n      <ac-array-desc acFor=\"let label of circle.labels\" [idGetter]=\"getLabelId\">\n        <ac-label-primitive-desc\n          props=\"{\n            position: label.position,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            text: label.text,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin\n        }\"\n        >\n        </ac-label-primitive-desc>\n      </ac-array-desc>\n    </ac-layer>\n  `,\n  providers: [CoordinateConverter, CirclesManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CirclesEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: CircleEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editCircles$ = new Subject<AcNotification>();\n  public editArcs$ = new Subject<AcNotification>();\n\n  @ViewChild('editCirclesLayer') private editCirclesLayer: AcLayerComponent;\n  @ViewChild('editArcsLayer') private editArcsLayer: AcLayerComponent;\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\n\n  constructor(\n    private circlesEditor: CirclesEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private circlesManager: CirclesManagerService,\n  ) {\n    this.circlesEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, this.circlesManager);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.circlesEditor.onUpdate().subscribe(update => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(circle: EditableCircle, update: CircleEditUpdate, labels?: LabelProps[]) {\n    update.center = circle.getCenter();\n    update.radiusPoint = circle.getRadiusPoint();\n    update.radius = circle.getRadius();\n\n    if (labels) {\n      circle.labels = labels;\n      this.editCirclesLayer.update(circle, circle.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    circle.labels = this.editLabelsRenderFn(update, circle.labels);\n    this.editCirclesLayer.update(circle, circle.getId());\n  }\n\n  removeEditLabels(circle: EditableCircle) {\n    circle.labels = [];\n    this.editCirclesLayer.update(circle, circle.getId());\n  }\n\n  handleCreateUpdates(update: CircleEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.circlesManager.createEditableCircle(\n          update.id,\n          this.editCirclesLayer,\n          this.editPointsLayer,\n          this.editArcsLayer,\n          update.circleOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const circle = this.circlesManager.get(update.id);\n        if (update.radiusPoint) {\n          circle.movePoint(update.radiusPoint);\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const circle = this.circlesManager.get(update.id);\n        if (update.center) {\n          circle.addPoint(update.center);\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.ADD_LAST_POINT: {\n        const circle = this.circlesManager.get(update.id);\n        if (update.radiusPoint) {\n          circle.addLastPoint(update.radiusPoint);\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const circle = this.circlesManager.get(update.id);\n        this.removeEditLabels(circle);\n        this.circlesManager.dispose(update.id);\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const circle = this.circlesManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(circle, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const circle = this.circlesManager.get(update.id);\n        this.renderEditLabels(circle, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const circle = this.circlesManager.get(update.id);\n        this.renderEditLabels(circle, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: CircleEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        const circle = this.circlesManager.createEditableCircle(\n          update.id,\n          this.editCirclesLayer,\n          this.editPointsLayer,\n          this.editArcsLayer,\n          update.circleOptions,\n        );\n        circle.setManually(update.center, update.radiusPoint);\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH:\n      case EditActions.DRAG_POINT: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle && circle.enableEdit) {\n          circle.movePoint(update.endDragPosition);\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle && circle.enableEdit) {\n          circle.moveCircle(update.startDragPosition, update.endDragPosition);\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle && circle.enableEdit) {\n          circle.endMovePolygon();\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle) {\n          circle.enableEdit = false;\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle) {\n          circle.enableEdit = true;\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.circlesManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { EllipseEditOptions, EllipseProps } from './ellipse-edit-options';\nimport { PointProps, PolylineProps } from './polyline-edit-options';\nimport { defaultLabelProps, LabelProps } from './label-props';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\n\nexport class EditableEllipse extends AcEntity {\n  private _center: EditPoint;\n  private _majorRadiusPoint: EditPoint;\n  private _majorRadius: number;\n  private _minorRadius: number;\n  private _rotation = 0;\n  private doneCreation = false;\n  private _enableEdit = true;\n  private _minorRadiusPoints: EditPoint[] = [];\n  private lastDraggedToPosition: any;\n  private _ellipseProps: EllipseProps;\n  private _pointProps: PointProps;\n  private _polylineProps: PolylineProps;\n  private _labels: LabelProps[] = [];\n\n  constructor(\n    private id: string,\n    private ellipsesLayer: AcLayerComponent,\n    private pointsLayer: AcLayerComponent,\n    private coordinateConverter: CoordinateConverter,\n    private options: EllipseEditOptions,\n  ) {\n    super();\n    this._ellipseProps = options.ellipseProps;\n    this._pointProps = options.pointProps;\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels || !this._center) {\n      return;\n    }\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        if (index === 0) {\n          label.position = this._center.getPosition();\n        } else if (index === 1) {\n          label.position = this._majorRadiusPoint\n            ? Cesium.Cartesian3.midpoint(this.getCenter(), this._majorRadiusPoint.getPosition(), new Cesium.Cartesian3())\n            : new Cesium.Cartesian3();\n        } else if (index === 2) {\n          label.position =\n            this._minorRadiusPoints.length > 0 && this._minorRadius\n              ? Cesium.Cartesian3.midpoint(this.getCenter(), this.getMinorRadiusPointPosition(), new Cesium.Cartesian3())\n              : new Cesium.Cartesian3();\n        }\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get polylineProps(): PolylineProps {\n    return this._polylineProps;\n  }\n\n  set polylineProps(value: PolylineProps) {\n    this._polylineProps = value;\n  }\n\n  get pointProps(): PointProps {\n    return this._pointProps;\n  }\n\n  set pointProps(value: PointProps) {\n    this._pointProps = value;\n  }\n\n  get ellipseProps(): EllipseProps {\n    return this._ellipseProps;\n  }\n\n  set ellipseProps(value: EllipseProps) {\n    this._ellipseProps = value;\n  }\n\n  get center(): EditPoint {\n    return this._center;\n  }\n\n  get majorRadiusPoint(): EditPoint {\n    return this._majorRadiusPoint;\n  }\n\n  getMajorRadiusPointPosition() {\n    if (!this._majorRadiusPoint) {\n      return undefined;\n    }\n\n    return this._majorRadiusPoint.getPosition();\n  }\n\n  getMinorRadiusPointPosition(): Cartesian3 {\n    if (this._minorRadiusPoints.length < 1) {\n      return undefined;\n    }\n\n    return this._minorRadiusPoints[0].getPosition();\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this._center.show = value;\n    this._majorRadiusPoint.show = value;\n    this.updatePointsLayer();\n  }\n\n  setManually(\n    center: Cartesian3,\n    majorRadius: number,\n    rotation = Math.PI / 2,\n    minorRadius?: number,\n    centerPointProp = this.pointProps,\n    radiusPointProp = this.pointProps,\n    ellipseProp = this.ellipseProps,\n  ) {\n    if (majorRadius < minorRadius) {\n      throw new Error('Major radius muse be equal or greater than minor radius');\n    }\n    this._rotation = rotation;\n    this._majorRadius = majorRadius;\n    if (!this._center) {\n      this._center = new EditPoint(this.id, center, centerPointProp);\n    } else {\n      this._center.setPosition(center);\n    }\n\n    const majorRadiusPosition = GeoUtilsService.pointByLocationDistanceAndAzimuth(this.center.getPosition(), majorRadius, rotation);\n\n    if (!this._majorRadiusPoint) {\n      this._majorRadiusPoint = new EditPoint(this.id, majorRadiusPosition, radiusPointProp);\n    } else {\n      this._majorRadiusPoint.setPosition(majorRadiusPosition);\n    }\n\n    if (minorRadius) {\n      this._minorRadius = minorRadius;\n    }\n\n    this.ellipseProps = ellipseProp;\n    this.doneCreation = true;\n    this.updateMinorRadiusEditPoints();\n    this.updatePointsLayer();\n    this.updateEllipsesLayer();\n  }\n\n  addPoint(position: Cartesian3) {\n    if (this.doneCreation) {\n      return;\n    }\n\n    if (!this._center) {\n      this._center = new EditPoint(this.id, position, this.pointProps);\n      this._majorRadiusPoint = new EditPoint(this.id, position.clone(), this.pointProps);\n      this._majorRadius = 0;\n    }\n\n    this.updateRotation();\n    this.updateMinorRadiusEditPoints();\n    this.updatePointsLayer();\n    this.updateEllipsesLayer();\n  }\n\n  transformToEllipse() {\n    if (this._minorRadius) {\n      return;\n    }\n\n    this._minorRadius = this.getMajorRadius();\n    this.updateMinorRadiusEditPoints();\n    this.updatePointsLayer();\n    this.updateEllipsesLayer();\n  }\n\n  addLastPoint(position: Cartesian3) {\n    if (this.doneCreation || !this._center || !this._majorRadiusPoint) {\n      return;\n    }\n\n    const newRadius = GeoUtilsService.distance(this._center.getPosition(), position);\n    this._majorRadiusPoint.setPosition(position);\n    this._majorRadius = newRadius;\n    this.doneCreation = true;\n\n    if (!this.options.circleToEllipseTransformation) {\n      this._minorRadius = this._majorRadius;\n    }\n\n    this.updateRotation();\n    this.updateMinorRadiusEditPoints();\n    this.updatePointsLayer();\n    this.updateEllipsesLayer();\n  }\n\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\n    if (!this._center || !this._majorRadiusPoint) {\n      return;\n    }\n\n    const newRadius = GeoUtilsService.distance(this._center.getPosition(), toPosition);\n    if (this.majorRadiusPoint === editPoint) {\n      if (newRadius < this._minorRadius) {\n        this._majorRadius = this._minorRadius;\n        this._majorRadiusPoint.setPosition(\n          GeoUtilsService.pointByLocationDistanceAndAzimuth(this.getCenter(), this._minorRadius, this._rotation),\n        );\n      } else {\n        this.majorRadiusPoint.setPosition(toPosition);\n        this._majorRadius = newRadius;\n      }\n    } else {\n      if (newRadius > this._majorRadius) {\n        this._minorRadius = this._majorRadius;\n      } else {\n        this._minorRadius = newRadius;\n      }\n    }\n\n    this.updateRotation();\n    this.updateMinorRadiusEditPoints();\n    this.updatePointsLayer();\n    this.updateEllipsesLayer();\n  }\n\n  moveEllipse(dragStartPosition: Cartesian3, dragEndPosition: Cartesian3) {\n    if (!this.doneCreation) {\n      return;\n    }\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = dragStartPosition;\n    }\n\n    const majorRadius = this.getMajorRadius();\n    const rotation = this.getRotation();\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, dragEndPosition);\n    GeoUtilsService.addDeltaToPosition(this.getCenter(), delta, true);\n    this.majorRadiusPoint.setPosition(GeoUtilsService.pointByLocationDistanceAndAzimuth(this.getCenter(), majorRadius, rotation));\n    this.updatePointsLayer();\n    this.updateMinorRadiusEditPoints();\n    this.updateEllipsesLayer();\n    this.lastDraggedToPosition = dragEndPosition;\n  }\n\n  endMoveEllipse() {\n    this.lastDraggedToPosition = undefined;\n  }\n\n  private updateMinorRadiusEditPoints() {\n    if (this._minorRadius === undefined) {\n      return;\n    }\n    if (this._minorRadiusPoints.length === 0) {\n      this._minorRadiusPoints.push(new EditPoint(this.id, new Cesium.Cartesian3(), this.pointProps, true));\n      this._minorRadiusPoints.push(new EditPoint(this.id, new Cesium.Cartesian3(), this.pointProps, true));\n    }\n\n    this._minorRadiusPoints[0].setPosition(\n      GeoUtilsService.pointByLocationDistanceAndAzimuth(this._center.getPosition(), this._minorRadius, this.getRotation() - Math.PI / 2),\n    );\n\n    this._minorRadiusPoints[1].setPosition(\n      GeoUtilsService.pointByLocationDistanceAndAzimuth(this._center.getPosition(), this._minorRadius, this.getRotation() + Math.PI / 2),\n    );\n  }\n\n  getMajorRadius(): number {\n    return this._majorRadius || 0;\n  }\n\n  getMinorRadius() {\n    if (this._minorRadius === undefined) {\n      return this.getMajorRadius();\n    } else {\n      return this._minorRadius;\n    }\n  }\n\n  getRotation(): number {\n    return this._rotation || 0;\n  }\n\n  updateRotation(): number {\n    if (!this._majorRadiusPoint) {\n      return 0;\n    }\n\n    const azimuthInDegrees = this.coordinateConverter.bearingToCartesian(this.getCenter(), this._majorRadiusPoint.getPosition());\n    this._rotation = Cesium.Math.toRadians(azimuthInDegrees);\n    return this._rotation;\n  }\n\n  getRotationCallbackProperty() {\n    return new Cesium.CallbackProperty(() => Math.PI / 2 - this.getRotation(), false);\n  }\n\n  getMinorRadiusCallbackProperty() {\n    return new Cesium.CallbackProperty(() => this.getMinorRadius(), false);\n  }\n\n  getMajorRadiusCallbackProperty() {\n    return new Cesium.CallbackProperty(() => this.getMajorRadius(), false);\n  }\n\n  getCenter(): Cartesian3 {\n    return this._center ? this._center.getPosition() : undefined;\n  }\n\n  getCenterCallbackProperty() {\n    return new Cesium.CallbackProperty(() => this.getCenter(), false);\n  }\n\n  dispose() {\n    if (this._center) {\n      this.pointsLayer.remove(this._center.getId());\n    }\n\n    if (this._majorRadiusPoint) {\n      this.pointsLayer.remove(this._majorRadiusPoint.getId());\n    }\n\n    if (this._minorRadiusPoints) {\n      this._minorRadiusPoints.forEach(point => this.pointsLayer.remove(point.getId()));\n    }\n\n    this.ellipsesLayer.remove(this.id);\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  private updateEllipsesLayer() {\n    this.ellipsesLayer.update(this, this.id);\n  }\n\n  private updatePointsLayer() {\n    if (this._center) {\n      this.pointsLayer.update(this._center, this._center.getId());\n    }\n    if (this._majorRadiusPoint) {\n      this.pointsLayer.update(this._majorRadiusPoint, this._majorRadiusPoint.getId());\n    }\n    if (this._minorRadiusPoints.length > 0) {\n      this.pointsLayer.update(this._minorRadiusPoints[0], this._minorRadiusPoints[0].getId());\n      this.pointsLayer.update(this._minorRadiusPoints[1], this._minorRadiusPoints[1].getId());\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EditableEllipse } from '../../../models/editable-ellipse';\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { EllipseEditOptions } from '../../../models/ellipse-edit-options';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\n\n@Injectable()\nexport class EllipsesManagerService {\n  private ellipses = new Map<string, EditableEllipse>();\n\n  createEditableEllipse(id: string,\n                        editEllipsesLayer: AcLayerComponent,\n                        editPointsLayer: AcLayerComponent,\n                        coordinateConverter: CoordinateConverter,\n                        ellipseOptions: EllipseEditOptions): EditableEllipse {\n    const editableEllipse = new EditableEllipse(id, editEllipsesLayer, editPointsLayer, coordinateConverter, ellipseOptions);\n    this.ellipses.set(id, editableEllipse);\n    return editableEllipse;\n  }\n\n  dispose(id: string) {\n    this.ellipses.get(id).dispose();\n    this.ellipses.delete(id);\n  }\n\n  get(id: string): EditableEllipse {\n    return this.ellipses.get(id);\n  }\n\n  clear() {\n    this.ellipses.forEach(ellipse => ellipse.dispose());\n    this.ellipses.clear();\n  }\n}\n","import { publish, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from '../../../models/edit-point';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { EllipseEditUpdate } from '../../../models/ellipse-edit-update';\nimport { EllipsesManagerService } from './ellipses-manager.service';\nimport { EllipseEditorObservable } from '../../../models/ellipse-editor-observable';\nimport { EllipseEditOptions, EllipseProps } from '../../../models/ellipse-edit-options';\nimport { EditableEllipse } from '../../../models/editable-ellipse';\nimport { PointProps } from '../../../models/polyline-edit-options';\nimport { LabelProps } from '../../../models/label-props';\nimport { BasicEditUpdate } from '../../../models/basic-edit-update';\nimport { generateKey } from '../../utils';\nimport { CesiumEventModifier } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event-modifier.enum';\n\nexport const DEFAULT_ELLIPSE_OPTIONS: EllipseEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  circleToEllipseTransformEvent: CesiumEvent.LEFT_CLICK,\n  circleToEllipseTransformEventModifier: CesiumEventModifier.ALT,\n  allowDrag: true,\n  ellipseProps: {\n    material: Cesium.Color.GREEN.withAlpha(0.5),\n    outline: true,\n    outlineWidth: 1,\n    outlineColor: Cesium.Color.BLACK,\n  },\n  pointProps: {\n    color: Cesium.Color.WHITE.withAlpha(0.9),\n    outlineColor: Cesium.Color.BLACK,\n    outlineWidth: 1,\n    pixelSize: 15,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n  },\n  polylineProps: {\n    width: 1,\n    material: () => Cesium.Color.BLACK,\n  },\n  circleToEllipseTransformation: false,\n};\n\n/**\n * Service for creating editable ellipses\n *\n * You must provide `EllipsesEditorService` yourself.\n * EllipsesEditorService works together with `<ellipse-editor>` component. Therefor you need to create `<ellipse-editor>`\n * for each `EllipsesEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `EllipseEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `EllipseEditorObservable`.\n * + To stop editing call `dispose()` from the `EllipseEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over edited shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `EllipseEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n * usage:\n * ```typescript\n *  // Start creating ellipse\n *  const editing$ = ellipsesEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit ellipse from existing center point, two radiuses and rotation\n *  const editing$ = this.ellipsesEditorService.edit(center, majorRadius, rotation, minorRadius);\n *\n * ```\n */\n@Injectable()\nexport class EllipsesEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<EllipseEditUpdate>();\n  private updatePublisher = publish<EllipseEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private ellipsesManager: EllipsesManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n\n  init(\n    mapEventsManager: MapEventsManagerService,\n    coordinateConverter: CoordinateConverter,\n    cameraService: CameraService,\n    ellipsesManager: EllipsesManagerService,\n  ) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.ellipsesManager = ellipsesManager;\n    this.updatePublisher.connect();\n  }\n\n  onUpdate(): Observable<EllipseEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  create(options = DEFAULT_ELLIPSE_OPTIONS, priority = 100): EllipseEditorObservable {\n    let center: any;\n    const id = generateKey();\n    const ellipseOptions = this.setOptions(options);\n    const clientEditSubject = new BehaviorSubject<EllipseEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE,\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      ellipseOptions,\n    });\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      priority,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: ellipseOptions.addPointEvent,\n      pick: PickOptions.NO_PICK,\n      priority,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id);\n\n    addPointRegistration.subscribe(({movement: {endPosition}}) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (!position) {\n        return;\n      }\n\n      if (!center) {\n        const update: EllipseEditUpdate = {\n          id,\n          center: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.ADD_POINT,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n        });\n        center = position;\n      } else {\n        const update: EllipseEditUpdate = {\n          id,\n          center,\n          updatedPosition: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.ADD_LAST_POINT,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n        });\n\n        const changeMode: EllipseEditUpdate = {\n          id,\n          center,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.CHANGE_TO_EDIT,\n        };\n\n        this.updateSubject.next(changeMode);\n        clientEditSubject.next({\n          ...update,\n        });\n        if (this.observablesMap.has(id)) {\n          this.observablesMap.get(id).forEach(registration => registration.dispose());\n        }\n        this.observablesMap.delete(id);\n        this.editEllipse(id, priority, clientEditSubject, ellipseOptions, editorObservable);\n        finishedCreate = true;\n      }\n    });\n\n    mouseMoveRegistration.subscribe(({movement: {endPosition}}) => {\n      if (!center) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n\n      if (position) {\n        const update: EllipseEditUpdate = {\n          id,\n          center,\n          updatedPosition: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.MOUSE_MOVE,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n        });\n      }\n    });\n\n    return editorObservable;\n  }\n\n  edit(\n    center: Cartesian3,\n    majorRadius: number,\n    rotation = Math.PI / 2,\n    minorRadius?: number,\n    options = DEFAULT_ELLIPSE_OPTIONS,\n    priority = 100,\n  ): EllipseEditorObservable {\n    const id = generateKey();\n    const ellipseOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<EllipseEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT,\n    });\n\n    const update: EllipseEditUpdate = {\n      id,\n      center,\n      majorRadius,\n      rotation,\n      minorRadius,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      ellipseOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n    });\n\n    return this.editEllipse(id, priority, editSubject, ellipseOptions);\n  }\n\n  private editEllipse(\n    id: string,\n    priority: number,\n    editSubject: Subject<EllipseEditUpdate>,\n    options: EllipseEditOptions,\n    editObservable?: EllipseEditorObservable,\n  ): EllipseEditorObservable {\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: options.dragPointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    let addSecondRadiusRegistration;\n    if (options.circleToEllipseTransformation) {\n      addSecondRadiusRegistration = this.mapEventsManager.register({\n        event: options.circleToEllipseTransformEvent,\n        modifier: options.circleToEllipseTransformEventModifier,\n        entityType: EditableEllipse,\n        pick: PickOptions.PICK_FIRST,\n        priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: options.dragShapeEvent,\n        entityType: EditableEllipse,\n        pick: PickOptions.PICK_FIRST,\n        priority: priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n\n    pointDragRegistration\n      .pipe(tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n      .subscribe(({movement: {endPosition, startPosition, drop}, entities}) => {\n        const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n        const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n        if (!endDragPosition) {\n          return;\n        }\n\n        const point: EditPoint = entities[0];\n        const pointIsCenter = point === this.getCenterPoint(id);\n        let editAction;\n        if (drop) {\n          editAction = pointIsCenter ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_POINT_FINISH;\n        } else {\n          editAction = pointIsCenter ? EditActions.DRAG_SHAPE : EditActions.DRAG_POINT;\n        }\n\n        if (!options.allowDrag && (editAction === EditActions.DRAG_SHAPE || editAction === EditActions.DRAG_SHAPE_FINISH)) {\n          this.cameraService.enableInputs(true);\n          return;\n        }\n\n        const update: EllipseEditUpdate = {\n          id,\n          updatedPoint: point,\n          startDragPosition,\n          endDragPosition,\n          editMode: EditModes.EDIT,\n          editAction,\n          ...this.getEllipseProperties(id),\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n        });\n      });\n\n    if (addSecondRadiusRegistration) {\n      addSecondRadiusRegistration.subscribe(({movement: {endPosition, startPosition, drop}, entities}) => {\n        const update: EllipseEditUpdate = {\n          id,\n          editMode: EditModes.EDIT,\n          editAction: EditActions.TRANSFORM,\n          ...this.getEllipseProperties(id),\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n        });\n      });\n    }\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n        .subscribe(({movement: {startPosition, endPosition, drop}}) => {\n          const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n          const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n          if (!endDragPosition || !startDragPosition) {\n            return;\n          }\n\n          const update: EllipseEditUpdate = {\n            id,\n            startDragPosition,\n            endDragPosition,\n            editMode: EditModes.EDIT,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n            ...this.getEllipseProperties(id),\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n          });\n        });\n    }\n\n    const observables = [pointDragRegistration, addSecondRadiusRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n    if (addSecondRadiusRegistration) {\n      observables.push(addSecondRadiusRegistration);\n    }\n\n    this.observablesMap.set(id, observables);\n    return editObservable || this.createEditorObservable(editSubject, id);\n  }\n\n  private createEditorObservable(observableToExtend: any, id: string): EllipseEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n        ...this.getEllipseProperties(id),\n      } as EllipseEditUpdate);\n    };\n\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n        ...this.getEllipseProperties(id),\n      } as EllipseEditUpdate);\n    };\n\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n        ...this.getEllipseProperties(id),\n      } as EllipseEditUpdate);\n    };\n\n    observableToExtend.setManually = (\n      center: Cartesian3,\n      majorRadius: number,\n      rotation?: number,\n      minorRadius?: number,\n      centerPointProp?: PointProps,\n      radiusPointProp?: PointProps,\n      ellipseProp?: EllipseProps,\n    ) => {\n      const ellipse = this.ellipsesManager.get(id);\n      ellipse.setManually(center, majorRadius, rotation, minorRadius, centerPointProp, radiusPointProp, ellipseProp);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: (update: BasicEditUpdate<any>, labels: LabelProps[]) => LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      } as EllipseEditUpdate);\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      } as EllipseEditUpdate);\n    };\n\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n\n    observableToExtend.getLabels = (): LabelProps[] => this.ellipsesManager.get(id).labels;\n    observableToExtend.getCenter = (): Cartesian3 => this.getCenterPosition(id);\n    observableToExtend.getMajorRadius = (): number => this.getMajorRadius(id);\n    observableToExtend.getMinorRadius = (): number => this.getMinorRadius(id);\n\n    return observableToExtend as EllipseEditorObservable;\n  }\n\n  private setOptions(options: EllipseEditOptions): EllipseEditOptions {\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_ELLIPSE_OPTIONS));\n    const ellipseOptions = Object.assign(defaultClone, options);\n    ellipseOptions.pointProps = Object.assign({}, DEFAULT_ELLIPSE_OPTIONS.pointProps, options.pointProps);\n    ellipseOptions.ellipseProps = Object.assign({}, DEFAULT_ELLIPSE_OPTIONS.ellipseProps, options.ellipseProps);\n    ellipseOptions.polylineProps = Object.assign({}, DEFAULT_ELLIPSE_OPTIONS.polylineProps, options.polylineProps);\n    return ellipseOptions;\n  }\n\n  private getCenterPosition(id: string): Cartesian3 {\n    return this.ellipsesManager.get(id).getCenter();\n  }\n\n  private getCenterPoint(id: string): EditPoint {\n    return this.ellipsesManager.get(id).center;\n  }\n\n  private getMajorRadius(id: string): number {\n    return this.ellipsesManager.get(id).getMajorRadius();\n  }\n\n  private getMinorRadius(id: string): number {\n    return this.ellipsesManager.get(id).getMinorRadius();\n  }\n\n  private getEllipseProperties(id: string) {\n    const ellipse = this.ellipsesManager.get(id);\n    return {\n      center: ellipse.getCenter(),\n      rotation: ellipse.getRotation(),\n      minorRadius: ellipse.getMinorRadius(),\n      majorRadius: ellipse.getMajorRadius(),\n      minorRadiusPointPosition: ellipse.getMinorRadiusPointPosition(),\n      majorRadiusPointPosition: ellipse.getMajorRadiusPointPosition(),\n    };\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { EllipsesManagerService } from '../../services/entity-editors/ellipses-editor/ellipses-manager.service';\nimport { EllipsesEditorService } from '../../services/entity-editors/ellipses-editor/ellipses-editor.service';\nimport { EllipseEditUpdate } from '../../models/ellipse-edit-update';\nimport { LabelProps } from '../../models/label-props';\nimport { EditableEllipse } from '../../models/editable-ellipse';\n\n@Component({\n  selector: 'ellipses-editor',\n  template: /*html*/ `\n    <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n      <ac-point-desc\n        props=\"{\n        position: point.getPosition(),\n        pixelSize: getPointSize(point),\n        color: point.props.color,\n        outlineColor: point.props.outlineColor,\n        outlineWidth: point.props.outlineWidth,\n        show: getPointShow(point)\n    }\"\n      >\n      </ac-point-desc>\n    </ac-layer>\n\n    <ac-layer #editEllipsesLayer acFor=\"let ellipse of editEllipses$\" [context]=\"this\" [zIndex]=\"0\">\n      <ac-ellipse-desc\n        props=\"{\n        position: ellipse.getCenterCallbackProperty(),\n        semiMajorAxis: ellipse.getMajorRadiusCallbackProperty(),\n        semiMinorAxis: ellipse.getMinorRadiusCallbackProperty(),\n        rotation: ellipse.getRotationCallbackProperty(),\n        material: ellipse.ellipseProps.material,\n        outline: ellipse.ellipseProps.outline,\n        outlineWidth: ellipse.ellipseProps.outlineWidth,\n        outlineColor: ellipse.ellipseProps.outlineColor,\n        height: 0\n    }\"\n      >\n      </ac-ellipse-desc>\n\n      <ac-array-desc acFor=\"let label of ellipse.labels\" [idGetter]=\"getLabelId\">\n        <ac-label-primitive-desc\n          props=\"{\n            position: label.position,\n            text: label.text,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin\n        }\"\n        >\n        </ac-label-primitive-desc>\n      </ac-array-desc>\n    </ac-layer>\n  `,\n  providers: [CoordinateConverter, EllipsesManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EllipsesEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: EllipseEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editEllipses$ = new Subject<AcNotification>();\n\n  @ViewChild('editEllipsesLayer') private editEllipsesLayer: AcLayerComponent;\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\n\n  constructor(\n    private ellipsesEditor: EllipsesEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private ellipsesManager: EllipsesManagerService,\n  ) {\n    this.ellipsesEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, this.ellipsesManager);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.ellipsesEditor.onUpdate().subscribe(update => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(ellipse: EditableEllipse, update: EllipseEditUpdate, labels?: LabelProps[]) {\n    update.center = ellipse.getCenter();\n    update.majorRadius = ellipse.getMajorRadius();\n    update.minorRadius = ellipse.getMinorRadius();\n    update.rotation = ellipse.getRotation();\n\n    if (labels) {\n      ellipse.labels = labels;\n      this.editEllipsesLayer.update(ellipse, ellipse.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    ellipse.labels = this.editLabelsRenderFn(update, ellipse.labels);\n    this.editEllipsesLayer.update(ellipse, ellipse.getId());\n  }\n\n  removeEditLabels(ellipse: EditableEllipse) {\n    ellipse.labels = [];\n    this.editEllipsesLayer.update(ellipse, ellipse.getId());\n  }\n\n  handleCreateUpdates(update: EllipseEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.ellipsesManager.createEditableEllipse(\n          update.id,\n          this.editEllipsesLayer,\n          this.editPointsLayer,\n          this.coordinateConverter,\n          update.ellipseOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (update.updatedPosition) {\n          ellipse.movePoint(update.updatedPosition, ellipse.majorRadiusPoint);\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (update.center) {\n          ellipse.addPoint(update.center);\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.ADD_LAST_POINT: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (update.updatedPosition) {\n          ellipse.addLastPoint(update.updatedPosition);\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        this.removeEditLabels(ellipse);\n        this.ellipsesManager.dispose(update.id);\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(ellipse, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        this.renderEditLabels(ellipse, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        this.renderEditLabels(ellipse, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: EllipseEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        const ellipse = this.ellipsesManager.createEditableEllipse(\n          update.id,\n          this.editEllipsesLayer,\n          this.editPointsLayer,\n          this.coordinateConverter,\n          update.ellipseOptions,\n        );\n        ellipse.setManually(\n          update.center,\n          update.majorRadius,\n          update.rotation,\n          update.minorRadius,\n          (update.ellipseOptions && update.ellipseOptions.pointProps) || undefined,\n          (update.ellipseOptions && update.ellipseOptions.pointProps) || undefined,\n          (update.ellipseOptions && update.ellipseOptions.ellipseProps) || undefined,\n        );\n        this.renderEditLabels(ellipse, update);\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH:\n      case EditActions.DRAG_POINT: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse && ellipse.enableEdit) {\n          ellipse.movePoint(update.endDragPosition, update.updatedPoint);\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse && ellipse.enableEdit) {\n          ellipse.moveEllipse(update.startDragPosition, update.endDragPosition);\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse && ellipse.enableEdit) {\n          ellipse.endMoveEllipse();\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.TRANSFORM: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse && ellipse.enableEdit) {\n          ellipse.transformToEllipse();\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse) {\n          ellipse.enableEdit = false;\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse) {\n          ellipse.enableEdit = true;\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.ellipsesManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { EditPolyline } from './edit-polyline';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { PointProps, PolylineEditOptions, PolylineProps } from './polyline-edit-options';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { defaultLabelProps, LabelProps } from './label-props';\n\nexport class EditablePolyline extends AcEntity {\n  private positions: EditPoint[] = [];\n\n  private polylines: EditPolyline[] = [];\n  private movingPoint: EditPoint;\n  private doneCreation = false;\n  private _enableEdit = true;\n  private _pointProps: PointProps;\n  private polylineProps: PolylineProps;\n  private lastDraggedToPosition: any;\n  private _labels: LabelProps[] = [];\n\n  constructor(private id: string,\n              private pointsLayer: AcLayerComponent,\n              private polylinesLayer: AcLayerComponent,\n              private coordinateConverter: CoordinateConverter,\n              private editOptions: PolylineEditOptions,\n              positions?: Cartesian3[]) {\n    super();\n    this._pointProps = editOptions.pointProps;\n    this.props = editOptions.polylineProps;\n    if (positions && positions.length >= 2) {\n      this.createFromExisting(positions);\n    }\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels) {\n      return;\n    }\n    const positions = this.getRealPositions();\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        label.position = positions[index];\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get props(): PolylineProps {\n    return this.polylineProps;\n  }\n\n  set props(value: PolylineProps) {\n    this.polylineProps = value;\n  }\n\n  get pointProps(): PointProps {\n    return this._pointProps;\n  }\n\n  set pointProps(value: PointProps) {\n    this._pointProps = value;\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this.positions.forEach(point => {\n      point.show = value;\n      this.updatePointsLayer(false, point);\n    });\n  }\n\n  private createFromExisting(positions: Cartesian3[]) {\n    positions.forEach((position) => {\n      this.addPointFromExisting(position);\n    });\n    this.addAllVirtualEditPoints();\n    this.doneCreation = true;\n  }\n\n  setManually(points: {\n    position: Cartesian3,\n    pointProp?: PointProps\n  }[] | Cartesian3[], polylineProps?: PolylineProps) {\n    if (!this.doneCreation) {\n      throw new Error('Update manually only in edit mode, after polyline is created');\n    }\n    this.positions.forEach(p => this.pointsLayer.remove(p.getId()));\n\n    const newPoints: EditPoint[] = [];\n    for (let i = 0; i < points.length; i++) {\n      const pointOrCartesian: any = points[i];\n      let newPoint = null;\n      if (pointOrCartesian.pointProps) {\n        newPoint = new EditPoint(this.id, pointOrCartesian.position, pointOrCartesian.pointProps);\n      } else {\n        newPoint = new EditPoint(this.id, pointOrCartesian, this._pointProps);\n      }\n      newPoints.push(newPoint);\n    }\n    this.positions = newPoints;\n    this.polylineProps = polylineProps ? polylineProps : this.polylineProps;\n\n    this.updatePointsLayer(true, ...this.positions);\n    this.addAllVirtualEditPoints();\n  }\n\n  private addAllVirtualEditPoints() {\n    const currentPoints = [...this.positions];\n    currentPoints.forEach((pos, index) => {\n      if (index !== currentPoints.length - 1) {\n        const currentPoint = pos;\n        const nextIndex = (index + 1) % (currentPoints.length);\n        const nextPoint = currentPoints[nextIndex];\n\n        const midPoint = this.setMiddleVirtualPoint(currentPoint, nextPoint);\n\n        this.updatePointsLayer(false, midPoint);\n      }\n    });\n  }\n\n  private setMiddleVirtualPoint(firstP: EditPoint, secondP: EditPoint): EditPoint {\n    const currentCart = Cesium.Cartographic.fromCartesian(firstP.getPosition());\n    const nextCart = Cesium.Cartographic.fromCartesian(secondP.getPosition());\n    const midPointCartesian3 = this.coordinateConverter.midPointToCartesian3(currentCart, nextCart);\n    const midPoint = new EditPoint(this.id, midPointCartesian3, this._pointProps);\n    midPoint.setVirtualEditPoint(true);\n\n    const firstIndex = this.positions.indexOf(firstP);\n    this.positions.splice(firstIndex + 1, 0, midPoint);\n    return midPoint;\n  }\n\n  private updateMiddleVirtualPoint(virtualEditPoint: EditPoint, prevPoint: EditPoint, nextPoint: EditPoint) {\n    const prevPointCart = Cesium.Cartographic.fromCartesian(prevPoint.getPosition());\n    const nextPointCart = Cesium.Cartographic.fromCartesian(nextPoint.getPosition());\n    virtualEditPoint.setPosition(this.coordinateConverter.midPointToCartesian3(prevPointCart, nextPointCart));\n  }\n\n  changeVirtualPointToRealPoint(point: EditPoint) {\n    point.setVirtualEditPoint(false); // actual point becomes a real point\n    const pointsCount = this.positions.length;\n    const pointIndex = this.positions.indexOf(point);\n    const nextIndex = (pointIndex + 1) % (pointsCount);\n    const preIndex = ((pointIndex - 1) + pointsCount) % pointsCount;\n\n    const nextPoint = this.positions[nextIndex];\n    const prePoint = this.positions[preIndex];\n\n    const firstMidPoint = this.setMiddleVirtualPoint(prePoint, point);\n    const secMidPoint = this.setMiddleVirtualPoint(point, nextPoint);\n    this.updatePointsLayer(false, firstMidPoint, secMidPoint, point);\n\n  }\n\n  private renderPolylines() {\n    this.polylines.forEach(polyline => this.polylinesLayer.remove(polyline.getId()));\n    this.polylines = [];\n    const realPoints = this.positions.filter(point => !point.isVirtualEditPoint());\n    realPoints.forEach((point, index) => {\n      if (index !== realPoints.length - 1) {\n        const nextIndex = (index + 1);\n        const nextPoint = realPoints[nextIndex];\n        const polyline = new EditPolyline(this.id, point.getPosition(), nextPoint.getPosition(), this.polylineProps);\n        this.polylines.push(polyline);\n        this.polylinesLayer.update(polyline, polyline.getId());\n      }\n    });\n  }\n\n  addPointFromExisting(position: Cartesian3) {\n    const newPoint = new EditPoint(this.id, position, this._pointProps);\n    this.positions.push(newPoint);\n    this.updatePointsLayer(true, newPoint);\n  }\n\n\n  addPoint(position: Cartesian3) {\n    if (this.doneCreation) {\n      return;\n    }\n    const isFirstPoint = !this.positions.length;\n    if (isFirstPoint) {\n      const firstPoint = new EditPoint(this.id, position, this._pointProps);\n      this.positions.push(firstPoint);\n      this.updatePointsLayer(true, firstPoint);\n    }\n\n    this.movingPoint = new EditPoint(this.id, position.clone(), this._pointProps);\n    this.positions.push(this.movingPoint);\n\n    this.updatePointsLayer(true, this.movingPoint);\n  }\n\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\n    editPoint.setPosition(toPosition);\n    if (this.doneCreation) {\n      if (editPoint.isVirtualEditPoint()) {\n        this.changeVirtualPointToRealPoint(editPoint);\n      }\n      const pointsCount = this.positions.length;\n      const pointIndex = this.positions.indexOf(editPoint);\n\n      if (pointIndex < this.positions.length - 1) {\n        const nextVirtualPoint = this.positions[(pointIndex + 1) % (pointsCount)];\n        const nextRealPoint = this.positions[(pointIndex + 2) % (pointsCount)];\n        this.updateMiddleVirtualPoint(nextVirtualPoint, editPoint, nextRealPoint);\n        this.updatePointsLayer(false, nextVirtualPoint);\n      }\n      if (pointIndex > 0) {\n        const prevVirtualPoint = this.positions[((pointIndex - 1) + pointsCount) % pointsCount];\n        const prevRealPoint = this.positions[((pointIndex - 2) + pointsCount) % pointsCount];\n        this.updateMiddleVirtualPoint(prevVirtualPoint, editPoint, prevRealPoint);\n        this.updatePointsLayer(false, prevVirtualPoint);\n      }\n    }\n    this.updatePointsLayer(true, editPoint);\n  }\n\n  moveTempMovingPoint(toPosition: Cartesian3) {\n    if (this.movingPoint) {\n      this.movePoint(toPosition, this.movingPoint);\n    }\n  }\n\n  moveShape(startMovingPosition: Cartesian3, draggedToPosition: Cartesian3) {\n    if (!this.doneCreation) {\n      return;\n    }\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = startMovingPosition;\n    }\n\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, draggedToPosition);\n    this.positions.forEach(point => {\n      GeoUtilsService.addDeltaToPosition(point.getPosition(), delta, true);\n    });\n    this.updatePointsLayer(true, ...this.positions);\n    this.lastDraggedToPosition = draggedToPosition;\n  }\n\n  endMoveShape() {\n    this.lastDraggedToPosition = undefined;\n    this.updatePointsLayer(true, ...this.positions);\n  }\n\n  removePoint(pointToRemove: EditPoint) {\n    this.removePosition(pointToRemove);\n    this.positions\n      .filter(p => p.isVirtualEditPoint())\n      .forEach(p => this.removePosition(p));\n    this.addAllVirtualEditPoints();\n\n    this.renderPolylines();\n  }\n\n  addLastPoint(position: Cartesian3) {\n    this.doneCreation = true;\n    this.removePosition(this.movingPoint); // remove movingPoint\n    this.movingPoint = null;\n\n    this.addAllVirtualEditPoints();\n  }\n\n  getRealPositions(): Cartesian3[] {\n    return this.getRealPoints()\n      .map(position => position.getPosition());\n  }\n\n  getRealPoints(): EditPoint[] {\n    return this.positions\n      .filter(position => !position.isVirtualEditPoint() && position !== this.movingPoint);\n  }\n\n  getPositions(): Cartesian3[] {\n    return this.positions.map(position => position.getPosition());\n  }\n\n  private removePosition(point: EditPoint) {\n    const index = this.positions.findIndex((p) => p === point);\n    if (index < 0) {\n      return;\n    }\n    this.positions.splice(index, 1);\n    this.pointsLayer.remove(point.getId());\n  }\n\n  private updatePointsLayer(renderPolylines = true, ...point: EditPoint[]) {\n    if (renderPolylines) {\n      this.renderPolylines();\n    }\n    point.forEach(p => this.pointsLayer.update(p, p.getId()));\n  }\n\n  update() {\n    this.updatePointsLayer();\n  }\n\n  dispose() {\n    this.positions.forEach(editPoint => {\n      this.pointsLayer.remove(editPoint.getId());\n    });\n    this.polylines.forEach(line => this.polylinesLayer.remove(line.getId()));\n    if (this.movingPoint) {\n      this.pointsLayer.remove(this.movingPoint.getId());\n      this.movingPoint = undefined;\n    }\n    this.positions.length = 0;\n  }\n\n  getPointsCount(): number {\n    return this.positions.length;\n  }\n\n  getId() {\n    return this.id;\n  }\n}\n","import { Observable } from 'rxjs';\nimport { LabelProps } from './label-props';\n\nexport class EditorObservable<T> extends Observable<T> {\n  dispose: Function;\n  enable: Function;\n  disable: Function;\n  getLabels: () => LabelProps[];\n  getEditValue: () => T;\n  setLabelsRenderFn: (func: (update: T, labels: LabelProps[]) => LabelProps[]) => void;\n  updateLabels: (labels: LabelProps[]) => void;\n}\n","import { EditPoint } from './edit-point';\nimport { EditorObservable } from './editor-observable';\nimport { PolylineEditUpdate } from './polyline-edit-update';\nimport { PointProps, PolylineProps } from './polyline-edit-options';\nimport { Cartesian3 } from '../../angular-cesium';\n\nexport class PolylineEditorObservable extends EditorObservable<PolylineEditUpdate> {\n  setManually: (points: { position: Cartesian3, pointProp?: PointProps }[] | Cartesian3[], polylineProps?: PolylineProps) => void;\n  getCurrentPoints: () => EditPoint[];\n}\n","import { EditPoint } from './edit-point';\nimport { EditorObservable } from './editor-observable';\nimport { PolygonEditUpdate } from './polygon-edit-update';\nimport { PointProps } from './polyline-edit-options';\nimport { PolygonProps } from './polygon-edit-options';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\n\n\nexport class PolygonEditorObservable extends EditorObservable<PolygonEditUpdate> {\n  setManually: (points: { position: Cartesian3, pointProp?: PointProps }[] | Cartesian3[],\n                polygonProps?: PolygonProps) => void;\n  getCurrentPoints: () => EditPoint[];\n}\n","import { EditorObservable } from './editor-observable';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CircleEditUpdate } from './circle-edit-update';\nimport { PointProps } from './polyline-edit-options';\nimport { EllipseProps } from './ellipse-edit-options';\n\nexport class CircleEditorObservable extends EditorObservable<CircleEditUpdate> {\n  setManually: (center: Cartesian3, radius: number, centerPointProp?: PointProps,\n                radiusPointProp?: PointProps, circleProp?: EllipseProps) => void;\n  getCenter: () => Cartesian3;\n  getRadius: () => number; // meters\n}\n","import { EditorObservable } from './editor-observable';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { EllipseEditUpdate } from './ellipse-edit-update';\nimport { PointProps } from './polyline-edit-options';\nimport { EllipseProps } from './ellipse-edit-options';\n\nexport class EllipseEditorObservable extends EditorObservable<EllipseEditUpdate> {\n  setManually: (\n    center: Cartesian3,\n    majorRadius: number,\n    rotation?: number,\n    minorRadius?: number,\n    centerPointProp?: PointProps,\n    radiusPointProp?: PointProps,\n    ellipseProp?: EllipseProps,\n  ) => void;\n  getCenter: () => Cartesian3;\n  getMinorRadius: () => number; // meters\n  getMajorRadius: () => number; // meters\n}\n","import { EditPoint } from './edit-point';\nimport { EditorObservable } from './editor-observable';\nimport { PolygonEditUpdate } from './polygon-edit-update';\nimport { PointProps } from './polyline-edit-options';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\n\nexport class HippodromeEditorObservable extends EditorObservable<PolygonEditUpdate> {\n  setManually: (firstPosition: Cartesian3,\n                secondPosition: Cartesian3,\n                widthMeters?: number,\n                firstPointProp?: PointProps,\n                secondPointProp?: PointProps) => void;\n  getCurrentPoints: () => EditPoint[];\n  getCurrentWidth: () => number; // meters\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { PointProps } from './polyline-edit-options';\nimport { HippodromeEditOptions, HippodromeProps } from './hippodrome-edit-options';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { defaultLabelProps, LabelProps } from './label-props';\n\nexport class EditableHippodrome extends AcEntity {\n  private positions: EditPoint[] = [];\n  private movingPoint: EditPoint;\n  private done = false;\n  private _enableEdit = true;\n  private _defaultPointProps: PointProps;\n  private _hippodromeProps: HippodromeProps;\n  private lastDraggedToPosition: Cartesian3;\n  private _labels: LabelProps[] = [];\n\n  constructor(\n    private id: string,\n    private pointsLayer: AcLayerComponent,\n    private hippodromeLayer: AcLayerComponent,\n    private coordinateConverter: CoordinateConverter,\n    editOptions: HippodromeEditOptions,\n    positions?: Cartesian3[],\n  ) {\n    super();\n    this.defaultPointProps = editOptions.pointProps;\n    this.hippodromeProps = editOptions.hippodromeProps;\n    if (positions && positions.length === 2) {\n      this.createFromExisting(positions);\n    } else if (positions) {\n      throw new Error('Hippodrome consist of 2 points but provided ' + positions.length);\n    }\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels) {\n      return;\n    }\n    const positions = this.getRealPositions();\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        label.position = positions[index];\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get hippodromeProps(): HippodromeProps {\n    return this._hippodromeProps;\n  }\n\n  set hippodromeProps(value: HippodromeProps) {\n    this._hippodromeProps = value;\n  }\n\n  get defaultPointProps(): PointProps {\n    return this._defaultPointProps;\n  }\n\n  set defaultPointProps(value: PointProps) {\n    this._defaultPointProps = value;\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this.positions.forEach(point => {\n      point.show = value;\n      this.updatePointsLayer(point);\n    });\n  }\n\n  private createFromExisting(positions: Cartesian3[]) {\n    positions.forEach(position => {\n      this.addPointFromExisting(position);\n    });\n    this.createHeightEditPoints();\n    this.updateHippdromeLayer();\n    this.updatePointsLayer(...this.positions);\n    this.done = true;\n  }\n\n  setPointsManually(points: EditPoint[], widthMeters?: number) {\n    if (!this.done) {\n      throw new Error('Update manually only in edit mode, after polyline is created');\n    }\n    this.hippodromeProps.width = widthMeters ? widthMeters : this.hippodromeProps.width;\n    this.positions.forEach(p => this.pointsLayer.remove(p.getId()));\n    this.positions = points;\n    this.createHeightEditPoints();\n    this.updatePointsLayer(...points);\n    this.updateHippdromeLayer();\n  }\n\n  addPointFromExisting(position: Cartesian3) {\n    const newPoint = new EditPoint(this.id, position, this.defaultPointProps);\n    this.positions.push(newPoint);\n    this.updatePointsLayer(newPoint);\n  }\n\n  addPoint(position: Cartesian3) {\n    if (this.done) {\n      return;\n    }\n    const isFirstPoint = !this.positions.length;\n    if (isFirstPoint) {\n      const firstPoint = new EditPoint(this.id, position, this.defaultPointProps);\n      this.positions.push(firstPoint);\n      this.movingPoint = new EditPoint(this.id, position.clone(), this.defaultPointProps);\n      this.positions.push(this.movingPoint);\n      this.updatePointsLayer(firstPoint);\n    } else {\n      this.createHeightEditPoints();\n\n      this.updatePointsLayer(...this.positions);\n      this.updateHippdromeLayer();\n      this.done = true;\n      this.movingPoint = null;\n    }\n  }\n\n  private createHeightEditPoints() {\n    this.positions.filter(p => p.isVirtualEditPoint()).forEach(p => this.removePosition(p));\n\n    const firstP = this.getRealPoints()[0];\n    const secP = this.getRealPoints()[1];\n\n    const midPointCartesian3 = Cesium.Cartesian3.lerp(firstP.getPosition(), secP.getPosition(), 0.5, new Cesium.Cartesian3());\n    const bearingDeg = this.coordinateConverter.bearingToCartesian(firstP.getPosition(), secP.getPosition());\n\n    const upAzimuth = Cesium.Math.toRadians(bearingDeg) - Math.PI / 2;\n    this.createMiddleEditablePoint(midPointCartesian3, upAzimuth);\n    const downAzimuth = Cesium.Math.toRadians(bearingDeg) + Math.PI / 2;\n    this.createMiddleEditablePoint(midPointCartesian3, downAzimuth);\n  }\n\n  private createMiddleEditablePoint(midPointCartesian3: any, azimuth: number) {\n    const upEditCartesian3 = GeoUtilsService.pointByLocationDistanceAndAzimuth(\n      midPointCartesian3,\n      this.hippodromeProps.width / 2,\n      azimuth,\n      true,\n    );\n    const midPoint = new EditPoint(this.id, upEditCartesian3, this.defaultPointProps);\n    midPoint.setVirtualEditPoint(true);\n    this.positions.push(midPoint);\n  }\n\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\n    if (!editPoint.isVirtualEditPoint()) {\n      editPoint.setPosition(toPosition);\n      this.createHeightEditPoints();\n      this.updatePointsLayer(...this.positions);\n      this.updateHippdromeLayer();\n    } else {\n      this.changeWidthByNewPoint(toPosition);\n    }\n  }\n\n  private changeWidthByNewPoint(toPosition: Cartesian3) {\n    const firstP = this.getRealPoints()[0];\n    const secP = this.getRealPoints()[1];\n    const midPointCartesian3 = Cesium.Cartesian3.lerp(firstP.getPosition(), secP.getPosition(), 0.5, new Cesium.Cartesian3());\n\n    const bearingDeg = this.coordinateConverter.bearingToCartesian(midPointCartesian3, toPosition);\n    let normalizedBearingDeb = bearingDeg;\n    if (bearingDeg > 270) {\n      normalizedBearingDeb = bearingDeg - 270;\n    } else if (bearingDeg > 180) {\n      normalizedBearingDeb = bearingDeg - 180;\n    }\n    let bearingDegHippodromeDots = this.coordinateConverter.bearingToCartesian(firstP.getPosition(), secP.getPosition());\n    if (bearingDegHippodromeDots > 180) {\n      bearingDegHippodromeDots = this.coordinateConverter.bearingToCartesian(secP.getPosition(), firstP.getPosition());\n    }\n    let fixedBearingDeg =\n      bearingDegHippodromeDots > normalizedBearingDeb\n        ? bearingDegHippodromeDots - normalizedBearingDeb\n        : normalizedBearingDeb - bearingDegHippodromeDots;\n\n    if (bearingDeg > 270) {\n      fixedBearingDeg = bearingDeg - bearingDegHippodromeDots;\n    }\n\n    const distanceMeters = Math.abs(GeoUtilsService.distance(midPointCartesian3, toPosition));\n    const radiusWidth = Math.sin(Cesium.Math.toRadians(fixedBearingDeg)) * distanceMeters;\n\n    this.hippodromeProps.width = Math.abs(radiusWidth) * 2;\n    this.createHeightEditPoints();\n    this.updatePointsLayer(...this.positions);\n    this.updateHippdromeLayer();\n  }\n\n  moveShape(startMovingPosition: Cartesian3, draggedToPosition: Cartesian3) {\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = startMovingPosition;\n    }\n\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, draggedToPosition);\n    this.getRealPoints().forEach(point => {\n      GeoUtilsService.addDeltaToPosition(point.getPosition(), delta, true);\n    });\n    this.createHeightEditPoints();\n    this.updatePointsLayer(...this.positions);\n    this.updateHippdromeLayer();\n    this.lastDraggedToPosition = draggedToPosition;\n  }\n\n  endMoveShape() {\n    this.lastDraggedToPosition = undefined;\n    this.createHeightEditPoints();\n    this.positions.forEach(point => this.updatePointsLayer(point));\n    this.updateHippdromeLayer();\n  }\n\n  endMovePoint() {\n    this.createHeightEditPoints();\n    this.updatePointsLayer(...this.positions);\n  }\n\n  moveTempMovingPoint(toPosition: Cartesian3) {\n    if (this.movingPoint) {\n      this.movePoint(toPosition, this.movingPoint);\n    }\n  }\n\n  removePoint(pointToRemove: EditPoint) {\n    this.removePosition(pointToRemove);\n    this.positions.filter(p => p.isVirtualEditPoint()).forEach(p => this.removePosition(p));\n  }\n\n  addLastPoint(position: Cartesian3) {\n    this.done = true;\n    this.removePosition(this.movingPoint); // remove movingPoint\n    this.movingPoint = null;\n  }\n\n  getRealPositions(): Cartesian3[] {\n    return this.getRealPoints().map(position => position.getPosition());\n  }\n\n  getRealPositionsCallbackProperty() {\n    return new Cesium.CallbackProperty(this.getRealPositions.bind(this), false);\n  }\n\n  getRealPoints(): EditPoint[] {\n    return this.positions.filter(position => !position.isVirtualEditPoint());\n  }\n\n  getWidth(): number {\n    return this.hippodromeProps.width;\n  }\n\n  getPositions(): Cartesian3[] {\n    return this.positions.map(position => position.getPosition());\n  }\n\n  private removePosition(point: EditPoint) {\n    const index = this.positions.findIndex(p => p === point);\n    if (index < 0) {\n      return;\n    }\n    this.positions.splice(index, 1);\n    this.pointsLayer.remove(point.getId());\n  }\n\n  private updatePointsLayer(...point: EditPoint[]) {\n    point.forEach(p => this.pointsLayer.update(p, p.getId()));\n  }\n\n  private updateHippdromeLayer() {\n    this.hippodromeLayer.update(this, this.id);\n  }\n\n  dispose() {\n    this.hippodromeLayer.remove(this.id);\n\n    this.positions.forEach(editPoint => {\n      this.pointsLayer.remove(editPoint.getId());\n    });\n    if (this.movingPoint) {\n      this.pointsLayer.remove(this.movingPoint.getId());\n      this.movingPoint = undefined;\n    }\n    this.positions.length = 0;\n  }\n\n  getPointsCount(): number {\n    return this.positions.length;\n  }\n\n  getId() {\n    return this.id;\n  }\n}\n","import { publish, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from '../../../models/edit-point';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { PolylinesManagerService } from './polylines-manager.service';\nimport { PointProps, PolylineEditOptions, PolylineProps } from '../../../models/polyline-edit-options';\nimport { PolylineEditUpdate } from '../../../models/polyline-edit-update';\nimport { PolylineEditorObservable } from '../../../models/polyline-editor-observable';\nimport { EditPolyline } from '../../../models';\nimport { LabelProps } from '../../../models/label-props';\nimport { generateKey } from '../../utils';\n\nexport const DEFAULT_POLYLINE_OPTIONS: PolylineEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  addLastPointEvent: CesiumEvent.LEFT_DOUBLE_CLICK,\n  removePointEvent: CesiumEvent.RIGHT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  allowDrag: true,\n  pointProps: {\n    color: Cesium.Color.WHITE.withAlpha(0.9),\n    outlineColor: Cesium.Color.BLACK,\n    outlineWidth: 1,\n    pixelSize: 15,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n  },\n  polylineProps: {\n    material: () => Cesium.Color.BLACK,\n    width: 3,\n  },\n};\n\n/**\n * Service for creating editable polylines\n *\n *  * You must provide `PolylineEditorService` yourself.\n * PolygonsEditorService works together with `<polylines-editor>` component. Therefor you need to create `<polylines-editor>`\n * for each `PolylineEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `PolylineEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `PolylineEditorObservable`.\n * + To stop editing call `dsipose()` from the `PolylineEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over editted shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `PolylineEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n * usage:\n * ```typescript\n *  // Start creating polyline\n *  const editing$ = polylinesEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit polyline from existing polyline cartesian3 positions\n *  const editing$ = this.polylinesEditor.edit(initialPos);\n *\n * ```\n */\n@Injectable()\nexport class PolylinesEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<PolylineEditUpdate>();\n  private updatePublisher = publish<PolylineEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private polylinesManager: PolylinesManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n\n  init(mapEventsManager: MapEventsManagerService,\n       coordinateConverter: CoordinateConverter,\n       cameraService: CameraService,\n       polylinesManager: PolylinesManagerService) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.polylinesManager = polylinesManager;\n    this.updatePublisher.connect();\n  }\n\n  onUpdate(): Observable<PolylineEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  create(options = DEFAULT_POLYLINE_OPTIONS, eventPriority = 100): PolylineEditorObservable {\n    const positions: Cartesian3[] = [];\n    const id = generateKey();\n    const polylineOptions = this.setOptions(options);\n\n    const clientEditSubject = new BehaviorSubject<PolylineEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      positions,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      polylineOptions: polylineOptions,\n    });\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: polylineOptions.addPointEvent,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n    });\n    const addLastPointRegistration = this.mapEventsManager.register({\n      event: polylineOptions.addLastPointEvent,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration, addLastPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id);\n\n    mouseMoveRegistration.subscribe(({movement: {endPosition}}) => {\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (position) {\n        this.updateSubject.next({\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.CREATE,\n          updatedPosition: position,\n          editAction: EditActions.MOUSE_MOVE,\n        });\n      }\n    });\n\n    addPointRegistration.subscribe(({movement: {endPosition}}) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (!position) {\n        return;\n      }\n      const allPositions = this.getPositions(id);\n      if (allPositions.find((cartesian) => cartesian.equals(position))) {\n        return;\n      }\n      const updateValue = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.CREATE,\n        updatedPosition: position,\n        editAction: EditActions.ADD_POINT,\n      };\n      this.updateSubject.next(updateValue);\n      clientEditSubject.next({\n        ...updateValue,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n      });\n      if (polylineOptions.maximumNumberOfPoints && allPositions.length + 1 === polylineOptions.maximumNumberOfPoints) {\n        finishedCreate = this.switchToEditMode(\n          id,\n          position,\n          clientEditSubject,\n          positions,\n          eventPriority,\n          polylineOptions,\n          editorObservable,\n          finishedCreate);\n      }\n    });\n\n    addLastPointRegistration.subscribe(({movement: {endPosition}}) => {\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (!position) {\n        return;\n      }\n      // position already added by addPointRegistration\n      finishedCreate = this.switchToEditMode(\n        id,\n        position,\n        clientEditSubject,\n        positions,\n        eventPriority,\n        polylineOptions,\n        editorObservable,\n        finishedCreate);\n    });\n\n    return editorObservable;\n  }\n\n  private switchToEditMode(id,\n                           position,\n                           clientEditSubject,\n                           positions: Cartesian3[],\n                           eventPriority,\n                           polylineOptions,\n                           editorObservable,\n                           finishedCreate: boolean) {\n    const update = {\n      id,\n      positions: this.getPositions(id),\n      editMode: EditModes.CREATE,\n      updatedPosition: position,\n      editAction: EditActions.ADD_LAST_POINT,\n    };\n    this.updateSubject.next(update);\n    clientEditSubject.next({\n      ...update,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n    });\n\n    const changeMode = {\n      id,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.CHANGE_TO_EDIT,\n    };\n    this.updateSubject.next(changeMode);\n    clientEditSubject.next(changeMode);\n    if (this.observablesMap.has(id)) {\n      this.observablesMap.get(id).forEach(registration => registration.dispose());\n    }\n    this.observablesMap.delete(id);\n    this.editPolyline(id, positions, eventPriority, clientEditSubject, polylineOptions, editorObservable);\n    finishedCreate = true;\n    return finishedCreate;\n  }\n\n  edit(positions: Cartesian3[], options = DEFAULT_POLYLINE_OPTIONS, priority = 100): PolylineEditorObservable {\n    if (positions.length < 2) {\n      throw new Error('Polylines editor error edit(): polyline should have at least 2 positions');\n    }\n    const id = generateKey();\n    const polylineOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<PolylineEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT\n    });\n    const update = {\n      id,\n      positions: positions,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      polylineOptions: polylineOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n    });\n    return this.editPolyline(\n      id,\n      positions,\n      priority,\n      editSubject,\n      polylineOptions\n    );\n  }\n\n  private editPolyline(id: string,\n                       positions: Cartesian3[],\n                       priority: number,\n                       editSubject: Subject<PolylineEditUpdate>,\n                       options: PolylineEditOptions,\n                       editObservable?: PolylineEditorObservable) {\n\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: options.dragPointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    const pointRemoveRegistration = this.mapEventsManager.register({\n      event: options.removePointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: options.dragShapeEvent,\n        entityType: EditPolyline,\n        pick: PickOptions.PICK_FIRST,\n        priority,\n        pickFilter: entity => id === entity.editedEntityId,\n      });\n    }\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n        .subscribe(({movement: {startPosition, endPosition, drop}, entities}) => {\n          const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n          const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n          if (!endDragPosition) {\n            return;\n          }\n\n          const update = {\n            id,\n            positions: this.getPositions(id),\n            editMode: EditModes.EDIT,\n            updatedPosition: endDragPosition,\n            draggedPosition: startDragPosition,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n            positions: this.getPositions(id),\n            points: this.getPoints(id),\n          });\n        });\n    }\n\n    pointDragRegistration.pipe(\n      tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n      .subscribe(({movement: {endPosition, drop}, entities}) => {\n        const position = this.coordinateConverter.screenToCartesian3(endPosition);\n        if (!position) {\n          return;\n        }\n        const point: EditPoint = entities[0];\n\n        const update = {\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.EDIT,\n          updatedPosition: position,\n          updatedPoint: point,\n          editAction: drop ? EditActions.DRAG_POINT_FINISH : EditActions.DRAG_POINT,\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n          positions: this.getPositions(id),\n          points: this.getPoints(id),\n        });\n      });\n\n    pointRemoveRegistration.subscribe(({entities}) => {\n      const point: EditPoint = entities[0];\n      const allPositions = [...this.getPositions(id)];\n      if (allPositions.length < 3) {\n        return;\n      }\n      const index = allPositions.findIndex(position => point.getPosition().equals(position as Cartesian3));\n      if (index < 0) {\n        return;\n      }\n\n      const update = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.EDIT,\n        updatedPoint: point,\n        editAction: EditActions.REMOVE_POINT,\n      };\n      this.updateSubject.next(update);\n      editSubject.next({\n        ...update,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n      });\n    });\n\n    const observables = [pointDragRegistration, pointRemoveRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n    this.observablesMap.set(id, observables);\n    return this.createEditorObservable(editSubject, id);\n  }\n\n  private setOptions(options: PolylineEditOptions) {\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_POLYLINE_OPTIONS));\n    const polylineOptions = Object.assign(defaultClone, options);\n    polylineOptions.pointProps = Object.assign({}, DEFAULT_POLYLINE_OPTIONS.pointProps, options.pointProps);\n    polylineOptions.polylineProps = Object.assign({},\n      DEFAULT_POLYLINE_OPTIONS.polylineProps, options.polylineProps);\n    return polylineOptions;\n  }\n\n\n  private createEditorObservable(observableToExtend: any, id: string): PolylineEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      });\n    };\n\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n      });\n    };\n\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n      });\n    };\n\n    observableToExtend.setManually = (points: {\n      position: Cartesian3,\n      pointProp?: PointProps\n    }[] | Cartesian3[], polylineProps?: PolylineProps) => {\n      const polyline = this.polylinesManager.get(id);\n      polyline.setManually(points, polylineProps);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: any) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      });\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      });\n    };\n    observableToExtend.getCurrentPoints = () => this.getPoints(id);\n\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n\n    observableToExtend.getLabels = (): LabelProps[] => this.polylinesManager.get(id).labels;\n\n    return observableToExtend as PolylineEditorObservable;\n  }\n\n  private getPositions(id: string) {\n    const polyline = this.polylinesManager.get(id);\n    return polyline.getRealPositions();\n  }\n\n  private getPoints(id: string) {\n    const polyline = this.polylinesManager.get(id);\n    return polyline.getRealPoints();\n  }\n}\n","import { CoordinateConverter } from './../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { AcLayerComponent } from './../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Injectable } from '@angular/core';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { PolygonEditOptions } from '../../../models/polygon-edit-options';\nimport { EditablePolyline } from '../../../models/editable-polyline';\n\n@Injectable()\nexport class PolylinesManagerService {\n  polylines: Map<string, EditablePolyline> = new Map<string, EditablePolyline>();\n\n  createEditablePolyline(id: string, editPolylinesLayer: AcLayerComponent, editPointsLayer: AcLayerComponent,\n                         coordinateConverter: CoordinateConverter, polylineOptions?: PolygonEditOptions, positions?: Cartesian3[]) {\n    const editablePolyline = new EditablePolyline(\n      id,\n      editPolylinesLayer,\n      editPointsLayer,\n      coordinateConverter,\n      polylineOptions,\n      positions);\n    this.polylines.set(id, editablePolyline\n    );\n  }\n\n  get(id: string): EditablePolyline {\n    return this.polylines.get(id);\n  }\n\n  clear() {\n    this.polylines.forEach(polyline => polyline.dispose());\n    this.polylines.clear();\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { PolylinesEditorService } from '../../services/entity-editors/polyline-editor/polylines-editor.service';\nimport { PolylinesManagerService } from '../../services/entity-editors/polyline-editor/polylines-manager.service';\nimport { PolylineEditUpdate } from '../../models/polyline-edit-update';\nimport { EditablePolyline } from '../../models/editable-polyline';\nimport { LabelProps } from '../../models/label-props';\n\n@Component({\n  selector: 'polylines-editor',\n  template: /*html*/ `\n    <ac-layer #editPolylinesLayer acFor=\"let polyline of editPolylines$\" [context]=\"this\">\n      <ac-polyline-primitive-desc\n        props=\"{\n        positions: polyline.getPositions(),\n        width: polyline.props.width,\n        material: polyline.props.material()\n    }\"\n      >\n      </ac-polyline-primitive-desc>\n    </ac-layer>\n\n    <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n      <ac-point-desc\n        props=\"{\n        position: point.getPosition(),\n        pixelSize: getPointSize(point),\n        color: point.props.color,\n        outlineColor: point.props.outlineColor,\n        outlineWidth: point.props.outlineWidth,\n        show: getPointShow(point)\n    }\"\n      >\n      </ac-point-desc>\n    </ac-layer>\n\n    <ac-layer #polylineLabelsLayer acFor=\"let polylineLabels of polylineLabels$\" [context]=\"this\">\n      <ac-array-desc acFor=\"let label of polylineLabels.labels\" [idGetter]=\"getLabelId\">\n        <ac-label-primitive-desc\n          props=\"{\n            position: label.position,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            text: label.text,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin\n        }\"\n        >\n        </ac-label-primitive-desc>\n      </ac-array-desc>\n    </ac-layer>\n  `,\n  providers: [CoordinateConverter, PolylinesManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PolylinesEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: PolylineEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editPolylines$ = new Subject<AcNotification>();\n  public polylineLabels$ = new Subject<AcNotification>();\n\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\n  @ViewChild('editPolylinesLayer') private editPolylinesLayer: AcLayerComponent;\n  @ViewChild('polylineLabelsLayer') private polylineLabelsLayer: AcLayerComponent;\n\n  constructor(\n    private polylinesEditor: PolylinesEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private polylinesManager: PolylinesManagerService,\n  ) {\n    this.polylinesEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, polylinesManager);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.polylinesEditor.onUpdate().subscribe((update: PolylineEditUpdate) => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(polyline: EditablePolyline, update: PolylineEditUpdate, labels?: LabelProps[]) {\n    update.positions = polyline.getRealPositions();\n    update.points = polyline.getRealPoints();\n\n    if (labels) {\n      polyline.labels = labels;\n      this.polylineLabelsLayer.update(polyline, polyline.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    polyline.labels = this.editLabelsRenderFn(update, polyline.labels);\n    this.polylineLabelsLayer.update(polyline, polyline.getId());\n  }\n\n  removeEditLabels(polyline: EditablePolyline) {\n    polyline.labels = [];\n    this.polylineLabelsLayer.remove(polyline.getId());\n  }\n\n  handleCreateUpdates(update: PolylineEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.polylinesManager.createEditablePolyline(\n          update.id,\n          this.editPointsLayer,\n          this.editPolylinesLayer,\n          this.coordinateConverter,\n          update.polylineOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (update.updatedPosition) {\n          polyline.moveTempMovingPoint(update.updatedPosition);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (update.updatedPosition) {\n          polyline.addPoint(update.updatedPosition);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.ADD_LAST_POINT: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (update.updatedPosition) {\n          polyline.addLastPoint(update.updatedPosition);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const polyline = this.polylinesManager.get(update.id);\n        polyline.dispose();\n        this.removeEditLabels(polyline);\n        this.editLabelsRenderFn = undefined;\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const polyline = this.polylinesManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(polyline, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const polyline = this.polylinesManager.get(update.id);\n        this.renderEditLabels(polyline, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const polyline = this.polylinesManager.get(update.id);\n        this.renderEditLabels(polyline, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: PolylineEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.polylinesManager.createEditablePolyline(\n          update.id,\n          this.editPointsLayer,\n          this.editPolylinesLayer,\n          this.coordinateConverter,\n          update.polylineOptions,\n          update.positions,\n        );\n        break;\n      }\n      case EditActions.DRAG_POINT: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline && polyline.enableEdit) {\n          polyline.movePoint(update.updatedPosition, update.updatedPoint);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline && polyline.enableEdit && update.updatedPoint.isVirtualEditPoint()) {\n          polyline.changeVirtualPointToRealPoint(update.updatedPoint);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.REMOVE_POINT: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline && polyline.enableEdit) {\n          polyline.removePoint(update.updatedPoint);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline) {\n          polyline.enableEdit = false;\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline) {\n          polyline.enableEdit = true;\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline && polyline.enableEdit) {\n          polyline.moveShape(update.draggedPosition, update.updatedPosition);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline && polyline.enableEdit) {\n          polyline.endMoveShape();\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.polylinesManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { EditableHippodrome } from '../../../models/editable-hippodrome';\nimport { HippodromeEditOptions } from '../../../models/hippodrome-edit-options';\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\n\n@Injectable()\nexport class HippodromeManagerService {\n  hippodromes: Map<string, EditableHippodrome> = new Map<string, EditableHippodrome>();\n\n  createEditableHippodrome(id: string, editHippodromeLayer: AcLayerComponent, editPointsLayer: AcLayerComponent,\n                           coordinateConverter: CoordinateConverter, hippodromeEditOptions?: HippodromeEditOptions,\n                           positions?: Cartesian3[]) {\n    const editableHippodrome = new EditableHippodrome(\n      id,\n      editHippodromeLayer,\n      editPointsLayer,\n      coordinateConverter,\n      hippodromeEditOptions,\n      positions);\n    this.hippodromes.set(id, editableHippodrome);\n  }\n\n  get(id: string): EditableHippodrome {\n    return this.hippodromes.get(id);\n  }\n\n  clear() {\n    this.hippodromes.forEach(hippodrome => hippodrome.dispose());\n    this.hippodromes.clear();\n  }\n}\n","import { publish, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from '../../../models/edit-point';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { HippodromeEditOptions } from '../../../models/hippodrome-edit-options';\nimport { HippodromeManagerService } from './hippodrome-manager.service';\nimport { HippodromeEditorObservable } from '../../../models/hippodrome-editor-oboservable';\nimport { HippodromeEditUpdate } from '../../../models/hippodrome-edit-update';\nimport { EditableHippodrome } from '../../../models/editable-hippodrome';\nimport { PointProps } from '../../../models/polyline-edit-options';\nimport { LabelProps } from '../../../models/label-props';\nimport { generateKey } from '../../utils';\n\nexport const DEFAULT_HIPPODROME_OPTIONS: HippodromeEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  allowDrag: true,\n  hippodromeProps: {\n    material: Cesium.Color.GREEN.withAlpha(0.5),\n    width: 200000.0,\n    outline: false,\n  },\n  pointProps: {\n    color: Cesium.Color.WHITE.withAlpha(0.9),\n    outlineColor: Cesium.Color.BLACK,\n    outlineWidth: 1,\n    pixelSize: 15,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n  },\n};\n\n/**\n * Service for creating editable hippodromes\n *\n * You must provide `HippodromeEditorService` yourself.\n * HippodromeEditorService works together with `<hippodromes-editor>` component. Therefor you need to create `<hippodromes-editor>`\n * for each `PolylineEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `HippodromeEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `HippodromeEditorObservable`.\n * + To stop editing call `dsipose()` from the `HippodromeEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over editted shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `HippodromeEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n *\n * usage:\n * ```typescript\n *  // Start creating hippodrome\n *  const editing$ = hippodromeEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit hippodromes from existing hippodromes cartesian3 positions\n *  const editing$ = this.hippodromeEditor.edit(initialPos);\n *\n * ```\n */\n@Injectable()\nexport class HippodromeEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<HippodromeEditUpdate>();\n  private updatePublisher = publish<HippodromeEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private hippodromeManager: HippodromeManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n\n  init(mapEventsManager: MapEventsManagerService,\n       coordinateConverter: CoordinateConverter,\n       cameraService: CameraService,\n       managerService: HippodromeManagerService) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.hippodromeManager = managerService;\n    this.updatePublisher.connect();\n  }\n\n  onUpdate(): Observable<HippodromeEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  create(options = DEFAULT_HIPPODROME_OPTIONS, eventPriority = 100): HippodromeEditorObservable {\n    const positions: Cartesian3[] = [];\n    const id = generateKey();\n    const hippodromeOptions = this.setOptions(options);\n\n    const clientEditSubject = new BehaviorSubject<HippodromeEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      positions,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      hippodromeOptions: hippodromeOptions,\n    });\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: hippodromeOptions.addPointEvent,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id);\n\n    mouseMoveRegistration.subscribe(({movement: {endPosition}}) => {\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n\n      if (position) {\n        this.updateSubject.next({\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.CREATE,\n          updatedPosition: position,\n          editAction: EditActions.MOUSE_MOVE,\n        });\n      }\n    });\n\n    addPointRegistration.subscribe(({movement: {endPosition}}) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (!position) {\n        return;\n      }\n\n      const allPositions = this.getPositions(id);\n      const isFirstPoint = this.getPositions(id).length === 0;\n\n      const updateValue = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.CREATE,\n        updatedPosition: position,\n        editAction: EditActions.ADD_POINT,\n      };\n      this.updateSubject.next(updateValue);\n      clientEditSubject.next({\n        ...updateValue,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n        width: this.getWidth(id),\n      });\n\n      if (!isFirstPoint) {\n        const changeMode = {\n          id,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.CHANGE_TO_EDIT,\n        };\n        this.updateSubject.next(changeMode);\n        clientEditSubject.next(changeMode);\n        if (this.observablesMap.has(id)) {\n          this.observablesMap.get(id).forEach(registration => registration.dispose());\n        }\n        this.observablesMap.delete(id);\n        this.editHippodrome(id, eventPriority, clientEditSubject, hippodromeOptions, editorObservable);\n        finishedCreate = true;\n      }\n    });\n\n    return editorObservable;\n  }\n\n  edit(positions: Cartesian3[], options = DEFAULT_HIPPODROME_OPTIONS, priority = 100): HippodromeEditorObservable {\n    if (positions.length !== 2) {\n      throw new Error('Hippodrome editor error edit(): polygon should have 2 positions but received ' + positions);\n    }\n    const id = generateKey();\n    const hippodromeEditOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<HippodromeEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT\n    });\n    const update = {\n      id,\n      positions: positions,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      hippodromeOptions: hippodromeEditOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n      width: this.getWidth(id),\n    });\n    return this.editHippodrome(\n      id,\n      priority,\n      editSubject,\n      hippodromeEditOptions\n    );\n  }\n\n  private editHippodrome(id: string,\n                         priority: number,\n                         editSubject: Subject<HippodromeEditUpdate>,\n                         options: HippodromeEditOptions,\n                         editObservable?: HippodromeEditorObservable): HippodromeEditorObservable {\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: options.dragShapeEvent,\n        entityType: EditableHippodrome,\n        pick: PickOptions.PICK_FIRST,\n        priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: options.dragPointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    pointDragRegistration.pipe(\n      tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n      .subscribe(({movement: {endPosition, drop}, entities}) => {\n        const position = this.coordinateConverter.screenToCartesian3(endPosition);\n        if (!position) {\n          return;\n        }\n        const point: EditPoint = entities[0];\n\n        const update = {\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.EDIT,\n          updatedPosition: position,\n          updatedPoint: point,\n          editAction: drop ? EditActions.DRAG_POINT_FINISH : EditActions.DRAG_POINT,\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n          positions: this.getPositions(id),\n          points: this.getPoints(id),\n          width: this.getWidth(id),\n        });\n      });\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n        .subscribe(({movement: {startPosition, endPosition, drop}, entities}) => {\n          const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n          const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n          if (!endDragPosition) {\n            return;\n          }\n\n          const update = {\n            id,\n            positions: this.getPositions(id),\n            editMode: EditModes.EDIT,\n            updatedPosition: endDragPosition,\n            draggedPosition: startDragPosition,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n            positions: this.getPositions(id),\n            points: this.getPoints(id),\n            width: this.getWidth(id),\n          });\n        });\n    }\n\n    const observables = [pointDragRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n\n    this.observablesMap.set(id, observables);\n    return this.createEditorObservable(editSubject, id);\n  }\n\n  private setOptions(options: HippodromeEditOptions): HippodromeEditOptions {\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_HIPPODROME_OPTIONS));\n    const hippodromeOptions = Object.assign(defaultClone, options);\n    hippodromeOptions.hippodromeProps = Object.assign({}, DEFAULT_HIPPODROME_OPTIONS.hippodromeProps, options.hippodromeProps);\n    hippodromeOptions.pointProps = Object.assign({}, DEFAULT_HIPPODROME_OPTIONS.pointProps, options.pointProps);\n    return hippodromeOptions;\n  }\n\n\n  private createEditorObservable(observableToExtend: any, id: string): HippodromeEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      });\n    };\n\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n      });\n    };\n\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n      });\n    };\n\n    observableToExtend.setManually = (firstPosition: Cartesian3,\n                                      secondPosition: Cartesian3,\n                                      widthMeters: number,\n                                      firstPointProp?: PointProps,\n                                      secondPointProp?: PointProps) => {\n      const firstP = new EditPoint(id, firstPosition, firstPointProp ? firstPointProp : DEFAULT_HIPPODROME_OPTIONS.pointProps);\n      const secP = new EditPoint(id, secondPosition, secondPointProp ? secondPointProp : DEFAULT_HIPPODROME_OPTIONS.pointProps);\n\n      const hippodrome = this.hippodromeManager.get(id);\n      hippodrome.setPointsManually([firstP, secP], widthMeters);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: any) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      });\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      });\n    };\n\n    observableToExtend.getCurrentPoints = () => this.getPoints(id);\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n    observableToExtend.getLabels = (): LabelProps[] => this.hippodromeManager.get(id).labels;\n    observableToExtend.getCurrentWidth = (): number => this.getWidth(id);\n\n    return observableToExtend as HippodromeEditorObservable;\n  }\n\n  private getPositions(id: any) {\n    const hippodrome = this.hippodromeManager.get(id);\n    return hippodrome.getRealPositions();\n  }\n\n  private getPoints(id: any) {\n    const hippodrome = this.hippodromeManager.get(id);\n    return hippodrome.getRealPoints();\n  }\n\n  private getWidth(id: string) {\n    const hippodrome = this.hippodromeManager.get(id);\n    return hippodrome.getWidth();\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { HippodromeManagerService } from '../../services/entity-editors/hippodrome-editor/hippodrome-manager.service';\nimport { HippodromeEditorService } from '../../services/entity-editors/hippodrome-editor/hippodrome-editor.service';\nimport { HippodromeEditUpdate } from '../../models/hippodrome-edit-update';\nimport { LabelProps } from '../../models/label-props';\nimport { EditableHippodrome } from '../../models/editable-hippodrome';\n\n@Component({\n  selector: 'hippodrome-editor',\n  template: /*html*/ `\n    <ac-layer #editHippodromesLayer acFor=\"let hippodrome of editHippodromes$\" [context]=\"this\">\n      <ac-corridor-desc\n        props=\"{\n\t\tpositions: hippodrome.getRealPositionsCallbackProperty(),\n\t\tcornerType: Cesium.CornerType.ROUNDED,\n\t\tmaterial: hippodrome.hippodromeProps.material,\n\t\twidth : hippodrome.hippodromeProps.width,\n\t\toutline: hippodrome.hippodromeProps.outline,\n\t\toutlineColor: hippodrome.hippodromeProps.outlineColor,\n        outlineWidth: hippodrome.hippodromeProps.outlineWidth,\n        height: 0\n\t}\"\n      >\n      </ac-corridor-desc>\n\n      <ac-array-desc acFor=\"let label of hippodrome.labels\" [idGetter]=\"getLabelId\">\n        <ac-label-primitive-desc\n          props=\"{\n            position: label.position,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            text: label.text,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin\n        }\"\n        >\n        </ac-label-primitive-desc>\n      </ac-array-desc>\n    </ac-layer>\n\n    <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n      <ac-point-desc\n        props=\"{\n        position: point.getPosition(),\n        pixelSize: getPointSize(point),\n        color: point.props.color,\n        outlineColor: point.props.outlineColor,\n        outlineWidth: point.props.outlineWidth,\n        show: getPointShow(point)\n    }\"\n      >\n      </ac-point-desc>\n    </ac-layer>\n  `,\n  providers: [CoordinateConverter, HippodromeManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HippodromeEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: HippodromeEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editHippodromes$ = new Subject<AcNotification>();\n\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\n  @ViewChild('editHippodromesLayer') private editHippodromesLayer: AcLayerComponent;\n\n  constructor(\n    private hippodromesEditor: HippodromeEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private hippodromesManager: HippodromeManagerService,\n  ) {\n    this.hippodromesEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, hippodromesManager);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.hippodromesEditor.onUpdate().subscribe((update: HippodromeEditUpdate) => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(hippodrome: EditableHippodrome, update: HippodromeEditUpdate, labels?: LabelProps[]) {\n    update.positions = hippodrome.getRealPositions();\n    update.points = hippodrome.getRealPoints();\n\n    if (labels) {\n      hippodrome.labels = labels;\n      this.editHippodromesLayer.update(hippodrome, hippodrome.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    hippodrome.labels = this.editLabelsRenderFn(update, hippodrome.labels);\n    this.editHippodromesLayer.update(hippodrome, hippodrome.getId());\n  }\n\n  removeEditLabels(hippodrome: EditableHippodrome) {\n    hippodrome.labels = [];\n    this.editHippodromesLayer.update(hippodrome, hippodrome.getId());\n  }\n\n  handleCreateUpdates(update: HippodromeEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.hippodromesManager.createEditableHippodrome(\n          update.id,\n          this.editPointsLayer,\n          this.editHippodromesLayer,\n          this.coordinateConverter,\n          update.hippodromeOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (update.updatedPosition) {\n          hippodrome.moveTempMovingPoint(update.updatedPosition);\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (update.updatedPosition) {\n          hippodrome.addPoint(update.updatedPosition);\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        hippodrome.dispose();\n        this.removeEditLabels(hippodrome);\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(hippodrome, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        this.renderEditLabels(hippodrome, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        this.renderEditLabels(hippodrome, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: HippodromeEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.hippodromesManager.createEditableHippodrome(\n          update.id,\n          this.editPointsLayer,\n          this.editHippodromesLayer,\n          this.coordinateConverter,\n          update.hippodromeOptions,\n          update.positions,\n        );\n        break;\n      }\n      case EditActions.DRAG_POINT: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome && hippodrome.enableEdit) {\n          hippodrome.movePoint(update.updatedPosition, update.updatedPoint);\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome && hippodrome.enableEdit) {\n          hippodrome.endMovePoint();\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome) {\n          hippodrome.enableEdit = false;\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome) {\n          hippodrome.enableEdit = true;\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome && hippodrome.enableEdit) {\n          hippodrome.moveShape(update.draggedPosition, update.updatedPosition);\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome && hippodrome.enableEdit) {\n          hippodrome.endMoveShape();\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.hippodromesManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { fromEvent as observableFromEvent, Observable, Subject } from 'rxjs';\n\nimport { map, merge, takeUntil, tap } from 'rxjs/operators';\nimport { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Vec2 } from '../../angular-cesium/models/vec2';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapsManagerService } from '../../angular-cesium/services/maps-manager/maps-manager.service';\n\nexport interface IconDragEvent {\n  initialScreenPosition: Vec2;\n  screenPosition: Vec2;\n  mapPosition: Cartesian3;\n  drop: boolean;\n}\n\n/**\n * The Service is used to preform, handle and subscribe to icon dragging when using the `DraggableToMapDirective`.\n * For more info check `DraggableToMapDirective` docs.\n */\n\n@Injectable()\nexport class DraggableToMapService {\n\n  private coordinateConverter: CoordinateConverter;\n  private dragObservable: Observable<IconDragEvent>;\n  private stopper: Subject<any>;\n  private mainSubject = new Subject<IconDragEvent>();\n\n  constructor(@Inject(DOCUMENT) private document: any, private mapsManager: MapsManagerService) {\n  }\n\n  setCoordinateConverter(coordinateConverter: CoordinateConverter) {\n    this.coordinateConverter = coordinateConverter;\n  }\n\n  drag(imageSrc: string, style?: any) {\n    if (!this.coordinateConverter) {\n      const mapComponent = this.mapsManager.getMap();\n      if (mapComponent) {\n        this.coordinateConverter = mapComponent.getCoordinateConverter();\n      }\n    }\n    this.cancel();\n    const imgElement = document.createElement('img');\n    imgElement.src = imageSrc;\n    imgElement.style.position = 'fixed';\n    imgElement.style.visibility = 'hidden';\n    imgElement.style.width = '30px';\n    imgElement.style.height = '30px';\n    imgElement.style['user-drag'] = 'none';\n    imgElement.style['user-select'] = 'none';\n    imgElement.style['-moz-user-select'] = 'none';\n    imgElement.style['-webkit-user-drag'] = 'none';\n    imgElement.style['-webkit-user-select'] = 'none';\n    imgElement.style['-ms-user-select'] = 'none';\n    Object.assign(imgElement.style, style);\n    document.body.appendChild(imgElement);\n\n    this.createDragObservable();\n    this.dragObservable.subscribe(\n      (e) => {\n        imgElement.style.visibility = 'visible';\n        imgElement.style.left = e.screenPosition.x - imgElement.clientWidth / 2 + 'px';\n        imgElement.style.top = e.screenPosition.y - imgElement.clientHeight / 2 + 'px';\n        this.mainSubject.next(e);\n        if (e.drop) {\n          imgElement.remove();\n        }\n      },\n      (e: any) => {\n        imgElement.remove();\n      },\n      () => {\n        imgElement.remove();\n      }\n    );\n  }\n\n  dragUpdates(): Observable<IconDragEvent> {\n    return this.mainSubject;\n  }\n\n  cancel() {\n    if (this.stopper) {\n      this.stopper.next(true);\n      this.stopper = undefined;\n      this.dragObservable = undefined;\n    }\n  }\n\n  private createDragObservable() {\n    const stopper = new Subject();\n    const dropSubject = new Subject<any>();\n    const pointerUp = observableFromEvent(document, 'pointerup');\n    const pointerMove = observableFromEvent(document, 'pointermove');\n\n    let dragStartPositionX: number;\n    let dragStartPositionY: number;\n    let lastMove: any;\n    const moveObservable = pointerMove.pipe(map((e: any) => {\n        dragStartPositionX = dragStartPositionX ? dragStartPositionX : e.x;\n        dragStartPositionY = dragStartPositionY ? dragStartPositionY : e.y;\n        lastMove = {\n          drop: false,\n          initialScreenPosition: {\n            x: dragStartPositionX,\n            y: dragStartPositionY,\n          },\n          screenPosition: {\n            x: e.x,\n            y: e.y,\n          },\n          mapPosition: this.coordinateConverter ?\n            this.coordinateConverter.screenToCartesian3({x: e.x, y: e.y}) : undefined,\n        };\n        return lastMove;\n      }),\n      takeUntil(pointerUp),\n      tap(undefined, undefined, () => {\n        if (lastMove) {\n          const dropEvent = Object.assign({}, lastMove);\n          dropEvent.drop = true;\n          dropSubject.next(dropEvent);\n        }\n      }), );\n\n    this.dragObservable = moveObservable.pipe(merge(dropSubject), takeUntil(stopper), );\n    this.stopper = stopper;\n  }\n}\n","import { Directive, ElementRef, HostListener, Input, OnInit } from '@angular/core';\nimport { DraggableToMapService } from '../services/draggable-to-map.service';\n\n/**\n * This directive is used to allow dragging of icons from outside the map over the map\n * while being notified of the dragging position and drop position with an observable exposed from `DraggableToMapService`.\n * @Input {src: string, style?: any} | string -\n * the [src: string | string] should be the image src of the dragged image.\n * The style is an optional style object for the image.\n *\n * example:\n * ```\n * <a href=\"...\" class=\"...\" [draggableToMap]=\"{src: '../assets/GitHub-Mark-Light.png', style: {width: '50px', height: '50px'}}\">\n *     <img class=\"github\" src=\"../assets/GitHub-Mark-Light.png\">\n * </a>\n * ```\n *\n * In order the get notified of the dragging location  and drop state subscribe to `DraggableToMapService.dragUpdates()`\n * ```\n *  this.iconDragService.dragUpdates().subscribe(e => console.log(e));\n * ```\n *\n * In order the cancel dragging use `DraggableToMapService.cancel()`\n * ```\n *  this.iconDragService.cancel();\n * ```\n */\n\n@Directive({selector: '[draggableToMap]'})\nexport class DraggableToMapDirective implements OnInit {\n  @Input() draggableToMap: { src: string, style?: any } | string;\n  private src: string;\n  private style: any;\n\n  constructor(el: ElementRef, private iconDragService: DraggableToMapService) {\n    el.nativeElement.style['user-drag'] = 'none';\n    el.nativeElement.style['user-select'] = 'none';\n    el.nativeElement.style['-moz-user-select'] = 'none';\n    el.nativeElement.style['-webkit-user-drag'] = 'none';\n    el.nativeElement.style['-webkit-user-select'] = 'none';\n    el.nativeElement.style['-ms-user-select'] = 'none';\n  }\n\n  ngOnInit(): void {\n    if (typeof this.draggableToMap === 'string') {\n      this.src = this.draggableToMap;\n    } else {\n      this.src = this.draggableToMap.src;\n      this.style = this.draggableToMap.style;\n    }\n  }\n\n  @HostListener('mousedown')\n  onMouseDown() {\n    this.iconDragService.drag(this.src, this.style);\n  }\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { fromEvent as observableFromEvent, Subscription } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\nimport { CesiumService } from '../../../../angular-cesium/services/cesium/cesium.service';\n\n\n/**\n * Toolbar widget, act as a container for ac-toolbar-button components\n * allowing drag configuration and passing `toolbarClass` as attributes\n *\n * Usage:\n * ```\n * <ac-toolbar [allowDrag]=\"true\">\n <ac-toolbar-button [iconUrl]=\"'assets/home-icon.svg'\" (onClick)=\"goHome()\">\n </ac-toolbar-button>\n <ac-toolbar-button [iconUrl]=\"'assets/explore-icon.svg'\" (onClick)=\"rangeAndBearing()\">\n </ac-toolbar-button>\n </ac-toolbar>\n * ```\n *\n */\n@Component(\n  {\n    selector: 'ac-toolbar',\n    template: `\n        <div class=\"{{toolbarClass}}\">\n            <div *ngIf=\"allowDrag\">\n                <ac-toolbar-button>\n                    <ac-drag-icon></ac-drag-icon>\n                </ac-toolbar-button>\n            </div>\n\n            <ng-content></ng-content>\n        </div>\n    `,\n    styles: [`\n        :host {\n            position: absolute;\n            top: 20px;\n            left: 20px;\n            width: 20px;\n            height: 20px;\n            z-index: 999;\n            -webkit-user-drag: none;\n        }\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n  }\n)\nexport class AcToolbarComponent implements OnInit, OnDestroy {\n  @Input()\n  toolbarClass: string;\n  @Input()\n  allowDrag = true;\n\n  dragStyle = {\n    'height.px': 20,\n    'width.px': 20,\n  };\n\n  private subscription: Subscription;\n\n  constructor(private element: ElementRef, private cesiumService: CesiumService) {\n  }\n\n  ngOnInit() {\n    this.cesiumService.getMap().getMapContainer().appendChild(this.element.nativeElement);\n    if (this.allowDrag) {\n      const mouseDown$ = observableFromEvent(this.element.nativeElement, 'mousedown');\n      const mouseMove$ = observableFromEvent(document, 'mousemove');\n      const mouseUp$ = observableFromEvent(document, 'mouseup');\n\n      const drag$ = mouseDown$.pipe(switchMap(() => mouseMove$.pipe(takeUntil(mouseUp$))));\n\n      this.subscription = drag$.subscribe((event: MouseEvent) => {\n        this.element.nativeElement.style.left = event.x + 'px';\n        this.element.nativeElement.style.top = event.y + 'px';\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component(\n  {\n    selector: 'ac-drag-icon',\n    template: `\n        <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\"  x=\"0px\" y=\"0px\"  height=\"25\"  width=\"25\"\n\t viewBox=\"0 0 476.737 476.737\" style=\"enable-background:new 0 0 476.737 476.737;\" xml:space=\"preserve\">\n<g>\n\t<g>\n\t\t<path style=\"fill:#010002;\" d=\"M475.498,232.298l-3.401-5.149l-63.565-63.565c-6.198-6.198-16.304-6.198-22.47,0\n\t\t\tc-6.198,6.198-6.198,16.273,0,22.47l36.423,36.423H254.26V54.253l36.423,36.423c6.166,6.198,16.273,6.198,22.47,0\n\t\t\tc6.166-6.198,6.166-16.273,0-22.47L249.588,4.64l-0.159-0.095l-4.99-3.305L238.369,0h-0.064l-6.007,1.24l-4.99,3.305l-0.191,0.095\n\t\t\tl-63.565,63.565c-6.198,6.198-6.198,16.273,0,22.47s16.273,6.198,22.47,0l36.455-36.423v168.225H54.253l36.423-36.423\n\t\t\tc6.198-6.198,6.198-16.273,0-22.47s-16.273-6.198-22.47,0L4.64,227.149l-0.095,0.159l-3.305,4.99L0,238.369v0.064l1.24,6.007\n\t\t\tl3.305,4.958l0.095,0.191l63.565,63.565c6.198,6.198,16.273,6.198,22.47,0c6.198-6.166,6.198-16.273,0-22.47L54.253,254.26\n\t\t\th168.225v168.225l-36.423-36.423c-6.198-6.166-16.273-6.166-22.47,0c-6.198,6.198-6.198,16.304,0,22.47l63.565,63.565l5.149,3.432\n\t\t\tl6.007,1.208h0.064l6.07-1.24l5.149-3.401l63.565-63.565c6.166-6.198,6.166-16.304,0-22.47c-6.198-6.198-16.304-6.198-22.47,0\n\t\t\tl-36.423,36.423V254.26h168.225l-36.423,36.423c-6.166,6.166-6.166,16.273,0,22.47c6.198,6.166,16.304,6.166,22.47,0\n\t\t\tl63.565-63.565l3.432-5.149l1.208-6.007v-0.064L475.498,232.298z\"/>\n\t</g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n</svg>\n    `,\n  }\n)\nexport class DragIconComponent {\n  constructor() {\n  }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n/**\n * Toolbar button widget, act as a single button inside ac-toolbar component\n * Can accepts content components or passing [iconUrl]\n * configure with: `[iconUrl]`,`[buttonClass]`,`[iconClass]`,`(onClick)`\n *\n * Usage:\n * ```\n * <ac-toolbar [allowDrag]=\"true\">\n <ac-toolbar-button [iconUrl]=\"'assets/home-icon.svg'\" (onClick)=\"goHome()\">\n </ac-toolbar-button>\n <ac-toolbar-button [iconUrl]=\"'assets/explore-icon.svg'\" (onClick)=\"rangeAndBearing()\">\n </ac-toolbar-button>\n </ac-toolbar>\n * ```\n *\n */\n@Component(\n  {\n    selector: 'ac-toolbar-button',\n    template: `\n        <div (click)=\"onClick.emit()\" class=\"button-container {{buttonClass}}\">\n            <img *ngIf=\"iconUrl\" [src]=\"iconUrl\" class=\"icon {{iconClass}}\"/>\n            <ng-content></ng-content>\n        </div>\n    `,\n    styles: [`\n        .button-container {\n            border-radius: 1px;\n            background-color: rgba(255, 255, 255, 0.8);\n            height: 30px;\n            width: 30px;\n            padding: 5px;\n            transition: all 0.2s;\n            cursor: pointer;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            flex-direction: column;\n        }\n\n        .button-container:hover {\n            background-color: rgba(255, 255, 255, 0.95);\n        }\n\n        .icon {\n            height: 30px;\n            width: 30px;\n        }\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n  }\n)\nexport class AcToolbarButtonComponent implements OnInit {\n\n  @Input()\n  iconUrl: string;\n\n  @Input()\n  buttonClass: string;\n\n  @Input()\n  iconClass: string;\n\n  @Output()\n  onClick = new EventEmitter();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { PolylineEditorObservable } from '../../models/polyline-editor-observable';\nimport { PolylineEditOptions } from '../../models/polyline-edit-options';\nimport { LabelProps, LabelStyle } from '../../models/label-props';\nimport { PolylineEditUpdate } from '../../models/polyline-edit-update';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { PolylinesEditorService } from '../../services/entity-editors/polyline-editor/polylines-editor.service';\n\n/**\n *\n * Range and bearing component that is used to draw range and bearing on the map.\n * The inputs are used to customize the range and bearing style and behavior.\n * Create component reference and use the `create()` function to start creating R&B on the map.\n * The function receives an optional RangeAndBearingOptions object that defines the created range and bearing style and behavior\n * (on top of the default and global definitions).\n *\n * Usage:\n *\n * my-component.ts:\n *\n * ```\n * \\@ViewChild('rangeAndBearing') private rangeAndBearing: RangeAndBearingComponent; // Get R&B reference\n *  // ...\n * this.rangeAndBearing.create({style: { pointProps: { pixelSize: 12 } }, bearingLabelsStyle: { fillColor: Cesium.Color.GREEN } });\n * ```\n *\n * my-component.html\n * ```\n * <range-and-bearing #rangeAndBearing></range-and-bearing> // Optional inputs defines global style and behavior.\n * ```\n *\n */\n@Component({\n  selector: 'range-and-bearing',\n  template: `\n    <polylines-editor></polylines-editor>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PolylinesEditorService],\n})\nexport class RangeAndBearingComponent {\n  @Input() lineEditOptions?: PolylineEditOptions = {};\n  @Input() labelsStyle?: LabelStyle = {};\n  @Input() distanceLabelsStyle?: LabelStyle = {};\n  @Input() bearingLabelsStyle?: LabelStyle = {};\n  @Input() bearingStringFn?: (value: number) => string;\n  @Input() distanceStringFn?: (value: number) => string;\n  @Input() labelsRenderFn?: (update: PolylineEditUpdate, labels: LabelProps[]) => LabelProps[];\n\n  constructor(private polylineEditor: PolylinesEditorService, private coordinateConverter: CoordinateConverter) {\n  }\n\n  create(\n    {\n      lineEditOptions = {},\n      labelsStyle = {},\n      distanceLabelsStyle = {},\n      bearingLabelsStyle = {},\n      bearingStringFn,\n      distanceStringFn,\n      labelsRenderFn,\n    }: RangeAndBearingOptions = {lineEditOptions: {}, labelsStyle: {}, distanceLabelsStyle: {}, bearingLabelsStyle: {}},\n  ): PolylineEditorObservable {\n    const rnb = this.polylineEditor.create({\n      allowDrag: false,\n      pointProps: {\n        showVirtual: false,\n        pixelSize: 8,\n      },\n      polylineProps: {\n        width: 2,\n      },\n      ...this.lineEditOptions,\n      ...lineEditOptions,\n    });\n\n    if (labelsRenderFn) {\n      rnb.setLabelsRenderFn(labelsRenderFn);\n    } else if (this.labelsRenderFn) {\n      rnb.setLabelsRenderFn(this.labelsRenderFn);\n    } else {\n      rnb.setLabelsRenderFn(update => {\n        const positions = update.positions;\n        let totalDistance = 0;\n        if (!positions || positions.length === 0) {\n          return [];\n        }\n        return (update.editMode === EditModes.CREATE && update.editAction !== EditActions.ADD_LAST_POINT\n            ? [...positions, update.updatedPosition]\n            : positions\n        ).reduce(\n          (labels, position, index, array) => {\n            if (index !== 0) {\n              const previousPosition = array[index - 1];\n              const bearing = this.coordinateConverter.bearingToCartesian(previousPosition, position);\n              const distance = Cesium.Cartesian3.distance(previousPosition, position) / 1000;\n              labels.push(\n                {\n                  text:\n                    (bearingStringFn && bearingStringFn(bearing)) ||\n                    (this.bearingStringFn && this.bearingStringFn(bearing)) ||\n                    `${bearing.toFixed(2)}Â°`,\n                  scale: 0.2,\n                  font: '80px Helvetica',\n                  pixelOffset: new Cesium.Cartesian2(-20, -8),\n                  position: new Cesium.Cartesian3(\n                    (position.x + previousPosition.x) / 2,\n                    (position.y + previousPosition.y) / 2,\n                    (position.z + previousPosition.z) / 2,\n                  ),\n                  fillColor: Cesium.Color.WHITE,\n                  outlineColor: Cesium.Color.WHITE,\n                  showBackground: true,\n                  ...(this.labelsStyle as any),\n                  ...(labelsStyle as any),\n                  ...(this.bearingLabelsStyle as any),\n                  ...(bearingLabelsStyle as any),\n                },\n                {\n                  text:\n                    (distanceStringFn && distanceStringFn(totalDistance + distance)) ||\n                    (this.distanceStringFn && this.distanceStringFn(totalDistance + distance)) ||\n                    `${(totalDistance + distance).toFixed(2)} Km`,\n                  scale: 0.2,\n                  font: '80px Helvetica',\n                  pixelOffset: new Cesium.Cartesian2(-35, -8),\n                  position: position,\n                  fillColor: Cesium.Color.WHITE,\n                  outlineColor: Cesium.Color.WHITE,\n                  showBackground: true,\n                  ...(this.labelsStyle as any),\n                  ...(labelsStyle as any),\n                  ...(this.distanceLabelsStyle as any),\n                  ...(distanceLabelsStyle as any),\n                },\n              );\n\n              totalDistance += distance;\n            }\n\n            return labels;\n          },\n          [\n            {\n              text: (distanceStringFn && distanceStringFn(0)) || (this.distanceStringFn && this.distanceStringFn(0)) || `0 Km`,\n              scale: 0.2,\n              font: '80px Helvetica',\n              pixelOffset: new Cesium.Cartesian2(-20, -8),\n              position: positions[0],\n              fillColor: Cesium.Color.WHITE,\n              outlineColor: Cesium.Color.WHITE,\n              showBackground: true,\n              ...(this.labelsStyle as any),\n              ...(labelsStyle as any),\n              ...(this.distanceLabelsStyle as any),\n              ...(distanceLabelsStyle as any),\n            },\n          ],\n        );\n      });\n    }\n\n    return rnb;\n  }\n}\n\nexport interface RangeAndBearingOptions {\n  lineEditOptions?: PolylineEditOptions;\n  labelsStyle?: LabelStyle;\n  distanceLabelsStyle?: LabelStyle;\n  bearingLabelsStyle?: LabelStyle;\n  bearingStringFn?: (value: number) => string;\n  distanceStringFn?: (value: number) => string;\n  labelsRenderFn?: (update: PolylineEditUpdate, labels: LabelProps[]) => LabelProps[];\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { MapsManagerService } from '../../angular-cesium/services/maps-manager/maps-manager.service';\nimport { CameraService } from '../../angular-cesium/services/camera/camera.service';\nimport { CesiumService } from '../../angular-cesium/services/cesium/cesium.service';\nimport { AcMapComponent } from '../../angular-cesium/components/ac-map/ac-map.component';\n\ninterface ZoomData {\n  container: HTMLElement;\n  borderElement?: HTMLElement;\n  resetOnEscapePressFunc?: EventListenerOrEventListenerObject;\n}\n\n/**\n * The Service is as a \"zoom to rectangle\" tool\n *\n * example:\n * ```\n * constructor(\n *   private cameraService: CameraService,\n *   private cesiumService: CesiumService,\n *   private zoomToRectangleService: ZoomToRectangleService,\n * ) {\n *   this.zoomToRectangleService.init(cesiumService, cameraService);\n * }\n * ...\n * this.zoomToRectangleService.activate({onComplete: () => this.zoomToRectangleService.disable()});\n * ```\n *\n * `init()` - initialize the service with CameraService and CesiumService.\n * If no mapId is provided to activate() - must be called before calling `activate()`.\n *\n * `disable()` - disables the tool.\n *\n * `activate()` -\n * @param options\n * {\n *  onStart - optional - a callback that will be called when the user start drawing the rectangle\n *  onComplete - optional - a callback that will be called when the tool zoom in\n *  autoDisableOnZoom - optional - determines if the tool should auto disable after zoom - default: true\n *  animationDurationInSeconds - optional - zoom animation duration in seconds - default: 0.5\n *  borderStyle - optional - the style of the rectangle element border - default: '3px dashed #FFFFFF'\n *  backgroundColor - optional - the background color of the rectangle element - default: 'transparent'\n *  resetKeyCode - optional - the key code of the key that is used to reset the drawing of the rectangle - default: 27 (ESC key)\n * }\n * @param mapId - optional - the mapId of the map that the tool will be used in.\n *\n */\n\n@Injectable()\nexport class ZoomToRectangleService {\n  constructor(\n    private mapsManager: MapsManagerService,\n    @Optional() cameraService: CameraService,\n    @Optional() cesiumService: CesiumService,\n  ) {\n  }\n\n  private cameraService: CameraService;\n  private cesiumService: CesiumService;\n\n  private mapsZoomElements = new Map<string, ZoomData>();\n  private defaultOptions = {\n    animationDurationInSeconds: 0.5,\n    resetKeyCode: 27,\n    borderStyle: '2px solid rgba(0,0,0,0.5)',\n    backgroundColor: 'rgba(0,0,0,0.2)',\n    autoDisableOnZoom: true,\n  };\n\n  init(cesiumService: CesiumService, cameraService: CameraService) {\n    this.cameraService = cameraService;\n    this.cesiumService = cesiumService;\n  }\n\n  activate(\n    options: {\n      onStart?: (acMap?: AcMapComponent) => any;\n      onComplete?: (acMap?: AcMapComponent) => any;\n      autoDisableOnZoom?: boolean;\n      animationDurationInSeconds?: number;\n      borderStyle?: string;\n      backgroundColor?: string;\n      resetKeyCode?: number;\n    } = {},\n    mapId?: string,\n  ) {\n    if ((!this.cameraService || !this.cesiumService) && !mapId) {\n      throw new Error(`The function must receive a mapId if the service wasn't initialized`);\n    }\n    const finalOptions = Object.assign({}, this.defaultOptions, options);\n    let cameraService = this.cameraService;\n    let mapContainer;\n    let map;\n    if (this.cesiumService) {\n      mapContainer = this.cesiumService.getViewer().container;\n      map = this.cesiumService.getMap();\n    }\n    if (mapId) {\n      map = this.mapsManager.getMap(mapId);\n      if (!map) {\n        throw new Error(`Map not found with id: ${mapId}`);\n      }\n      cameraService = map.getCameraService();\n      mapContainer = map.getCesiumViewer().container;\n    }\n\n    if (!cameraService || !mapContainer) {\n      throw new Error(`The function must receive a mapId if the service wasn't initialized`);\n    }\n    this.disable(mapId);\n    const container = document.createElement('div');\n    mapContainer.style.position = 'relative';\n    container.style.position = 'absolute';\n    container.style.width = '100%';\n    container.style.height = '100%';\n    container.style.top = '0';\n    container.style.left = '0';\n    mapContainer.appendChild(container);\n    const mapZoomData: ZoomData = {container};\n    this.mapsZoomElements.set(mapId || this.cesiumService.getMap().getId(), mapZoomData);\n    let mouse = {\n      endX: 0,\n      endY: 0,\n      startX: 0,\n      startY: 0,\n    };\n    let borderElement: HTMLElement | undefined;\n\n    container.onmousedown = e => {\n      if (!borderElement) {\n        if (options && options.onStart) {\n          options.onStart(map);\n        }\n\n        const rect = (e.currentTarget as any).getBoundingClientRect();\n        const offsetX = e.clientX - rect.left;\n        const offsetY = e.clientY - rect.top;\n        mouse.startX = offsetX;\n        mouse.startY = offsetY;\n        borderElement = document.createElement('div');\n        borderElement.className = 'zoom-to-rectangle-border';\n        borderElement.style.position = 'absolute';\n        borderElement.style.border = finalOptions.borderStyle;\n        borderElement.style.backgroundColor = finalOptions.backgroundColor;\n        borderElement.style.left = mouse.startX + 'px';\n        borderElement.style.top = mouse.startY + 'px';\n        container.appendChild(borderElement);\n        mapZoomData.borderElement = borderElement;\n      }\n    };\n\n    container.onmouseup = e => {\n      if (borderElement) {\n        const zoomApplied = this.zoomCameraToRectangle(cameraService, mouse, finalOptions.animationDurationInSeconds);\n        if (borderElement) {\n          borderElement.remove();\n          borderElement = undefined;\n          mapZoomData.borderElement = undefined;\n        }\n        mouse = {\n          endX: 0,\n          endY: 0,\n          startX: 0,\n          startY: 0,\n        };\n        if (!!finalOptions.onComplete) {\n          finalOptions.onComplete(map);\n        }\n        if (finalOptions.autoDisableOnZoom && zoomApplied) {\n          this.disable(mapId);\n        }\n      }\n    };\n\n    container.onmousemove = e => {\n      if (borderElement) {\n        const rect = (e.currentTarget as any).getBoundingClientRect();\n        const offsetX = e.clientX - rect.left;\n        const offsetY = e.clientY - rect.top;\n        mouse.endX = offsetX;\n        mouse.endY = offsetY;\n        borderElement.style.width = Math.abs(mouse.endX - mouse.startX) + 'px';\n        borderElement.style.height = Math.abs(mouse.endY - mouse.startY) + 'px';\n        borderElement.style.left = Math.min(mouse.startX, mouse.endX) + 'px';\n        borderElement.style.top = Math.min(mouse.startY, mouse.endY) + 'px';\n      }\n    };\n\n    const resetOnEscapePress = e => {\n      if (e.keyCode === finalOptions.resetKeyCode && borderElement) {\n        borderElement.remove();\n        borderElement = undefined;\n        mapZoomData.borderElement = undefined;\n        mouse = {\n          endX: 0,\n          endY: 0,\n          startX: 0,\n          startY: 0,\n        };\n      }\n    };\n    document.addEventListener('keydown', resetOnEscapePress);\n    mapZoomData.resetOnEscapePressFunc = resetOnEscapePress;\n  }\n\n  disable(mapId?: string) {\n    if (!this.cesiumService && !mapId) {\n      throw new Error('If the service was not initialized with CesiumService, mapId must be provided');\n    }\n    const data = this.mapsZoomElements.get(mapId || this.cesiumService.getMap().getId());\n    if (data) {\n      data.container.remove();\n      if (data.borderElement) {\n        data.borderElement.remove();\n      }\n      if (data.resetOnEscapePressFunc) {\n        document.removeEventListener('keydown', data.resetOnEscapePressFunc);\n      }\n    }\n    this.mapsZoomElements.delete(mapId);\n  }\n\n  private zoomCameraToRectangle(\n    cameraService: CameraService,\n    positions: { endX: number; endY: number; startX: number; startY: number },\n    animationDuration,\n  ): boolean {\n    const camera = cameraService.getCamera();\n    const cartesian1 = camera.pickEllipsoid({x: positions.startX, y: positions.startY});\n    const cartesian2 = camera.pickEllipsoid({x: positions.endX, y: positions.endY});\n    if (!cartesian1 || !cartesian2) {\n      return false;\n    }\n    const cartographic1 = Cesium.Cartographic.fromCartesian(cartesian1);\n    const cartographic2 = Cesium.Cartographic.fromCartesian(cartesian2);\n    cameraService.cameraFlyTo({\n      destination: new Cesium.Rectangle(\n        Math.min(cartographic1.longitude, cartographic2.longitude),\n        Math.min(cartographic1.latitude, cartographic2.latitude),\n        Math.max(cartographic1.longitude, cartographic2.longitude),\n        Math.max(cartographic1.latitude, cartographic2.latitude),\n      ),\n      duration: animationDuration,\n    });\n    return true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AngularCesiumModule } from '../angular-cesium/angular-cesium.module';\nimport { PolygonsEditorComponent } from './components/polygons-editor/polygons-editor.component';\nimport { CirclesEditorComponent } from './components/circles-editor/circles-editor.component';\nimport { EllipsesEditorComponent } from './components/ellipses-editor/ellipses-editor.component';\nimport { PolylinesEditorComponent } from './components/polylines-editor/polylines-editor.component';\nimport { HippodromeEditorComponent } from './components/hippodrome-editor/hippodrome-editor.component';\nimport { DraggableToMapDirective } from './directives/draggable-to-map.directive';\nimport { DraggableToMapService } from './services/draggable-to-map.service';\nimport { AcToolbarComponent } from './components/toolbar/ac-toolbar/ac-toolbar.component';\nimport { DragIconComponent } from './components/toolbar/ac-toolbar/drag-icon.component';\nimport { AcToolbarButtonComponent } from './components/toolbar/ac-toolbar-button/ac-toolbar-button.component';\nimport { RangeAndBearingComponent } from './components/range-and-bearing/range-and-bearing.component';\nimport { ZoomToRectangleService } from './services/zoom-to-rectangle.service';\n\n@NgModule({\n  imports: [CommonModule, AngularCesiumModule],\n  declarations: [\n    HippodromeEditorComponent,\n    PolygonsEditorComponent,\n    CirclesEditorComponent,\n    EllipsesEditorComponent,\n    PolylinesEditorComponent,\n    DraggableToMapDirective,\n    DragIconComponent,\n    AcToolbarComponent,\n    AcToolbarButtonComponent,\n    RangeAndBearingComponent,\n  ],\n  exports: [\n    HippodromeEditorComponent,\n    PolygonsEditorComponent,\n    CirclesEditorComponent,\n    EllipsesEditorComponent,\n    PolylinesEditorComponent,\n    DraggableToMapDirective,\n    AcToolbarComponent,\n    AcToolbarButtonComponent,\n    RangeAndBearingComponent,\n  ],\n  providers: [\n    DraggableToMapService,\n    ZoomToRectangleService,\n  ]\n})\nexport class AngularCesiumWidgetsModule {\n}\n"]}