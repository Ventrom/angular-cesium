{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://angular-cesium/lib/angular-cesium/services/viewer-factory/viewer-factory.service.ts","ng://angular-cesium/lib/angular-cesium/services/viewer-configuration/viewer-configuration.service.ts","ng://angular-cesium/lib/angular-cesium/services/cesium/cesium.service.ts","ng://angular-cesium/lib/angular-cesium/cesium-enhancements/StaticGeometryColorBatch.ts","ng://angular-cesium/lib/angular-cesium/models/scene-mode.enum.ts","ng://angular-cesium/lib/angular-cesium/cesium-enhancements/ConfigurationService.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/consts/cesium-event.enum.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/consts/pickOptions.enum.ts","ng://angular-cesium/lib/angular-cesium/services/camera/camera.service.ts","ng://angular-cesium/lib/angular-cesium/services/context-menu/context-menu.service.ts","ng://angular-cesium/lib/angular-cesium/services/coordinate-converter/coordinate-converter.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/entities-drawer/enums/graphics-type.enum.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/basic-drawer/basic-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/primitives-drawer/primitives-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/geo-utils/geo-utils.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/arc-drawer/arc-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/entities-drawer/optimized-entity-collection.ts","ng://angular-cesium/lib/angular-cesium/models/ac-keyboard-action.enum.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/entities-drawer/entities-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/billboard-drawer/billboard-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/czml-drawer/czml-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/ellipse-drawer/ellipse-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/label-drawer/label-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/point-drawer/point-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/polygon-drawer/polygon-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/polyline-drawer/polyline-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/keyboard-control/predefined-actions.ts","ng://angular-cesium/lib/angular-cesium/services/keyboard-control/keyboard-control.service.ts","ng://angular-cesium/lib/angular-cesium/models/action-type.enum.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/event-observers/cesium-pure-event-observer.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/event-observers/cesium-long-press-observer.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/cesium-event-builder.ts","ng://angular-cesium/lib/angular-cesium/services/plonter/plonter.service.ts","ng://angular-cesium/lib/angular-cesium/utils/utils.service.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/event-observers/cesium-drag-drop-helper.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/map-events-manager.ts","ng://angular-cesium/lib/angular-cesium/services/map-layers/map-layers.service.ts","ng://angular-cesium/lib/angular-cesium/services/maps-manager/maps-manager.service.ts","ng://angular-cesium/lib/angular-cesium/services/screenshot/screenshot.service.ts","ng://angular-cesium/lib/angular-cesium/components/ac-map/ac-map.component.ts","ng://angular-cesium/lib/angular-cesium/services/layer-service/layer-service.service.ts","ng://angular-cesium/lib/angular-cesium/models/map-layer-provider-options.enum.ts","ng://angular-cesium/lib/angular-cesium/models/map-terrain-provider-options.enum.ts","ng://angular-cesium/lib/angular-cesium/services/computation-cache/computation-cache.service.ts","ng://angular-cesium/lib/angular-cesium/utils/checker.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/ellipse-drawer/dynamic-ellipse-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/dynamic-polyline-drawer/dynamic-polyline-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/static-primitive-drawer/static-primitive-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/static-circle-drawer/static-circle-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/static-polyline-drawer/static-polyline-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/static-polygon-drawer/polygon-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/ellipse-drawer/ellipse-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/model-drawer/model-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/box-dawer/box-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/corridor-dawer/corridor-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/cylinder-dawer/cylinder-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/ellipoid-drawer/ellipsoid-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/polyline-volume-dawer/polyline-volume-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/wall-dawer/wall-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/rectangle-dawer/rectangle-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/label-primitive-drawer/label-primitive-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/billboard-primitive-drawer/billboard-primitive-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/point-primitive-drawer/point-primitive-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/html-drawer/html-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/components/ac-layer/ac-layer.component.ts","ng://angular-cesium/lib/angular-cesium/services/entity-on-map/entity-on-map.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-billboard/ac-billboard.component.ts","ng://angular-cesium/lib/angular-cesium/services/json-mapper/json-mapper.service.ts","ng://angular-cesium/lib/angular-cesium/services/smart-assigner/smart-assigner.service.ts","ng://angular-cesium/lib/angular-cesium/services/cesium-properties/cesium-properties.service.ts","ng://angular-cesium/lib/angular-cesium/services/basic-desc/basic-desc.service.ts","ng://angular-cesium/lib/angular-cesium/components/ac-billborad-desc/ac-billborad-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-ellipse-desc/ac-ellipse-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-polyline-desc/ac-polyline-desc.component.ts","ng://angular-cesium/lib/angular-cesium/pipes/pixel-offset/pixel-offset.pipe.ts","ng://angular-cesium/lib/angular-cesium/pipes/radians-to-degrees/radians-to-degrees.pipe.ts","ng://angular-cesium/lib/angular-cesium/components/ac-label-desc/ac-label-desc.component.ts","ng://angular-cesium/lib/angular-cesium/utils/utils.module.ts","ng://angular-cesium/lib/angular-cesium/components/ac-circle-desc/ac-circle-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-arc-desc/ac-arc-desc.component.ts","ng://angular-cesium/lib/angular-cesium/models/ac-entity.ts","ng://angular-cesium/lib/angular-cesium/models/ac-notification.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/consts/cesium-event-modifier.enum.ts","ng://angular-cesium/lib/angular-cesium/components/ac-map-layer-provider/ac-map-layer-provider.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-map-terrain-provider/ac-map-terrain-provider.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-point-desc/ac-point-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-label/ac-label.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-polyline/ac-polyline.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-ellipse/ac-ellipse.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-point/ac-point.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-html/ac-html.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-circle/ac-circle.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-arc/ac-arc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-polygon-desc/ac-polygon-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-default-plonter/ac-default-plonter.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-polygon/ac-polygon.component.ts","ng://angular-cesium/lib/angular-cesium/services/basic-primitive-desc/basic-static-primitive-desc.service.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-static-ellipse-desc/ac-static-ellipse-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-dynamic-ellipse-desc/ac-dynamic-ellipse-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-dynamic-polyline-desc/ac-dynamic-polyline-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-static-polygon-desc/ac-static-polygon-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-static-circle-desc/ac-static-circle-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-dynamic-circle-desc/ac-dynamic-circle-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-static-polyline-desc/ac-static-polyline-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-model-desc/ac-model-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-3d-tileset/ac-tileset-3d.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-box-desc/ac-box-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-cylinder-desc/ac-cylinder-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-corridor-desc/ac-corridor-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-ellipsoid-desc/ac-ellipsoid-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-polyline-volume-desc/ac-polyline-volume-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-wall-desc/ac-wall-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-rectangle-desc/ac-rectangle-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-billboard-primitive-desc/ac-billboard-primitive-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-label-primitive-desc/ac-label-primitive-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-polyline-primitive-desc/ac-polyline-primitive-desc.component.ts","ng://angular-cesium/lib/cesium-extender/primitives/html.ts","ng://angular-cesium/lib/cesium-extender/collections/html.ts","ng://angular-cesium/lib/cesium-extender/extender.ts","ng://angular-cesium/lib/angular-cesium/services/ac-html-manager/ac-html-manager.service.ts","ng://angular-cesium/lib/angular-cesium/directives/ac-html/ac-html.directive.ts","ng://angular-cesium/lib/angular-cesium/components/ac-html-desc/ac-html-desc.component.ts","ng://angular-cesium/lib/angular-cesium/directives/ac-html-container/ac-html-container.directive.ts","ng://angular-cesium/lib/angular-cesium/components/ac-context-menu-wrapper/ac-context-menu-wrapper.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-array-desc/ac-array-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-point-primitive-desc/ac-point-primitive-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-primitive-polyline/ac-primitive-polyline.component.ts","ng://angular-cesium/lib/angular-cesium/pipes/pipe-config-map.ts","ng://angular-cesium/lib/angular-cesium/components/ac-czml-desc/ac-czml-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-rectangle/ac-rectangle.component.ts","ng://angular-cesium/lib/angular-cesium/angular-cesium.module.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/disposable-observable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/edit-mode.enum.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/edit-actions.enum.ts","ng://angular-cesium/lib/angular-cesium/services/selection-manager/selection-manager.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/edit-point.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/utils.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/zoom-to-rectangle.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/points-editor/points-editor.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/label-props.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editable-point.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/points-editor/points-manager.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/points-editor/points-editor.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/edit-polyline.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editable-polygon.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/polygons-editor/polygons-manager.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/polygons-editor/polygons-editor.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/polygons-editor/polygons-editor.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/edit-arc.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editable-circle.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/circles-editor/circles-manager.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/circles-editor/circles-editor.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/circles-editor/circles-editor.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editable-ellipse.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/ellipses-editor/ellipses-manager.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/ellipses-editor/ellipses-editor.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/ellipses-editor/ellipses-editor.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editable-polyline.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editable-rectangle.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editor-observable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/point-editor-observable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/polyline-editor-observable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/polygon-editor-observable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/rectangle-editor-observable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/circle-editor-observable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/ellipse-editor-observable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/hippodrome-editor-oboservable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editable-hippodrome.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/polyline-editor/polylines-editor.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/polyline-editor/polylines-manager.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/polylines-editor/polylines-editor.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/hippodrome-editor/hippodrome-manager.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/hippodrome-editor/hippodrome-editor.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/hippodrome-editor/hippodrome-editor.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/draggable-to-map.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/directives/draggable-to-map.directive.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/toolbar/ac-toolbar/ac-toolbar.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/toolbar/ac-toolbar/drag-icon.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/toolbar/ac-toolbar-button/ac-toolbar-button.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/range-and-bearing/range-and-bearing.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/rectangles-editor/rectangles-manager.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/rectangles-editor/rectangles-editor.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/rectangles-editor/rectangles-editor.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/angular-cesium-widgets.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","__spread","concat","ViewerFactory","cesium","Cesium","createViewer","mapContainer","options","Viewer","contextOptions","webgl","preserveDrawingBuffer","Injectable","ViewerConfiguration","nextViewerOptionsIndex","nextViewerModifierIndex","_viewerOptions","getNextViewerOptions","_viewerModifier","getNextViewerModifier","CesiumService","ngZone","viewerFactory","viewerConfiguration","init","map","_this","runOutsideAngular","undefined","cesiumViewer","viewerModifier","getViewer","getScene","scene","getCanvas","canvas","getMap","NgZone","type","Optional","AssociativeArray","Color","ColorGeometryInstanceAttribute","defined","DistanceDisplayCondition","DistanceDisplayConditionGeometryInstanceAttribute","ShowGeometryInstanceAttribute","Primitive","ShadowMode","BoundingSphereState","ColorMaterialProperty","MaterialProperty","Property","colorScratch","distanceDisplayConditionScratch","defaultDistanceDisplayCondition","Batch","primitives","translucent","appearanceType","depthFailAppearanceType","depthFailMaterialProperty","closed","shadows","removeMaterialSubscription","depthFailMaterial","createPrimitive","waitingOnCreate","primitive","oldPrimitive","geometry","updaters","updatersWithAttributes","attributes","subscriptions","showsUpdated","itemsToRemove","invalidated","definitionChanged","addEventListener","onMaterialChanged","isMaterial","updater","material","updaterMaterial","equals","add","instance","id","set","hasConstantFill","fillMaterialProperty","isConstant","distanceDisplayConditionProperty","that","entity","propertyName","newValue","oldValue","remove","unsubscribe","get","update","time","isUpdated","removedCount","geometries","values","geometriesLength","geometryItem","originalAttributes","show","color","depthFailColor","depthFailAppearance","getValue","asynchronous","geometryInstances","appearance","flat","DISABLED","CAST_ONLY","removeAll","ready","getGeometryInstanceAttributes","colorProperty","resultColor","getValueOrDefault","WHITE","_lastColor","clone","toValue","depthFailColorProperty","depthColor","_lastDepthFailColor","isShowing","isFilled","distanceDisplayCondition","_lastDistanceDisplayCondition","updateShows","contains","getBoundingSphere","result","PENDING","boundingSphere","FAILED","DONE","removeAllPrimitives","destroy","wasFixed","SceneMode","ANGULAR_CESIUM_CONFIG","InjectionToken","ConfigurationService","config","fixEntitiesShadows","StaticGeometryColorBatch","items","createFillGeometryInstance","_solidItems","_translucentItems","item","batch","_primitives","_appearanceType","_depthFailAppearanceType","_closed","_shadows","Inject","args","CesiumEvent","PickOptions","CameraService","isSceneModePerformance2D","cesiumService","viewer","screenSpaceCameraController","camera","lastRotate","enableRotate","lastTilt","enableTilt","lastLook","enableLook","_listenToSceneModeMorph","callback","morphListenerCancelFn","morphStart","_revertCameraProperties","getCamera","getScreenSpaceCameraController","getMinimumZoom","minimumZoomDistance","setMinimumZoom","amount","getMaximumZoom","maximumZoomDistance","setMaximumZoom","tilt","rotate","lock","enableTranslate","translate","enableZoom","zoom","enableInputs","inputs","setSceneMode","sceneMode","duration","SCENE3D","morphTo3D","COLUMBUS_VIEW","morphToColumbusView","SCENE2D","morphTo2D","PERFORMANCE_SCENE2D","morphCompleteEventListener_1","morphComplete","setView","destination","Cartesian3","fromDegrees","Math","min","CameraService_1","PERFORMANCE_2D_ALTITUDE","orientation","pitch","toRadians","bind","cameraFlyTo","flyTo","zoomIn","defaultZoomAmount","zoomOut","zoomTo","offset","setRotation","degreesInRadians","heading","lockRotation","trackEntity","cesiumEntity","trackedEntity","Promise","resolve","flyToDuration","altitude","entPosCar3","position","JulianDate","now","entPosCart","Cartographic","fromCartesian","zoomAmount_1","height","flyToPosition","fromRadians","longitude","latitude","complete","setTimeout","untrackEntity","ScreenSpaceEventType","MOUSE_MOVE","LEFT_CLICK","LEFT_DOUBLE_CLICK","LEFT_DOWN","LEFT_UP","MIDDLE_CLICK","MIDDLE_DOUBLE_CLICK","MIDDLE_DOWN","MIDDLE_UP","PINCH_START","PINCH_END","PINCH_MOVE","RIGHT_CLICK","RIGHT_DOUBLE_CLICK","RIGHT_DOWN","RIGHT_UP","WHEEL","ContextMenuService","_showContextMenu","_contextMenuChangeNotifier","EventEmitter","_onOpen","_onClose","_defaultContextMenuOptions","closeOnLeftCLick","closeOnLeftClickPriority","_options","_position","_content","mapEventsManager","open","contentComponent","close","leftClickRegistration","register","event","pick","NO_PICK","priority","leftClickSubscription","subscribe","emit","dispose","LatLonVectors","geodesy['LatLonVectors']","window","geodesy","GraphicsType","CoordinateConverter","cartesian3ToLatLon","cartesian3","ellipsoid","cart","lon","toDegrees","lat","screenToCartesian3","screenPos","addMapCanvasBoundsToPos","screenPosition","mapBounds","getBoundingClientRect","x","left","y","top","pickEllipsoid","Error","screenToCartographic","cartesian3ToCartographic","cartesian","degreesToCartographic","radiansToCartographic","degreesToUTM","LatLonEllipsoidal","toUtm","UTMToDegrees","zone","hemisphereType","easting","northing","geodesyToCesiumObject","Utm","toLatLonE","geodesyRadians","midPointToCartesian3","first","second","toDeg","rad","firstPoint","secondPoint","middlePoint","midpointTo","middlePointByScreen","position0","position1","screenPosition1","SceneTransforms","wgs84ToWindowCoordinates","screenPosition2","middleScreenPoint","Cartesian2","pickPosition","bearingTo","bearingToCartesian","firstCartesian3","secondCartesian3","firstCart","secondCart","BasicDrawerService","setPropsAssigner","assigner","_propsAssigner","PrimitivesDrawerService","drawerType","_super","_show","_cesiumCollection","_primitiveCollectionWrap","PrimitiveCollection","destroyPrimitives","cesiumProps","_i","setShow","showValue","getShow","GeoUtilsService","pointByLocationDistanceAndAzimuth","currentLocation","meterDistance","radianAzimuth","deprecated","resultPosition","resultDistance","distance","Ellipsoid","WGS84","maximumRadius","cartographicLocation","cartesianLocation","counter","distanceFactorRangeMax","distanceFactorRangeMin","max","factor","GeoUtilsService_1","_pointByLocationDistanceAndAzimuth","curLat","curLon","destinationLat","asin","sin","cos","destinationLon","atan2","PI","pos0","pos1","getPositionsDelta","z","addDeltaToPosition","delta","updateReference","cartographic","middleCartesian3Point","screenPositionToCartesian3","ArcDrawerService","PolylineCollection","_calculateArcPositions","quality","pointsArray","point","center","radius","angle","_calculateTriangle","_calculateArc","arcPoints","drawEdges","positions","Material","fromType","uniforms","constantColor","width","EllipseGraphics","EllipsoidGraphics","PolygonGraphics","PolylineGraphics","PolylineVolumeGraphics","BoxGraphics","CorridorGraphics","CylinderGraphics","LabelGraphics","BillboardGraphics","ModelGraphics","PathGraphics","PointGraphics","RectangleGraphics","WallGraphics","KeyboardAction","OptimizedEntityCollection","entityCollection","collectionSize","updateRate","_isSuspended","_isHardSuspend","_updateRate","_collectionSize","collection","isFree","suspend","removeNoSuspend","onEventSuspension","once","_onEventSuspensionCallback","onEventResume","_onEventResumeCallback","triggerEventResume","triggerEventSuspension","suspendEvents","_suspensionTimeout","resumeEvents","hardSuspend","hardResume","EntitiesDrawerService","graphicsType","defaultOptions","collectionMaxSize","collectionSuspensionTime","collectionsNumber","entityCollections","Map","graphicsTypeName","getFreeEntitiesCollection","freeEntityCollection","forEach","finalOptions","dataSources","dataSource","CustomDataSource","entities","optimizedEntityCollection","entityObject","_a","description","viewFrom","name","availability","suspendEntityCollection","CallbackProperty","_isConstant","has","BillboardDrawerService","billboard","CzmlDrawerService","czmlStream","CzmlDataSource","process","czmlPacket","removeById","acEntity","EllipseDrawerService","ellipse","LabelDrawerService","label","PointDrawerService","PolygonDrawerService","polygon","PolylineDrawerService","polyline","PolylinePrimitiveDrawerService","withColorMaterial","cesiumObject","KeyEventState","PREDEFINED_KEYBOARD_ACTIONS","CAMERA_FORWARD","params","moveRate","globe","cartesianToCartographic","moveForward","CAMERA_BACKWARD","moveBackward","CAMERA_UP","moveUp","CAMERA_DOWN","moveDown","CAMERA_RIGHT","moveRight","CAMERA_LEFT","moveLeft","CAMERA_LOOK_RIGHT","currentPosition","positionCartographic","lookFactor","lookRight","CAMERA_LOOK_LEFT","lookLeft","CAMERA_LOOK_UP","lookUp","CAMERA_LOOK_DOWN","lookDown","CAMERA_TWIST_RIGHT","twistRight","CAMERA_TWIST_LEFT","twistLeft","CAMERA_ROTATE_RIGHT","rotateRight","CAMERA_ROTATE_LEFT","rotateLeft","CAMERA_ROTATE_UP","rotateUp","CAMERA_ROTATE_DOWN","rotateDown","CAMERA_ZOOM_IN","CAMERA_ZOOM_OUT","ActionType","KeyboardControlService","document","_currentDefinitions","_activeDefinitions","_keyMappingFn","defaultKeyMappingFn","focus","handleKeydown","handleKeyup","handleTick","setKeyboardControls","definitions","keyMappingFn","outsideOfAngularZone","removeKeyboardControls","registerEvents","keys","state","NOT_PRESSED","action","keyboardEvent","unregisterEvents","getAction","char","keyEvent","String","fromCharCode","keyCode","IGNORED","execute","getParams","validation","PRESSED","actionState","executeAction","paramsDef","execution","isNumber","predefinedAction","registerToEvents","clock","onTick","removeEventListener","DOCUMENT","CesiumPureEventObserver","modifier","eventsHandler","observer","Observable","setInputAction","movement","startPosition","endPosition","CesiumLongPressObserver","eventFactory","startEvent","stopEvent","LONG_LEFT_PRESS","LONG_RIGHT_PRESS","LONG_MIDDLE_PRESS","startEventObservable","stopEventObservable","publish","pipe","mergeMap","observableOf","delay","LONG_PRESS_EVENTS_DURATION","takeUntil","CesiumEventBuilder","cesiumEventsObservables","getEventFullName","toString","screenSpaceEventHandler","eventName","CesiumEventBuilder_1","eventObserver","createCesiumEventObservable","cesiumEventObservable","longPressEvents","createSpecialCesiumEventObservable","connect","Set","PlonterService","_entitesToPlonter","_plonterChangeNotifier","_plonterObserver","Subject","_plonterShown","_eventResult","plonterIt","eventResult","resolvePlonter","UtilsService","array","reduce","accumulator","currentValue","indexOf","CesiumDragDropHelper","getDragEventTypes","dragEvent","mouseDownEvent","mouseUpEvent","LEFT_CLICK_DRAG","RIGHT_CLICK_DRAG","MIDDLE_CLICK_DRAG","dragEvents","Registration","observable","stopper","isPaused","MapEventsManagerService","eventBuilder","plonterService","eventRegistrations","input","pickConfig","entityType","eventRegistration","createEventRegistration","registrationObservable","disposeObservable","sortRegistrationsByPriority","registrations","index","splice","sort","a","currentPriority","registration","pickOption","pickFilter","createDragEvent","filter","triggerPick","cesiumEntities","picksAndMovement","addEntities","switchMap","entitiesAndMovement","plonter","_b","mouseUpObservable","mouseMoveObservable","mouseDownRegistration","dropSubject","dragObserver","lastMove","dragStartPositionX","dragStartPositionY","drop","tap","dropEvent","merge","pickOptions","picks","PICK_ONE","PICK_ALL","drillPick","drillPickLimit","pickWidth","pickHeight","PICK_FIRST","Entity","MapLayersService","layersDataSources","registerLayerDataSources","zIndex","ds","drawAllLayers","updateAndRefresh","newZIndex","removeDataSources","MapsManagerService","defaultIdCounter","_Maps","eventRemoveCallbacks","firstMap","_registerMap","acMap","mapId","generateDefaultId","_removeMapById","iter","delete","sync2DMapsCameras","mapsConfiguration","unsyncMapsCameras","maps","sensitivity","bindZoom","masterMapConfig","masterMap","masterCamera","getCameraService","masterCameraCartographic","percentageChanged","removeCallback","changed","slaveMapConfig","slaveMap","slaveMapOptions","slaveCamera","slaveCameraCartographic","cartographicToCartesian","getCesiumViewer","mode","MORPHING","ScreenshotService","getMapScreenshotDataUrlBase64","toDataURL","downloadMapScreenshot","filename","dataUrl","downloadURI","uri","link","createElement","download","href","body","appendChild","click","removeChild","AcMapComponent","_cesiumService","_cameraService","_elemRef","mapsManagerService","billboardDrawerService","labelDrawerService","ellipseDrawerService","polylineDrawerService","polygonDrawerService","arcDrawerService","pointDrawerService","czmlDrawerService","keyboardControlService","mapLayersService","configurationService","screenshotService","contextMenuService","coordinateConverter","disableDefaultPlonter","style","className","ngOnInit","containerId","nativeElement","ngOnChanges","changes","firstChange","element","getElementById","ngAfterViewInit","ngOnDestroy","getCesiumService","getId","getMapContainer","getMapEventsManager","getContextMenuService","getScreenshotService","getKeyboardControlService","getCoordinateConverter","ElementRef","Input","Component","selector","template","providers","LayerService","_cache","descriptions","layerUpdate","_zIndex","_context","context","setEntityName","_entityName","getEntityName","registerDescription","descriptionComponent","unregisterDescription","getDescriptions","layerUpdates","MapLayerProviderOptions","MapTerrainProviderOptions","ComputationCache","expression","insertFn","clear","Checker","throwIfAnyNotPresent","propertyNames","throwIfNotPresent","present","DynamicEllipseDrawerService","EllipsePrimitive","updateLocationData","DynamicPolylineDrawerService","StaticPrimitiveDrawer","geometryType","geometryProps","instanceProps","primitiveProps","GeometryInstance","StaticCircleDrawerService","CircleGeometry","StaticPolylineDrawerService","PolylineGeometry","when","readyPromise","then","readyPrimitive","StaticPolygonDrawerService","PolygonGeometry","StaticEllipseDrawerService","EllipseGeometry","ModelDrawerService","model","BoxDrawerService","box","CorridorDrawerService","corridor","CylinderDrawerService","cylinder","EllipsoidDrawerService","PolylineVolumeDrawerService","polylineVolume","WallDrawerService","wall","RectangleDrawerService","rectangle","LabelPrimitiveDrawerService","LabelCollection","BillboardPrimitiveDrawerService","BillboardCollection","PointPrimitiveDrawerService","PointPrimitiveCollection","HtmlDrawerService","HtmlCollection","AcLayerComponent","layerService","_computationCache","modelDrawerService","boxDrawerService","corridorDrawerService","cylinderDrawerService","ellipsoidDrawerSerice","polylineVolumeDrawerService","wallDrawerService","rectangleDrawerService","dynamicEllipseDrawerService","dynamicPolylineDrawerService","staticCircleDrawerService","staticPolylineDrawerService","staticPolygonDrawerService","staticEllipseDrawerService","polylinePrimitiveDrawerService","labelPrimitiveDrawerService","billboardPrimitiveDrawerService","pointPrimitiveDrawerService","htmlDrawerService","store","debug","acForRgx","stopObservable","_updateStream","entitiesStore","layerDrawerDataSources","_drawerList","initValidParams","observableMerge","notification","console","log","contextEntity","updateStore","entityName","actionType","ADD_UPDATE","draw","DELETE","test","acFor","acForArr","split","isObservable","obj","ngAfterContentInit","drawer","drawerName","initOptions","drawerDataSources","showValue_1","zIndexValue","getLayerService","getLayerDrawerDataSources","getDrawerDataSourcesByName","getStore","entityId","updateNotification","refreshAll","observableFrom","changeDetection","ChangeDetectionStrategy","OnPush","EntityOnMapComponent","_drawer","mapLayers","selfPrimitiveIsDraw","drawOnMap","props","previousValue","updateOnMap","selfPrimitive","removeFromMap","Directive","AcBillboardComponent","billboardDrawer","JsonMapper","_mapper","JsonStringMapper","SmartAssigner","allowUndefined","fnBody","prop","assignFn","Function","obj1","obj2","CesiumProperties","_parser","_jsonMapper","_assignersCache","_evaluatorsCache","_compile","withCache","cesiumDesc","propsMap","resultExpression","eval","JSON","stringify","replace","getFn","cache","_build","from","smartAssigner","oldVal","newVal","createEvaluator","newEvaluator","evaluatorFn","createAssigner","Parse","BasicDesc","_layerService","_cesiumProperties","onDraw","onRemove","_cesiumObjectsMap","_propsEvaluator","_propsEvaluateFn","_getPropsAssigner","_propsAssignerFn","setLayerService","getCesiumObjectsMap","Output","AcBillboardDescComponent","computationCache","cesiumProperties","AcBillboardDescComponent_1","provide","useExisting","forwardRef","AcEllipseDescComponent","ellipseDrawer","AcEllipseDescComponent_1","AcPolylineDescComponent","AcPolylineDescComponent_1","PixelOffsetPipe","transform","Pipe","RadiansToDegreesPipe","round","AcLabelDescComponent","labelDrawer","AcLabelDescComponent_1","UtilsModule","NgModule","imports","CommonModule","AcCircleDescComponent","semiMajorAxis","semiMinorAxis","AcCircleDescComponent_1","AcArcDescComponent","arcDrawer","AcArcDescComponent_1","AcEntity","json","ArcGisMapServerImageryProvider","WebMapTileServiceImageryProvider","TileMapServiceImageryProvider","WebMapServiceImageryProvider","SingleTileImageryProvider","OpenStreetMapImageryProvider","BingMapsImageryProvider","GoogleEarthEnterpriseMapsProvider","MapboxImageryProvider","UrlTemplateImageryProvider","CesiumTerrainProvider","ArcGISTiledElevationTerrainProvider","GoogleEarthEnterpriseTerrainProvider","VRTheWorldTerrainProvider","EllipsoidTerrainProvider","createWorldTerrain","CesiumEventModifier","AcMapLayerProviderComponent","provider","OFFLINE","alpha","brightness","contrast","imageryLayersCollection","imageryLayers","createOfflineMapProvider","createTileMapServiceImageryProvider","url","buildModuleUrl","WebMapService","WebMapTileService","ArcGisMapServer","SingleTileImagery","BingMaps","GoogleEarthEnterpriseMaps","MapBox","UrlTemplateImagery","MapTileService","OpenStreetMap","layerProvider","imageryLayer","addImageryProvider","isFirstChange","Number","AcMapTerrainProviderComponent","WorldTerrain","defaultTerrainProvider","terrainProvider","CesiumTerrain","ArcGISTiledElevation","GoogleEarthEnterprise","VRTheWorld","AcPointDescComponent","AcPointDescComponent_1","AcLabelComponent","AcPolylineComponent","polylineDrawer","AcEllipseComponent","AcPointComponent","pointDrawer","AcHtmlComponent","elementRef","renderer","isDraw","setScreenPosition","setStyle","hideElement","preRender","preRenderEventListener","ngDoCheck","Renderer2","AcCircleComponent","updateEllipseProps","rotation","AcArcComponent","AcPolygonDescComponent","polygonDrawer","AcPolygonDescComponent_1","AcDefaultPlonterComponent","cd","geoConverter","plonterChangeNotifier","detectChanges","plonterShown","plonterClickPosition","chooseEntity","ChangeDetectorRef","AcPolygonComponent","BasicStaticPrimitiveDesc","_staticPrimitiveDrawer","_geometryPropsEvaluator","_instancePropsEvaluator","_primitivePropsEvaluator","AcStaticEllipseDescComponent","AcDynamicEllipseDescComponent","AcDynamicPolylineDescComponent","AcStaticPolygonDescComponent","AcStaticCircleDescComponent","staticCircleDrawer","AcDynamicCircleDescComponent","AcStaticPolylineDescComponent","AcModelDescComponent","modelDrawer","AcModelDescComponent_1","AcTileset3dComponent","tilesetInstance","_3dtilesCollection","Cesium3DTileset","Cesium3DTileStyle","AcBoxDescComponent","drawerService","AcBoxDescComponent_1","AcCylinderDescComponent","AcCylinderDescComponent_1","AcCorridorDescComponent","AcCorridorDescComponent_1","AcEllipsoidDescComponent","AcEllipsoidDescComponent_1","AcPolylineVolumeDescComponent","AcWallDescComponent","AcWallDescComponent_1","AcRectangleDescComponent","AcRectangleDescComponent_1","AcBillboardPrimitiveDescComponent","billboardPrimitiveDrawer","AcBillboardPrimitiveDescComponent_1","AcLabelPrimitiveDescComponent","labelPrimitiveDrawer","AcLabelPrimitiveDescComponent_1","AcPolylinePrimitiveDescComponent","AcPolylinePrimitiveDescComponent_1","HtmlPrimitive","_mapContainer","pixelOffset","_scene","_element","display","_pixelOffset","MAX_VALUE","_collection","_lastPosition","html","len","pop","CesiumExtender","extend","AcHtmlManager","_entities","addOrUpdate","info","AcHtmlDirective","_templateRef","_viewContainerRef","_changeDetector","_acHtmlManager","_views","_handleView","AcHtmlContext","$implicit","viewRef","createEmbeddedView","TemplateRef","ViewContainerRef","AcHtmlDescComponent","htmlDrawer","acHtmlCreator","acHtmlTemplate","ViewChild","static","ContentChild","AcHtmlContainerDirective","_id","AcContextMenuWrapperComponent","componentFactoryResolver","contextMenuChangeSubscription","contextMenuChangeNotifier","contextMenuOpenSubscription","onOpen","componentFactory","resolveComponentFactory","content","viewContainerRef","createComponent","data","ComponentFactoryResolver","read","AcArrayDescComponent","entitiesMap","arrayObservable$","acForString","arrayPath","layer","layerServiceSubscription","basicDescs","_results","component","arrayDescs","entitiesArray","_get","previousEntitiesIdArray","entitiesIdArray","arrayItemId","generateCombinedId","entitiesToRemove","idGetter","getAcForString","arrayItem","MAX_SAFE_INTEGER","ContentChildren","descendants","AcArrayDescComponent_1","AcPointPrimitiveDescComponent","AcPrimitivePolylineComponent","PARSE_PIPES_CONFIG_MAP","pipeName","pipeInstance","AcCzmlDescComponent","czmlDrawer","AcRectangleComponent","rectangleDrawer","AngularCesiumModule","forRoot","ngModule","AngularCesiumModule_1","useValue","PIPES_CONFIG","multi","customPipes","Angular2ParseModule","declarations","exports","DisposableObservable","KeyboardEventModifier","ALT","CTRL","SHIFT","EditModes","EditActions","SelectionManagerService","mapsManager","selectedEntitiesItems$","BehaviorSubject","selectedEntitySubject$","selectedEntities$","asObservable","selectedEntities","selectedEntity$","toggleSelection","addSelectedIndicator","addToSelected","removeSelected","current","entityIndex","initSelection","selectionOptions","eventPriority","mapComponent","mapEventsManagerService","EditPoint","pointProps","virtualPoint","editedEntityId","generateId","_virtualEditPoint","isVirtualEditPoint","setVirtualEditPoint","getEditedEntityId","getPosition","getPositionCallbackProperty","setPosition","generateKey","possible","charAt","floor","random","debounce","func","wait","timeout","clearTimeout","MouseButtons","DEFAULT_POINT_OPTIONS","addLastPointEvent","removePointEvent","dragPointEvent","allowDrag","withAlpha","outlineColor","BLACK","outlineWidth","pixelSize","disableDepthTestDistance","POSITIVE_INFINITY","PointsEditorService","updateSubject","updatePublisher","observablesMap","cameraService","pointManager","cesiumScene","onUpdate","screenToPosition","cartesian2","ray","getPickRay","pointOptions","setOptions","clientEditSubject","editAction","editMode","CREATE","INIT","mouseMoveRegistration","pickConfiguration","addLastPointRegistration","addLastPointModifier","editorObservable","createEditorObservable","updatedPosition","switchToEditMode","finishedCreate","CREATE_OR_EDIT","ADD_LAST_POINT","getPoint","changeMode","CHANGE_TO_EDIT","editPoint","edit","editSubject","EDIT","editObservable","pointDragRegistration","pointRemoveRegistration","removePointModifier","DRAG_POINT_FINISH","DRAG_POINT","observables","defaultClone","parse","observableToExtend","obs","DISPOSE","enable","ENABLE","disable","DISABLE","setManually","SET_MANUALLY","setLabelsRenderFn","SET_EDIT_LABELS_RENDER_CALLBACK","labelsRenderFn","updateLabels","labels","UPDATE_EDIT_LABELS","getCurrentPoint","getEditValue","getLabels","defaultLabelProps","backgroundColor","backgroundPadding","fillColor","font","heightReference","HeightReference","NONE","horizontalOrigin","HorizontalOrigin","LEFT","ZERO","pixelOffsetScaleByDistance","scale","scaleByDistance","showBackground","LabelStyle","FILL","text","translucencyByDistance","verticalOrigin","VerticalOrigin","BASELINE","eyeOffset","EditablePoint","pointLayer","editOptions","_enableEdit","_labels","_props","createFromExisting","DIMGREY","updatePointLayer","hasPosition","enableEdit","newProps","pointProp","addLastPoint","movePoint","toPosition","PointsManagerService","points","createEditablePoint","editPointLayer","editablePoint","enableAll","disableAll","PointsEditorComponent","pointsEditor","pointsManager","editPoint$","pointLabels$","startListeningToEditorUpdates","handleCreateUpdates","handleEditUpdates","getLabelId","renderEditLabels","pointLabelsLayer","editLabelsRenderFn","removeEditLabels","getPointSize","virtualPointPixelSize","getPointShow","showVirtual","EditPolyline","polylineProps","_polylineProps","getPositions","getPositionsCallbackProperty","validatePositions","getStartPosition","getEndPosition","setStartPosition","setEndPosition","EditablePolygon","polygonsLayer","pointsLayer","polylinesLayer","polygonOptions","polylines","doneCreation","polygonProps","defaultPointProps","defaultPolylineProps","getRealPositions","_defaultPolylineProps","_defaultPointProps","_polygonProps","updatePointsLayer","addPointFromExisting","addAllVirtualEditPoints","updatePolygonsLayer","setPointsManually","newPoints","pointOrCartesian","newPoint","currentPoints","pos","currentPoint","nextIndex","nextPoint","midPoint","setMiddleVirtualPoint","firstP","secondP","midPointCartesian3","lerp","firstIndex","updateMiddleVirtualPoint","virtualEditPoint","prevPoint","changeVirtualPointToRealPoint","pointsCount","pointIndex","preIndex","prePoint","firstMidPoint","secMidPoint","renderPolylines","realPoints","addPoint","movingPoint","movePointFinish","clampHeightTo3D","nextVirtualPoint","nextRealPoint","prevVirtualPoint","prevRealPoint","moveTempMovingPoint","movePolygon","startMovingPosition","draggedToPosition","lastDraggedToPosition","newPos","endMovePolygon","removePoint","pointToRemove","removePosition","getPointsCount","getRealPoints","getPoints","getPositionsHierarchy","PolygonHierarchy","getPositionsHierarchyCallbackProperty","findIndex","line","PolygonsManagerService","polygons","createEditablePolygon","editPolygonsLayer","editPointsLayer","editPolylinesLayer","editablePolygon","DEFAULT_POLYGON_OPTIONS","addPointEvent","dragShapeEvent","CORNFLOWERBLUE","fill","classificationType","ClassificationType","BOTH","ɵ0$1","clampToGround","clampHeightTo3DOptions","clampToTerrain","clampMostDetailed","clampToHeightPickWidth","PolygonsEditorService","clampPointsDebounced","clampPoints","polygonsManager","points_1","cartographics","promise","sampleTerrain","updatedPositions","toCartesian","clampToHeight","globePositionPick","cartesian3PickPosition","addPointRegistration","addPointModifier","allPositions","find","updateValue","ADD_POINT","maximumNumberOfPoints","editPolygon","shapeDragRegistration","updatedPoint","endDragPosition","startDragPosition","draggedPosition","DRAG_SHAPE_FINISH","DRAG_SHAPE","REMOVE_POINT","warn","pickPositionSupported","clampToHeightSupported","pickTranslucentDepth","CLAMP_TO_GROUND","RELATIVE_TO_GROUND","getCurrentPoints","PolygonsEditorComponent","polygonsEditor","editPoints$","editPolylines$","editPolygons$","EditArc","_arcProps","_center","_radius","_delta","_angle","updateCenter","EditableCircle","circlesLayer","arcsLayer","_circleProps","circleProps","_pointProps","_radiusPoint","radiusPoint","centerPointProp","radiusPointProp","circleProp","_outlineArc","getRadius","createOutlineArc","updateArcsLayer","updateCirclesLayer","moveCircle","dragStartPosition","dragEndPosition","newCenterPosition","getCenter","getRadiusCallbackProperty","getCenterCallbackProperty","getRadiusPoint","CirclesManagerService","circles","createEditableCircle","editCirclesLayer","editArcsLayer","circleOptions","editableCircle","circle","DEFAULT_CIRCLE_OPTIONS","outline","CirclesEditorService","circlesManager","getCircleProperties","editCircle","pointIsCenter","getCenterPoint","getCenterPosition","getRadiusPosition","CirclesEditorComponent","circlesEditor","editCircles$","editArcs$","EditableEllipse","ellipsesLayer","_rotation","_minorRadiusPoints","_ellipseProps","ellipseProps","_majorRadiusPoint","midpoint","_minorRadius","getMinorRadiusPointPosition","getMajorRadiusPointPosition","majorRadius","minorRadius","ellipseProp","_majorRadius","majorRadiusPosition","updateMinorRadiusEditPoints","updateEllipsesLayer","updateRotation","transformToEllipse","getMajorRadius","newRadius","circleToEllipseTransformation","majorRadiusPoint","moveEllipse","getRotation","endMoveEllipse","getMinorRadius","azimuthInDegrees","getRotationCallbackProperty","getMinorRadiusCallbackProperty","getMajorRadiusCallbackProperty","EllipsesManagerService","ellipses","createEditableEllipse","editEllipsesLayer","ellipseOptions","editableEllipse","DEFAULT_ELLIPSE_OPTIONS","circleToEllipseTransformEvent","circleToEllipseTransformEventModifier","EllipsesEditorService","ellipsesManager","editEllipse","addSecondRadiusRegistration","getEllipseProperties","TRANSFORM","minorRadiusPointPosition","majorRadiusPointPosition","EllipsesEditorComponent","ellipsesEditor","editEllipses$","EditablePolyline","moveShape","endMoveShape","EditableRectangle","rectangleLayer","rectangleProps","_rectangleProps","updateRectangleLayer","widthMeters","lastDraggedCartographic","draggedToPositionCartographic","endMovePoint","getRealPositionsCallbackProperty","getRectangle","longitudes","latitudes","Rectangle","getRectangleCallbackProperty","EditorObservable","PointEditorObservable","PolylineEditorObservable","PolygonEditorObservable","RectangleEditorObservable","CircleEditorObservable","EllipseEditorObservable","HippodromeEditorObservable","EditableHippodrome","hippodromeLayer","hippodromeProps","_hippodromeProps","createHeightEditPoints","updateHippdromeLayer","secP","bearingDeg","upAzimuth","createMiddleEditablePoint","downAzimuth","azimuth","upEditCartesian3","changeWidthByNewPoint","normalizedBearingDeb","bearingDegHippodromeDots","fixedBearingDeg","distanceMeters","abs","radiusWidth","getWidth","DEFAULT_POLYLINE_OPTIONS","PolylinesEditorService","polylinesManager","polylineOptions","editPolyline","PolylinesManagerService","createEditablePolyline","editablePolyline","PolylinesEditorComponent","polylinesEditor","polylineLabels$","polylineLabelsLayer","HippodromeManagerService","hippodromes","createEditableHippodrome","editHippodromeLayer","hippodromeEditOptions","editableHippodrome","hippodrome","DEFAULT_HIPPODROME_OPTIONS","HippodromeEditorService","managerService","hippodromeManager","hippodromeOptions","isFirstPoint","editHippodrome","firstPosition","secondPosition","firstPointProp","secondPointProp","getCurrentWidth","HippodromeEditorComponent","hippodromesEditor","hippodromesManager","editHippodromes$","editHippodromesLayer","DraggableToMapService","mainSubject","setCoordinateConverter","drag","imageSrc","cancel","imgElement","src","visibility","createDragObservable","dragObservable","clientWidth","clientHeight","dragUpdates","pointerUp","observableFromEvent","moveObservable","initialScreenPosition","mapPosition","DraggableToMapDirective","el","iconDragService","draggableToMap","onMouseDown","HostListener","AcToolbarComponent","onDrag","dragStyle","height.px","width.px","listenForDragging","dragSubscription","mouseDown$","mouseMove$","mouseUp$","drag$","DragIconComponent","AcToolbarButtonComponent","onClick","RangeAndBearingComponent","polylineEditor","lineEditOptions","labelsStyle","distanceLabelsStyle","bearingLabelsStyle","_c","_d","_e","_f","bearingStringFn","distanceStringFn","rnb","totalDistance","previousPosition","bearing","toFixed","ZoomToRectangleService","mapsZoomElements","animationDurationInSeconds","resetKeyCode","borderStyle","autoDisableOnZoom","threshold","keepRotation","mouseButton","activate","container","mapZoomData","borderElement","mouse","endX","endY","startX","startY","onmousedown","button","onStart","rect","currentTarget","offsetX","clientX","offsetY","clientY","border","onmouseup","zoomApplied","zoomCameraToRectangle","onComplete","onmousemove","resetOnEscapePress","resetOnEscapePressFunc","animationDuration","cartesian1","cartographic1","cartographic2","RectanglesManagerService","rectangles","createEditableRectangle","editRectanglesLayer","rectangleOptions","editableRectangle","DEFAULT_RECTANGLE_OPTIONS","extrudedHeight","RectanglesEditorService","rectanglesManager","editRectangle","RectanglesEditorComponent","rectanglesEditor","editRectangles$","AngularCesiumWidgetsModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ViewerFactory {\n  cesium: any;\n\n\n  constructor() {\n    this.cesium = Cesium;\n  }\n\n  /**\n   * Creates a viewer with default or custom options\n   * @param mapContainer - container to initialize the viewer on\n   * @param options - Options to create the viewer with - Optional\n   *\n   * @returns new viewer\n   */\n  createViewer(mapContainer: HTMLElement, options?: any) {\n    let viewer = null;\n    if (options) {\n      viewer = new this.cesium.Viewer(mapContainer, {\n        contextOptions: {\n          webgl: {preserveDrawingBuffer: true}\n        },\n        ...options\n      });\n    } else {\n      viewer = new this.cesium.Viewer(mapContainer,\n        {\n          contextOptions: {\n            webgl: {preserveDrawingBuffer: true}\n          },\n        });\n    }\n\n    return viewer;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Service for setting cesium viewer map options.\n * defaulty angular-cesium doesnt provide this service and viewer is created with default options.\n * In order set specific options you must set this service as provider in your component and\n * set the wanted options.\n * ```typescript\n * constructor(viewerConf :ViewerConfiguration ) {\n *   viewerConf.viewerOptions = { timeline: false };\n * }\n * ```\n * notice this configuration will be for all <ac-maps> in your component.\n */\n@Injectable()\nexport class ViewerConfiguration {\n  /**\n   * cesium viewer options According to [Viewer]{@link https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=vie}\n   */\n  private _viewerOptions: object | object[];\n  private _viewerModifier: Function | Function[];\n  private nextViewerOptionsIndex = 0;\n  private nextViewerModifierIndex = 0;\n\n  get viewerOptions(): object | object[] {\n    return this._viewerOptions;\n  }\n\n  Ï;\n\n  getNextViewerOptions(): object | object[] {\n    if (this._viewerOptions instanceof Array) {\n      return this._viewerOptions[this.nextViewerOptionsIndex++];\n    } else {\n      return this._viewerOptions;\n    }\n  }\n\n  /**\n   * Can be used to set initial map viewer options.\n   * If there is more than one map you can give the function an array of options.\n   * The map initialized first will be set with the first option object in the options array and so on.\n   */\n  set viewerOptions(value: object | object[]) {\n    this._viewerOptions = value;\n  }\n\n  get viewerModifier(): Function | Function[] {\n    return this._viewerModifier;\n  }\n\n  getNextViewerModifier(): Function | Function[] {\n    if (this._viewerModifier instanceof Array) {\n      return this._viewerModifier[this.nextViewerModifierIndex++];\n    } else {\n      return this._viewerModifier;\n    }\n  }\n\n  /**\n   * Can be used to set map viewer options after the map has been initialized.\n   * If there is more than one map you can give the function an array of functions.\n   * The map initialized first will be set with the first option object in the options array and so on.\n   */\n  set viewerModifier(value: Function | Function[]) {\n    this._viewerModifier = value;\n  }\n}\n","import { Injectable, NgZone, Optional } from '@angular/core';\nimport { ViewerFactory } from '../viewer-factory/viewer-factory.service';\nimport { ViewerConfiguration } from '../viewer-configuration/viewer-configuration.service';\nimport { AcMapComponent } from '../../components/ac-map/ac-map.component';\n\n/**\n *  Service that initialize cesium viewer and expose cesium viewer and scene.\n */\n@Injectable()\nexport class CesiumService {\n  private cesiumViewer: any;\n  private map: AcMapComponent;\n\n  constructor(private ngZone: NgZone, private viewerFactory: ViewerFactory, @Optional() private viewerConfiguration: ViewerConfiguration) {\n  }\n\n  init(mapContainer: HTMLElement, map: AcMapComponent) {\n    this.map = map;\n    this.ngZone.runOutsideAngular(() => {\n      const options = this.viewerConfiguration ? this.viewerConfiguration.getNextViewerOptions() : undefined;\n      this.cesiumViewer = this.viewerFactory.createViewer(mapContainer, options);\n\n      const viewerModifier = this.viewerConfiguration && this.viewerConfiguration.getNextViewerModifier();\n      if (typeof viewerModifier === 'function') {\n        viewerModifier(this.cesiumViewer);\n      }\n    });\n  }\n\n  /**\n   * For more information see https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=viewe\n   * @returns cesiumViewer\n   */\n  getViewer() {\n    return this.cesiumViewer;\n  }\n\n  /**\n   * For more information see https://cesiumjs.org/Cesium/Build/Documentation/Scene.html?classFilter=scene\n   * @returns cesium scene\n   */\n  getScene() {\n    return this.cesiumViewer.scene;\n  }\n\n  /**\n   * For more information see https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API\n   * @returns cesium canvas\n   */\n  getCanvas(): HTMLCanvasElement {\n    return this.cesiumViewer.canvas as HTMLCanvasElement;\n  }\n\n  getMap(): AcMapComponent {\n    return this.map;\n  }\n}\n","/**\n * Fix for the constant entity shadowing.\n * PR in Cesium repo: https://github.com/AnalyticalGraphicsInc/cesium/pull/5736\n */\n\n// tslint:disable\nconst AssociativeArray = Cesium.AssociativeArray;\nconst Color = Cesium.Color;\nconst ColorGeometryInstanceAttribute = Cesium.ColorGeometryInstanceAttribute;\nconst defined = Cesium.defined;\nconst DistanceDisplayCondition = Cesium.DistanceDisplayCondition;\nconst DistanceDisplayConditionGeometryInstanceAttribute = Cesium.DistanceDisplayConditionGeometryInstanceAttribute;\nconst ShowGeometryInstanceAttribute = Cesium.ShowGeometryInstanceAttribute;\nconst Primitive = Cesium.Primitive;\nconst ShadowMode = Cesium.ShadowMode;\nconst BoundingSphereState = Cesium.BoundingSphereState;\nconst ColorMaterialProperty = Cesium.ColorMaterialProperty;\nconst MaterialProperty = Cesium.MaterialProperty;\nconst Property = Cesium.Property;\n\nvar colorScratch = new Color();\nvar distanceDisplayConditionScratch = new DistanceDisplayCondition();\nvar defaultDistanceDisplayCondition = new DistanceDisplayCondition();\n\nfunction Batch(primitives, translucent, appearanceType, depthFailAppearanceType, depthFailMaterialProperty, closed, shadows) {\n  this.translucent = translucent;\n  this.appearanceType = appearanceType;\n  this.depthFailAppearanceType = depthFailAppearanceType;\n  this.depthFailMaterialProperty = depthFailMaterialProperty;\n  this.depthFailMaterial = undefined;\n  this.closed = closed;\n  this.shadows = shadows;\n  this.primitives = primitives;\n  this.createPrimitive = false;\n  this.waitingOnCreate = false;\n  this.primitive = undefined;\n  this.oldPrimitive = undefined;\n  this.geometry = new AssociativeArray();\n  this.updaters = new AssociativeArray();\n  this.updatersWithAttributes = new AssociativeArray();\n  this.attributes = new AssociativeArray();\n  this.subscriptions = new AssociativeArray();\n  this.showsUpdated = new AssociativeArray();\n  this.itemsToRemove = [];\n  this.invalidated = false;\n  \n  var removeMaterialSubscription;\n  if (defined(depthFailMaterialProperty)) {\n    removeMaterialSubscription = depthFailMaterialProperty.definitionChanged.addEventListener(Batch.prototype.onMaterialChanged, this);\n  }\n  this.removeMaterialSubscription = removeMaterialSubscription;\n}\n\nBatch.prototype.onMaterialChanged = function () {\n  this.invalidated = true;\n};\n\nBatch.prototype.isMaterial = function (updater) {\n  var material = this.depthFailMaterialProperty;\n  var updaterMaterial = updater.depthFailMaterialProperty;\n  if (updaterMaterial === material) {\n    return true;\n  }\n  if (defined(material)) {\n    return material.equals(updaterMaterial);\n  }\n  return false;\n};\n\nBatch.prototype.add = function (updater, instance) {\n  var id = updater.id;\n  this.createPrimitive = true;\n  this.geometry.set(id, instance);\n  this.updaters.set(id, updater);\n  if (!updater.hasConstantFill || !updater.fillMaterialProperty.isConstant || !Property.isConstant(updater.distanceDisplayConditionProperty)) {\n    this.updatersWithAttributes.set(id, updater);\n  } else {\n    var that = this;\n    this.subscriptions.set(id, updater.entity.definitionChanged.addEventListener(function (entity, propertyName, newValue, oldValue) {\n      if (propertyName === 'isShowing') {\n        that.showsUpdated.set(updater.id, updater);\n      }\n    }));\n  }\n};\n\nBatch.prototype.remove = function (updater) {\n  var id = updater.id;\n  this.createPrimitive = this.geometry.remove(id) || this.createPrimitive;\n  if (this.updaters.remove(id)) {\n    this.updatersWithAttributes.remove(id);\n    var unsubscribe = this.subscriptions.get(id);\n    if (defined(unsubscribe)) {\n      unsubscribe();\n      this.subscriptions.remove(id);\n    }\n  }\n};\n\nBatch.prototype.update = function (time) {\n  var isUpdated = true;\n  var removedCount = 0;\n  var primitive = this.primitive;\n  var primitives = this.primitives;\n  var attributes;\n  var i;\n  \n  if (this.createPrimitive) {\n    var geometries = this.geometry.values;\n    var geometriesLength = geometries.length;\n    if (geometriesLength > 0) {\n      if (defined(primitive)) {\n        if (!defined(this.oldPrimitive)) {\n          this.oldPrimitive = primitive;\n        } else {\n          primitives.remove(primitive);\n        }\n      }\n      \n      for (i = 0; i < geometriesLength; i++) {\n        var geometryItem = geometries[i];\n        var originalAttributes = geometryItem.attributes;\n        attributes = this.attributes.get(geometryItem.id.id);\n        \n        if (defined(attributes)) {\n          if (defined(originalAttributes.show)) {\n            originalAttributes.show.value = attributes.show;\n          }\n          if (defined(originalAttributes.color)) {\n            originalAttributes.color.value = attributes.color;\n          }\n          if (defined(originalAttributes.depthFailColor)) {\n            originalAttributes.depthFailColor.value = attributes.depthFailColor;\n          }\n        }\n      }\n      \n      var depthFailAppearance;\n      if (defined(this.depthFailAppearanceType)) {\n        if (defined(this.depthFailMaterialProperty)) {\n          this.depthFailMaterial = MaterialProperty.getValue(time, this.depthFailMaterialProperty, this.depthFailMaterial);\n        }\n        depthFailAppearance = new this.depthFailAppearanceType({\n          material: this.depthFailMaterial,\n          translucent: this.translucent,\n          closed: this.closed\n        });\n      }\n      \n      primitive = new Primitive({\n        show: false,\n        asynchronous: true,\n        geometryInstances: geometries,\n        appearance: new this.appearanceType({\n          flat: this.shadows === ShadowMode.DISABLED || this.shadows === ShadowMode.CAST_ONLY,\n          translucent: this.translucent,\n          closed: this.closed\n        }),\n        depthFailAppearance: depthFailAppearance,\n        shadows: this.shadows\n      });\n      primitives.add(primitive);\n      isUpdated = false;\n    } else {\n      if (defined(primitive)) {\n        primitives.remove(primitive);\n        primitive = undefined;\n      }\n      var oldPrimitive = this.oldPrimitive;\n      if (defined(oldPrimitive)) {\n        primitives.remove(oldPrimitive);\n        this.oldPrimitive = undefined;\n      }\n    }\n    \n    this.attributes.removeAll();\n    this.primitive = primitive;\n    this.createPrimitive = false;\n    this.waitingOnCreate = true;\n  } else if (defined(primitive) && primitive.ready) {\n    primitive.show = true;\n    if (defined(this.oldPrimitive)) {\n      primitives.remove(this.oldPrimitive);\n      this.oldPrimitive = undefined;\n    }\n    \n    if (defined(this.depthFailAppearanceType) && !(this.depthFailMaterialProperty instanceof ColorMaterialProperty)) {\n      this.depthFailMaterial = MaterialProperty.getValue(time, this.depthFailMaterialProperty, this.depthFailMaterial);\n      this.primitive.depthFailAppearance.material = this.depthFailMaterial;\n    }\n    \n    var updatersWithAttributes = this.updatersWithAttributes.values;\n    var length = updatersWithAttributes.length;\n    var waitingOnCreate = this.waitingOnCreate;\n    for (i = 0; i < length; i++) {\n      var updater = updatersWithAttributes[i];\n      var instance = this.geometry.get(updater.id);\n      \n      attributes = this.attributes.get(instance.id.id);\n      if (!defined(attributes)) {\n        attributes = primitive.getGeometryInstanceAttributes(instance.id);\n        this.attributes.set(instance.id.id, attributes);\n      }\n      \n      if (!updater.fillMaterialProperty.isConstant || waitingOnCreate) {\n        var colorProperty = updater.fillMaterialProperty.color;\n        var resultColor = Property.getValueOrDefault(colorProperty, time, Color.WHITE, colorScratch);\n        if (!Color.equals(attributes._lastColor, resultColor)) {\n          attributes._lastColor = Color.clone(resultColor, attributes._lastColor);\n          attributes.color = ColorGeometryInstanceAttribute.toValue(resultColor, attributes.color);\n          if ((this.translucent && attributes.color[3] === 255) || (!this.translucent && attributes.color[3] !== 255)) {\n            this.itemsToRemove[removedCount++] = updater;\n          }\n        }\n      }\n      \n      if (defined(this.depthFailAppearanceType) && updater.depthFailMaterialProperty instanceof ColorMaterialProperty && (!updater.depthFailMaterialProperty.isConstant || waitingOnCreate)) {\n        var depthFailColorProperty = updater.depthFailMaterialProperty.color;\n        var depthColor = Property.getValueOrDefault(depthFailColorProperty, time, Color.WHITE, colorScratch);\n        if (!Color.equals(attributes._lastDepthFailColor, depthColor)) {\n          attributes._lastDepthFailColor = Color.clone(depthColor, attributes._lastDepthFailColor);\n          attributes.depthFailColor = ColorGeometryInstanceAttribute.toValue(depthColor, attributes.depthFailColor);\n        }\n      }\n      \n      var show = updater.entity.isShowing && (updater.hasConstantFill || updater.isFilled(time));\n      var currentShow = attributes.show[0] === 1;\n      if (show !== currentShow) {\n        attributes.show = ShowGeometryInstanceAttribute.toValue(show, attributes.show);\n      }\n      \n      var distanceDisplayConditionProperty = updater.distanceDisplayConditionProperty;\n      if (!Property.isConstant(distanceDisplayConditionProperty)) {\n        var distanceDisplayCondition = Property.getValueOrDefault(distanceDisplayConditionProperty, time, defaultDistanceDisplayCondition, distanceDisplayConditionScratch);\n        if (!DistanceDisplayCondition.equals(distanceDisplayCondition, attributes._lastDistanceDisplayCondition)) {\n          attributes._lastDistanceDisplayCondition = DistanceDisplayCondition.clone(distanceDisplayCondition, attributes._lastDistanceDisplayCondition);\n          attributes.distanceDisplayCondition = DistanceDisplayConditionGeometryInstanceAttribute.toValue(distanceDisplayCondition, attributes.distanceDisplayCondition);\n        }\n      }\n    }\n    \n    this.updateShows(primitive);\n    this.waitingOnCreate = false;\n  } else if (defined(primitive) && !primitive.ready) {\n    isUpdated = false;\n  }\n  this.itemsToRemove.length = removedCount;\n  return isUpdated;\n};\n\nBatch.prototype.updateShows = function (primitive) {\n  var showsUpdated = this.showsUpdated.values;\n  var length = showsUpdated.length;\n  for (var i = 0; i < length; i++) {\n    var updater = showsUpdated[i];\n    var instance = this.geometry.get(updater.id);\n    \n    var attributes = this.attributes.get(instance.id.id);\n    if (!defined(attributes)) {\n      attributes = primitive.getGeometryInstanceAttributes(instance.id);\n      this.attributes.set(instance.id.id, attributes);\n    }\n    \n    var show = updater.entity.isShowing;\n    var currentShow = attributes.show[0] === 1;\n    if (show !== currentShow) {\n      attributes.show = ShowGeometryInstanceAttribute.toValue(show, attributes.show);\n    }\n  }\n  this.showsUpdated.removeAll();\n};\n\nBatch.prototype.contains = function (updater) {\n  return this.updaters.contains(updater.id);\n};\n\nBatch.prototype.getBoundingSphere = function (updater, result) {\n  var primitive = this.primitive;\n  if (!primitive.ready) {\n    return BoundingSphereState.PENDING;\n  }\n  var attributes = primitive.getGeometryInstanceAttributes(updater.entity);\n  if (!defined(attributes) || !defined(attributes.boundingSphere) ||//\n    (defined(attributes.show) && attributes.show[0] === 0)) {\n    return BoundingSphereState.FAILED;\n  }\n  attributes.boundingSphere.clone(result);\n  return BoundingSphereState.DONE;\n};\n\nBatch.prototype.removeAllPrimitives = function () {\n  var primitives = this.primitives;\n  \n  var primitive = this.primitive;\n  if (defined(primitive)) {\n    primitives.remove(primitive);\n    this.primitive = undefined;\n    this.geometry.removeAll();\n    this.updaters.removeAll();\n  }\n  \n  var oldPrimitive = this.oldPrimitive;\n  if (defined(oldPrimitive)) {\n    primitives.remove(oldPrimitive);\n    this.oldPrimitive = undefined;\n  }\n};\n\nBatch.prototype.destroy = function () {\n  var primitive = this.primitive;\n  var primitives = this.primitives;\n  if (defined(primitive)) {\n    primitives.remove(primitive);\n  }\n  var oldPrimitive = this.oldPrimitive;\n  if (defined(oldPrimitive)) {\n    primitives.remove(oldPrimitive);\n  }\n  if (defined(this.removeMaterialSubscription)) {\n    this.removeMaterialSubscription();\n  }\n};\n\n\nlet wasFixed = false;\n\nexport function fixCesiumEntitiesShadows() {\n  if (wasFixed) {\n    return;\n  }\n  Cesium.StaticGeometryColorBatch.prototype.add = function (time: any, updater: any) {\n    var items;\n    var translucent;\n    var instance = updater.createFillGeometryInstance(time);\n    if (instance.attributes.color.value[3] === 255) {\n      items = this._solidItems;\n      translucent = false;\n    } else {\n      items = this._translucentItems;\n      translucent = true;\n    }\n    \n    var length = items.length;\n    for (var i = 0; i < length; i++) {\n      var item = items[i];\n      if (item.isMaterial(updater)) {\n        item.add(updater, instance);\n        return;\n      }\n      \n    }\n    \n    var batch: any = new Batch(this._primitives, translucent, this._appearanceType, this._depthFailAppearanceType, updater.depthFailMaterialProperty, this._closed, this._shadows);\n    batch.add(updater, instance);\n    items.push(batch);\n  };\n  wasFixed = true;\n}\n","/**\n * Cesium scene modes\n */\nexport enum SceneMode {\n  SCENE3D,\n  COLUMBUS_VIEW,\n  SCENE2D,\n  PERFORMANCE_SCENE2D\n}\n","import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { fixCesiumEntitiesShadows } from './StaticGeometryColorBatch';\n\nexport const ANGULAR_CESIUM_CONFIG = new InjectionToken('ANGULAR_CESIUM_CONFIG');\n\n@Injectable()\nexport class ConfigurationService {\n  constructor(@Optional() @Inject(ANGULAR_CESIUM_CONFIG) private config: any) {\n    const fixEntitiesShadows = config ? config.fixEntitiesShadows : true;\n    if (fixEntitiesShadows !== false) {\n      fixCesiumEntitiesShadows();\n    }\n  }\n}\n","/**\n * Event options for registration on map-event-manager.\n */\nexport enum CesiumEvent {\n  MOUSE_MOVE = Cesium.ScreenSpaceEventType.MOUSE_MOVE,\n  LEFT_CLICK = Cesium.ScreenSpaceEventType.LEFT_CLICK,\n  LEFT_DOUBLE_CLICK = Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK,\n  LEFT_DOWN = Cesium.ScreenSpaceEventType.LEFT_DOWN,\n  LEFT_UP = Cesium.ScreenSpaceEventType.LEFT_UP,\n  MIDDLE_CLICK = Cesium.ScreenSpaceEventType.MIDDLE_CLICK,\n  MIDDLE_DOUBLE_CLICK = Cesium.ScreenSpaceEventType.MIDDLE_DOUBLE_CLICK,\n  MIDDLE_DOWN = Cesium.ScreenSpaceEventType.MIDDLE_DOWN,\n  MIDDLE_UP = Cesium.ScreenSpaceEventType.MIDDLE_UP,\n  PINCH_START = Cesium.ScreenSpaceEventType.PINCH_START,\n  PINCH_END = Cesium.ScreenSpaceEventType.PINCH_END,\n  PINCH_MOVE = Cesium.ScreenSpaceEventType.PINCH_MOVE,\n  RIGHT_CLICK = Cesium.ScreenSpaceEventType.RIGHT_CLICK,\n  RIGHT_DOUBLE_CLICK = Cesium.ScreenSpaceEventType.RIGHT_DOUBLE_CLICK,\n  RIGHT_DOWN = Cesium.ScreenSpaceEventType.RIGHT_DOWN,\n  RIGHT_UP = Cesium.ScreenSpaceEventType.RIGHT_UP,\n  WHEEL = Cesium.ScreenSpaceEventType.WHEEL,\n  LONG_LEFT_PRESS = 110,\n  LONG_RIGHT_PRESS,\n  LONG_MIDDLE_PRESS,\n  LEFT_CLICK_DRAG,\n  RIGHT_CLICK_DRAG,\n  MIDDLE_CLICK_DRAG,\n}\n","/**\n *  NO_PICK,    - will not pick entities\n *  PICK_FIRST  - first entity will be picked . use Cesium.scene.pick()\n *  PICK_ONE    - in case a few entities are picked plonter is resolved . use Cesium.scene.drillPick()\n *  PICK_ALL    - all entities are picked. use Cesium.scene.drillPick()\n */\nexport enum PickOptions {\n  NO_PICK,\n  PICK_FIRST,\n  PICK_ONE,\n  PICK_ALL\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../cesium/cesium.service';\nimport { SceneMode } from '../../models/scene-mode.enum';\n\n/**\n *  The service exposes the scene's camera and screenSpaceCameraController\n *  SceneMode.PERFORMANCE_SCENE2D -  is a 3D scene mode that acts like Cesium 2D mode,\n *  but is more efficient performance wise.\n */\n@Injectable()\nexport class CameraService {\n  static PERFORMANCE_2D_ALTITUDE = 25000000;\n\n  private viewer: any;\n  private scene: any;\n  private camera: any;\n  private screenSpaceCameraController: any;\n  private morphListenerCancelFn: any;\n  private lastRotate: boolean;\n  private lastTilt: boolean;\n  private lastLook: boolean;\n  private isSceneModePerformance2D = false;\n\n  constructor() {\n  }\n\n  init(cesiumService: CesiumService) {\n    this.viewer = cesiumService.getViewer();\n    this.scene = cesiumService.getScene();\n    this.screenSpaceCameraController = this.scene.screenSpaceCameraController;\n    this.camera = this.scene.camera;\n    this.lastRotate = this.screenSpaceCameraController.enableRotate;\n    this.lastTilt = this.screenSpaceCameraController.enableTilt;\n    this.lastLook = this.screenSpaceCameraController.enableLook;\n  }\n\n  _listenToSceneModeMorph(callback: Function) {\n    this.morphListenerCancelFn = this.scene.morphStart.addEventListener(\n      callback\n    );\n  }\n\n  _revertCameraProperties() {\n    this.isSceneModePerformance2D = false;\n    this.enableTilt(this.lastTilt);\n    this.enableRotate(this.lastRotate);\n    this.enableLook(this.lastLook);\n  }\n\n  /**\n   * Gets the scene's camera\n   */\n  getCamera() {\n    return this.camera;\n  }\n\n  /**\n   * Gets the scene's screenSpaceCameraController\n   */\n  getScreenSpaceCameraController() {\n    return this.screenSpaceCameraController;\n  }\n\n  /**\n   * Gets the minimum zoom value in meters\n   */\n  getMinimumZoom(): number {\n    return this.screenSpaceCameraController.minimumZoomDistance;\n  }\n\n  /**\n   * Sets the minimum zoom value in meters\n   * @param zoom amount\n   */\n  setMinimumZoom(amount: number): void {\n    this.screenSpaceCameraController.minimumZoomDistance = amount;\n  }\n\n  /**\n   * Gets the maximum zoom value in meters\n   */\n  getMaximumZoom(): number {\n    return this.screenSpaceCameraController.maximumZoomDistance;\n  }\n\n  /**\n   * Sets the maximum zoom value in meters\n   * @param zoom amount\n   */\n  setMaximumZoom(amount: number): void {\n    this.screenSpaceCameraController.maximumZoomDistance = amount;\n  }\n\n  /**\n   * Sets if the camera is able to tilt\n   */\n  enableTilt(tilt: boolean): void {\n    this.screenSpaceCameraController.enableTilt = tilt;\n  }\n\n  /**\n   * Sets if the camera is able to rotate\n   */\n  enableRotate(rotate: boolean): void {\n    this.screenSpaceCameraController.enableRotate = rotate;\n  }\n\n  /**\n   * Sets if the camera is able to free-look\n   */\n  enableLook(lock: boolean): void {\n    this.screenSpaceCameraController.enableLook = lock;\n  }\n\n  /**\n   * Sets if the camera is able to translate\n   */\n  enableTranslate(translate: boolean): void {\n    this.screenSpaceCameraController.enableTranslate = translate;\n  }\n\n  /**\n   * Sets if the camera is able to zoom\n   */\n  enableZoom(zoom: boolean): void {\n    this.screenSpaceCameraController.enableZoom = zoom;\n  }\n\n  /**\n   * Sets if the camera receives inputs\n   */\n  enableInputs(inputs: boolean): void {\n    this.screenSpaceCameraController.enableInputs = inputs;\n  }\n\n  /**\n   * Sets the map's SceneMode\n   * @param sceneMode - The SceneMode to morph the scene into.\n   * @param duration - The duration of scene morph animations, in seconds\n   */\n  setSceneMode(sceneMode: SceneMode, duration?: number) {\n    switch (sceneMode) {\n      case SceneMode.SCENE3D: {\n        if (this.isSceneModePerformance2D) {\n          this._revertCameraProperties();\n        }\n\n        this.scene.morphTo3D(duration);\n\n        break;\n      }\n      case SceneMode.COLUMBUS_VIEW: {\n        if (this.isSceneModePerformance2D) {\n          this._revertCameraProperties();\n        }\n\n        this.scene.morphToColumbusView(duration);\n\n        break;\n      }\n      case SceneMode.SCENE2D: {\n        if (this.isSceneModePerformance2D) {\n          this._revertCameraProperties();\n        }\n        this.scene.morphTo2D(duration);\n\n        break;\n      }\n      case SceneMode.PERFORMANCE_SCENE2D: {\n        this.isSceneModePerformance2D = true;\n        this.lastLook = this.screenSpaceCameraController.enableLook;\n        this.lastTilt = this.screenSpaceCameraController.enableTilt;\n        this.lastRotate = this.screenSpaceCameraController.enableRotate;\n        this.screenSpaceCameraController.enableTilt = false;\n        this.screenSpaceCameraController.enableRotate = false;\n        this.screenSpaceCameraController.enableLook = false;\n        if (this.morphListenerCancelFn) {\n          this.morphListenerCancelFn();\n        }\n        this.scene.morphToColumbusView(duration);\n        const morphCompleteEventListener = this.scene.morphComplete.addEventListener(\n          () => {\n            this.camera.setView({\n              destination: Cesium.Cartesian3.fromDegrees(\n                0.0,\n                0.0,\n                Math.min(\n                  CameraService.PERFORMANCE_2D_ALTITUDE,\n                  this.getMaximumZoom()\n                )\n              ),\n              orientation: {\n                pitch: Cesium.Math.toRadians(-90)\n              }\n            });\n            morphCompleteEventListener();\n            this._listenToSceneModeMorph(\n              this._revertCameraProperties.bind(this)\n            );\n          }\n        );\n\n        break;\n      }\n    }\n  }\n\n  /**\n   * Flies the camera to a destination\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Camera.html?classFilter=cam#flyTo\n   */\n  cameraFlyTo(options: any) {\n    if (options) {\n      return this.camera.flyTo(options);\n    }\n  }\n\n  /**\n   * Flies the camera to a target\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=viewer#flyTo\n   * @returns Promise<boolean>\n   */\n  flyTo(target: any, options?: any) {\n    return this.viewer.flyTo(target, options);\n  }\n\n  /**\n   * Zooms amount along the camera's view vector.\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Camera.html#zoomIn\n   */\n  zoomIn(amount: number) {\n    return this.camera.zoomIn(amount || this.camera.defaultZoomAmount);\n  }\n\n  /**\n   * Zooms amount along the opposite direction of the camera's view vector.\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Camera.html#zoomOut\n   */\n  zoomOut(amount: number) {\n    return this.camera.zoomOut(amount || this.camera.defaultZoomAmount);\n  }\n\n  /**\n   * Zoom the camera to a target\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=viewer#zoomTo\n   * @returns Promise<boolean>\n   */\n  zoomTo(target: any, offset?: any) {\n    return this.viewer.zoomTo(target, offset);\n  }\n\n  /**\n   * Flies the camera to a destination\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Camera.html?classFilter=camera#setView\n   * @param options viewer options\n   */\n  setView(options: any) {\n    this.camera.setView(options);\n  }\n\n  /**\n   * Set camera's rotation\n   */\n  setRotation(degreesInRadians: number) {\n    this.setView({orientation: {heading: degreesInRadians}});\n  }\n\n  /**\n   * Locks or unlocks camera rotation\n   */\n  lockRotation(lock: boolean) {\n    this.scene.screenSpaceCameraController.enableRotate = !lock;\n  }\n\n  /**\n   * Make the camera track a specific entity\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=viewer#trackedEntity\n   * @param cesiumEntity - cesium entity( billboard, polygon...) to track\n   * @param options - track entity options\n   */\n  trackEntity(\n    cesiumEntity?: any,\n    options?: { flyTo: boolean; flyToDuration?: number; altitude?: number }\n  ) {\n    const flyTo = (options && options.flyTo) || false;\n\n    this.viewer.trackedEntity = undefined;\n    return new Promise(resolve => {\n      if (flyTo) {\n        const flyToDuration = (options && options.flyToDuration) || 1;\n        const altitude = (options && options.altitude) || 10000;\n\n        // Calc entity flyTo position and wanted altitude\n        const entPosCar3 = cesiumEntity.position.getValue(Cesium.JulianDate.now());\n        const entPosCart = Cesium.Cartographic.fromCartesian(entPosCar3);\n        const zoomAmount = altitude - entPosCart.height;\n        entPosCart.height = altitude;\n        const flyToPosition = Cesium.Cartesian3.fromRadians(\n          entPosCart.longitude,\n          entPosCart.latitude,\n          entPosCart.height\n        );\n\n        this.cameraFlyTo({\n          duration: flyToDuration,\n          destination: flyToPosition,\n          complete: () => {\n            this.viewer.trackedEntity = cesiumEntity;\n            setTimeout(() => {\n              if (zoomAmount > 0) {\n                this.camera.zoomOut(zoomAmount);\n              } else {\n                this.camera.zoomIn(zoomAmount);\n              }\n            }, 0);\n            resolve();\n          }\n        });\n      } else {\n        this.viewer.trackedEntity = cesiumEntity;\n        resolve();\n      }\n    });\n  }\n\n  untrackEntity() {\n    this.trackEntity();\n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { Cartesian3 } from '../../models/cartesian3';\nimport { ContextMenuOptions } from '../../models/context-menu-options';\nimport { MapEventsManagerService } from '../map-events-mananger/map-events-manager';\nimport { CesiumEvent } from '../map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../map-events-mananger/consts/pickOptions.enum';\nimport { DisposableObservable } from '../map-events-mananger/disposable-observable';\nimport { BasicContextMenu } from '../../models/basic-context-menu';\nimport { Subscription } from 'rxjs';\n\n\n/**\n * The Service manages a singleton context menu over the map. It should be initialized with MapEventsManager.\n * The Service allows opening and closing of the context menu and passing data to the context menu inner component.\n *\n * notice, `data` will be injected to your custom menu component into the `data` field in the component.\n * __Usage :__\n * ```\n *  ngOnInit() {\n *   this.clickEvent$ = this.eventsManager.register({ event: CesiumEvent.RIGHT_CLICK, pick: PickOptions.PICK_ONE });\n *   this.clickEvent$.subscribe(result => {\n *    if (result.entities) {\n *      const pickedMarker = result.entities[0];\n *      this.contextMenuService.open(MapContextmenuComponent, pickedMarker.position, {\n *        data: {\n *          myData: data,\n *          onDelete: () => this.delete(pickedMarker.id)\n *        }\n *      });\n *    }\n *   });\n *  }\n *\n *\n *  private delete(id) {\n *    this.mapMenu.close();\n *    this.detailedSiteService.removeMarker(id);\n *  }\n * ```\n */\n@Injectable()\nexport class ContextMenuService {\n  private _showContextMenu = false;\n  private _options: ContextMenuOptions;\n  private _position: Cartesian3;\n  private _content: BasicContextMenu;\n  private mapEventsManager: MapEventsManagerService;\n  private leftClickRegistration: DisposableObservable<any>;\n  private leftClickSubscription: Subscription;\n  private _contextMenuChangeNotifier = new EventEmitter();\n  private _onOpen = new EventEmitter();\n  private _onClose = new EventEmitter();\n  private _defaultContextMenuOptions: ContextMenuOptions = {\n    closeOnLeftCLick: true,\n    closeOnLeftClickPriority: 10,\n  };\n\n  get contextMenuChangeNotifier(): EventEmitter<any> {\n    return this._contextMenuChangeNotifier;\n  }\n\n  get showContextMenu(): boolean {\n    return this._showContextMenu;\n  }\n\n  get options(): ContextMenuOptions {\n    return this._options;\n  }\n\n  get position(): Cartesian3 {\n    return this._position;\n  }\n\n  get content(): BasicContextMenu {\n    return this._content;\n  }\n\n  get onOpen(): EventEmitter<any> {\n    return this._onOpen;\n  }\n\n  get onClose(): EventEmitter<any> {\n    return this._onClose;\n  }\n\n\n  init(mapEventsManager: MapEventsManagerService) {\n    this.mapEventsManager = mapEventsManager;\n  }\n\n  open<D>(contentComponent: any, position: Cartesian3, options: ContextMenuOptions<D> = {}) {\n    this.close();\n    this._content = contentComponent;\n    this._position = position;\n    this._options = Object.assign({}, this._defaultContextMenuOptions, options);\n    this._showContextMenu = true;\n    if (this.mapEventsManager && this._options.closeOnLeftCLick) {\n      this.leftClickRegistration = this.mapEventsManager.register({\n        event: CesiumEvent.LEFT_CLICK,\n        pick: PickOptions.NO_PICK,\n        priority: this._options.closeOnLeftClickPriority,\n      });\n      this.leftClickSubscription = this.leftClickRegistration.subscribe(() => {\n        this.leftClickSubscription.unsubscribe();\n        this.close();\n      });\n    }\n\n    this._contextMenuChangeNotifier.emit();\n    this._onOpen.emit();\n  }\n\n  close() {\n    this._content = undefined;\n    this._position = undefined;\n    this._options = undefined;\n    this._showContextMenu = false;\n    if (this.leftClickRegistration) {\n      this.leftClickRegistration.dispose();\n      this.leftClickRegistration = undefined;\n    }\n    if (this.leftClickSubscription) {\n      this.leftClickSubscription.unsubscribe();\n      this.leftClickSubscription = undefined;\n    }\n\n    this._contextMenuChangeNotifier.emit();\n    this._onClose.emit();\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { CesiumService } from '../cesium/cesium.service';\nimport * as geodesy from 'geodesy';\nimport { hemisphere, LatLon, LatLonEllipsoidal, Utm } from 'geodesy';\nimport { Cartesian3 } from '../../models/cartesian3';\n\nconst LatLonVectors = geodesy['LatLonVectors']; // doesnt exists on typings\n\nwindow['geodesy'] = geodesy;\n\n/**\n *  Given different types of coordinates, we provide you a service converting those types to the most common other types.\n *  We are using the geodesy implementation of UTM conversion. see: https://github.com/chrisveness/geodesy.\n *\n * @example\n * import { Component, OnInit } from '@angular/core';\n * import { CoordinateConverter } from 'angular2-cesium';\n *\n * @Component({\n * \t\tselector:'my-component',\n * \t\ttemplate:'<div>{{showCartographic}}</div>',\n * \t\tproviders:[CoordinateConverter]\n * })\n * export class MyComponent implements OnInit {\n * \t\tshowCartographic;\n *\n * \t\tconstructor(private coordinateConverter:CoordinateConverter){\n * \t\t}\n *\n * \t\tngOnInit(){\n * \t\t\tthis.showCartographic = this.coordinateConverter.degreesToCartographic(5, 5, 5);\n *  }\n * }\n *\n */\n@Injectable()\nexport class CoordinateConverter {\n  constructor(@Optional() private cesiumService?: CesiumService) {\n  }\n\n  static cartesian3ToLatLon(cartesian3: Cartesian3, ellipsoid?: any): {lon: number, lat: number; height: number} {\n    const cart = Cesium.Cartographic.fromCartesian(cartesian3, ellipsoid);\n    return {\n      lon: Cesium.Math.toDegrees(cart.longitude),\n      lat: Cesium.Math.toDegrees(cart.latitude),\n      height: cart.height\n    };\n  }\n\n  screenToCartesian3(screenPos: { x: number, y: number }, addMapCanvasBoundsToPos?: boolean) {\n    if (!this.cesiumService) {\n      throw new Error('ANGULAR2-CESIUM - Cesium service should be provided in order' +\n        ' to do screen position calculations');\n    } else {\n      const screenPosition = { ...screenPos };\n      if (addMapCanvasBoundsToPos) {\n        const mapBounds = this.cesiumService.getViewer().canvas.getBoundingClientRect();\n        screenPosition.x += mapBounds.left;\n        screenPosition.y += mapBounds.top;\n      }\n\n      const camera = this.cesiumService.getViewer().camera;\n      return camera.pickEllipsoid(screenPosition);\n    }\n  }\n\n  screenToCartographic(screenPos: { x: number, y: number }, ellipsoid?: any) {\n    return this.cartesian3ToCartographic(this.screenToCartesian3(screenPos), ellipsoid);\n  }\n\n  cartesian3ToCartographic(cartesian: Cartesian3, ellipsoid?: any) {\n    return Cesium.Cartographic.fromCartesian(cartesian, ellipsoid);\n  }\n\n  degreesToCartographic(longitude: number, latitude: number, height?: number) {\n    return Cesium.Cartographic.fromDegrees(longitude, latitude, height);\n  }\n\n  radiansToCartographic(longitude: number, latitude: number, height?: number) {\n    return Cesium.Cartographic.fromRadians(longitude, latitude, height);\n  }\n\n  degreesToUTM(longitude: number, latitude: number) {\n    return new LatLonEllipsoidal(latitude, longitude).toUtm();\n  }\n\n  UTMToDegrees(zone: number, hemisphereType: hemisphere, easting: number, northing: number) {\n    return this.geodesyToCesiumObject(new Utm(zone, hemisphereType, easting, northing).toLatLonE());\n  }\n\n  private geodesyToCesiumObject(geodesyRadians: LatLon) {\n    return {\n      longitude: geodesyRadians.lon,\n      latitude: geodesyRadians.lat,\n      height: geodesyRadians['height'] ? geodesyRadians['height'] : 0\n    };\n  }\n\n  /**\n   * middle point between two points\n   * @param first  (latitude,longitude) in radians\n   * @param second (latitude,longitude) in radians\n   */\n  midPointToCartesian3(first: { latitude: number, longitude: number }, second: { latitude: number, longitude: number }) {\n    const toDeg = (rad: number) => Cesium.Math.toDegrees(rad);\n    const firstPoint = new LatLonVectors(toDeg(first.latitude), toDeg(first.longitude));\n    const secondPoint = new LatLonVectors(toDeg(second.latitude), toDeg(second.longitude));\n    const middlePoint: any = firstPoint.midpointTo(secondPoint);\n\n    return Cesium.Cartesian3.fromDegrees(middlePoint.lon, middlePoint.lat);\n  }\n\n  middlePointByScreen(position0: Cartesian3, position1: Cartesian3): Cartesian3 {\n    const scene = this.cesiumService.getScene();\n    const screenPosition1 = Cesium.SceneTransforms.wgs84ToWindowCoordinates(scene, position0);\n    const screenPosition2 = Cesium.SceneTransforms.wgs84ToWindowCoordinates(scene, position1);\n    const middleScreenPoint =\n      new Cesium.Cartesian2((screenPosition2.x + screenPosition1.x) / 2.0, (screenPosition2.y + screenPosition1.y) / 2.0);\n    return scene.pickPosition(middleScreenPoint);\n  }\n\n  /**\n   * initial bearing between two points\n   *\n   * * @return bearing in degrees\n   * @param first - {latitude,longitude} in radians\n   * @param second - {latitude,longitude} in radians\n   */\n  bearingTo(first: { latitude: number, longitude: number }, second: { latitude: number, longitude: number }) {\n    const toDeg = (rad: number) => Cesium.Math.toDegrees(rad);\n    const firstPoint = new LatLonVectors(toDeg(first.latitude), toDeg(first.longitude));\n    const secondPoint = new LatLonVectors(toDeg(second.latitude), toDeg(second.longitude));\n    const bearing = firstPoint.bearingTo(secondPoint);\n\n    return bearing;\n  }\n\n  /**\n   * initial bearing between two points\n   *\n   * @return bearing in degrees\n   */\n  bearingToCartesian(firstCartesian3: Cartesian3, secondCartesian3: Cartesian3) {\n    const firstCart = Cesium.Cartographic.fromCartesian(firstCartesian3);\n    const secondCart = Cesium.Cartographic.fromCartesian(secondCartesian3);\n\n    return this.bearingTo(firstCart, secondCart);\n  }\n}\n","export enum GraphicsType {\n  ellipse = Cesium.EllipseGraphics,\n  ellipsoid = Cesium.EllipsoidGraphics,\n  polygon = Cesium.PolygonGraphics,\n  polyline = Cesium.PolylineGraphics,\n  polylineVolume = Cesium.PolylineVolumeGraphics,\n  box = Cesium.BoxGraphics,\n  corridor = Cesium.CorridorGraphics,\n  cylinder = Cesium.CylinderGraphics,\n  label = Cesium.LabelGraphics,\n  billboard = Cesium.BillboardGraphics,\n  model = Cesium.ModelGraphics,\n  path = Cesium.PathGraphics,\n  point = Cesium.PointGraphics,\n  rectangle = Cesium.RectangleGraphics,\n  wall = Cesium.WallGraphics,\n}\n","/**\n *  Abstract drawer. All drawers extends this class.\n */\n\nexport abstract class BasicDrawerService {\n  protected _propsAssigner: Function;\n\n  constructor() {\n  }\n\n  abstract add(cesiumProps: any, ...args: any[]): any;\n\n  abstract update(primitive: any, cesiumProps: any, ...args: any[]): void;\n\n  abstract remove(primitive: any): void;\n\n  abstract removeAll(): void;\n\n  abstract setShow(showValue: boolean): void;\n\n  abstract init(options?: any): any;\n\n  setPropsAssigner(assigner: Function) {\n    this._propsAssigner = assigner;\n  }\n}\n","import { CesiumService } from '../../cesium/cesium.service';\nimport { BasicDrawerService } from '../basic-drawer/basic-drawer.service';\n\n/**\n *  General primitives drawer responsible of drawing Cesium primitives.\n *  Drawers the handle Cesium primitives extend it.\n */\nexport abstract class PrimitivesDrawerService extends BasicDrawerService {\n  private _show = true;\n  private _primitiveCollectionWrap: any;\n  protected _cesiumCollection: any;\n  protected _propsAssigner: Function;\n\n  constructor(private drawerType: any, private cesiumService: CesiumService) {\n    super();\n  }\n\n  init() {\n    this._cesiumCollection = new this.drawerType();\n    this._primitiveCollectionWrap = new Cesium.PrimitiveCollection({destroyPrimitives: false});\n    this._primitiveCollectionWrap.add(this._cesiumCollection);\n    this.cesiumService.getScene().primitives.add(this._primitiveCollectionWrap);\n  }\n\n  add(cesiumProps: any, ...args: any[]): any {\n    return this._cesiumCollection.add(cesiumProps);\n  }\n\n  update(entity: any, cesiumProps: any, ...args: any[]) {\n    if (this._propsAssigner) {\n      this._propsAssigner(entity, cesiumProps);\n    } else {\n      Object.assign(entity, cesiumProps);\n    }\n  }\n\n  remove(entity: any) {\n    this._cesiumCollection.remove(entity);\n  }\n\n  removeAll() {\n    this._cesiumCollection.removeAll();\n  }\n\n  setShow(showValue: boolean) {\n    this._show = showValue;\n    this._primitiveCollectionWrap.show = showValue;\n  }\n\n  getShow(): boolean {\n    return this._show;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../cesium/cesium.service';\nimport { Cartesian3 } from '../../models/cartesian3';\nimport { Vec3 } from '../../models/vec3';\n\n@Injectable()\nexport class GeoUtilsService {\n  static pointByLocationDistanceAndAzimuth(currentLocation: any, meterDistance: number, radianAzimuth: number, deprecated?) {\n    const distance = meterDistance / Cesium.Ellipsoid.WGS84.maximumRadius;\n    const cartographicLocation =\n      currentLocation instanceof Cesium.Cartesian3 ? Cesium.Cartographic.fromCartesian(currentLocation) : currentLocation;\n    const cartesianLocation =\n      currentLocation instanceof Cesium.Cartesian3\n        ? currentLocation\n        : Cesium.Cartesian3.fromRadians(currentLocation.longitude, currentLocation.latitude, currentLocation.height);\n\n    let resultPosition;\n    let resultDistance;\n    let counter = 0;\n    let distanceFactorRangeMax = 0.1;\n    let distanceFactorRangeMin = -0.1;\n    while (\n      counter === 0 ||\n      (counter < 16 && Math.max(resultDistance, meterDistance) / Math.min(resultDistance, meterDistance) > 1.000001)\n      ) {\n      const factor = distanceFactorRangeMin + (distanceFactorRangeMax - distanceFactorRangeMin) / 2;\n      resultPosition = GeoUtilsService._pointByLocationDistanceAndAzimuth(cartographicLocation, distance * (1 + factor), radianAzimuth);\n      resultDistance = this.distance(cartesianLocation, resultPosition);\n\n      if (resultDistance > meterDistance) {\n        distanceFactorRangeMax = distanceFactorRangeMin + (distanceFactorRangeMax - distanceFactorRangeMin) / 2;\n      } else {\n        distanceFactorRangeMin = distanceFactorRangeMin + (distanceFactorRangeMax - distanceFactorRangeMin) / 2;\n      }\n      counter++;\n    }\n\n    return resultPosition;\n  }\n\n  static _pointByLocationDistanceAndAzimuth(cartographicLocation: any, distance: number, radianAzimuth: number) {\n    const curLat = cartographicLocation.latitude;\n    const curLon = cartographicLocation.longitude;\n    const destinationLat = Math.asin(\n      Math.sin(curLat) * Math.cos(distance) + Math.cos(curLat) * Math.sin(distance) * Math.cos(radianAzimuth),\n    );\n\n    let destinationLon =\n      curLon +\n      Math.atan2(\n        Math.sin(radianAzimuth) * Math.sin(distance) * Math.cos(curLat),\n        Math.cos(distance) - Math.sin(curLat) * Math.sin(destinationLat),\n      );\n\n    destinationLon = ((destinationLon + 3 * Math.PI) % (2 * Math.PI)) - Math.PI;\n\n    return Cesium.Cartesian3.fromRadians(destinationLon, destinationLat);\n  }\n\n  static distance(pos0: Cartesian3, pos1: Cartesian3): number {\n    return Cesium.Cartesian3.distance(pos0, pos1);\n  }\n\n  static getPositionsDelta(position0: Cartesian3, position1: Cartesian3): Vec3 {\n    return {\n      x: position1.x - position0.x,\n      y: position1.y - position0.y,\n      z: position1.z - position0.z,\n    };\n  }\n\n  static addDeltaToPosition(position: Cartesian3, delta: Vec3, updateReference = false): Cartesian3 {\n    if (updateReference) {\n      position.x += delta.x;\n      position.y += delta.y;\n      position.z += delta.z;\n      const cartographic = Cesium.Cartographic.fromCartesian(position);\n      cartographic.height = 0;\n      const cartesian = Cesium.Cartesian3.fromRadians(cartographic.longitude, cartographic.latitude, cartographic.height);\n      position.x = cartesian.x;\n      position.y = cartesian.y;\n      position.z = cartesian.z;\n      return position;\n    } else {\n      const cartesian = new Cesium.Cartesian3(position.x + delta.x, position.y + delta.y, position.z + delta.z);\n      const cartographic = Cesium.Cartographic.fromCartesian(cartesian);\n      cartographic.height = 0;\n      return Cesium.Cartesian3.fromRadians(cartographic.longitude, cartographic.latitude, cartographic.height);\n    }\n  }\n\n  static middleCartesian3Point(position0: Cartesian3, position1: Cartesian3) {\n    return new Cesium.Cartesian3(position1.x - position0.x / 2, position1.y - position0.y / 2, position1.z - position0.z / 2);\n  }\n\n  constructor(private cesiumService: CesiumService) {\n  }\n\n  screenPositionToCartesian3(screenPos: { x: number; y: number }) {\n    const camera = this.cesiumService.getViewer().camera;\n    return camera.pickEllipsoid(screenPos);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\nimport { GeoUtilsService } from '../../geo-utils/geo-utils.service';\n\n/**\n +  This drawer is responsible for drawing an arc over the Cesium map.\n +  This implementation uses simple PolylineGeometry and Primitive parameters.\n +  This doesn't allow us to change the position, color, etc.. of the arc but setShow only.\n */\n\n@Injectable()\nexport class ArcDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PolylineCollection, cesiumService);\n  }\n\n  _calculateArcPositions(cesiumProps: any) {\n    const quality = cesiumProps.quality || 18;\n    const delta = (cesiumProps.delta) / quality;\n    const pointsArray = [];\n    for (let i = 0; i < quality + 1; ++i) {\n      const point =\n        GeoUtilsService.pointByLocationDistanceAndAzimuth(cesiumProps.center, cesiumProps.radius, cesiumProps.angle + delta * i, true);\n      pointsArray.push(point);\n    }\n\n    return pointsArray;\n  }\n\n  _calculateTriangle(cesiumProps: any) {\n    return [\n      cesiumProps.center,\n      GeoUtilsService.pointByLocationDistanceAndAzimuth(cesiumProps.center, cesiumProps.radius, cesiumProps.angle, true)\n    ];\n  }\n\n  _calculateArc(cesiumProps: any) {\n    const arcPoints = this._calculateArcPositions(cesiumProps);\n    return cesiumProps.drawEdges ? arcPoints.concat(this._calculateTriangle(cesiumProps)) : arcPoints;\n  }\n\n  add(cesiumProps: any): any {\n    cesiumProps.positions = this._calculateArc(cesiumProps);\n    if (cesiumProps.color) {\n      const material = Cesium.Material.fromType('Color');\n      material.uniforms.color = cesiumProps.color;\n      cesiumProps.material = material;\n    }\n\n    return this._cesiumCollection.add(cesiumProps);\n  }\n\n  update(primitive: any, cesiumProps: any) {\n    if (!cesiumProps.constantColor && cesiumProps.color &&\n      !primitive.material.uniforms.color.equals(cesiumProps.color)) {\n      primitive.material.uniforms.color = cesiumProps.color;\n    }\n    primitive.width = cesiumProps.width !== undefined ? cesiumProps.width : primitive.width;\n    primitive.show = cesiumProps.show !== undefined ? cesiumProps.show : primitive.show;\n    primitive.distanceDisplayCondition = cesiumProps.distanceDisplayCondition !== undefined ?\n      cesiumProps.distanceDisplayCondition : primitive.distanceDisplayCondition;\n    primitive.positions = this._calculateArc(cesiumProps);\n\n    return primitive;\n  }\n}\n","export class OptimizedEntityCollection {\n  private _updateRate: number;\n  private _collectionSize: number;\n  private _isSuspended = false;\n  private _isHardSuspend = false;\n  private _suspensionTimeout: any;\n  private _onEventSuspensionCallback: { once: boolean, callback: Function };\n  private _onEventResumeCallback: { once: boolean, callback: Function };\n\n  constructor(private entityCollection: any, collectionSize = -1, updateRate = -1) {\n    this._updateRate = updateRate;\n    this._collectionSize = collectionSize;\n\n  }\n\n  setShow(show: boolean) {\n    this.entityCollection.show = show;\n  }\n\n  get isSuspended(): boolean {\n    return this._isSuspended;\n  }\n\n  get updateRate(): number {\n    return this._updateRate;\n  }\n\n  set updateRate(value: number) {\n    this._updateRate = value;\n  }\n\n  get collectionSize(): number {\n    return this._collectionSize;\n  }\n\n  set collectionSize(value: number) {\n    this._collectionSize = value;\n  }\n\n  collection() {\n    return this.entityCollection;\n  }\n\n  isFree(): boolean {\n    return this._collectionSize < 1 || this.entityCollection.values.length < this._collectionSize;\n  }\n\n  add(entity: any) {\n    this.suspend();\n    return this.entityCollection.add(entity);\n  }\n\n  remove(entity: any) {\n    this.suspend();\n    return this.entityCollection.remove(entity);\n  }\n\n  removeNoSuspend(entity: any) {\n    this.entityCollection.remove(entity);\n  }\n\n  removeAll() {\n    this.suspend();\n    this.entityCollection.removeAll();\n  }\n\n  onEventSuspension(callback: Function, once = false): Function {\n    this._onEventSuspensionCallback = {callback, once};\n    return () => {\n      this._onEventSuspensionCallback = undefined;\n    };\n  }\n\n  onEventResume(callback: Function, once = false): Function {\n    this._onEventResumeCallback = {callback, once};\n    if (!this._isSuspended) {\n      this.triggerEventResume();\n    }\n    return () => {\n      this._onEventResumeCallback = undefined;\n    };\n  }\n\n  triggerEventSuspension() {\n    if (this._onEventSuspensionCallback !== undefined) {\n      const callback = this._onEventSuspensionCallback.callback;\n      if (this._onEventSuspensionCallback.once) {\n        this._onEventSuspensionCallback = undefined;\n      }\n      callback();\n    }\n  }\n\n  triggerEventResume() {\n    if (this._onEventResumeCallback !== undefined) {\n      const callback = this._onEventResumeCallback.callback;\n      if (this._onEventResumeCallback.once) {\n        this._onEventResumeCallback = undefined;\n      }\n      callback();\n    }\n  }\n\n  public suspend() {\n    if (this._updateRate < 0) {\n      return;\n    }\n    if (this._isHardSuspend) {\n      return;\n    }\n    if (!this._isSuspended) {\n      this._isSuspended = true;\n      this.entityCollection.suspendEvents();\n      this.triggerEventSuspension();\n      this._suspensionTimeout = setTimeout(() => {\n        this.entityCollection.resumeEvents();\n        this.triggerEventResume();\n        this._isSuspended = false;\n        this._suspensionTimeout = undefined;\n      }, this._updateRate);\n    }\n  }\n\n  public hardSuspend() {\n    this.entityCollection.suspendEvents();\n    this._isHardSuspend = true;\n  }\n\n  public hardResume() {\n    this.entityCollection.resumeEvents();\n    this._isHardSuspend = false;\n  }\n\n}\n","export enum KeyboardAction {\n  CAMERA_FORWARD,\n  CAMERA_BACKWARD,\n  CAMERA_RIGHT,\n  CAMERA_LEFT,\n  CAMERA_UP,\n  CAMERA_DOWN,\n  CAMERA_LOOK_RIGHT,\n  CAMERA_LOOK_LEFT,\n  CAMERA_LOOK_UP,\n  CAMERA_LOOK_DOWN,\n  CAMERA_TWIST_RIGHT,\n  CAMERA_TWIST_LEFT,\n  CAMERA_ROTATE_RIGHT,\n  CAMERA_ROTATE_LEFT,\n  CAMERA_ROTATE_UP,\n  CAMERA_ROTATE_DOWN,\n  CAMERA_ZOOM_IN,\n  CAMERA_ZOOM_OUT,\n}\n","import { BasicDrawerService } from '../basic-drawer/basic-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from './enums/graphics-type.enum';\nimport { EntitiesDrawerOptions } from '../../../models/entities-drawer-options';\nimport { OptimizedEntityCollection } from './optimized-entity-collection';\n\n/**\n *  General primitives drawer responsible of drawing Cesium primitives.\n *  Drawers the handle Cesium primitives extend it.\n */\n\nexport class EntitiesDrawerService extends BasicDrawerService {\n  private entityCollections = new Map<any, OptimizedEntityCollection>();\n  private graphicsTypeName: string;\n\n  constructor(\n    private cesiumService: CesiumService,\n    private graphicsType: GraphicsType,\n    private defaultOptions: EntitiesDrawerOptions = {\n      collectionMaxSize: -1,\n      collectionSuspensionTime: -1,\n      collectionsNumber: 1,\n    },\n  ) {\n    super();\n    this.graphicsTypeName = GraphicsType[this.graphicsType];\n\n    // Fix bad enum compilation\n    for (const i in GraphicsType) {\n      if (GraphicsType[i] as any === this.graphicsType) {\n        this.graphicsTypeName = i;\n      }\n    }\n  }\n\n  private getFreeEntitiesCollection(): OptimizedEntityCollection {\n    let freeEntityCollection = null;\n    this.entityCollections.forEach(entityCollection => {\n      if (entityCollection.isFree()) {\n        freeEntityCollection = entityCollection;\n      }\n    });\n\n    return freeEntityCollection;\n  }\n\n  init(options?: EntitiesDrawerOptions) {\n    const finalOptions = options || this.defaultOptions;\n    const dataSources = [];\n    for (let i = 0; i < finalOptions.collectionsNumber; i++) {\n      const dataSource = new Cesium.CustomDataSource(this.graphicsTypeName);\n      dataSources.push(dataSource);\n      this.cesiumService.getViewer().dataSources.add(dataSource);\n      this.entityCollections.set(\n        dataSource.entities,\n        new OptimizedEntityCollection(dataSource.entities, finalOptions.collectionMaxSize, finalOptions.collectionSuspensionTime),\n      );\n    }\n\n    return dataSources;\n  }\n\n  add(cesiumProps: any): any {\n    const optimizedEntityCollection = this.getFreeEntitiesCollection();\n    if (optimizedEntityCollection === null) {\n      throw new Error('No more free entity collections');\n    }\n\n    const entityObject = {\n      position: cesiumProps.position !== undefined ? cesiumProps.position : undefined,\n      description: cesiumProps.description !== undefined ? cesiumProps.description : undefined,\n      orientation: cesiumProps.orientation !== undefined ? cesiumProps.orientation : undefined,\n      viewFrom: cesiumProps.viewFrom !== undefined ? cesiumProps.viewFrom : undefined,\n      [this.graphicsTypeName]: cesiumProps,\n    };\n\n    if (cesiumProps.name !== undefined) {\n      entityObject.name = cesiumProps.name;\n    }\n    if (cesiumProps.availability !== undefined) {\n      entityObject.availability = cesiumProps.availability;\n    }\n\n    return optimizedEntityCollection.add(entityObject);\n  }\n\n  update(entity: any, cesiumProps: any) {\n    this.suspendEntityCollection(entity);\n\n    if (entity.position instanceof Cesium.CallbackProperty) {\n      if (entity.position._isConstant) {\n        entity.position = cesiumProps.position;\n      }\n    }\n    entity.position = cesiumProps.position !== undefined ? cesiumProps.position : undefined;\n    entity.name = cesiumProps.name !== undefined ? cesiumProps.name : entity.name;\n    entity.description = cesiumProps.description !== undefined ? cesiumProps.description : entity.description;\n    entity.orientation = cesiumProps.orientation !== undefined ? cesiumProps.orientation : entity.orientation;\n    entity.viewFrom = cesiumProps.viewFrom !== undefined ? cesiumProps.viewFrom : entity.viewFrom;\n    entity.availability = cesiumProps.availability !== undefined ? cesiumProps.availability : cesiumProps.availability;\n\n    if (this._propsAssigner) {\n      this._propsAssigner(entity[this.graphicsTypeName], cesiumProps);\n    } else {\n      Object.assign(entity[this.graphicsTypeName], cesiumProps);\n    }\n  }\n\n  remove(entity: any) {\n    const optimizedEntityCollection = this.entityCollections.get(entity.entityCollection);\n    optimizedEntityCollection.remove(entity);\n  }\n\n  removeAll() {\n    this.entityCollections.forEach(entityCollection => {\n      entityCollection.removeAll();\n    });\n  }\n\n  setShow(showValue: boolean) {\n    this.entityCollections.forEach(entityCollection => {\n      entityCollection.setShow(showValue);\n    });\n  }\n\n  private suspendEntityCollection(entity: any) {\n    const id = entity.entityCollection;\n    if (!this.entityCollections.has(id)) {\n      throw new Error('No EntityCollection for entity.entityCollection');\n    }\n\n    const entityCollection = this.entityCollections.get(id);\n    entityCollection.suspend();\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing billboards.\n */\n@Injectable()\nexport class BillboardDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.billboard);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { BasicDrawerService } from '../basic-drawer/basic-drawer.service';\nimport { EntitiesDrawerOptions } from '../../../models/entities-drawer-options';\n\n/**\n *  This drawer is responsible for drawing czml dataSources.\n */\n@Injectable()\nexport class CzmlDrawerService extends BasicDrawerService {\n\n  czmlStream: any;\n\n  constructor(\n    private cesiumService: CesiumService,\n  ) {\n    super();\n  }\n\n\n  init(options?: EntitiesDrawerOptions) {\n    const dataSources = [];\n\n    this.czmlStream = new Cesium.CzmlDataSource('czml');\n\n    dataSources.push(this.czmlStream);\n\n    this.cesiumService.getViewer().dataSources.add(this.czmlStream);\n\n    return dataSources;\n  }\n\n  // returns the packet, provided by the stream\n  add(cesiumProps: any): any {\n\n    this.czmlStream.process(cesiumProps.czmlPacket);\n\n    return cesiumProps;\n  }\n\n  update(entity: any, cesiumProps: any) {\n    this.czmlStream.process(cesiumProps.czmlPacket);\n  }\n\n  remove(entity: any) {\n    this.czmlStream.entities.removeById(entity.acEntity.id);\n  }\n\n  removeAll() {\n    this.czmlStream.entities.removeAll();\n  }\n\n  setShow(showValue: boolean) {\n    this.czmlStream.entities.show = showValue;\n  }\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing ellipses.\n */\n@Injectable()\nexport class EllipseDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.ellipse);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing labels.\n */\n@Injectable()\nexport class LabelDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.label);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing points.\n */\n@Injectable()\nexport class PointDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.point);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing polygons.\n */\n@Injectable()\nexport class PolygonDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.polygon);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible of drawing polylines.\n */\n@Injectable()\nexport class PolylineDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.polyline);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\n\n/**\n *  This drawer is responsible of drawing polylines as primitives.\n *  This drawer is more efficient than PolylineDrawerService when drawing dynamic polylines.\n */\n@Injectable()\nexport class PolylinePrimitiveDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PolylineCollection, cesiumService);\n  }\n\n  add(cesiumProps: any) {\n    return this._cesiumCollection.add(this.withColorMaterial(cesiumProps));\n  }\n\n  update(cesiumObject: any, cesiumProps: any) {\n    if (cesiumProps.material instanceof Cesium.Color) {\n      if (cesiumObject.material && cesiumObject.material.uniforms &&\n        cesiumObject.material.uniforms.color instanceof Cesium.Color) {\n        this.withColorMaterial(cesiumProps);\n      } else if (!cesiumObject.material.uniforms.color.equals(cesiumProps.material)) {\n        cesiumObject.material.uniforms.color = cesiumProps.material;\n      }\n    }\n    super.update(cesiumObject, cesiumProps);\n  }\n\n  withColorMaterial(cesiumProps: any) {\n    if (cesiumProps.material instanceof Cesium.Color) {\n      const material = Cesium.Material.fromType('Color');\n      material.uniforms.color = cesiumProps.material;\n      cesiumProps.material = material;\n    }\n\n    return cesiumProps;\n  }\n}\n","import { KeyboardAction } from '../../models/ac-keyboard-action.enum';\nimport { KeyboardControlActionFn } from './keyboard-control.service';\nimport { CesiumService } from '../cesium/cesium.service';\n\nconst CAMERA_MOVEMENT_DEFAULT_FACTOR = 100.0;\nconst CAMERA_LOOK_DEFAULT_FACTOR = 0.01;\nconst CAMERA_TWIST_DEFAULT_FACTOR = 0.01;\nconst CAMERA_ROTATE_DEFAULT_FACTOR = 0.01;\n\nexport const PREDEFINED_KEYBOARD_ACTIONS: { [key: number]: KeyboardControlActionFn } = {\n  /**\n   * Moves the camera forward, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_FORWARD]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveForward(moveRate);\n  },\n  /**\n   * Moves the camera backward, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_BACKWARD]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveBackward(moveRate);\n  },\n  /**\n   * Moves the camera up, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_UP]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveUp(moveRate);\n  },\n  /**\n   * Moves the camera down, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_DOWN]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveDown(moveRate);\n  },\n  /**\n   * Moves the camera right, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_RIGHT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveRight(moveRate);\n  },\n  /**\n   * Moves the camera left, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_LEFT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveLeft(moveRate);\n  },\n  /**\n   * Changes the camera to look to the right, accepts a numeric parameter named `lookFactor` that controls\n   * the factor of looking, according to the camera current position.\n   */\n  [KeyboardAction.CAMERA_LOOK_RIGHT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const currentPosition = camera.positionCartographic;\n    const lookFactor = params.lookFactor || CAMERA_LOOK_DEFAULT_FACTOR;\n    camera.lookRight(currentPosition.latitude * lookFactor);\n  },\n  /**\n   * Changes the camera to look to the left, accepts a numeric parameter named `lookFactor` that controls\n   * the factor of looking, according to the camera current position.\n   */\n  [KeyboardAction.CAMERA_LOOK_LEFT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const currentPosition = camera.positionCartographic;\n    const lookFactor = params.lookFactor || CAMERA_LOOK_DEFAULT_FACTOR;\n    camera.lookLeft(currentPosition.latitude * lookFactor);\n  },\n  /**\n   * Changes the camera to look up, accepts a numeric parameter named `lookFactor` that controls\n   * the factor of looking, according to the camera current position.\n   */\n  [KeyboardAction.CAMERA_LOOK_UP]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const currentPosition = camera.positionCartographic;\n    const lookFactor = params.lookFactor || CAMERA_LOOK_DEFAULT_FACTOR;\n    camera.lookUp(currentPosition.longitude * (lookFactor * -1));\n  },\n  /**\n   * Changes the camera to look down, accepts a numeric parameter named `lookFactor` that controls\n   * the factor of looking, according to the camera current position.\n   */\n  [KeyboardAction.CAMERA_LOOK_DOWN]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const currentPosition = camera.positionCartographic;\n    const lookFactor = params.lookFactor || CAMERA_LOOK_DEFAULT_FACTOR;\n    camera.lookDown(currentPosition.longitude * (lookFactor * -1));\n  },\n  /**\n   * Twists the camera to the right, accepts a numeric parameter named `amount` that controls\n   * the twist amount\n   */\n  [KeyboardAction.CAMERA_TWIST_RIGHT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.amount || CAMERA_TWIST_DEFAULT_FACTOR;\n    camera.twistRight(lookFactor);\n  },\n  /**\n   * Twists the camera to the left, accepts a numeric parameter named `amount` that controls\n   * the twist amount\n   */\n  [KeyboardAction.CAMERA_TWIST_LEFT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.amount || CAMERA_TWIST_DEFAULT_FACTOR;\n    camera.twistLeft(lookFactor);\n  },\n  /**\n   * Rotates the camera to the right, accepts a numeric parameter named `angle` that controls\n   * the rotation angle\n   */\n  [KeyboardAction.CAMERA_ROTATE_RIGHT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.angle || CAMERA_ROTATE_DEFAULT_FACTOR;\n    camera.rotateRight(lookFactor);\n  },\n  /**\n   * Rotates the camera to the left, accepts a numeric parameter named `angle` that controls\n   * the rotation angle\n   */\n  [KeyboardAction.CAMERA_ROTATE_LEFT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.angle || CAMERA_ROTATE_DEFAULT_FACTOR;\n    camera.rotateLeft(lookFactor);\n  },\n  /**\n   * Rotates the camera upwards, accepts a numeric parameter named `angle` that controls\n   * the rotation angle\n   */\n  [KeyboardAction.CAMERA_ROTATE_UP]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.angle || CAMERA_ROTATE_DEFAULT_FACTOR;\n    camera.rotateUp(lookFactor);\n  },\n  /**\n   * Rotates the camera downwards, accepts a numeric parameter named `angle` that controls\n   * the rotation angle\n   */\n  [KeyboardAction.CAMERA_ROTATE_DOWN]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.angle || CAMERA_ROTATE_DEFAULT_FACTOR;\n    camera.rotateDown(lookFactor);\n  },\n  /**\n   * Zoom in into the current camera center position, accepts a numeric parameter named\n   * `amount` that controls the amount of zoom in meters.\n   */\n  [KeyboardAction.CAMERA_ZOOM_IN]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const amount = params.amount;\n    camera.zoomIn(amount);\n  },\n  /**\n   * Zoom out from the current camera center position, accepts a numeric parameter named\n   * `amount` that controls the amount of zoom in meters.\n   */\n  [KeyboardAction.CAMERA_ZOOM_OUT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const amount = params.amount;\n    camera.zoomOut(amount);\n  },\n};\n","import { isNumber } from 'util';\nimport { Inject, Injectable, NgZone } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { KeyboardAction } from '../../models/ac-keyboard-action.enum';\nimport { CesiumService } from '../cesium/cesium.service';\nimport { PREDEFINED_KEYBOARD_ACTIONS } from './predefined-actions';\n\nexport type KeyboardControlActionFn = (cesiumService: CesiumService, params: any, event: KeyboardEvent) => boolean | void;\nexport type KeyboardControlValidationFn = (cesiumService: CesiumService, params: any, event: KeyboardEvent) => boolean;\nexport type KeyboardControlDoneFn = (cesiumService: CesiumService, event: KeyboardEvent) => boolean;\n\nexport interface KeyboardControlParams {\n  action: KeyboardAction | KeyboardControlActionFn;\n  validation?: KeyboardControlValidationFn;\n  params?: { [paramName: string]: any };\n  done?: KeyboardControlDoneFn;\n}\n\nexport interface KeyboardControlDefinition {\n  [keyboardCharCode: string]: KeyboardControlParams;\n}\n\nenum KeyEventState {\n  IGNORED,\n  NOT_PRESSED,\n  PRESSED,\n}\n\ninterface ActiveDefinition {\n  keyboardEvent: KeyboardEvent;\n  state: KeyEventState;\n  action: KeyboardControlParams;\n}\n\n/**\n *  Service that manages keyboard keys and execute actions per request.\n *  Inject the keyboard control service into any layer, under your `ac-map` component,\n *  And defined you keyboard handlers using `setKeyboardControls`.\n *\n * <caption>Simple Example</caption>\n * ```typescript\n * Component({\n *   selector: 'keyboard-control-layer',\n *   template: '',\n * })\n * export class KeyboardControlLayerComponent implements OnInit, OnDestroy {\n *   constructor(private keyboardControlService: KeyboardControlService) {}\n *\n *   ngOnInit() {\n *     this.keyboardControlService.setKeyboardControls({\n *       W: { action: KeyboardAction.CAMERA_FORWARD },\n *       S: { action: KeyboardAction.CAMERA_BACKWARD },\n *       D: { action: KeyboardAction.CAMERA_RIGHT },\n *       A: { action: KeyboardAction.CAMERA_LEFT },\n *     });\n *    }\n *\n *   ngOnDestroy() {\n *     this.keyboardControlService.removeKeyboardControls();\n *   }\n * }\n * ```\n *\n * <caption>Advanced Example</caption>\n * ```typescript\n * Component({\n *   selector: 'keyboard-control-layer',\n *   template: '',\n * })\n * export class KeyboardControlLayerComponent implements OnInit, OnDestroy {\n *   constructor(private keyboardControlService: KeyboardControlService) {}\n *\n *   private myCustomValue = 10;\n *\n *   ngOnInit() {\n *     this.keyboardControlService.setKeyboardControls({\n *       W: {\n *          action: KeyboardAction.CAMERA_FORWARD,\n *          validate: (camera, scene, params, key) => {\n *            // Replace `checkCamera` you with your validation logic\n *            if (checkCamera(camera) || params.customParams === true) {\n *              return true;\n *            }\n *\n *            return false;\n *          },\n *          params: () => {\n *            return {\n *              myValue: this.myCustomValue,\n *            };\n *          },\n *        }\n *     });\n *    }\n *\n *   ngOnDestroy() {\n *     this.keyboardControlService.removeKeyboardControls();\n *   }\n * }\n * ```\n * <b>Predefined keyboard actions:</b>\n * + `KeyboardAction.CAMERA_FORWARD` - Moves the camera forward, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_BACKWARD` - Moves the camera backward, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_UP` - Moves the camera up, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_DOWN` - Moves the camera down, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_RIGHT` - Moves the camera right, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_LEFT` - Moves the camera left, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_LOOK_RIGHT` - Changes the camera to look to the right, accepts a numeric parameter named `lookFactor` that\n * controls the factor of looking, according to the camera current position.\n * + `KeyboardAction.CAMERA_LOOK_LEFT` - Changes the camera to look to the left, accepts a numeric parameter named `lookFactor` that\n * controls the factor of looking, according to the camera current position.\n * + `KeyboardAction.CAMERA_LOOK_UP` - Changes the camera to look up, accepts a numeric parameter named `lookFactor` that controls\n * the factor of looking, according to the camera current position.\n * + `KeyboardAction.CAMERA_LOOK_DOWN` - Changes the camera to look down, accepts a numeric parameter named `lookFactor` that controls\n * the factor of looking, according to the camera current position.\n * + `KeyboardAction.CAMERA_TWIST_RIGHT` - Twists the camera to the right, accepts a numeric parameter named `amount` that controls\n * the twist amount\n * + `KeyboardAction.CAMERA_TWIST_LEFT` - Twists the camera to the left, accepts a numeric parameter named `amount` that controls\n * the twist amount\n * + `KeyboardAction.CAMERA_ROTATE_RIGHT` - Rotates the camera to the right, accepts a numeric parameter named `angle` that controls\n * the rotation angle\n * + `KeyboardAction.CAMERA_ROTATE_LEFT` - Rotates the camera to the left, accepts a numeric parameter named `angle` that controls\n * the rotation angle\n * + `KeyboardAction.CAMERA_ROTATE_UP` - Rotates the camera upwards, accepts a numeric parameter named `angle` that controls\n * the rotation angle\n * + `KeyboardAction.CAMERA_ROTATE_DOWN` - Rotates the camera downwards, accepts a numeric parameter named `angle` that controls\n * the rotation angle\n * + `KeyboardAction.CAMERA_ZOOM_IN` - Zoom in into the current camera center position, accepts a numeric parameter named\n * `amount` that controls the amount of zoom in meters.\n * + `KeyboardAction.CAMERA_ZOOM_OUT` -  Zoom out from the current camera center position, accepts a numeric parameter named\n * `amount` that controls the amount of zoom in meters.\n */\n@Injectable()\nexport class KeyboardControlService {\n  private _currentDefinitions: KeyboardControlDefinition = null;\n  private _activeDefinitions: { [definitionKey: string]: ActiveDefinition } = {};\n  private _keyMappingFn: Function = this.defaultKeyMappingFn;\n\n  /**\n   * Creats the keyboard control service.\n   */\n  constructor(private ngZone: NgZone, private cesiumService: CesiumService, @Inject(DOCUMENT) private document: any) {\n  }\n\n  /**\n   * Initializes the keyboard control service.\n   */\n  init() {\n    const canvas = this.cesiumService.getCanvas();\n    canvas.addEventListener('click', () => {\n      canvas.focus();\n    });\n\n    this.handleKeydown = this.handleKeydown.bind(this);\n    this.handleKeyup = this.handleKeyup.bind(this);\n    this.handleTick = this.handleTick.bind(this);\n  }\n\n  /**\n   * Sets the current map keyboard control definitions.\n   * The definitions is a key mapping between a key string and a KeyboardControlDefinition:\n   * - `action` is a predefine action from `KeyboardAction` enum, or a custom method:\n   * `(camera, scene, params, key) => boolean | void` - returning false will cancel the current keydown.\n   * - `validation` is a method that validates if the event should occur or not (`camera, scene, params, key`)\n   * - `params` is an object (or function that returns object) that will be passed into the action executor.\n   * - `done` is a function that will be triggered when `keyup` is triggered.\n   * @param definitions Keyboard Control Definition\n   * @param keyMappingFn - Mapping function for custom keys\n   * @param outsideOfAngularZone - if key down events will run outside of angular zone.\n   */\n  setKeyboardControls(definitions: KeyboardControlDefinition,\n                      keyMappingFn?: (keyEvent: KeyboardEvent) => string,\n                      outsideOfAngularZone = false) {\n    if (!definitions) {\n      return this.removeKeyboardControls();\n    }\n\n    if (!this._currentDefinitions) {\n      this.registerEvents(outsideOfAngularZone);\n    }\n\n    this._currentDefinitions = definitions;\n    this._keyMappingFn = keyMappingFn || this.defaultKeyMappingFn;\n\n    Object.keys(this._currentDefinitions).forEach(key => {\n      this._activeDefinitions[key] = {\n        state: KeyEventState.NOT_PRESSED,\n        action: null,\n        keyboardEvent: null,\n      };\n    });\n  }\n\n  /**\n   * Removes the current set of keyboard control items, and unregister from map events.\n   */\n  removeKeyboardControls() {\n    this.unregisterEvents();\n    this._currentDefinitions = null;\n  }\n\n  /**\n   * Returns the current action that handles `char` key string, or `null` if not exists\n   */\n  private getAction(char: string): KeyboardControlParams {\n    return this._currentDefinitions[char] || null;\n  }\n\n  /**\n   * The default `defaultKeyMappingFn` that maps `KeyboardEvent` into a key string.\n   */\n  private defaultKeyMappingFn(keyEvent: KeyboardEvent): string {\n    return String.fromCharCode(keyEvent.keyCode);\n  }\n\n  /**\n   * document's `keydown` event handler\n   */\n  private handleKeydown(e: KeyboardEvent) {\n    const char = this._keyMappingFn(e);\n    const action = this.getAction(char);\n\n    if (action) {\n      const actionState = this._activeDefinitions[char];\n\n      if (actionState.state !== KeyEventState.IGNORED) {\n        let execute = true;\n\n        const params = this.getParams(action.params, e);\n\n        if (action.validation) {\n          execute = action.validation(this.cesiumService, params, e);\n        }\n\n        if (execute === true) {\n          this._activeDefinitions[char] = {\n            state: KeyEventState.PRESSED,\n            action,\n            keyboardEvent: e,\n          };\n        }\n      }\n    }\n  }\n\n  /**\n   * document's `keyup` event handler\n   */\n  private handleKeyup(e: KeyboardEvent) {\n    const char = this._keyMappingFn(e);\n    const action = this.getAction(char);\n\n    if (action) {\n      this._activeDefinitions[char] = {\n        state: KeyEventState.NOT_PRESSED,\n        action: null,\n        keyboardEvent: e,\n      };\n\n      if (action.done && typeof action.done === 'function') {\n        action.done(this.cesiumService, e);\n      }\n    }\n  }\n\n  /**\n   * `tick` event handler that triggered by Cesium render loop\n   */\n  private handleTick() {\n    const activeKeys = Object.keys(this._activeDefinitions);\n\n    activeKeys.forEach(key => {\n      const actionState = this._activeDefinitions[key];\n\n      if (actionState !== null && actionState.action !== null && actionState.state === KeyEventState.PRESSED) {\n        this.executeAction(actionState.action, key, actionState.keyboardEvent);\n      }\n    });\n  }\n\n  /**\n   *\n   * Params resolve function, returns object.\n   * In case of params function, executes it and returns it's return value.\n   *\n   */\n  private getParams(paramsDef: any, keyboardEvent: KeyboardEvent): { [paramName: string]: any } {\n    if (!paramsDef) {\n      return {};\n    }\n\n    if (typeof paramsDef === 'function') {\n      return paramsDef(this.cesiumService, keyboardEvent);\n    }\n\n    return paramsDef;\n  }\n\n  /**\n   *\n   * Executes a given `KeyboardControlParams` object.\n   *\n   */\n  private executeAction(execution: KeyboardControlParams, key: string, keyboardEvent: KeyboardEvent) {\n    if (!this._currentDefinitions) {\n      return;\n    }\n\n    const params = this.getParams(execution.params, keyboardEvent);\n\n    if (isNumber(execution.action)) {\n      const predefinedAction = PREDEFINED_KEYBOARD_ACTIONS[execution.action as number];\n\n      if (predefinedAction) {\n        predefinedAction(this.cesiumService, params, keyboardEvent);\n      }\n    } else if (typeof execution.action === 'function') {\n      const shouldCancelEvent = execution.action(this.cesiumService, params, keyboardEvent);\n\n      if (shouldCancelEvent === false) {\n        this._activeDefinitions[key] = {\n          state: KeyEventState.IGNORED,\n          action: null,\n          keyboardEvent: null,\n        };\n      }\n    }\n  }\n\n  /**\n   * Registers to keydown, keyup of `document`, and `tick` of Cesium.\n   */\n  private registerEvents(outsideOfAngularZone: boolean) {\n    const registerToEvents = () => {\n      this.document.addEventListener('keydown', this.handleKeydown);\n      this.document.addEventListener('keyup', this.handleKeyup);\n      this.cesiumService.getViewer().clock.onTick.addEventListener(this.handleTick);\n    };\n\n    if (outsideOfAngularZone) {\n      this.ngZone.runOutsideAngular(registerToEvents);\n    } else {\n      registerToEvents();\n    }\n  }\n\n  /**\n   * Unregisters to keydown, keyup of `document`, and `tick` of Cesium.\n   */\n  private unregisterEvents() {\n    this.document.removeEventListener('keydown', this.handleKeydown);\n    this.document.removeEventListener('keyup', this.handleKeyup);\n    this.cesiumService.getViewer().clock.onTick.removeEventListener(this.handleTick);\n  }\n}\n","/**\n * Action to do on entity\n */\nexport enum ActionType {\n  ADD_UPDATE,\n  DELETE\n}\n","import { Observable, Subscriber } from 'rxjs';\nimport { CesiumEvent } from '../consts/cesium-event.enum';\nimport { CesiumEventModifier } from '../consts/cesium-event-modifier.enum';\n\nexport class CesiumPureEventObserver {\n  public observer: Observable<any>;\n\n  constructor(protected event: CesiumEvent, protected modifier: CesiumEventModifier) {\n  }\n\n  init(eventsHandler: any): Observable<any> {\n    this.observer = Observable.create((observer: Subscriber<any>) => {\n        eventsHandler.setInputAction((movement: any) => {\n          if (movement.position) {\n            movement.startPosition = movement.position;\n            movement.endPosition = movement.position;\n          }\n          observer.next(movement);\n        }, this.event, this.modifier);\n      }\n    );\n    return this.observer;\n  }\n}\n","import { ConnectableObservable, of as observableOf } from 'rxjs';\n\nimport { delay, mergeMap, publish, takeUntil } from 'rxjs/operators';\nimport { CesiumPureEventObserver } from './cesium-pure-event-observer';\nimport { CesiumEvent } from '../consts/cesium-event.enum';\nimport { CesiumEventModifier } from '../consts/cesium-event-modifier.enum';\nimport { CesiumEventBuilder } from '../cesium-event-builder';\n\nexport class CesiumLongPressObserver extends CesiumPureEventObserver {\n  public static LONG_PRESS_EVENTS_DURATION = 250;\n\n  constructor(protected event: CesiumEvent,\n              protected modifier: CesiumEventModifier,\n              private eventFactory: CesiumEventBuilder) {\n    super(event, modifier);\n  }\n\n  init(): ConnectableObservable<any> {\n    let startEvent: CesiumEvent;\n    let stopEvent: CesiumEvent;\n\n    if (this.event === CesiumEvent.LONG_LEFT_PRESS) {\n      startEvent = CesiumEvent.LEFT_DOWN;\n      stopEvent = CesiumEvent.LEFT_UP;\n    } else if (this.event === CesiumEvent.LONG_RIGHT_PRESS) {\n      startEvent = CesiumEvent.RIGHT_DOWN;\n      stopEvent = CesiumEvent.RIGHT_UP;\n    } else if (this.event === CesiumEvent.LONG_MIDDLE_PRESS) {\n      startEvent = CesiumEvent.MIDDLE_DOWN;\n      stopEvent = CesiumEvent.MIDDLE_UP;\n    }\n\n    const startEventObservable = this.eventFactory.get(startEvent, this.modifier);\n    const stopEventObservable = this.eventFactory.get(stopEvent, this.modifier);\n\n    // publish for preventing side effect\n    const longPressObservable = publish()(startEventObservable.pipe(\n      mergeMap((e) => observableOf(e).pipe(\n        delay(CesiumLongPressObserver.LONG_PRESS_EVENTS_DURATION),\n        takeUntil(stopEventObservable))),\n    ));\n    return longPressObservable;\n  }\n}\n","import { publish } from 'rxjs/operators';\nimport { CesiumService } from '../cesium/cesium.service';\nimport { CesiumEvent } from './consts/cesium-event.enum';\nimport { CesiumEventModifier } from './consts/cesium-event-modifier.enum';\nimport { Injectable } from '@angular/core';\nimport { CesiumPureEventObserver } from './event-observers/cesium-pure-event-observer';\nimport { CesiumLongPressObserver } from './event-observers/cesium-long-press-observer';\nimport { ConnectableObservable } from 'rxjs';\n\n@Injectable()\nexport class CesiumEventBuilder {\n\n  constructor(private cesiumService: CesiumService) {\n  }\n\n  public static longPressEvents: Set<CesiumEvent> = new Set([\n    CesiumEvent.LONG_LEFT_PRESS,\n    CesiumEvent.LONG_RIGHT_PRESS,\n    CesiumEvent.LONG_MIDDLE_PRESS\n  ]);\n\n  private eventsHandler: any;\n  private cesiumEventsObservables = new Map<string, ConnectableObservable<any>>();\n\n  public static getEventFullName(event: CesiumEvent, modifier?: CesiumEventModifier): string {\n    if (modifier) {\n      return `${event}_${modifier}`;\n    } else {\n      return event.toString();\n    }\n  }\n\n  init() {\n    this.eventsHandler = this.cesiumService.getViewer().screenSpaceEventHandler;\n  }\n\n  get(event: CesiumEvent, modifier?: CesiumEventModifier): ConnectableObservable<any> {\n    const eventName = CesiumEventBuilder.getEventFullName(event, modifier);\n    if (this.cesiumEventsObservables.has(eventName)) {\n      return this.cesiumEventsObservables.get(eventName);\n    } else {\n      const eventObserver = this.createCesiumEventObservable(event, modifier);\n      this.cesiumEventsObservables.set(eventName, eventObserver);\n      return eventObserver;\n    }\n  }\n\n  private createCesiumEventObservable(event: CesiumEvent, modifier?: CesiumEventModifier): ConnectableObservable<any> {\n    let cesiumEventObservable: ConnectableObservable<any>;\n    if (CesiumEventBuilder.longPressEvents.has(event)) {\n      cesiumEventObservable = this.createSpecialCesiumEventObservable(event, modifier);\n    } else {\n      cesiumEventObservable = publish()(new CesiumPureEventObserver(event, modifier).init(this.eventsHandler));\n    }\n    cesiumEventObservable.connect();\n    return cesiumEventObservable;\n  }\n\n  private createSpecialCesiumEventObservable(event: CesiumEvent, modifier: CesiumEventModifier): ConnectableObservable<any> {\n    // could support more events if needed\n    return new CesiumLongPressObserver(event, modifier, this).init();\n  }\n}\n\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { AcEntity } from '../../models/ac-entity';\nimport { Subject } from 'rxjs';\nimport { EventResult, Movement } from '../map-events-mananger/map-events-manager';\n\n/**\n * Service for solving plonter.\n * Used by map-event-manager and plonter context component\n */\n@Injectable()\nexport class PlonterService {\n  private _plonterShown: boolean;\n  private _entitesToPlonter: AcEntity[] = [];\n  private _plonterObserver: Subject<EventResult>;\n  private _eventResult: EventResult;\n  private _plonterChangeNotifier: EventEmitter<any> = new EventEmitter();\n\n  constructor() {\n    this._plonterObserver = new Subject<EventResult>();\n  }\n\n  get plonterChangeNotifier(): EventEmitter<any> {\n    return this._plonterChangeNotifier;\n  }\n\n  get plonterShown(): boolean {\n    return this._plonterShown;\n  }\n\n  get entitesToPlonter(): AcEntity[] {\n    return this._entitesToPlonter;\n  }\n\n  get plonterClickPosition(): Movement {\n    return this._eventResult.movement;\n  }\n\n  plonterIt(eventResult: EventResult) {\n    this._eventResult = eventResult;\n    this._entitesToPlonter = eventResult.entities;\n    this._plonterShown = true;\n\n    this._plonterChangeNotifier.emit();\n    return this._plonterObserver;\n  }\n\n  resolvePlonter(entity: AcEntity) {\n    this._plonterShown = false;\n    this._eventResult.entities = [entity];\n\n    this._plonterChangeNotifier.emit();\n    this._plonterObserver.next(this._eventResult);\n  }\n}\n","export const UtilsService = {\n  unique: (array: any[]): any[] => {\n    return array.reduce((accumulator, currentValue) => {\n      if (accumulator.indexOf(currentValue) < 0) {\n        accumulator.push(currentValue);\n      }\n      return accumulator;\n    }, []);\n  }\n};\n\n","import { CesiumEvent } from '../consts/cesium-event.enum';\n\nexport class CesiumDragDropHelper {\n\n  public static dragEvents: Set<CesiumEvent> = new Set([\n    CesiumEvent.LEFT_CLICK_DRAG,\n    CesiumEvent.RIGHT_CLICK_DRAG,\n    CesiumEvent.MIDDLE_CLICK_DRAG\n  ]);\n\n\n  public static getDragEventTypes(dragEvent: CesiumEvent) {\n    let mouseDownEvent;\n    let mouseUpEvent;\n    if (dragEvent === CesiumEvent.LEFT_CLICK_DRAG) {\n      mouseDownEvent = CesiumEvent.LEFT_DOWN;\n      mouseUpEvent = CesiumEvent.LEFT_UP;\n    } else if (dragEvent === CesiumEvent.RIGHT_CLICK_DRAG) {\n      mouseDownEvent = CesiumEvent.RIGHT_DOWN;\n      mouseUpEvent = CesiumEvent.RIGHT_UP;\n    } else if (dragEvent === CesiumEvent.MIDDLE_CLICK_DRAG) {\n      mouseDownEvent = CesiumEvent.MIDDLE_DOWN;\n      mouseUpEvent = CesiumEvent.MIDDLE_UP;\n    }\n\n    return {mouseDownEvent, mouseUpEvent};\n  }\n}\n","import { merge, Observable, of as observableOf, Subject } from 'rxjs';\n\nimport { filter, map, mergeMap, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { CesiumService } from '../cesium/cesium.service';\nimport { CesiumEventBuilder } from './cesium-event-builder';\nimport { EventRegistrationInput, PickConfiguration } from './event-registration-input';\nimport { DisposableObservable } from './disposable-observable';\nimport { PickOptions } from './consts/pickOptions.enum';\nimport { CesiumEvent } from './consts/cesium-event.enum';\nimport { PlonterService } from '../plonter/plonter.service';\nimport { UtilsService } from '../../utils/utils.service';\nimport { CesiumDragDropHelper } from './event-observers/cesium-drag-drop-helper';\n\nclass Registration {\n  constructor(public observable: Observable<EventResult>,\n              public  stopper: Subject<any>,\n              public  priority: number,\n              public  isPaused: boolean) {\n  }\n}\n\n/**\n * Returns screen position, drag boolean for drag events only\n */\nexport interface Movement {\n  startPosition: { x: number, y: number };\n  endPosition: { x: number, y: number };\n  drop?: boolean;\n}\n\nexport interface EventResult {\n  movement: Movement;\n  cesiumEntities: any[];\n  entities: any[];\n}\n\n/**\n * Manages all map events. Notice events will run outside of Angular zone.\n * Provided by `<ac-map/>` component there for could be injected at any component under `<ac-map/>` hierarchy\n * or from the `<ac-map/>` component reference `acMapComponent.getMapEventsManager()`\n *\n * __usage:__\n * ```\n * MapEventsManagerService.register({event, modifier, priority, entityType, pickOption}).subscribe()\n * ```\n * __param:__ {CesiumEvent} event\n * __param:__ {CesiumEventModifier} modifier\n * __param:__ priority - the bigger the number the bigger the priority. default : 0.\n * __param:__ entityType - entity type class that you are interested like (Track). the class must extends AcEntity\n * __param:__ pickOption - self explained\n */\n@Injectable()\nexport class MapEventsManagerService {\n\n  private scene: any;\n  private eventRegistrations = new Map<string, Registration[]>();\n\n  constructor(private cesiumService: CesiumService,\n              private eventBuilder: CesiumEventBuilder,\n              private plonterService: PlonterService) {\n  }\n\n  init() {\n    this.eventBuilder.init();\n    this.scene = this.cesiumService.getScene();\n  }\n\n  /**\n   * Register to map event\n   * @param input Event Registration Input\n   *\n   * @returns DisposableObservable<EventResult>\n   */\n  register(input: EventRegistrationInput): DisposableObservable<EventResult> {\n    if (this.scene === undefined) {\n      throw new Error('CesiumService has not been initialized yet - MapEventsManagerService must be injected  under ac-map');\n    }\n\n    input.pick = input.pick || PickOptions.NO_PICK;\n    input.priority = input.priority || 0;\n    input.pickConfig = input.pickConfig || {};\n\n    if (input.entityType && input.pick === PickOptions.NO_PICK) {\n      throw new Error('MapEventsManagerService: can\\'t register an event ' +\n        'with entityType and PickOptions.NO_PICK - It doesn\\'t make sense ');\n    }\n\n    const eventName = CesiumEventBuilder.getEventFullName(input.event, input.modifier);\n\n    if (!this.eventRegistrations.has(eventName)) {\n      this.eventRegistrations.set(eventName, []);\n    }\n\n    const eventRegistration = this.createEventRegistration(input);\n    const registrationObservable: any = eventRegistration.observable;\n    registrationObservable.dispose = () => this.disposeObservable(eventRegistration, eventName);\n    this.eventRegistrations.get(eventName).push(eventRegistration);\n\n    this.sortRegistrationsByPriority(eventName);\n    return <DisposableObservable<EventResult>>registrationObservable;\n  }\n\n  private disposeObservable(eventRegistration: Registration, eventName: string) {\n    eventRegistration.stopper.next(1);\n    const registrations = this.eventRegistrations.get(eventName);\n    const index = registrations.indexOf(eventRegistration);\n    if (index !== -1) {\n      registrations.splice(index, 1);\n    }\n    this.sortRegistrationsByPriority(eventName);\n  }\n\n  private sortRegistrationsByPriority(eventName: string) {\n    const registrations = this.eventRegistrations.get(eventName);\n    registrations.sort((a, b) => b.priority - a.priority);\n    if (registrations.length === 0) {\n      return;\n    }\n\n    // Active registrations by priority\n    const currentPriority = registrations[0].priority;\n    registrations.forEach((registration) => {\n      registration.isPaused = registration.priority < currentPriority;\n    });\n\n  }\n\n  private createEventRegistration({\n                                    event,\n                                    modifier,\n                                    entityType,\n                                    pick: pickOption,\n                                    priority,\n                                    pickFilter,\n                                    pickConfig,\n                                  }: EventRegistrationInput): Registration {\n    const cesiumEventObservable = this.eventBuilder.get(event, modifier);\n    const stopper = new Subject<any>();\n\n    const registration = new Registration(undefined, stopper, priority, false);\n    let observable: Observable<EventResult>;\n\n    if (!CesiumDragDropHelper.dragEvents.has(event)) {\n      observable = cesiumEventObservable.pipe(\n        filter(() => !registration.isPaused),\n        map((movement) => this.triggerPick(movement, pickOption, pickConfig)),\n        filter((result) => result.cesiumEntities !== null || entityType === undefined),\n        map((picksAndMovement) => this.addEntities(picksAndMovement, entityType, pickOption, pickFilter)),\n        filter((result) => result.entities !== null || (entityType === undefined && !pickFilter)),\n        switchMap((entitiesAndMovement) => this.plonter(entitiesAndMovement, pickOption)),\n        takeUntil(stopper));\n    } else {\n      observable = this.createDragEvent({\n        event,\n        modifier,\n        entityType,\n        pick: pickOption,\n        priority,\n        pickFilter,\n        pickConfig\n      }).pipe(takeUntil(stopper));\n    }\n\n    registration.observable = observable;\n    return registration;\n  }\n\n  private createDragEvent({\n                            event,\n                            modifier,\n                            entityType,\n                            pick: pickOption,\n                            priority,\n                            pickFilter,\n                            pickConfig,\n                          }: EventRegistrationInput): Observable<EventResult> {\n    const { mouseDownEvent, mouseUpEvent } = CesiumDragDropHelper.getDragEventTypes(event);\n\n    const mouseUpObservable = this.eventBuilder.get(mouseUpEvent);\n    const mouseMoveObservable = this.eventBuilder.get(CesiumEvent.MOUSE_MOVE);\n\n    const mouseDownRegistration = this.createEventRegistration({\n      event: mouseDownEvent,\n      modifier,\n      entityType,\n      pick: pickOption,\n      priority,\n      pickFilter,\n      pickConfig,\n    });\n\n    const dropSubject = new Subject<EventResult>();\n    const dragObserver = mouseDownRegistration.observable.pipe(mergeMap(e => {\n      let lastMove: any = null;\n      const dragStartPositionX = e.movement.startPosition.x;\n      const dragStartPositionY = e.movement.startPosition.y;\n      return mouseMoveObservable.pipe(map((movement) => {\n        lastMove = {\n          movement: {\n            drop: false,\n            startPosition: {\n              x: dragStartPositionX,\n              y: dragStartPositionY,\n            },\n            endPosition: movement.endPosition,\n          },\n          entities: e.entities,\n          cesiumEntities: e.cesiumEntities\n        };\n        return lastMove;\n      }), takeUntil(mouseUpObservable), tap({\n        complete: () => {\n          // On complete\n          if (lastMove) {\n            const dropEvent = Object.assign({}, lastMove);\n            dropEvent.movement.drop = true;\n            dropSubject.next(dropEvent);\n          }\n        }\n      }));\n    }));\n\n    return merge(dragObserver, dropSubject);\n\n  }\n\n  private triggerPick(movement: any, pickOptions: PickOptions, pickConfig: PickConfiguration) {\n    let picks: any = [];\n    switch (pickOptions) {\n      case PickOptions.PICK_ONE:\n      case PickOptions.PICK_ALL:\n        picks = this.scene.drillPick(movement.endPosition, pickConfig.drillPickLimit, pickConfig.pickWidth, pickConfig.pickHeight);\n        picks = picks.length === 0 ? null : picks;\n        break;\n      case PickOptions.PICK_FIRST:\n        const pick = this.scene.pick(movement.endPosition, pickConfig.pickWidth, pickConfig.pickHeight);\n        picks = pick === undefined ? null : [pick];\n        break;\n      case PickOptions.NO_PICK:\n        break;\n      default:\n        break;\n    }\n\n    // Picks can be cesium entity or cesium primitive\n    if (picks) {\n      picks = picks.map((pick: any) => pick.id && pick.id instanceof Cesium.Entity ? pick.id : pick.primitive);\n    }\n\n    return { movement: movement, cesiumEntities: picks };\n  }\n\n  private addEntities(picksAndMovement: any, entityType: any, pickOption: PickOptions, pickFilter?: (any) => boolean): EventResult {\n\n    if (picksAndMovement.cesiumEntities === null) {\n      picksAndMovement.entities = null;\n      return picksAndMovement;\n    }\n    let entities = [];\n    if (pickOption !== PickOptions.NO_PICK) {\n      if (entityType) {\n        entities = picksAndMovement.cesiumEntities.map((pick: any) => pick.acEntity).filter((acEntity: any) => {\n          return acEntity && acEntity instanceof entityType;\n        });\n      } else {\n        entities = picksAndMovement.cesiumEntities.map((pick: any) => pick.acEntity);\n      }\n\n      entities = UtilsService.unique(entities);\n      entities = (pickFilter && entities) ? entities.filter(pickFilter) : entities;\n      if (entities.length === 0) {\n        entities = null;\n      }\n    }\n\n    picksAndMovement.entities = entities;\n\n    return picksAndMovement;\n  }\n\n  private plonter(entitiesAndMovement: EventResult, pickOption: PickOptions): Observable<EventResult> {\n    if (pickOption === PickOptions.PICK_ONE && entitiesAndMovement.entities !== null && entitiesAndMovement.entities.length > 1) {\n      return this.plonterService.plonterIt(entitiesAndMovement);\n    } else {\n      return observableOf(entitiesAndMovement);\n    }\n  }\n}\n","import { CesiumService } from '../cesium/cesium.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MapLayersService {\n\n  private layersDataSources: any[] = [];\n\n  constructor(private cesiumService: CesiumService) {\n\n  }\n\n  registerLayerDataSources(dataSources: any[], zIndex: number) {\n    dataSources.forEach(ds => {\n      ds.zIndex = zIndex;\n      this.layersDataSources.push(ds);\n    });\n  }\n\n  drawAllLayers() {\n    this.layersDataSources.sort((a, b) => a.zIndex - b.zIndex);\n\n    this.layersDataSources.forEach((dataSource) => {\n      this.cesiumService.getViewer().dataSources.add(dataSource);\n    });\n  }\n\n  updateAndRefresh(dataSources: any[], newZIndex: number) {\n    if (dataSources && dataSources.length) {\n      dataSources.forEach((ds) => {\n        const index = this.layersDataSources.indexOf(ds);\n        if (index !== -1) {\n          this.layersDataSources[index].zIndex = newZIndex;\n        }\n      });\n\n      this.cesiumService.getViewer().dataSources.removeAll();\n      this.drawAllLayers();\n    }\n  }\n\n  removeDataSources(dataSources: any[]) {\n    dataSources.forEach(ds => {\n      const index = this.layersDataSources.indexOf(ds);\n      if (index !== -1) {\n        this.layersDataSources.splice(index, 1);\n        this.cesiumService.getViewer().dataSources.remove(ds, true);\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AcMapComponent } from '../../components/ac-map/ac-map.component';\n\n/**\n *  The service manages `ac-map` instances. `ac-map` register itself to this service.\n *  This allows retrieval of maps provided services outside of `ac-map` scope.\n */\n@Injectable()\nexport class MapsManagerService {\n  private defaultIdCounter = 0;\n  private _Maps = new Map<string, AcMapComponent>();\n  private firstMap: any;\n  private eventRemoveCallbacks: Function[] = [];\n\n  constructor() {\n  }\n\n  getMap(id?: string): AcMapComponent | undefined {\n    if (!id) {\n      return this.firstMap;\n    }\n    return this._Maps.get(id);\n  }\n\n  _registerMap(id: string, acMap: AcMapComponent): string {\n    if (!this.firstMap) {\n      this.firstMap = acMap;\n    }\n\n    const mapId = id ? id : this.generateDefaultId();\n    if (this._Maps.has(mapId)) {\n      throw new Error(`Map with id: ${mapId} already exist`);\n    }\n    this._Maps.set(mapId, acMap);\n    return mapId;\n  }\n\n  _removeMapById(id: string) {\n    if (this._Maps.has(id) && this._Maps.get(id) === this.firstMap) {\n      const iter = this._Maps.values();\n      iter.next(); // skip firstMap\n      this.firstMap = iter.next().value;\n    }\n    return this._Maps.delete(id);\n  }\n\n  private generateDefaultId(): string {\n    this.defaultIdCounter++;\n    return 'default-map-id-' + this.defaultIdCounter;\n  }\n\n  /**\n   * Binds multiple 2D map's cameras together.\n   * @param mapsConfiguration - binding options.\n   * mapId - the id of the maps to bind.\n   * sensitivity - the amount the camera position should change in order to sync other maps.\n   * bindZoom - should bind zoom level\n   */\n  sync2DMapsCameras(mapsConfiguration: { id: string; sensitivity?: number; bindZoom?: boolean }[]) {\n    const DEFAULT_SENSITIVITY = 0.01;\n    this.unsyncMapsCameras();\n    const maps: { map: AcMapComponent; options?: { sensitivity?: number; bindZoom?: boolean } }[] = mapsConfiguration.map(config => {\n      const map = this.getMap(config.id);\n      if (!map) {\n        throw new Error(`Couldn't find map with id: ${config.id}`);\n      }\n\n      return {map, options: {sensitivity: config.sensitivity, bindZoom: config.bindZoom}};\n    });\n\n    maps.forEach(masterMapConfig => {\n      const masterMap = masterMapConfig.map;\n      const options = masterMapConfig.options;\n      const masterCamera = masterMap.getCameraService().getCamera();\n      const masterCameraCartographic = masterCamera.positionCartographic;\n      masterCamera.percentageChanged = options.sensitivity || DEFAULT_SENSITIVITY;\n      const removeCallback = masterCamera.changed.addEventListener(() => {\n        maps.forEach(slaveMapConfig => {\n          const slaveMap = slaveMapConfig.map;\n          const slaveMapOptions = slaveMapConfig.options;\n          if (slaveMap === masterMap) {\n            return;\n          }\n\n          const slaveCamera = slaveMap.getCameraService().getCamera();\n          const slaveCameraCartographic = slaveCamera.positionCartographic;\n          const position = Cesium.Ellipsoid.WGS84.cartographicToCartesian({\n            longitude: masterCameraCartographic.longitude,\n            latitude: masterCameraCartographic.latitude,\n            height: slaveMapOptions.bindZoom ? masterCameraCartographic.height : slaveCameraCartographic.height,\n          });\n\n          if (slaveMap.getCesiumViewer().scene.mode !== Cesium.SceneMode.MORPHING) {\n            slaveCamera.setView({\n              destination: position,\n              orientation: {\n                heading: slaveCamera.heading,\n                pitch: slaveCamera.pitch,\n              },\n            });\n          }\n        });\n      });\n      this.eventRemoveCallbacks.push(removeCallback);\n    });\n  }\n\n  /**\n   * Unsyncs maps cameras\n   */\n  unsyncMapsCameras() {\n    this.eventRemoveCallbacks.forEach(removeCallback => removeCallback());\n    this.eventRemoveCallbacks = [];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../cesium/cesium.service';\n\n/**\n * Take screenshot of your cesium globe.\n *\n * usage:\n * ```typescript\n * // get base 64 data url\n * const dataUrl = screenshotService.getMapScreenshotDataUrl();\n *\n * // or download as png\n * screenshotService.downloadMapScreenshot('my-map.png');\n *\n * ```\n *\n */\n@Injectable()\nexport class ScreenshotService {\n  constructor(private cesiumService: CesiumService) {\n  }\n\n  getMapScreenshotDataUrlBase64() {\n    const canvas = this.cesiumService.getCanvas();\n    return canvas.toDataURL();\n  }\n\n\n  downloadMapScreenshot(filename = 'map.png') {\n    const dataUrl = this.getMapScreenshotDataUrlBase64();\n    this.downloadURI(dataUrl, filename);\n  }\n\n  private downloadURI(uri: string, name: string) {\n    const link = document.createElement('a');\n    link.download = name;\n    link.href = uri;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { AfterViewInit, Component, ElementRef, Inject, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { CesiumService } from '../../services/cesium/cesium.service';\nimport { ConfigurationService } from '../../cesium-enhancements/ConfigurationService';\nimport { SceneMode } from '../../models/scene-mode.enum';\nimport { CameraService } from '../../services/camera/camera.service';\nimport { ContextMenuService } from '../../services/context-menu/context-menu.service';\nimport { CoordinateConverter } from '../../services/coordinate-converter/coordinate-converter.service';\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\nimport { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\nimport { CzmlDrawerService } from '../../services/drawers/czml-drawer/czml-drawer.service';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\nimport { PolylineDrawerService } from '../../services/drawers/polyline-drawer/polyline-drawer.service';\nimport { PolylinePrimitiveDrawerService } from '../../services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service';\nimport { KeyboardControlService } from '../../services/keyboard-control/keyboard-control.service';\nimport { CesiumEventBuilder } from '../../services/map-events-mananger/cesium-event-builder';\nimport { MapEventsManagerService } from '../../services/map-events-mananger/map-events-manager';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\nimport { MapsManagerService } from '../../services/maps-manager/maps-manager.service';\nimport { PlonterService } from '../../services/plonter/plonter.service';\nimport { ScreenshotService } from '../../services/screenshot/screenshot.service';\n\n/**\n * This is a map implementation, creates the cesium map.\n * Every layer should be tag inside ac-map tag\n *\n * Accessing cesium viewer:\n * 1. acMapComponent.getCesiumViewer()\n * 2. Use MapManagerService.getMap().getCesiumViewer() or if more then one map: MapManagerService.getMap(mapId).getCesiumViewer()\n *\n *\n * @example\n * <ac-map>\n *     <ac-map-layer-provider></ac-map-layer-provider>\n *     <dynamic-ellipse-layer #layer></dynamic-ellipse-layer>\n * </ac-map>\n */\n@Component({\n  selector: 'ac-map',\n  template: `\n    <ac-default-plonter *ngIf=\"!disableDefaultPlonter\"></ac-default-plonter>\n    <ac-context-menu-wrapper></ac-context-menu-wrapper>\n    <ng-content></ng-content>\n  `,\n  providers: [\n    CesiumService,\n    BillboardDrawerService,\n    CesiumEventBuilder,\n    KeyboardControlService,\n    MapEventsManagerService,\n    PlonterService,\n    LabelDrawerService,\n    PolylineDrawerService,\n    PolylinePrimitiveDrawerService,\n    EllipseDrawerService,\n    PointDrawerService,\n    ArcDrawerService,\n    CzmlDrawerService,\n    PolygonDrawerService,\n    MapLayersService,\n    CameraService,\n    ScreenshotService,\n    ContextMenuService,\n    CoordinateConverter,\n  ],\n})\nexport class AcMapComponent implements OnChanges, OnInit, AfterViewInit, OnDestroy {\n  /**\n   * Disable default plonter context menu\n   */\n  @Input()\n  disableDefaultPlonter = false;\n\n  /**\n   * Set the id name of the map\n   * default: 'default-map-id-[index]'\n   */\n  @Input()\n  mapId: string;\n\n  /**\n   * flyTo options according to https://cesiumjs.org/Cesium/Build/Documentation/Camera.html?classFilter=cam#flyTo\n   */\n  @Input()\n  flyTo: any;\n\n  /**\n   * Sets the map's SceneMode\n   */\n  @Input()\n  sceneMode: SceneMode;\n\n  /**\n   * Optional - the container element's id in which the map's canvas will be appended to.\n   * If not supplied - the container element will be the parent element of ac-map;\n   */\n  @Input()\n  containerId: string;\n\n  private mapContainer: HTMLElement;\n\n  constructor(\n    private _cesiumService: CesiumService,\n    private _cameraService: CameraService,\n    private _elemRef: ElementRef,\n    @Inject(DOCUMENT) private document,\n    private mapsManagerService: MapsManagerService,\n    private billboardDrawerService: BillboardDrawerService,\n    private labelDrawerService: LabelDrawerService,\n    private ellipseDrawerService: EllipseDrawerService,\n    private polylineDrawerService: PolylineDrawerService,\n    private polygonDrawerService: PolygonDrawerService,\n    private arcDrawerService: ArcDrawerService,\n    private pointDrawerService: PointDrawerService,\n    private czmlDrawerService: CzmlDrawerService,\n    private mapEventsManager: MapEventsManagerService,\n    private keyboardControlService: KeyboardControlService,\n    private mapLayersService: MapLayersService,\n    private configurationService: ConfigurationService,\n    private screenshotService: ScreenshotService,\n    public contextMenuService: ContextMenuService,\n    private coordinateConverter: CoordinateConverter,\n  ) {\n    this.mapContainer = this.document.createElement('div');\n    this.mapContainer.style.width = '100%';\n    this.mapContainer.style.height = '100%';\n    this.mapContainer.className = 'map-container';\n    this._cesiumService.init(this.mapContainer, this);\n    this._cameraService.init(this._cesiumService);\n    this.mapEventsManager.init();\n    this.billboardDrawerService.init();\n    this.labelDrawerService.init();\n    this.ellipseDrawerService.init();\n    this.polylineDrawerService.init();\n    this.polygonDrawerService.init();\n    this.arcDrawerService.init();\n    this.pointDrawerService.init();\n    this.czmlDrawerService.init();\n    this.keyboardControlService.init();\n    this.contextMenuService.init(this.mapEventsManager);\n  }\n\n  ngOnInit() {\n    this.mapId = this.mapsManagerService._registerMap(this.mapId, this);\n    if (!this.containerId) {\n      this._elemRef.nativeElement.appendChild(this.mapContainer);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['sceneMode']) {\n      this._cameraService.setSceneMode(changes['sceneMode'].currentValue);\n    }\n    if (changes['flyTo']) {\n      this._cameraService.cameraFlyTo(changes['flyTo'].currentValue);\n    }\n    if (changes['containerId'] && !changes['containerId'].firstChange) {\n      const element = this.document.getElementById(changes['containerId'].currentValue);\n      if (element) {\n        element.appendChild(this.mapContainer);\n      } else {\n        throw new Error(`No element found with id: ${changes['containerId'].currentValue}`);\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.mapLayersService.drawAllLayers();\n    if (this.containerId) {\n      setTimeout(() => {\n        const element = this.document.getElementById(this.containerId);\n        if (element) {\n          element.appendChild(this.mapContainer);\n        } else {\n          throw new Error(`No element found with id: ${this.containerId}`);\n        }\n      }, 0);\n    }\n  }\n\n  ngOnDestroy(): void {\n    const viewer = this.getCesiumViewer();\n    viewer.destroy();\n    this.mapContainer.remove();\n    this.mapsManagerService._removeMapById(this.mapId);\n  }\n\n  /**\n   * @returns ac-map's cesium service\n   */\n  getCesiumService() {\n    return this._cesiumService;\n  }\n\n  /**\n   * @returns map's cesium viewer\n   */\n  getCesiumViewer() {\n    return this._cesiumService.getViewer();\n  }\n\n\n  getCameraService(): CameraService {\n    return this._cameraService;\n  }\n\n  getId() {\n    return this.mapId;\n  }\n\n\n  getMapContainer() {\n    return this.mapContainer;\n  }\n\n\n  getMapEventsManager(): MapEventsManagerService {\n    return this.mapEventsManager;\n  }\n\n  getContextMenuService(): ContextMenuService {\n    return this.contextMenuService;\n  }\n\n  getScreenshotService() {\n    return this.screenshotService;\n  }\n\n  getKeyboardControlService() {\n    return this.keyboardControlService;\n  }\n\n  getCoordinateConverter() {\n    return this.coordinateConverter;\n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { IDescription } from '../../models/description';\nimport { LayerOptions } from '../../models/layer-options';\n\n@Injectable()\nexport class LayerService {\n  private _context: any;\n  private _options: LayerOptions;\n  private _show: boolean;\n  private _zIndex: number;\n  private _entityName: string;\n  private _cache = true;\n  private descriptions: IDescription[] = [];\n  private layerUpdate = new EventEmitter();\n\n  get cache(): boolean {\n    return this._cache;\n  }\n\n  set cache(value: boolean) {\n    this._cache = value;\n  }\n\n  get zIndex(): number {\n    return this._zIndex;\n  }\n\n  set zIndex(value: number) {\n    if (value !== this._zIndex) {\n      this.layerUpdate.emit();\n    }\n    this._zIndex = value;\n  }\n\n  get show(): boolean {\n    return this._show;\n  }\n\n  set show(value: boolean) {\n    if (value !== this._show) {\n      this.layerUpdate.emit();\n    }\n    this._show = value;\n  }\n\n  get options(): LayerOptions {\n    return this._options;\n  }\n\n  set options(value: LayerOptions) {\n    this._options = value;\n    this.layerUpdate.emit();\n  }\n\n  get context(): any {\n    return this._context;\n  }\n\n  set context(context) {\n    this._context = context;\n    this.layerUpdate.emit();\n  }\n\n  setEntityName(name: string) {\n    this._entityName = name;\n  }\n\n  getEntityName(): string {\n    return this._entityName;\n  }\n\n  registerDescription(descriptionComponent: IDescription) {\n    if (this.descriptions.indexOf(descriptionComponent) < 0) {\n      this.descriptions.push(descriptionComponent);\n    }\n  }\n\n  unregisterDescription(descriptionComponent: IDescription) {\n    const index = this.descriptions.indexOf(descriptionComponent);\n    if (index > -1) {\n      this.descriptions.splice(index, 1);\n    }\n  }\n\n  getDescriptions(): IDescription[] {\n    return this.descriptions;\n  }\n\n  layerUpdates(): EventEmitter<any> {\n    return this.layerUpdate;\n  }\n}\n","export enum MapLayerProviderOptions {\n  ArcGisMapServer = Cesium.ArcGisMapServerImageryProvider,\n  WebMapTileService = Cesium.WebMapTileServiceImageryProvider,\n  MapTileService = Cesium.TileMapServiceImageryProvider,\n  WebMapService = Cesium.WebMapServiceImageryProvider,\n  SingleTileImagery = Cesium.SingleTileImageryProvider,\n  OpenStreetMap = Cesium.OpenStreetMapImageryProvider,\n  BingMaps = Cesium.BingMapsImageryProvider,\n  GoogleEarthEnterpriseMaps = Cesium.GoogleEarthEnterpriseMapsProvider,\n  MapBox = Cesium.MapboxImageryProvider,\n  UrlTemplateImagery = Cesium.UrlTemplateImageryProvider,\n  OFFLINE = null,\n}\n","export enum MapTerrainProviderOptions {\n  CesiumTerrain = Cesium.CesiumTerrainProvider,\n  ArcGISTiledElevation = Cesium.ArcGISTiledElevationTerrainProvider,\n  GoogleEarthEnterprise = Cesium.GoogleEarthEnterpriseTerrainProvider,\n  VRTheWorld = Cesium.VRTheWorldTerrainProvider,\n  Ellipsoid = Cesium.EllipsoidTerrainProvider,\n  WorldTerrain = Cesium.createWorldTerrain\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ComputationCache {\n  private _cache = new Map<string, any>();\n\n  get(expression: string, insertFn: (() => any)): any {\n    if (this._cache.has(expression)) {\n      return this._cache.get(expression);\n    }\n\n    const value = insertFn();\n    this._cache.set(expression, value);\n    return value;\n  }\n\n  clear() {\n    this._cache.clear();\n  }\n}\n","export class Checker {\n  static throwIfAnyNotPresent(values: Object, propertyNames: string[]) {\n    propertyNames.forEach(propertyName => Checker.throwIfNotPresent(values, propertyName));\n  }\n\n  static throwIfNotPresent(value: any, name: string) {\n    if (!Checker.present(value[name])) {\n      throw new Error(`Error: ${name} was not given.`);\n    }\n  }\n\n  static present(value: any) {\n    return value !== undefined && value !== null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../../cesium/cesium.service';\nimport { Checker } from '../../../../utils/checker';\nimport { EllipsePrimitive } from 'primitive-primitives';\nimport { PrimitivesDrawerService } from '../../primitives-drawer/primitives-drawer.service';\n\n\n/**\n *  This drawer is responsible for creating the dynamic version of the ellipse component.\n *  We are using the primitive-primitives implementation of an ellipse. see: https://github.com/gotenxds/Primitive-primitives\n *  This allows us to change the position of the ellipses without creating a new primitive object\n *  as Cesium does not allow updating an ellipse.\n */\n@Injectable()\nexport class DynamicEllipseDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PrimitiveCollection, cesiumService);\n  }\n\n  add(cesiumProps: any): any {\n    Checker.throwIfAnyNotPresent(cesiumProps, ['center', 'semiMajorAxis', 'semiMinorAxis']);\n\n    return super.add(new EllipsePrimitive(cesiumProps));\n  }\n\n  update(ellipse: any, cesiumProps: any): any {\n    ellipse.updateLocationData(cesiumProps);\n\n    return ellipse;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../../primitives-drawer/primitives-drawer.service';\n\n/**\n *  This drawer is responsible for creating the dynamic version of the polyline component.\n */\n@Injectable()\nexport class DynamicPolylineDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PolylineCollection, cesiumService);\n  }\n}\n","import { PrimitivesDrawerService } from '../../primitives-drawer/primitives-drawer.service';\nimport { CesiumService } from '../../../cesium/cesium.service';\n\n/**\n *\n * This drawer is deprecated.\n * General static primitives drawer responsible of drawing static Cesium primitives with material.\n */\nexport abstract class StaticPrimitiveDrawer extends PrimitivesDrawerService {\n  constructor(private geometryType: any, cesiumService: CesiumService) {\n    super(Cesium.PrimitiveCollection, cesiumService);\n  }\n\n  add(geometryProps: any, instanceProps: any, primitiveProps: any): any {\n    instanceProps.geometry = new this.geometryType(geometryProps);\n    primitiveProps.geometryInstances = new Cesium.GeometryInstance(instanceProps);\n    primitiveProps.asynchronous = false;\n    const primitive = new Cesium.Primitive(primitiveProps);\n    return super.add(primitive);\n  }\n\n  update(primitive: any, geometryProps: any, instanceProps: any, primitiveProps: any) {\n    instanceProps.geometry = new this.geometryType(geometryProps);\n    primitiveProps.geometryInstances = new Cesium.GeometryInstance(instanceProps);\n    this._cesiumCollection.remove(primitive);\n    return super.add(new Cesium.Primitive(primitiveProps));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../../cesium/cesium.service';\nimport { StaticPrimitiveDrawer } from '../static-primitive-drawer/static-primitive-drawer.service';\n\n/**\n *  This drawer is responsible for creating the static version of the circle component.\n */\n@Injectable()\nexport class StaticCircleDrawerService extends StaticPrimitiveDrawer {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.CircleGeometry, cesiumService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../../cesium/cesium.service';\nimport { StaticPrimitiveDrawer } from '../static-primitive-drawer/static-primitive-drawer.service';\n\n/**\n *  This drawer is responsible for creating the static version of the polyline component.\n *  This also allows us to change the color of the polylines.\n */\n@Injectable()\nexport class StaticPolylineDrawerService extends StaticPrimitiveDrawer {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PolylineGeometry, cesiumService);\n  }\n\n  /**\n   * Update function can only change the primitive color.\n   */\n  update(primitive: any, geometryProps: any, instanceProps: any, primitiveProps: any) {\n    const color = instanceProps.attributes.color.value;\n\n    if (primitive.ready) {\n      primitive.getGeometryInstanceAttributes().color = color;\n    } else {\n      Cesium.when(primitive.readyPromise).then((readyPrimitive: any) => {\n        readyPrimitive.getGeometryInstanceAttributes().color.value = color;\n      });\n    }\n\n    return primitive;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { StaticPrimitiveDrawer } from '../static-primitive-drawer/static-primitive-drawer.service';\nimport { CesiumService } from '../../../cesium/cesium.service';\n\n/**\n + This drawer is responsible for drawing a polygon over the Cesium map.\n + This implementation uses simple PolygonGeometry and Primitive parameters.\n + This doesn't allow us to change the position, color, etc.. of the polygons. For that you may use the dynamic polygon component.\n */\n@Injectable()\nexport class StaticPolygonDrawerService extends StaticPrimitiveDrawer {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PolygonGeometry, cesiumService);\n  }\n}\n","import { CesiumService } from '../../../cesium/cesium.service';\nimport { Injectable } from '@angular/core';\nimport { StaticPrimitiveDrawer } from '../static-primitive-drawer/static-primitive-drawer.service';\n\n\n/**\n + *  This drawer is responsible for drawing an ellipse over the Cesium map.\n + *  This implementation uses simple EllipseGeometry and Primitive parameters.\n + *  This doesn't allow us to change the position, color, etc.. of the ellipses. For that you may use the dynamic ellipse component.\n + */\n@Injectable()\nexport class StaticEllipseDrawerService extends StaticPrimitiveDrawer {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.EllipseGeometry, cesiumService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing models.\n */\n@Injectable()\nexport class ModelDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.model);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing box.\n */\n@Injectable()\nexport class BoxDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.box);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing corridors .\n */\n@Injectable()\nexport class CorridorDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.corridor);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing cylinders.\n */\n@Injectable()\nexport class CylinderDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.cylinder);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing ellipsoid.\n */\n@Injectable()\nexport class EllipsoidDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.ellipsoid);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing polylines.\n */\n@Injectable()\nexport class PolylineVolumeDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.polylineVolume);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing polygons.\n */\n@Injectable()\nexport class WallDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.wall);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing rectangles.\n */\n@Injectable()\nexport class RectangleDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.rectangle);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\n\n/**\n *  This drawer is responsible for drawing labels as primitives.\n *  This drawer is more efficient than LabelDrawerService when drawing dynamic labels.\n */\n@Injectable()\nexport class LabelPrimitiveDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.LabelCollection, cesiumService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\n\n/**\n *  This drawer is responsible for drawing billboards as primitives.\n *  This drawer is more efficient than BillboardDrawerService when drawing dynamic billboards.\n */\n@Injectable()\nexport class BillboardPrimitiveDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.BillboardCollection, cesiumService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\n\n/**\n *  This drawer is responsible of drawing points as primitives.\n *  This drawer is more efficient than PointDrawerService when drawing dynamic points.\n */\n@Injectable()\nexport class PointPrimitiveDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PointPrimitiveCollection, cesiumService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\n\n@Injectable()\nexport class HtmlDrawerService extends PrimitivesDrawerService {\n  constructor(private _cesiumService: CesiumService) {\n    super(Cesium.HtmlCollection, _cesiumService);\n  }\n\n  add(cesiumProps: any): any {\n    cesiumProps.scene = this._cesiumService.getScene();\n    cesiumProps.mapContainer = this._cesiumService.getMap().getMapContainer();\n    return super.add(cesiumProps);\n  }\n}\n","import { from as observableFrom, merge as observableMerge, Observable, Subject } from 'rxjs';\n\nimport { takeUntil } from 'rxjs/operators';\n// tslint:disable\nimport { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\nimport { AfterContentInit, ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { AcNotification } from '../../models/ac-notification';\nimport { ActionType } from '../../models/action-type.enum';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\nimport { PolylineDrawerService } from '../../services/drawers/polyline-drawer/polyline-drawer.service';\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\nimport { AcEntity } from '../../models/ac-entity';\nimport { BasicDrawerService } from '../../services/drawers/basic-drawer/basic-drawer.service';\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\nimport { LayerOptions } from '../../models/layer-options';\nimport { DynamicEllipseDrawerService } from '../../services/drawers/static-dynamic/ellipse-drawer/dynamic-ellipse-drawer.service';\nimport { DynamicPolylineDrawerService } from '../../services/drawers/static-dynamic/dynamic-polyline-drawer/dynamic-polyline-drawer.service';\nimport { StaticCircleDrawerService } from '../../services/drawers/static-dynamic/static-circle-drawer/static-circle-drawer.service';\nimport { StaticPolylineDrawerService } from '../../services/drawers/static-dynamic/static-polyline-drawer/static-polyline-drawer.service';\nimport { StaticPolygonDrawerService } from '../../services/drawers/static-dynamic/static-polygon-drawer/polygon-drawer.service';\nimport { StaticEllipseDrawerService } from '../../services/drawers/static-dynamic/ellipse-drawer/ellipse-drawer.service';\nimport { ModelDrawerService } from '../../services/drawers/model-drawer/model-drawer.service';\nimport { BoxDrawerService } from '../../services/drawers/box-dawer/box-drawer.service';\nimport { CorridorDrawerService } from '../../services/drawers/corridor-dawer/corridor-drawer.service';\nimport { CylinderDrawerService } from '../../services/drawers/cylinder-dawer/cylinder-drawer.service';\nimport { EllipsoidDrawerService } from '../../services/drawers/ellipoid-drawer/ellipsoid-drawer.service';\nimport { PolylineVolumeDrawerService } from '../../services/drawers/polyline-volume-dawer/polyline-volume-drawer.service';\nimport { WallDrawerService } from '../../services/drawers/wall-dawer/wall-drawer.service';\nimport { RectangleDrawerService } from '../../services/drawers/rectangle-dawer/rectangle-drawer.service';\nimport { PolylinePrimitiveDrawerService } from '../../services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service';\nimport { LabelPrimitiveDrawerService } from '../../services/drawers/label-primitive-drawer/label-primitive-drawer.service';\nimport { BillboardPrimitiveDrawerService } from '../../services/drawers/billboard-primitive-drawer/billboard-primitive-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\nimport { PointPrimitiveDrawerService } from '../../services/drawers/point-primitive-drawer/point-primitive-drawer.service';\nimport { HtmlDrawerService } from '../../services/drawers/html-drawer/html-drawer.service';\nimport { CzmlDrawerService } from '../../services/drawers/czml-drawer/czml-drawer.service';\n\n// tslint:enable\n/**\n *  This is a ac-layer implementation.\n *  The ac-layer element must be a child of ac-map element.\n *  + acFor `{string}` - get the tracked observable and entityName (see the example).\n *  + show `{boolean}` - show/hide layer's entities.\n *  + context `{any}` - get the context layer that will use the componnet (most of the time equal to \"this\").\n *  + options `{LayerOptions}` - sets the layer options for each drawer.\n *  + zIndex `{number}` - controls the zIndex (order) of the layer, layers with greater zIndex will be in front of layers with lower zIndex\n *    (Exception For `Billboard` and `Label`, should use `[eyeOffset]` prop instead)</br>\n *    zIndex won't work for pritimitve descs (like ac-primitive-polyline...)\n *  + debug `{boolean}` - prints every acNotification\n *\n *\n *  __Usage :__\n *  ```\n *  <ac-map>\n *    <ac-layer acFor=\"let track of tracks$\" [show]=\"show\" [context]=\"this\" [options]=\"options\" [zIndex]=\"1\">\n *      <ac-billboard-desc props=\"{\n *        image: track.image,\n *        position: track.position,\n *        scale: track.scale,\n *        color: track.color,\n *        name: track.name\n *      }\">\n *      </ac-billboard-desc>\n *        <ac-label-desc props=\"{\n *          position: track.position,\n *          pixelOffset : [-15,20] | pixelOffset,\n *          text: track.name,\n *          font: '15px sans-serif'\n *        }\">\n *      </ac-label-desc>\n *    </ac-layer>\n *  </ac-map>\n *  ```\n */\n@Component({\n  selector: 'ac-layer',\n  template: '<ng-content></ng-content>',\n  providers: [\n    LayerService,\n    ComputationCache,\n    BillboardDrawerService,\n    LabelDrawerService,\n    EllipseDrawerService,\n    PolylineDrawerService,\n    ArcDrawerService,\n    PointDrawerService,\n    PolygonDrawerService,\n    ModelDrawerService,\n    BoxDrawerService,\n    CorridorDrawerService,\n    CylinderDrawerService,\n    EllipsoidDrawerService,\n    PolylineVolumeDrawerService,\n    WallDrawerService,\n    RectangleDrawerService,\n    PolylinePrimitiveDrawerService,\n    LabelPrimitiveDrawerService,\n    BillboardPrimitiveDrawerService,\n    PointPrimitiveDrawerService,\n    HtmlDrawerService,\n    CzmlDrawerService,\n\n    DynamicEllipseDrawerService,\n    DynamicPolylineDrawerService,\n    StaticCircleDrawerService,\n    StaticPolylineDrawerService,\n    StaticPolygonDrawerService,\n    StaticEllipseDrawerService,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AcLayerComponent implements OnInit, OnChanges, AfterContentInit, OnDestroy {\n  @Input()\n  show = true;\n  @Input()\n  acFor: string;\n  @Input()\n  context: any;\n  @Input()\n  store = false;\n  @Input()\n  options: LayerOptions;\n  @Input()\n  zIndex = 0;\n  @Input()\n  debug = false;\n\n  private readonly acForRgx = /^let\\s+.+\\s+of\\s+.+$/;\n  private entityName: string;\n  private stopObservable = new Subject<any>();\n  private observable: Observable<AcNotification>;\n  private _drawerList: Map<string, BasicDrawerService>;\n  private _updateStream: Subject<AcNotification> = new Subject<AcNotification>();\n  private entitiesStore = new Map<string, any>();\n  private layerDrawerDataSources: any[] = [];\n\n  constructor(private layerService: LayerService,\n              private _computationCache: ComputationCache,\n              private mapLayersService: MapLayersService,\n              billboardDrawerService: BillboardDrawerService,\n              labelDrawerService: LabelDrawerService,\n              ellipseDrawerService: EllipseDrawerService,\n              polylineDrawerService: PolylineDrawerService,\n              polygonDrawerService: PolygonDrawerService,\n              arcDrawerService: ArcDrawerService,\n              pointDrawerService: PointDrawerService,\n              modelDrawerService: ModelDrawerService,\n              boxDrawerService: BoxDrawerService,\n              corridorDrawerService: CorridorDrawerService,\n              cylinderDrawerService: CylinderDrawerService,\n              ellipsoidDrawerSerice: EllipsoidDrawerService,\n              polylineVolumeDrawerService: PolylineVolumeDrawerService,\n              wallDrawerService: WallDrawerService,\n              rectangleDrawerService: RectangleDrawerService,\n              dynamicEllipseDrawerService: DynamicEllipseDrawerService,\n              dynamicPolylineDrawerService: DynamicPolylineDrawerService,\n              staticCircleDrawerService: StaticCircleDrawerService,\n              staticPolylineDrawerService: StaticPolylineDrawerService,\n              staticPolygonDrawerService: StaticPolygonDrawerService,\n              staticEllipseDrawerService: StaticEllipseDrawerService,\n              polylinePrimitiveDrawerService: PolylinePrimitiveDrawerService,\n              labelPrimitiveDrawerService: LabelPrimitiveDrawerService,\n              billboardPrimitiveDrawerService: BillboardPrimitiveDrawerService,\n              pointPrimitiveDrawerService: PointPrimitiveDrawerService,\n              htmlDrawerService: HtmlDrawerService,\n              czmlDrawerService: CzmlDrawerService\n  ) {\n    this._drawerList = new Map([\n      ['billboard', billboardDrawerService],\n      ['label', labelDrawerService],\n      ['ellipse', ellipseDrawerService],\n      ['polyline', polylineDrawerService],\n      ['polygon', polygonDrawerService as BasicDrawerService],\n      ['arc', arcDrawerService],\n      ['point', pointDrawerService],\n      ['model', modelDrawerService],\n      ['box', boxDrawerService],\n      ['corridor', corridorDrawerService],\n      ['cylinder', cylinderDrawerService],\n      ['ellipsoid', ellipsoidDrawerSerice],\n      ['polylineVolume', polylineVolumeDrawerService],\n      ['rectangle', rectangleDrawerService],\n      ['wall', wallDrawerService],\n      ['polylinePrimitive', polylinePrimitiveDrawerService],\n      ['labelPrimitive', labelPrimitiveDrawerService],\n      ['billboardPrimitive', billboardPrimitiveDrawerService],\n      ['pointPrimitive', pointPrimitiveDrawerService],\n      ['html', htmlDrawerService],\n      ['czml', czmlDrawerService],\n\n      ['dynamicEllipse', dynamicEllipseDrawerService],\n      ['dynamicPolyline', dynamicPolylineDrawerService],\n      ['staticCircle', staticCircleDrawerService],\n      ['staticPolyline', staticPolylineDrawerService],\n      ['staticPolygon', staticPolygonDrawerService],\n      ['staticEllipse', staticEllipseDrawerService],\n    ]);\n  }\n\n  init() {\n    this.initValidParams();\n\n    observableMerge(this._updateStream, this.observable).pipe<AcNotification>(takeUntil(this.stopObservable)).subscribe((notification) => {\n      this._computationCache.clear();\n\n      if (this.debug) {\n        console.log('AcLayer received notification:', notification);\n      }\n\n      let contextEntity = notification.entity;\n      if (this.store) {\n        contextEntity = this.updateStore(notification);\n      }\n\n      this.context[this.entityName] = contextEntity;\n      this.layerService.getDescriptions().forEach((descriptionComponent) => {\n        switch (notification.actionType) {\n          case ActionType.ADD_UPDATE:\n            descriptionComponent.draw(this.context, notification.id, contextEntity);\n            break;\n          case ActionType.DELETE:\n            descriptionComponent.remove(notification.id);\n            break;\n          default:\n            console.error('[ac-layer] unknown AcNotification.actionType for notification: ' + notification);\n        }\n      });\n    });\n  }\n\n  private updateStore(notification: AcNotification): any {\n    if (notification.actionType === ActionType.DELETE) {\n      this.entitiesStore.delete(notification.id);\n      return undefined;\n    } else {\n      if (this.entitiesStore.has(notification.id)) {\n        const entity = this.entitiesStore.get(notification.id);\n        Object.assign(entity, notification.entity);\n        return entity;\n      } else {\n        this.entitiesStore.set(notification.id, notification.entity);\n        return notification.entity;\n      }\n    }\n  }\n\n  private initValidParams() {\n    if (!this.context) {\n      throw new Error('ac-layer: must initialize [context] ');\n    }\n\n    if (!this.acForRgx.test(this.acFor)) {\n      throw new Error(`ac-layer: Invalid [acFor] syntax. Expected: [acFor]=\"let item of observable\" .Instead received: ${this.acFor}`);\n    }\n    const acForArr = this.acFor.split(' ');\n    this.observable = this.context[acForArr[3]];\n    this.entityName = acForArr[1];\n    if (!this.isObservable(this.observable)) {\n      throw new Error('ac-layer: must initailize [acFor] with rx observable, instead received: ' + this.observable);\n    }\n\n    this.layerService.context = this.context;\n    this.layerService.setEntityName(this.entityName);\n  }\n\n  /** Test for a rxjs Observable */\n  private isObservable(obj: any): boolean {\n    /* check via duck-typing rather than instance of\n     * to allow passing between window contexts */\n    return obj && typeof obj.subscribe === 'function';\n  }\n\n  ngAfterContentInit(): void {\n    this.init();\n  }\n\n  ngOnInit(): void {\n    this.layerService.context = this.context;\n    this.layerService.options = this.options;\n    this.layerService.show = this.show;\n    this.layerService.zIndex = this.zIndex;\n    this._drawerList.forEach((drawer, drawerName) => {\n      const initOptions = this.options ? this.options[drawerName] : undefined;\n      const drawerDataSources = drawer.init(initOptions);\n      // only entities drawers create data sources\n      if (drawerDataSources) {\n        // this.mapLayersService.registerLayerDataSources(drawerDataSources, this.zIndex);\n        // TODO: Check if the following line causes Bad Performance\n        this.layerDrawerDataSources.push(...drawerDataSources);\n      }\n      drawer.setShow(this.show);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.show && !changes.show.firstChange) {\n      const showValue = changes['show'].currentValue;\n      this.layerService.show = showValue;\n      this._drawerList.forEach((drawer) => drawer.setShow(showValue));\n    }\n\n    if (changes.zIndex && !changes.zIndex.firstChange) {\n      const zIndexValue = changes['zIndex'].currentValue;\n      this.layerService.zIndex = zIndexValue;\n      this.mapLayersService.updateAndRefresh(this.layerDrawerDataSources, zIndexValue);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.mapLayersService.removeDataSources(this.layerDrawerDataSources);\n    this.stopObservable.next(true);\n    this.removeAll();\n  }\n\n  getLayerService(): LayerService {\n    return this.layerService;\n  }\n\n  /**\n   * Returns an array of DataSources registered by a drawer of this layer\n   * @return Array of Cesium.DataSources\n   */\n  getLayerDrawerDataSources(): any[] {\n    return this.layerDrawerDataSources;\n  }\n\n  /**\n   * Returns an Array of DataSources of the drawer with the provided DataSource.name\n   * Example: getDataSourceOfDrawer('polyline') returns the dataSource of polyline drawer\n   * @return Array of Cesium.DataSources\n   */\n  getDrawerDataSourcesByName(name: string): any[] {\n    return this.layerDrawerDataSources.filter(d => d.name === name);\n  }\n\n  /**\n   * Returns the store.\n   */\n  getStore(): Map<string, any> {\n    return this.entitiesStore;\n  }\n\n  /**\n   * Remove all the entities from the layer.\n   */\n  removeAll(): void {\n    this.layerService.getDescriptions().forEach((description) => description.removeAll());\n    this.entitiesStore.clear();\n  }\n\n  /**\n   * remove entity from the layer\n   */\n  remove(entityId: string) {\n    this._updateStream.next({id: entityId, actionType: ActionType.DELETE});\n    this.entitiesStore.delete(entityId);\n  }\n\n  /**\n   * add/update entity to/from the layer\n   */\n  updateNotification(notification: AcNotification): void {\n    this._updateStream.next(notification);\n  }\n\n  /**\n   * add/update entity to/from the layer\n   */\n  update(entity: AcEntity, id: string): void {\n    this._updateStream.next({entity, id, actionType: ActionType.ADD_UPDATE});\n  }\n\n  refreshAll(collection: AcNotification[]): void {\n    // TODO make entity interface: collection of type entity not notification\n    observableFrom(collection).subscribe((entity) => this._updateStream.next(entity));\n  }\n}\n","import { Input, OnChanges, OnDestroy, OnInit, SimpleChanges, Directive } from '@angular/core';\nimport { BasicDrawerService } from '../drawers/basic-drawer/basic-drawer.service';\nimport { MapLayersService } from '../map-layers/map-layers.service';\n\n/**\n *  Extend this class to create drawing on map components.\n */\n@Directive()\nexport class EntityOnMapComponent implements OnInit, OnChanges, OnDestroy {\n  @Input()\n  props: any;\n\n  protected selfPrimitive: any;\n  protected selfPrimitiveIsDraw: boolean;\n  protected dataSources: any;\n\n  constructor(protected _drawer: BasicDrawerService, private mapLayers: MapLayersService) {\n  }\n\n  ngOnInit(): void {\n    this.selfPrimitiveIsDraw = false;\n    const dataSources = this._drawer.init();\n    if (dataSources) {\n      this.dataSources = dataSources;\n      // this.mapLayers.registerLayerDataSources(dataSources, 0);\n    }\n    this.drawOnMap();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const props = changes['props'];\n    if (props.currentValue !== props.previousValue) {\n      this.updateOnMap();\n    }\n  }\n\n  drawOnMap() {\n    this.selfPrimitiveIsDraw = true;\n    return this.selfPrimitive = this._drawer.add(this.props);\n  }\n\n  removeFromMap() {\n    this.selfPrimitiveIsDraw = false;\n    return this._drawer.remove(this.selfPrimitive);\n  }\n\n  updateOnMap() {\n    if (this.selfPrimitiveIsDraw) {\n      return this._drawer.update(this.selfPrimitive, this.props);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.mapLayers.removeDataSources(this.dataSources);\n    this.removeFromMap();\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a billboard implementation.\n *  The element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and BillboardGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/BillboardGraphics.html\n *\n *  __Usage :__\n *  ```\n *    <ac-billboard [props]=\"{\n *      image: image,\n *      position: position,\n *      scale: scale,\n *      color: color,\n *      name: name\n *    }\">;\n *    </ac-billboard>\n *  ```\n */\n\n@Component({\n  selector: 'ac-billboard',\n  template: '',\n})\nexport class AcBillboardComponent extends EntityOnMapComponent {\n\n  constructor(billboardDrawer: BillboardDrawerService, mapLayers: MapLayersService) {\n    super(billboardDrawer, mapLayers);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { JsonStringMapper } from 'json-string-mapper';\n\n@Injectable()\nexport class JsonMapper {\n  private _mapper: JsonStringMapper;\n\n  constructor() {\n    this._mapper = new JsonStringMapper();\n  }\n\n  map(expression: string): Map<string, string> {\n    return this._mapper.map(expression);\n  }\n}\n","/**\n * Service for effective assignment.\n */\nexport class SmartAssigner {\n\n  static create(props: string[] = [], allowUndefined: boolean = true): (obj1: Object, obj2: Object) => Object {\n    let fnBody = ``;\n\n    props.forEach(prop => {\n      if (!allowUndefined) {\n        // tslint:disable-next-line:max-line-length\n        fnBody += `if (!(obj1['${prop}'] instanceof Cesium.CallbackProperty) && obj2['${prop}'] !== undefined) { obj1['${prop}'] = obj2['${prop}']; } `;\n      } else {\n        fnBody += `if(!(obj1['${prop}'] instanceof Cesium.CallbackProperty))obj1['${prop}'] = obj2['${prop}']; `;\n      }\n    });\n\n    fnBody += `return obj1`;\n    const assignFn = new Function('obj1', 'obj2', fnBody);\n\n    return function smartAssigner(obj1: Object, obj2: Object) {\n      return assignFn(obj1, obj2);\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { JsonMapper } from '../json-mapper/json-mapper.service';\nimport { Parse } from 'angular2parse';\nimport { SmartAssigner } from '../smart-assigner/smart-assigner.service';\nimport { ComputationCache } from '../computation-cache/computation-cache.service';\n\n@Injectable()\nexport class CesiumProperties {\n  private _assignersCache = new Map<string, (oldVal: Object, newVal: Object) => Object>();\n  private _evaluatorsCache = new Map<string, (cache: ComputationCache, context: Object) => Object>();\n\n  constructor(private _parser: Parse,\n              private _jsonMapper: JsonMapper) {\n  }\n\n  _compile(expression: string, withCache = true): (cache: ComputationCache, context: Object) => Object {\n    const cesiumDesc = {};\n    const propsMap = new Map<string, { expression: string, get: Function }>();\n\n    const resultMap = this._jsonMapper.map(expression);\n\n    resultMap.forEach((resultExpression, prop) => propsMap.set(prop, {\n      expression: resultExpression,\n      get: this._parser.eval(resultExpression)\n    }));\n\n    propsMap.forEach((value, prop) => {\n      if (withCache) {\n        cesiumDesc[prop || 'undefined'] = `cache.get(\\`${value.expression}\\`, () => propsMap.get('${prop}').get(context))`;\n      } else {\n        cesiumDesc[prop || 'undefined'] = `propsMap.get('${prop}').get(context)`;\n      }\n    });\n\n    const fnBody = `return ${JSON.stringify(cesiumDesc).replace(/\"/g, '')};`;\n    const getFn = new Function('propsMap', 'cache', 'context', fnBody);\n\n    return function evaluateCesiumProps(cache: ComputationCache, context: Object): Object {\n      return getFn(propsMap, cache, context);\n    };\n  }\n\n  _build(expression: string): (oldVal: Object, newVal: Object) => Object {\n    const props = Array.from(this._jsonMapper.map(expression).keys());\n    const smartAssigner = SmartAssigner.create(props);\n\n    return function assignCesiumProps(oldVal: Object, newVal: Object) {\n      return smartAssigner(oldVal, newVal);\n    };\n  }\n\n  createEvaluator(expression: string, withCache = true, newEvaluator = false): (cache: ComputationCache, context: Object) => Object {\n    if (!newEvaluator && this._evaluatorsCache.has(expression)) {\n      return this._evaluatorsCache.get(expression);\n    }\n\n    const evaluatorFn = this._compile(expression, withCache);\n    this._evaluatorsCache.set(expression, evaluatorFn);\n\n    return evaluatorFn;\n  }\n\n  createAssigner(expression: string): (oldVal: Object, newVal: Object) => Object {\n    if (this._assignersCache.has(expression)) {\n      return this._assignersCache.get(expression);\n    }\n\n    const assignFn = this._build(expression);\n    this._assignersCache.set(expression, assignFn);\n\n    return assignFn;\n  }\n}\n","import { EventEmitter, Input, OnDestroy, OnInit, Output, Directive } from '@angular/core';\nimport { LayerService } from '../layer-service/layer-service.service';\nimport { ComputationCache } from '../computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../cesium-properties/cesium-properties.service';\nimport { AcEntity } from '../../models/ac-entity';\nimport { BasicDrawerService } from '../drawers/basic-drawer/basic-drawer.service';\nimport { IDescription } from '../../models/description';\n\nexport interface OnDrawParams {\n  acEntity: AcEntity;\n  entityId: string;\n  cesiumEntity: any;\n}\n\n/**\n *  the ancestor class for creating components.\n *  extend this class to create desc component.\n */\n@Directive()\nexport class BasicDesc implements OnInit, OnDestroy, IDescription {\n  @Input()\n  props: any;\n\n  @Output()\n  onDraw: EventEmitter<OnDrawParams> = new EventEmitter<OnDrawParams>();\n\n  @Output()\n  onRemove: EventEmitter<OnDrawParams> = new EventEmitter<OnDrawParams>();\n\n  protected _cesiumObjectsMap: Map<string, any> = new Map<string, any>();\n  private _propsEvaluateFn: Function;\n  private _propsAssignerFn: Function;\n\n  constructor(protected _drawer: BasicDrawerService,\n              protected _layerService: LayerService,\n              protected _computationCache: ComputationCache,\n              protected _cesiumProperties: CesiumProperties) {\n  }\n\n  protected _propsEvaluator(context: Object): any {\n    return this._propsEvaluateFn(this._computationCache, context);\n  }\n\n  protected _getPropsAssigner(): (cesiumObject: Object, desc: Object) => Object {\n    return (cesiumObject: Object, desc: Object) => this._propsAssignerFn(cesiumObject, desc);\n  }\n\n  getLayerService(): LayerService {\n    return this._layerService;\n  }\n\n  setLayerService(layerService: LayerService) {\n    this._layerService.unregisterDescription(this);\n    this._layerService = layerService;\n    this._layerService.registerDescription(this);\n    this._propsEvaluateFn = this._cesiumProperties.createEvaluator(this.props, this._layerService.cache, true);\n    this._propsAssignerFn = this._cesiumProperties.createAssigner(this.props);\n  }\n\n  ngOnInit(): void {\n    if (!this.props) {\n      console.error('ac-desc components error: [props] input is mandatory');\n    }\n\n    this._layerService.registerDescription(this);\n    this._propsEvaluateFn = this._cesiumProperties.createEvaluator(this.props, this._layerService.cache);\n    this._propsAssignerFn = this._cesiumProperties.createAssigner(this.props);\n  }\n\n  public getCesiumObjectsMap(): Map<string, any> {\n    return this._cesiumObjectsMap;\n  }\n\n  draw(context: any, id: string, entity: AcEntity): void {\n    const cesiumProps = this._propsEvaluator(context);\n\n    if (!this._cesiumObjectsMap.has(id)) {\n      const cesiumObject = this._drawer.add(cesiumProps);\n      this.onDraw.emit({\n        acEntity: entity,\n        cesiumEntity: cesiumObject,\n        entityId: id,\n      });\n      cesiumObject.acEntity = entity; // set the entity on the cesiumObject for later usage\n      this._cesiumObjectsMap.set(id, cesiumObject);\n    } else {\n      const cesiumObject = this._cesiumObjectsMap.get(id);\n      this.onDraw.emit({\n        acEntity: entity,\n        cesiumEntity: cesiumObject,\n        entityId: id,\n      });\n      cesiumObject.acEntity = entity; // set the entity on the cesiumObject for later usage\n      this._drawer.setPropsAssigner(this._getPropsAssigner());\n      this._drawer.update(cesiumObject, cesiumProps);\n    }\n  }\n\n  remove(id: string) {\n    const cesiumObject = this._cesiumObjectsMap.get(id);\n    if (cesiumObject) {\n      this.onRemove.emit({\n        acEntity: cesiumObject.acEntity,\n        cesiumEntity: cesiumObject,\n        entityId: id,\n      });\n      this._drawer.remove(cesiumObject);\n      this._cesiumObjectsMap.delete(id);\n    }\n  }\n\n  removeAll() {\n    this._cesiumObjectsMap.clear();\n    this._drawer.removeAll();\n  }\n\n  ngOnDestroy() {\n    this._layerService.unregisterDescription(this);\n    this.removeAll();\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\n\n/**\n *  This is a billboard implementation.\n *  The element must be a child of ac-layer element.\n *  The properties of props are the same as the properties of Entity and BillboardGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/BillboardGraphics.html\n *\n *  __Usage :__\n *  ```\n *    <ac-billboard-desc props=\"{\n *      image: track.image,\n *      position: track.position,\n *      scale: track.scale,\n *      color: track.color,\n *      name: track.name\n *    }\">\n *    </ac-billboard-desc>\n *  ```\n */\n\n@Component({\n  selector: 'ac-billboard-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcBillboardDescComponent)}],\n})\nexport class AcBillboardDescComponent extends BasicDesc {\n\n  constructor(billboardDrawer: BillboardDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(billboardDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\n\n/**\n *  This is an ellipse implementation.\n *  The element must be a child of ac-layer element.\n *  _Set `height` prop for performance enhancement_\n *  The properties of props are the same as the properties of Entity and EllipseGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipseGraphics.html\n *\n *  __Usage :__\n *  ```\n *    <ac-ellipse-desc props=\"{\n *      position: data.position,\n *      semiMajorAxis:250000.0,\n *      semiMinorAxis:400000.0,\n *      height: 0\n *    }\">\n *    </ac-ellipse-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-ellipse-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcEllipseDescComponent)}],\n})\nexport class AcEllipseDescComponent extends BasicDesc {\n  constructor(ellipseDrawer: EllipseDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { PolylineDrawerService } from '../../services/drawers/polyline-drawer/polyline-drawer.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\n\n/**\n *  This is a polyline implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and PolylineGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PolylineGraphics.html\n *\n *  __Usage:__\n *  ```\n *    <ac-polyline-desc props=\"{\n *      width : polyline.width,\n *      positions: polyline.positions,\n *      material: polyline.material\n *    }\">\n *    </ac-polyline-desc>\n * ```\n */\n@Component({\n  selector: 'ac-polyline-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcPolylineDescComponent)}],\n})\nexport class AcPolylineDescComponent extends BasicDesc {\n\n  constructor(dynamicPolylineDrawerService: PolylineDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(dynamicPolylineDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * @example\n * <ac-label-desc props=\"{\n *            position: track.position,\n *            pixelOffset : [-15,20] | pixelOffset,\n *            text: track.name,\n *            font: '15px sans-serif'\n *    }\">\n * </ac-label-desc>\n */\n@Pipe({\n  name: 'pixelOffset'\n})\nexport class PixelOffsetPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return new Cesium.Cartesian2(value[0], value[1]);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'radiansToDegrees'\n})\nexport class RadiansToDegreesPipe implements PipeTransform {\n\n  transform(value: any, args?: any): number {\n    return (360 - Math.round(180 * value / Math.PI)) % 360;\n  }\n\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\n\n/**\n *  This is a label implementation.\n *  The ac-label element must be a child of ac-layer element.\n *  The properties of props are the same as the properties of Entity and LabelGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/LabelGraphics.html\n *\n *  __Usage :__\n *  ```\n *    <ac-label-desc props=\"{\n *      position: track.position,\n *      pixelOffset : [-15,20] | pixelOffset,\n *      text: track.name,\n *      font: '15px sans-serif'\n *    }\">\n *    </ac-label-desc>\n *  ```\n */\n\n@Component({\n  selector: 'ac-label-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcLabelDescComponent)}],\n})\nexport class AcLabelDescComponent extends BasicDesc {\n\n  constructor(labelDrawer: LabelDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(labelDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: []\n})\nexport class UtilsModule {\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\n\n/**\n *  This is a circle implementation.\n *  The element must be a child of ac-layer element.\n *  semiMajorAxis ans semiMinorAxis are replaced with radius property.\n *  All other properties of props are the same as the properties of Entity and EllipseGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipseGraphics.html\n *\n *__Usage :__\n *  ```\n *    <ac-circle-desc props=\"{\n *      position: data.position,\n *      radius: 5\n *      granularity:0.08 // Optional\n *    }\">\n *    </ac-circle-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-circle-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcCircleDescComponent)}],\n})\nexport class AcCircleDescComponent extends BasicDesc {\n  constructor(ellipseDrawer: EllipseDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n  protected _propsEvaluator(context: Object): any {\n    const cesiumProps = super._propsEvaluator(context);\n\n    cesiumProps.semiMajorAxis = cesiumProps.radius;\n    cesiumProps.semiMinorAxis = cesiumProps.radius;\n    delete cesiumProps.radius;\n\n    return cesiumProps;\n  }\n\n  protected _getPropsAssigner(): (cesiumObject: Object, desc: Object) => Object {\n    return (cesiumObject: Object, desc: Object) => Object.assign(cesiumObject, desc);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\n\n/**\n *  This is an implementation of an arc.\n *  The element must be a child of ac-layer element.\n *  An arc is not cesium natively implemented and therefore it's API doesn't appear anywhere\n *\n *  __Usage :__\n *  ```\n *    <ac-arc-desc props=\"{\n *          center: arc.center,\n *          angle: arc.angle,\n *          delta: arc.delta,\n *          radius: arc.radius,\n *          color : arc.color - The color should be Cesium.Color type\n *    }\">\n *    </ac-arc-desc>\n *    ```\n *\n *    description of the props :\n *    center - The arc is a section of an outline of a circle, This is the center of the circle\n *    angle - the initial angle of the arc in radians\n *    delta - the spreading of the arc,\n *    radius - the distance from the center to the arc\n *\n *    for example :\n *    angle - 0\n *    delta - π\n *\n *    will draw an half circle\n */\n\n@Component({\n  selector: 'ac-arc-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcArcDescComponent)}],\n})\nexport class AcArcDescComponent extends BasicDesc {\n\n  constructor(arcDrawer: ArcDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(arcDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n}\n","/**\n * Angular Cesium parent entity, all entities should inherit from it.\n * ```typescript\n * entity= new AcEntity({\n *  \tid: 0,\n *  \tname: 'click me',\n *  \tposition: Cesium.Cartesian3.fromRadians(0.5, 0.5),\n * });\n * ```\n */\nexport class AcEntity {\n\n  /**\n   * Creates entity from a json\n   * @param json entity object\n   * @returns entity as AcEntity\n   */\n  static create(json?: any) {\n    if (json) {\n      return Object.assign(new AcEntity(), json);\n    }\n    return new AcEntity();\n  }\n\n  /**\n   * Creates entity from a json\n   * @param json (Optional) entity object\n   */\n  constructor(json?: any) {\n    Object.assign(this, json);\n  }\n}\n","import { ActionType } from './action-type.enum';\nimport { AcEntity } from './ac-entity';\n\n/**\n * Interface of  Angular2Cesium notification.\n * ac-layer receives an observer of AcNotifications\n */\nexport interface AcNotification {\n  id: string;\n  entity?: AcEntity;\n  actionType: ActionType;\n}\n\nexport class AcNotification {\n  id: string;\n  entity?: AcEntity;\n  actionType: ActionType;\n}\n","/**\n * EventModifier options for registration on map-event-manager.\n */\nexport enum CesiumEventModifier {\n  ALT = Cesium.KeyboardEventModifier.ALT,\n  CTRL = Cesium.KeyboardEventModifier.CTRL,\n  SHIFT = Cesium.KeyboardEventModifier.SHIFT,\n}\n","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { CesiumService } from '../../services/cesium/cesium.service';\nimport { Checker } from '../../utils/checker';\nimport { MapLayerProviderOptions } from '../../models';\n\n/**\n *  This component is used for adding a map provider service to the map (ac-map)\n *  options according to selected map provider MapLayerProviderOptions enum.\n *  additional setting can be done with cesium imageryLayer (exposed as class member)\n *  check out: https://cesiumjs.org/Cesium/Build/Documentation/ImageryLayer.html\n *  and: https://cesiumjs.org/Cesium/Build/Documentation/ImageryLayerCollection.html\n *\n *\n *  __Usage :__\n *  ```\n *    <ac-map-layer-provider [options]=\"optionsObject\" [provider]=\"myProvider\">\n *    </ac-map-layer-provider>\n *  ```\n */\n@Component({\n  selector: 'ac-map-layer-provider',\n  template: '',\n})\nexport class AcMapLayerProviderComponent implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * refer to cesium docs for details https://cesiumjs.org/Cesium/Build/Documentation/ImageryProvider.html\n   */\n  @Input()\n  options: { url?: string } = {};\n\n  /**\n   * the provider\n   */\n  @Input()\n  provider: any = MapLayerProviderOptions.OFFLINE;\n\n  /**\n   * index (optional) - The index to add the layer at. If omitted, the layer will added on top of all existing layers.\n   */\n  @Input()\n  index: Number;\n\n  /**\n   * show (optional) - Determines if the map layer is shown.\n   */\n  @Input()\n  show = true;\n\n  /**\n   * The alpha blending value of this layer: 0.0 to 1.0\n   */\n  @Input()\n  alpha = 1.0;\n\n  /**\n   * The brightness of this layer: 0.0 to 1.0\n   */\n  @Input()\n  brightness = 1.0;\n\n  /**\n   * The contrast of this layer: 0.0 to 1.0\n   */\n  @Input()\n  contrast = 1.0;\n\n  public imageryLayer: any;\n  public imageryLayersCollection: any;\n  public layerProvider: any;\n\n  constructor(private cesiumService: CesiumService) {\n    this.imageryLayersCollection = this.cesiumService.getScene().imageryLayers;\n  }\n\n  private createOfflineMapProvider() {\n    return Cesium.createTileMapServiceImageryProvider({\n      url: Cesium.buildModuleUrl('Assets/Textures/NaturalEarthII')\n    });\n  }\n\n  ngOnInit() {\n    if (!Checker.present(this.options.url) && this.provider !== MapLayerProviderOptions.OFFLINE) {\n      throw new Error('options must have a url');\n    }\n    switch (this.provider) {\n      case MapLayerProviderOptions.WebMapService:\n      case MapLayerProviderOptions.WebMapTileService:\n      case MapLayerProviderOptions.ArcGisMapServer:\n      case MapLayerProviderOptions.SingleTileImagery:\n      case MapLayerProviderOptions.BingMaps:\n      case MapLayerProviderOptions.GoogleEarthEnterpriseMaps:\n      case MapLayerProviderOptions.MapBox:\n      case MapLayerProviderOptions.UrlTemplateImagery:\n      case MapLayerProviderOptions.MapTileService:\n      case MapLayerProviderOptions.OpenStreetMap:\n        this.layerProvider = new this.provider(this.options);\n        break;\n      case MapLayerProviderOptions.OFFLINE:\n        this.layerProvider = this.createOfflineMapProvider();\n        break;\n      default:\n        console.log('ac-map-layer-provider: [provider] wasn\\'t found. setting OFFLINE provider as default');\n        this.layerProvider = this.createOfflineMapProvider();\n        break;\n    }\n    if (this.show) {\n      this.imageryLayer = this.imageryLayersCollection.addImageryProvider(this.layerProvider, this.index);\n      this.imageryLayer.alpha = this.alpha;\n      this.imageryLayer.contrast = this.contrast;\n      this.imageryLayer.brightness = this.brightness;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['show'] && !changes['show'].isFirstChange()) {\n      const showValue = changes['show'].currentValue;\n      if (showValue) {\n        if (this.imageryLayer) {\n          this.imageryLayersCollection.add(this.imageryLayer, this.index);\n        } else {\n          this.imageryLayer = this.imageryLayersCollection.addImageryProvider(this.layerProvider, this.index);\n          this.imageryLayer.alpha = this.alpha;\n          this.imageryLayer.contrast = this.contrast;\n          this.imageryLayer.brightness = this.brightness;\n        }\n      } else if (this.imageryLayer) {\n        this.imageryLayersCollection.remove(this.imageryLayer, false);\n      }\n    }\n\n    if (changes['alpha'] && !changes['alpha'].isFirstChange() && this.imageryLayer) {\n      this.imageryLayer.alpha = this.alpha;\n    }\n    if (changes['contrast'] && !changes['contrast'].isFirstChange() && this.imageryLayer) {\n      this.imageryLayer.contrast = this.contrast;\n    }\n    if (changes['brightness'] && !changes['brightness'].isFirstChange() && this.imageryLayer) {\n      this.imageryLayer.brightness = this.brightness;\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.imageryLayer) {\n      this.imageryLayersCollection.remove(this.imageryLayer, true);\n    }\n  }\n}\n","import { Component, OnInit, Input, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { CesiumService } from '../../services/cesium/cesium.service';\nimport { Checker } from '../../utils/checker';\nimport { MapTerrainProviderOptions } from '../../models/map-terrain-provider-options.enum';\n\n/**\n *  This component is used for adding a terrain provider service to the map (ac-map)\n *  options according to selected terrain provider MapTerrainProviderOptions enum.\n *\n *\n *  __Usage :__\n *  ```\n *    <ac-map-terrain-provider [options]=\"optionsObject\" [provider]=\"myProvider\">\n *    </ac-map-terrain-provider>\n *  ```\n */\n@Component({\n  selector: 'ac-map-terrain-provider',\n  template: '',\n})\nexport class AcMapTerrainProviderComponent implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * refer to cesium docs for details https://cesiumjs.org/Cesium/Build/Documentation/TerrainProvider.html\n   */\n  @Input()\n  options: { url?: string } = {};\n\n  /**\n   * the provider\n   */\n  @Input()\n  provider: any;\n\n  /**\n   * show (optional) - Determines if the map layer is shown.\n   */\n  @Input()\n  show = true;\n\n  private terrainProvider: any;\n  private defaultTerrainProvider: any;\n\n  constructor(private cesiumService: CesiumService) {\n  }\n\n  ngOnInit(): void {\n    if (!Checker.present(this.options.url)\n      && this.provider !== MapTerrainProviderOptions.Ellipsoid\n      && this.provider !== MapTerrainProviderOptions.WorldTerrain) {\n      throw new Error('options must have a url');\n    }\n    this.defaultTerrainProvider = this.cesiumService.getViewer().terrainProvider;\n    switch (this.provider) {\n      case MapTerrainProviderOptions.CesiumTerrain:\n      case MapTerrainProviderOptions.ArcGISTiledElevation:\n      case MapTerrainProviderOptions.GoogleEarthEnterprise:\n      case MapTerrainProviderOptions.VRTheWorld:\n      case MapTerrainProviderOptions.Ellipsoid:\n        this.terrainProvider = new this.provider(this.options);\n        break;\n      case MapTerrainProviderOptions.WorldTerrain:\n        this.terrainProvider = this.provider(this.options);\n        break;\n      default:\n        console.log('ac-map-terrain-provider: [provider] wasn\\'t found. setting OFFLINE provider as default');\n        this.terrainProvider = this.defaultTerrainProvider;\n        break;\n    }\n    if (this.show) {\n      this.cesiumService.getViewer().terrainProvider = this.terrainProvider;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['show'] && !changes['show'].isFirstChange()) {\n      const showValue = changes['show'].currentValue;\n      if (showValue) {\n        if (this.terrainProvider) {\n          this.cesiumService.getViewer().terrainProvider = this.terrainProvider;\n        }\n      } else {\n        this.cesiumService.getViewer().terrainProvider = this.defaultTerrainProvider;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.cesiumService.getViewer().terrainProvider = this.defaultTerrainProvider;\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\n\n/**\n *  This is a point implementation.\n *  The ac-label element must be a child of ac-layer element.\n *  The properties of props are the same as the properties of Entity and PointGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PointGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-point-desc props=\"{\n *     pixelSize : point.pixelSize, //optional\n *     position : point.positions,\n *     color : point.color  //optional\n *   }\">\n *   </ac-point-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-point-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcPointDescComponent)}],\n})\nexport class AcPointDescComponent extends BasicDesc {\n\n  constructor(pointDrawerService: PointDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(pointDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a label implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and LabelGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/LabelGraphics.html\n *\n *  __Usage:__\n *  ```\n *  <ac-label [props]=\"{\n *    position: position,\n *    text: 'labelText',\n *    font: '30px sans-serif',\n *    fillColor : aquamarine\n *  }\">\n *  </ac-label>;\n *  ```\n */\n\n@Component({\n  selector: 'ac-label',\n  template: '',\n})\nexport class AcLabelComponent extends EntityOnMapComponent {\n\n  constructor(labelDrawer: LabelDrawerService, mapLayers: MapLayersService) {\n    super(labelDrawer, mapLayers);\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\nimport { PolylineDrawerService } from '../../services/drawers/polyline-drawer/polyline-drawer.service';\n\n/**\n *  This is a polyline implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Polyline Primitive:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Polyline.html\n *\n *  __Usage:__\n *  ```\n *  <ac-polyline [props]=\"{\n *    position: position,\n *    text: 'labelText',\n *    font: '30px sans-serif'\n *    color: Cesium.Color.GREEN\n *  }\">;\n *  </ac-polyline>\n *  ```\n */\n\n@Component({\n  selector: 'ac-polyline',\n  template: '',\n})\nexport class AcPolylineComponent extends EntityOnMapComponent {\n\n  constructor(polylineDrawer: PolylineDrawerService, mapLayers: MapLayersService) {\n    super(polylineDrawer, mapLayers);\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is an ellipse implementation.\n *  The element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and EllipseGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipseGraphics.html\n *\n *  __Usage:__\n *  ```\n *  <ac-ellipse [props]=\"{\n *    position: position,\n *    semiMajorAxis:40000.0,\n *    semiMinorAxis:25000.0,\n *    rotation : 0.785398\n *  }\">\n *  </ac-ellipse>\n *  ```\n */\n\n@Component({\n  selector: 'ac-ellipse',\n  template: '',\n})\nexport class AcEllipseComponent extends EntityOnMapComponent {\n\n  constructor(ellipseDrawer: EllipseDrawerService, mapLayers: MapLayersService) {\n    super(ellipseDrawer, mapLayers);\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a point implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and PointGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PointGraphics.html\n *\n *  __Usage:__\n *  ```\n *  <ac-point [props]=\"{\n *    position: position,\n *    width: 3\n *  }\">\n *  </ac-point>\n *  ```\n */\n\n@Component({\n  selector: 'ac-point',\n  template: '',\n})\nexport class AcPointComponent extends EntityOnMapComponent {\n\n  constructor(pointDrawer: PointDrawerService, mapLayers: MapLayersService) {\n    super(pointDrawer, mapLayers);\n  }\n}\n","import { Component, DoCheck, ElementRef, Input, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { CesiumService } from '../../services/cesium/cesium.service';\n\n/**\n *  This is an html implementation.\n *  The ac-html element must be a child of ac-map element.\n *  __Usage:__\n *  ```\n *  <ac-html [props]=\"{position: position, show: true}\">;\n *    <p>html element</p>\n *  </ac-html>\n *  ```\n */\n\n@Component({\n  selector: 'ac-html',\n  template: `<ng-content></ng-content>`,\n  styles: [`:host {\n                position: absolute;\n                z-index: 100;\n\t\t\t\t}`]\n})\nexport class AcHtmlComponent implements DoCheck, OnDestroy, OnInit {\n\n\n  @Input() props: any;\n  private isDraw = false;\n  preRenderEventListener: () => void;\n\n  constructor(private cesiumService: CesiumService, private elementRef: ElementRef, private renderer: Renderer2) {\n  }\n\n  setScreenPosition(screenPosition: any) {\n    if (screenPosition) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'top', `${screenPosition.y}px`);\n      this.renderer.setStyle(this.elementRef.nativeElement, 'left', `${screenPosition.x}px`);\n    }\n  }\n\n  ngOnInit(): void {\n    this.cesiumService.getMap().getMapContainer().appendChild(this.elementRef.nativeElement);\n    if (this.props.show === false) {\n      this.hideElement();\n    }\n  }\n\n  remove() {\n    if (this.isDraw) {\n      this.isDraw = false;\n      this.cesiumService.getScene().preRender.removeEventListener(this.preRenderEventListener);\n      this.hideElement();\n    }\n  }\n\n  hideElement() {\n    this.renderer.setStyle(this.elementRef.nativeElement, 'display', `none`);\n  }\n\n  add() {\n    if (!this.isDraw) {\n      this.isDraw = true;\n      this.preRenderEventListener = () => {\n        const screenPosition = Cesium.SceneTransforms.wgs84ToWindowCoordinates(this.cesiumService.getScene(),\n          this.props.position);\n        this.setScreenPosition(screenPosition);\n      };\n      this.renderer.setStyle(this.elementRef.nativeElement, 'display', `block`);\n      this.cesiumService.getScene().preRender.addEventListener(this.preRenderEventListener);\n    }\n  }\n\n  ngDoCheck() {\n    if (this.props.show === undefined || this.props.show) {\n      this.add();\n    } else {\n      this.remove();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.remove();\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a circle implementation.\n *  The element must be a child of ac-map element.\n *  semiMajorAxis ans semiMinorAxis are replaced with radius property.\n *  All other properties of props are the same as the properties of Entity and EllipseGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipseGraphics.html\n *\n *  __Usage:__\n *  ```\n *  <ac-circle [props]=\"{\n *    position: position,\n *    radius:40000.0,\n *    granularity:0.03,\n *  }\">\n *  </ac-circle>\n *  ```\n */\n\n@Component({\n  selector: 'ac-circle',\n  template: '',\n})\nexport class AcCircleComponent extends EntityOnMapComponent {\n\n  constructor(ellipseDrawerService: EllipseDrawerService, mapLayers: MapLayersService) {\n    super(ellipseDrawerService, mapLayers);\n  }\n\n  private updateEllipseProps() {\n    this.props.semiMajorAxis = this.props.radius;\n    this.props.semiMinorAxis = this.props.radius;\n    this.props.rotation = 0.0;\n  }\n\n  drawOnMap() {\n    this.updateEllipseProps();\n    super.drawOnMap();\n  }\n\n  updateOnMap() {\n    this.updateEllipseProps();\n    super.updateOnMap();\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is an implementation of an arc.\n *  The element must be a child of ac-map element.\n *  An arc is not natively implemented in cesium.\n *\n *  __Usage :__\n *  ```\n *    <ac-arc-desc geometryProps=\"{\n *          center: arc.center,\n *          angle: arc.angle,\n *          delta: arc.delta,\n *          radius: arc.radius\n *       }\"\n *       instanceProps=\"{\n *          attributes: arc.attributes\n *       }\"\n *       primitiveProps=\"{\n *          appearance: arc.appearance\n *       }\">\n *    </ac-arc-desc>\n *    ```\n */\n\n@Component({\n  selector: 'ac-arc',\n  template: '',\n})\nexport class AcArcComponent extends EntityOnMapComponent implements OnChanges {\n\n  @Input()\n  geometryProps: any;\n  @Input()\n  instanceProps: any;\n  @Input()\n  primitiveProps: any;\n\n  constructor(arcDrawer: ArcDrawerService, mapLayers: MapLayersService) {\n    super(arcDrawer, mapLayers);\n  }\n\n  updateOnMap() {\n    if (this.selfPrimitiveIsDraw) {\n      this.removeFromMap();\n      this.drawOnMap();\n    }\n  }\n\n  drawOnMap() {\n    this.selfPrimitiveIsDraw = true;\n    return this.selfPrimitive = this._drawer.add(this.geometryProps, this.instanceProps, this.primitiveProps);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const geometryProps = changes['geometryProps'];\n    const instanceProps = changes['instanceProps'];\n    const primitiveProps = changes['primitiveProps'];\n    if (geometryProps.currentValue !== geometryProps.previousValue ||\n      instanceProps.currentValue !== instanceProps.previousValue ||\n      primitiveProps.currentValue !== primitiveProps.previousValue) {\n      this.updateOnMap();\n    }\n  }\n}\n","import { Component, forwardRef, OnInit } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\n\n/**\n *  This is a polygon implementation.\n *  The properties of props are the same as the properties of Entity and PolygonGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PolygonGraphics.html\n *\n *  __Usage:__\n *  ```\n *    <ac-polygon-desc props=\"{\n *      hierarchy: polygon.hierarchy,\n *      material: polygon.material,\n *      height: polygon.height\n *    }\">\n *    </ac-polygon-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-polygon-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcPolygonDescComponent)}],\n})\nexport class AcPolygonDescComponent extends BasicDesc implements OnInit {\n\n  constructor(polygonDrawer: PolygonDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(polygonDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { PlonterService } from '../../services/plonter/plonter.service';\nimport { CoordinateConverter } from '../../services/coordinate-converter/coordinate-converter.service';\n\n@Component(\n  {\n    selector: 'ac-default-plonter',\n    template: `\n      <ac-html *ngIf=\"plonterService.plonterShown\" [props]=\"{\n        position: plonterPosition\n      }\">\n        <div class=\"plonter-context-menu\">\n          <div *ngFor=\"let entity of plonterService.entitesToPlonter\">\n            <div class=\"plonter-item\" (click)=\"chooseEntity(entity)\">{{ entity?.name || entity?.id }}\n            </div>\n          </div>\n        </div>\n      </ac-html>\n    `,\n    styles: [`\n        .plonter-context-menu {\n            background-color: rgba(250, 250, 250, 0.8);\n            box-shadow: 1px 1px 5px 0px rgba(0, 0, 0, 0.15);\n        }\n\n        .plonter-item {\n            cursor: pointer;\n            padding: 2px 15px;\n            text-align: start;\n        }\n\n        .plonter-item:hover {\n            background-color: rgba(0, 0, 0, 0.15);\n        }\n\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [CoordinateConverter],\n  }\n)\nexport class AcDefaultPlonterComponent implements OnInit {\n\n  constructor(public plonterService: PlonterService,\n              private cd: ChangeDetectorRef,\n              private geoConverter: CoordinateConverter) {\n  }\n\n  ngOnInit() {\n    this.plonterService.plonterChangeNotifier.subscribe(() => this.cd.detectChanges());\n  }\n\n  get plonterPosition() {\n    if (this.plonterService.plonterShown) {\n      const screenPos = this.plonterService.plonterClickPosition.endPosition;\n      return this.geoConverter.screenToCartesian3(screenPos);\n    }\n  }\n\n  chooseEntity(entity: any) {\n    this.plonterService.resolvePlonter(entity);\n  }\n}\n","import { Component } from '@angular/core';\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a polygon implementation.\n *  The ac-label element must be a child of ac-map element.\n *  _Set `height` prop for performance enhancement_\n *  The properties of props are the same as the properties of Entity and PolygonGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PolygonGraphics.html\n *\n *  __Usage:__\n *  ```\n *    <ac-polygon props=\"{\n *      hierarchy: polygon.hierarchy,\n *      material: polygon.material,\n *      height: polygon.height\n *    }\">\n *    </ac-polygon>\n *  ```\n */\n@Component({\n  selector: 'ac-polygon',\n  template: '',\n})\nexport class AcPolygonComponent extends EntityOnMapComponent {\n  constructor(polygonDrawer: PolygonDrawerService, mapLayers: MapLayersService) {\n    super(polygonDrawer, mapLayers);\n  }\n}\n","import { Input, OnInit, Directive } from '@angular/core';\nimport { BasicDesc } from '../basic-desc/basic-desc.service';\nimport { LayerService } from '../layer-service/layer-service.service';\nimport { ComputationCache } from '../computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../cesium-properties/cesium-properties.service';\nimport { StaticPrimitiveDrawer } from '../drawers/static-dynamic/static-primitive-drawer/static-primitive-drawer.service';\nimport { AcEntity } from '../../models/ac-entity';\n\n@Directive()\nexport class BasicStaticPrimitiveDesc extends BasicDesc implements OnInit {\n  @Input()\n  geometryProps: any;\n  @Input()\n  instanceProps: any;\n  @Input()\n  primitiveProps: any;\n\n  private _geometryPropsEvaluator: Function;\n  private _instancePropsEvaluator: Function;\n  private _primitivePropsEvaluator: Function;\n\n  constructor(protected _staticPrimitiveDrawer: StaticPrimitiveDrawer, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(_staticPrimitiveDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n  ngOnInit(): void {\n    this._layerService.registerDescription(this);\n\n    this._geometryPropsEvaluator = this._cesiumProperties.createEvaluator(this.geometryProps);\n    this._instancePropsEvaluator = this._cesiumProperties.createEvaluator(this.instanceProps);\n    this._primitivePropsEvaluator = this._cesiumProperties.createEvaluator(this.primitiveProps);\n  }\n\n  draw(context: any, id: string, entity: AcEntity): any {\n    const geometryProps = this._geometryPropsEvaluator(this._computationCache, context);\n    const instanceProps = this._instancePropsEvaluator(this._computationCache, context);\n    const primitiveProps = this._primitivePropsEvaluator(this._computationCache, context);\n\n    if (!this._cesiumObjectsMap.has(id)) {\n      const primitive = this._staticPrimitiveDrawer.add(geometryProps, instanceProps, primitiveProps);\n      primitive.acEntity = entity; // set the entity on the primitive for later usage\n      this._cesiumObjectsMap.set(id, primitive);\n    } else {\n      const primitive = this._cesiumObjectsMap.get(id);\n      this._staticPrimitiveDrawer.update(primitive, geometryProps, instanceProps, primitiveProps);\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { BasicStaticPrimitiveDesc } from '../../../services/basic-primitive-desc/basic-static-primitive-desc.service';\nimport { StaticEllipseDrawerService } from '../../../services/drawers/static-dynamic/ellipse-drawer/ellipse-drawer.service';\n\n/**\n *\n * @deprecated use ac-ellipse-desc instead\n *\n *  This is a static (position, color, etc.. are not updated) implementation of an ellipse.\n *  __usage:__\n *  ```\n *  &lt;ac-static-ellipse-desc-desc\n *      geometryProps=\"{\n *          center: ellipse.geometry.center,\n *          semiMajorAxis: ellipse.geometry.semiMajorAxis,\n *          semiMinorAxis: ellipse.geometry.semiMinorAxis,\n *          height: ellipse.geometry.height,\n *          rotation: ellipse.geometry.rotation\n *      }\"\n *      instanceProps=\"{\n *          attributes: ellipse.attributes //Optional\n *      }\"\n *      primitiveProps=\"{\n *          appearance: ellipse.appearance //Optional\n *      }\"&gt;\n *  &lt;/ac-static-ellipse-desc-desc&gt;\n *  ```\n */\n@Component({\n  selector: 'ac-static-ellipse-desc',\n  template: ''\n})\nexport class AcStaticEllipseDescComponent extends BasicStaticPrimitiveDesc {\n  constructor(ellipseDrawer: StaticEllipseDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { BasicDesc } from '../../../services/basic-desc/basic-desc.service';\nimport { DynamicEllipseDrawerService } from '../../../services/drawers/static-dynamic/ellipse-drawer/dynamic-ellipse-drawer.service';\n\n/**\n *\n *\n *  This is a dynamic(position is updatable) implementation of an ellipse.\n *\n *  __Usage :__\n *  ```\n *    &lt;ac-dynamic-ellipse-desc props=\"{\n *      center: data.position,\n *      semiMajorAxis:250000.0,\n *      semiMinorAxis:400000.0,\n *      rotation : 0.785398,\n *      width:3, // Optional\n *      granularity:0.08 // Optional\n *      }\"&gt;\n *    \">\n *    &lt;/ac-dynamic-ellipse-desc&gt;\n *  ```\n *  __param:__ {Cesium.Cartesian3} center\n *  __param:__ {number} semiMajorAxis\n *  __param:__ {number} semiMinorAxis\n *  __param:__ {number} rotation\n *   __param__: {number} [1] width\n *   __param__: {number} [0.003] granularity\n */\n@Component({\n  selector: 'ac-dynamic-ellipse-desc',\n  template: '',\n})\nexport class AcDynamicEllipseDescComponent extends BasicDesc {\n  constructor(ellipseDrawer: DynamicEllipseDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","// tslint:disable\nimport { Component } from '@angular/core';\nimport { BasicDesc } from '../../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { DynamicPolylineDrawerService } from '../../../services/drawers/static-dynamic/dynamic-polyline-drawer/dynamic-polyline-drawer.service';\n\n// tslint:enable\n/**\n * @deprecated use ac-polylinc-desc instead\n *\n *  This is a dynamic(position is updatable) implementation of an polyline.\n *  The ac-dynamic-polyline-desc element must be a child of ac-layer element.\n *  __Usage:__\n *  ```\n *    &lt;ac-dynamic-polyline-desc props=\"{width : polyline.width, //optional\n *                                      positions: polyline.positions,\n *                                      material: polyline.material //optional\n *                                      }\"\n *    &gt;\n *    &lt;/ac-dynamic-polyline-desc&gt;\n * ```\n */\n@Component({\n  selector: 'ac-dynamic-polyline-desc',\n  template: ''\n})\nexport class AcDynamicPolylineDescComponent extends BasicDesc {\n\n  constructor(dynamicPolylineDrawerService: DynamicPolylineDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(dynamicPolylineDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","// tslint:disable\nimport { Component } from '@angular/core';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { BasicStaticPrimitiveDesc } from '../../../services/basic-primitive-desc/basic-static-primitive-desc.service';\nimport { StaticPolygonDrawerService } from '../../../services/drawers/static-dynamic/static-polygon-drawer/polygon-drawer.service';\n\n// tslint:enable\n/**\n * @deprecated use ac-ploygon-desc instead\n *\n *  This is a static (position, color, etc.. are not updated) implementation of a polygon.\n *  __Usage:__\n *  ```\n *    &lt;ac-static-polygon-desc\n *          geometryProps=\"{\n *                     polygonHierarchy: polygon.geometry.polygonHierarchy,\n *                     height: polygon.geometry.height,\n *                     granularity: polygon.geometry.granularity\n *                 }\"\n *          instanceProps=\"{\n *                     attributes: polygon.attributes\n *                 }\"\n *          primitiveProps=\"{\n *                     appearance: polygon.appearance\n *                 }\"\n *    &gt;&lt;/ac-static-polygon-desc&gt;\n *    ```\n */\n@Component({\n  selector: 'ac-static-polygon-desc',\n  template: '',\n})\nexport class AcStaticPolygonDescComponent extends BasicStaticPrimitiveDesc {\n  constructor(polygonDrawer: StaticPolygonDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(polygonDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { BasicStaticPrimitiveDesc } from '../../../services/basic-primitive-desc/basic-static-primitive-desc.service';\nimport { StaticCircleDrawerService } from '../../../services/drawers/static-dynamic/static-circle-drawer/static-circle-drawer.service';\n\n/**\n * @deprecated use ac-circle-desc\n *\n *  This is a static (position, color, etc.. are not updated) implementation of an circle.\n *  __usage:__\n *  ```\n *    &lt;ac-static-circle-desc\n *      geometryProps=\"{\n *          center: circle.geometry.center,\n *          radius: circle.geometry.radius,\n *      }\"\n *      instanceProps=\"{\n *          attributes: circle.attributes //Optional\n *      }\"\n *      primitiveProps=\"{\n *          appearance: circle.appearance //Optional\n *      }\"&gt;\n *    &lt;/ac-static-circle-desc&gt;\n *    ```\n */\n@Component({\n  selector: 'ac-static-circle',\n  template: ''\n})\nexport class AcStaticCircleDescComponent extends BasicStaticPrimitiveDesc {\n  constructor(staticCircleDrawer: StaticCircleDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(staticCircleDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { BasicDesc } from '../../../services/basic-desc/basic-desc.service';\nimport { DynamicEllipseDrawerService } from '../../../services/drawers/static-dynamic/ellipse-drawer/dynamic-ellipse-drawer.service';\n\n/**\n * @deprecated use ac-circle-desc instead\n *\n *  This is a dynamic(position is updatable) implementation of an circle.\n __Usage :__\n *  ```\n *    &lt;ac-dynamic-circle-desc props=\"{\n *      center: data.position,\n *      radius: 5\n *      rotation : 0.785398,\n *      width:3, // Optional\n *      granularity:0.08 // Optional\n *      }\"&gt;\n *    &lt;/ac-dynamic-circle-desc&gt;\n *  ```\n *\n *  __param__: {Cesium.Cartesian3} center\n *   __param__: {number} rotation\n *   __param__: {number} radius in meters\n *   __param__: {number} [1] width\n *   __param__: {number} [0.003] granularity\n */\n@Component({\n  selector: 'ac-dynamic-circle-desc',\n  template: ''\n})\nexport class AcDynamicCircleDescComponent extends BasicDesc {\n  constructor(ellipseDrawer: DynamicEllipseDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n  protected _propsEvaluator(context: Object): any {\n    const cesiumProps = super._propsEvaluator(context);\n\n    cesiumProps.semiMajorAxis = cesiumProps.radius;\n    cesiumProps.semiMinorAxis = cesiumProps.radius;\n\n    return cesiumProps;\n  }\n}\n","// tslint:disable\nimport { Component } from '@angular/core';\nimport { StaticPolylineDrawerService } from '../../../services/drawers/static-dynamic/static-polyline-drawer/static-polyline-drawer.service';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { BasicStaticPrimitiveDesc } from '../../../services/basic-primitive-desc/basic-static-primitive-desc.service';\n\n// tslint:enable\n\n/**\n * @deprecated use ac-ployline-desc instead\n *\n *  This is a static implementation of an polyline.\n *  __usage:__\n *  ```\n *    &ltac-static-polyline-desc\n *            geometryProps=\"{\n *            \twidth: poly.geometry.width,\n *            \tpositions: poly.geometry.positions\n *            }\"\n *            instanceProps=\"{\n *              attributes: {\n *                  Cesium.ColorGeometryInstanceAttribute.fromColor(Cesium.Color.fromRandom())\n *              }\n *            }\"\n *            primitiveProps=\"{\n *              appearance: new Cesium.PolylineColorAppearance()\n *    }\"&gt&lt/ac-static-polyline-desc&gt\n *  ```\n */\n@Component({\n  selector: 'ac-static-polyline-desc',\n  template: ''\n})\nexport class AcStaticPolylineDescComponent extends BasicStaticPrimitiveDesc {\n  constructor(polylineDrawerService: StaticPolylineDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(polylineDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef, OnInit } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ModelDrawerService } from '../../services/drawers/model-drawer/model-drawer.service';\n\n/**\n *  This is a model implementation.\n *  The ac-model element must be a child of ac-layer element.\n *  The properties of props are the same as the properties of Entity and ModelGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/ModelGraphics.html\n *\n *  __Usage:__\n *  ```\n *    <ac-model-desc props=\"{\n *       position : Cesium.Cartesian3.fromDegrees(-123.0744619, 44.0503706),\n *       uri : '../../SampleData/models/CesiumGround/Cesium_Ground.gltf'\n *   }\n *    }\">\n *    </ac-model-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-model-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcModelDescComponent)}],\n})\nexport class AcModelDescComponent extends BasicDesc implements OnInit {\n\n  constructor(modelDrawer: ModelDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(modelDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { CesiumService } from '../../services/cesium/cesium.service';\nimport { Checker } from '../../utils/checker';\n\n/**\n *  This component is used for adding a 3d tileset layer to the map (ac-map).\n *  options according to `Cesium3DTileset` definition.\n *  check out: https://cesiumjs.org/Cesium/Build/Documentation/Cesium3DTileset.html\n *\n *\n *  __Usage :__\n *  ```\n *    <ac-3d-tile-layer [options]=\"optionsObject\">\n *    </ac-3d-tile-layer>\n *  ```\n */\n@Component({\n  selector: 'ac-3d-tile-layer',\n  template: '',\n})\nexport class AcTileset3dComponent implements OnInit, OnChanges, OnDestroy {\n  /**\n   * refer to cesium docs for details https://cesiumjs.org/Cesium/Build/Documentation/Cesium3DTileset.html\n   */\n  @Input()\n  options: { url?: string } = {};\n\n  /**\n   * index (optional) - The index to add the layer at. If omitted, the layer will added on top of all existing layers.\n   */\n  @Input()\n  index: Number;\n\n  /**\n   * show (optional) - Determines if the map layer is shown.\n   */\n  @Input()\n  show = true;\n\n  /**\n   * show (optional) - Sets 3Dtiles style.\n   */\n  @Input()\n  style: any;\n\n  public tilesetInstance: any = null;\n  private _3dtilesCollection: any;\n\n  constructor(private cesiumService: CesiumService) {\n  }\n\n  ngOnInit() {\n    if (!Checker.present(this.options.url)) {\n      throw new Error('Options must have a url');\n    }\n\n    this._3dtilesCollection = new Cesium.PrimitiveCollection();\n    this.cesiumService.getScene().primitives.add(this._3dtilesCollection);\n\n    if (this.show) {\n      this.tilesetInstance = this._3dtilesCollection.add(new Cesium.Cesium3DTileset(this.options), this.index);\n      if (this.style) {\n        this.tilesetInstance.style = new Cesium.Cesium3DTileStyle(this.style);\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['show'] && !changes['show'].isFirstChange()) {\n      const showValue = changes['show'].currentValue;\n\n      if (showValue) {\n        if (this.tilesetInstance) {\n          this._3dtilesCollection.add(this.tilesetInstance, this.index);\n        } else {\n          this.tilesetInstance = this._3dtilesCollection.add(new Cesium.Cesium3DTileset(this.options), this.index);\n          if (this.style) {\n            this.tilesetInstance.style = new Cesium.Cesium3DTileStyle(this.style);\n          }\n        }\n      } else if (this.tilesetInstance) {\n        this._3dtilesCollection.remove(this.tilesetInstance, false);\n      }\n    }\n    if (changes['style'] && !changes['style'].isFirstChange()) {\n      const styleValue = changes['style'].currentValue;\n      if (this.tilesetInstance) {\n        this.tilesetInstance.style = new Cesium.Cesium3DTileStyle(this.style);\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.tilesetInstance) {\n      this._3dtilesCollection.remove(this.tilesetInstance, false);\n    }\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { BoxDrawerService } from '../../services/drawers/box-dawer/box-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-box-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity (like `position`)\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/BoxGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-box-desc props=\"{\n *     show : point.show, //optional\n *     position : point.positions,\n *     material : point.color  //optional\n *   }\">\n *   </ac-box-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-box-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcBoxDescComponent)}],\n})\nexport class AcBoxDescComponent extends BasicDesc {\n\n  constructor(drawerService: BoxDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { CylinderDrawerService } from '../../services/drawers/cylinder-dawer/cylinder-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-box-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity (like `position`)\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/CylinderGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-cylinder-desc props=\"{\n *     show : cylinder.show, //optional\n *     position : cylinder.position,\n *     material : cylinder.color  //optional\n *   }\">\n *   </ac-cylinder-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-cylinder-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcCylinderDescComponent)}],\n})\nexport class AcCylinderDescComponent extends BasicDesc {\n\n  constructor(drawerService: CylinderDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { CorridorDrawerService } from '../../services/drawers/corridor-dawer/corridor-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-box-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/CorridorGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-corridor-desc props=\"{\n *     show : point.show, //optional\n *     positions : point.positions,\n *     material : point.color  //optional\n *   }\">\n *   </ac-corridor-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-corridor-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcCorridorDescComponent)}],\n})\nexport class AcCorridorDescComponent extends BasicDesc {\n\n  constructor(drawerService: CorridorDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { EllipsoidDrawerService } from '../../services/drawers/ellipoid-drawer/ellipsoid-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-box-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipsoidGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-ellipsoid-desc props=\"{\n *     show : ellipsoid.show, //optional\n *     radii : ellipsoid.radii,\n *     material : ellipsoid.color  //optional\n *   }\">\n *   </ac-ellipsoid-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-ellipsoid-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcEllipsoidDescComponent)}],\n})\nexport class AcEllipsoidDescComponent extends BasicDesc {\n\n  constructor(drawerService: EllipsoidDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { PolylineVolumeDrawerService } from '../../services/drawers/polyline-volume-dawer/polyline-volume-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PolylineVolumeGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-polyline-volume-desc props=\"{\n *     show : line.show, //optional\n *     positions : line.positions,\n *     material : line.color  //optional\n *   }\">\n *   </ac-polyline-volume-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-polyline-volume-desc',\n  template: ''\n})\nexport class AcPolylineVolumeDescComponent extends BasicDesc {\n\n  constructor(drawerService: PolylineVolumeDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { WallDrawerService } from '../../services/drawers/wall-dawer/wall-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-box-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/WallGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-wall-desc props=\"{\n *     show : wall.show, //optional\n *     positions : wall.positions,\n *     material : wall.color  //optional\n *   }\">\n *   </ac-wall-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-wall-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcWallDescComponent)}],\n})\nexport class AcWallDescComponent extends BasicDesc {\n\n  constructor(drawerService: WallDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { RectangleDrawerService } from '../../services/drawers/rectangle-dawer/rectangle-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-rectangle-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties RectangleGraphics and the general properties\n *  of Entity\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/RectangleGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-rectangle-desc props=\"{\n *     show : rectangle.show, //optional\n *     coordinates : rectangle.positions,\n *     material : rectangle.color  //optional\n *   }\">\n *   </ac-rectangle-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-rectangle-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcRectangleDescComponent)}],\n})\nexport class AcRectangleDescComponent extends BasicDesc {\n\n  constructor(drawerService: RectangleDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { BillboardPrimitiveDrawerService } from '../../services/drawers/billboard-primitive-drawer/billboard-primitive-drawer.service';\n\n/**\n *  This is a billboard primitive implementation.\n *  The element must be a child of ac-layer element.\n *  The properties of props are:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Billboard.html\n *\n *  __Usage :__\n *  ```\n *    <ac-billboard-primitive-desc props=\"{\n *      image: track.image,\n *      position: track.position,\n *      scale: track.scale,\n *      color: track.color,\n *      name: track.name\n *    }\">\n *    </ac-billboard-primitive-desc>\n *  ```\n */\n\n@Component({\n  selector: 'ac-billboard-primitive-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcBillboardPrimitiveDescComponent)}],\n})\nexport class AcBillboardPrimitiveDescComponent extends BasicDesc {\n\n  constructor(billboardPrimitiveDrawer: BillboardPrimitiveDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(billboardPrimitiveDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { LabelPrimitiveDrawerService } from '../../services/drawers/label-primitive-drawer/label-primitive-drawer.service';\n\n/**\n *  This is a label primitive implementation.\n *  The ac-label element must be a child of ac-layer element.\n *  The properties of props are:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Label.html\n *\n *  __Usage :__\n *  ```\n *    <ac-label-primitive-desc props=\"{\n *      position: track.position,\n *      pixelOffset : [-15,20] | pixelOffset,\n *      text: track.name,\n *      font: '15px sans-serif'\n *    }\">\n *    </ac-label-primitive-desc>\n *  ```\n */\n\n@Component({\n  selector: 'ac-label-primitive-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcLabelPrimitiveDescComponent)}],\n})\nexport class AcLabelPrimitiveDescComponent extends BasicDesc {\n\n  constructor(labelPrimitiveDrawer: LabelPrimitiveDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(labelPrimitiveDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { PolylinePrimitiveDrawerService } from '../../services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service';\n\n/**\n *  This is a polyline primitive implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Polyline Primitive:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Polyline.html\n *\n *  __Usage:__\n *  ```\n *    <ac-polyline-primitive-desc props=\"{\n *      width : polyline.width,\n *      positions: polyline.positions,\n *      material: polyline.material\n *    }\">\n *    </ac-polyline-primitive-desc>\n * ```\n */\n@Component({\n  selector: 'ac-polyline-primitive-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcPolylinePrimitiveDescComponent)}],\n})\nexport class AcPolylinePrimitiveDescComponent extends BasicDesc {\n\n  constructor(polylinePrimitiveDrawerService: PolylinePrimitiveDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(polylinePrimitiveDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { HtmlCollection } from '../collections';\nimport { Cartesian2 } from '../../angular-cesium/models/cartesian2';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\n\nexport class HtmlPrimitive {\n\n  private _scene: any;\n  private _show: boolean;\n  private _position: Cartesian3;\n  private _lastPosition: Cartesian2;\n  private _pixelOffset: Cartesian2;\n  private _element: HTMLElement;\n  private _collection: HtmlCollection;\n  private _mapContainer;\n\n  constructor(options: any, collection: HtmlCollection = null) {\n    if (typeof options !== 'object') {\n      throw new Error('HtmlPrimitive ERROR: invalid html options!');\n    }\n\n    this.scene = options.scene;\n    this._mapContainer = options.mapContainer;\n    this.show = options.show || true;\n    this.position = options.position;\n    this.pixelOffset = options.pixelOffset;\n    this.element = options.element;\n    this.collection = collection;\n  }\n\n  set scene(scene: any) {\n    this._scene = scene;\n  }\n\n  set show(show: boolean) {\n    this._show = show;\n\n    if (Cesium.defined(this.element)) {\n      if (show) {\n        this._element.style.display = 'block';\n      } else {\n        this._element.style.display = 'none';\n      }\n    }\n  }\n\n  get show(): boolean {\n    return this._show;\n  }\n\n  set position(position: Cartesian3) {\n    this._position = position;\n  }\n\n  get position(): Cartesian3 {\n    return this._position;\n  }\n\n  set pixelOffset(pixelOffset: Cartesian2) {\n    this._pixelOffset = pixelOffset;\n  }\n\n  get pixelOffset(): Cartesian2 {\n    return this._pixelOffset;\n  }\n\n  set element(element: HTMLElement) {\n    this._element = element;\n\n    if (Cesium.defined(element)) {\n      this._mapContainer.appendChild(element);\n      this._element.style.position = 'absolute';\n      this._element.style.zIndex = Number.MAX_VALUE.toString();\n    }\n  }\n\n  get element(): HTMLElement {\n    return this._element;\n  }\n\n  set collection(collection: HtmlCollection) {\n    this._collection = collection;\n  }\n\n  get collection() {\n    return this._collection;\n  }\n\n  update() {\n    if (!Cesium.defined(this._show) || !Cesium.defined(this._element)) {\n      return;\n    }\n\n    let screenPosition = Cesium.SceneTransforms.wgs84ToWindowCoordinates(this._scene, this._position);\n\n    if (!Cesium.defined(screenPosition)) {\n      screenPosition = new Cesium.Cartesian2((-1000), (-1000));\n    } else if (Cesium.defined(this._pixelOffset) && Cesium.defined(this._pixelOffset.x) && Cesium.defined(this._pixelOffset.y)) {\n      screenPosition.y += this._pixelOffset.y;\n      screenPosition.x += this._pixelOffset.x;\n    }\n\n    if (this._lastPosition && this._lastPosition.equals(screenPosition)) {\n      return;\n    }\n\n    this._element.style.top = `${screenPosition.y}px`;\n    this._element.style.left = `${screenPosition.x}px`;\n    this._lastPosition = screenPosition;\n  }\n\n  remove() {\n    if (this._element) {\n      this._element.remove();\n    }\n  }\n}\n","import { HtmlPrimitive } from '../primitives';\n\nexport class HtmlCollection {\n  private _collection: HtmlPrimitive[] = [];\n\n  get length() {\n    return this._collection.length;\n  }\n\n  get(index: number) {\n    return this._collection[index];\n  }\n\n  add(options: any): HtmlPrimitive {\n    const html = new HtmlPrimitive(options, this);\n    this._collection.push(html);\n\n    return html;\n  }\n\n  remove(html: HtmlPrimitive): boolean {\n    const index = this._collection.indexOf(html);\n    if (index === (-1)) {\n      return false;\n    }\n\n    this._collection[index].remove();\n    this._collection.splice(index, 1);\n    return true;\n  }\n\n  update() {\n    for (let i = 0, len = this._collection.length; i < len; i++) {\n      this._collection[i].update();\n    }\n  }\n\n  removeAll() {\n    while (this._collection.length > 0) {\n      const html = this._collection.pop();\n      html.remove();\n    }\n  }\n\n  contains(html: HtmlPrimitive): boolean {\n    return Cesium.defined(html) && html.collection === this;\n  }\n\n  destroy() {\n    this.removeAll();\n  }\n}\n","import { HtmlPrimitive } from './primitives';\nimport { HtmlCollection } from './collections';\n\nexport class CesiumExtender {\n  static extend() {\n    Cesium.HtmlPrimitive = HtmlPrimitive;\n    Cesium.HtmlCollection = HtmlCollection;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AcHtmlManager {\n  private _entities: Map<any, any>;\n\n  constructor() {\n    this._entities = new Map<any, any>();\n  }\n\n  has(id: string): boolean {\n    return this._entities.has(id);\n  }\n\n  get(id: string): { entity: any, primitive: any } {\n    return this._entities.get(id);\n  }\n\n  addOrUpdate(id: any, info: { entity: any, primitive: any }) {\n    this._entities.set(id, info);\n  }\n\n  remove(id: string) {\n    this._entities.delete(id);\n  }\n\n  forEach(callback: any) {\n    this._entities.forEach(callback);\n  }\n}\n","import { ChangeDetectorRef, Directive, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { AcHtmlManager } from '../../services/ac-html-manager/ac-html-manager.service';\n\nexport class AcHtmlContext {\n  constructor(\n    public id: any,\n    public context: any\n  ) {\n  }\n}\n\n@Directive({\n  selector: '[acHtml]',\n})\nexport class AcHtmlDirective implements OnInit {\n\n  private _views = new Map<any, { viewRef: any, context: any }>();\n\n  constructor(\n    private _templateRef: TemplateRef<AcHtmlContext>,\n    private _viewContainerRef: ViewContainerRef,\n    private _changeDetector: ChangeDetectorRef,\n    private _layerService: LayerService,\n    private _acHtmlManager: AcHtmlManager\n  ) {\n  }\n\n  ngOnInit() {\n\n  }\n\n  private _handleView(id: any, primitive: any, entity: any) {\n    if (!this._views.has(id) && primitive.show) {\n      const context = new AcHtmlContext(id, {$implicit: entity});\n      const viewRef = this._viewContainerRef.createEmbeddedView(this._templateRef, context);\n      this._views.set(id, {viewRef, context});\n      this._changeDetector.detectChanges();\n    }  else if (this._views.has(id) && primitive.show) {\n      this._changeDetector.detectChanges();\n    }\n  }\n\n  addOrUpdate(id: any, primitive: any) {\n    const context = this._layerService.context;\n    const entity = context[this._layerService.getEntityName()];\n\n    if (this._views.has(id)) {\n      this._views.get(id).context.context.$implicit = entity;\n    }\n\n    this._acHtmlManager.addOrUpdate(id, {entity, primitive});\n    this._handleView(id, primitive, entity);\n  }\n\n  remove(id: any, primitive: any) {\n    if (!this._views.has(id)) {\n      return;\n    }\n\n    const {viewRef} = this._views.get(id);\n    this._viewContainerRef.remove(this._viewContainerRef.indexOf(viewRef));\n    this._views.delete(id);\n    this._acHtmlManager.remove(id);\n    primitive.element = null;\n  }\n}\n","import { Component, ContentChild, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { HtmlDrawerService } from '../../services/drawers/html-drawer/html-drawer.service';\nimport { AcHtmlDirective } from '../../directives/ac-html/ac-html.directive';\nimport { AcHtmlManager } from '../../services/ac-html-manager/ac-html-manager.service';\n\n/**\n *  This is an html implementation.\n *  The ac-html element must be a child of ac-layer element.\n *  <br>\n *  [props] accepts position(Cartesian3) and show(boolean).\n *\n *  __Usage:__\n *  ```\n *  <ac-layer acFor=\"let html of htmls$\" [context]=\"this\">\n <ac-html-desc props=\"{position: html.position, show: html.show}\">\n <ng-template let-html>\n <div>\n <h1>This is ac-html {{html.name}}</h1>\n <button (click)=\"changeText(html, 'Test')\">change text</button>\n </div>\n </ng-template>\n </ac-html-desc>\n *  <ac-html [props]=\"{position: position, show: true}\">;\n *    <p>html element</p>\n *  </ac-html>\n *  ```\n */\n@Component({\n  selector: 'ac-html-desc',\n  providers: [AcHtmlManager],\n  template: `\n      <div *acHtml=\"let acHtmlEntityId = id; let acHtmlContext = context\">\n          <div [acHtmlContainer]=\"acHtmlEntityId\">\n              <ng-template [ngTemplateOutlet]=\"acHtmlTemplate\"\n                           [ngTemplateOutletContext]=\"acHtmlContext\"></ng-template>\n          </div>\n      </div>`\n})\nexport class AcHtmlDescComponent extends BasicDesc implements OnInit {\n\n  @ViewChild(AcHtmlDirective, {static: true}) acHtmlCreator: AcHtmlDirective;\n  @ContentChild(TemplateRef, {static: true}) acHtmlTemplate: TemplateRef<any>;\n\n  constructor(htmlDrawer: HtmlDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(htmlDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    if (!this.acHtmlCreator) {\n      throw new Error(`AcHtml desc ERROR: ac html directive not found.`);\n    }\n\n    if (!this.acHtmlTemplate) {\n      throw new Error(`AcHtml desc ERROR: html template not found.`);\n    }\n  }\n\n  draw(context: any, id: any): any {\n    const cesiumProps = this._propsEvaluator(context);\n    if (!this._cesiumObjectsMap.has(id)) {\n      const primitive = this._drawer.add(cesiumProps);\n      this._cesiumObjectsMap.set(id, primitive);\n      this.acHtmlCreator.addOrUpdate(id, primitive);\n    } else {\n      const primitive = this._cesiumObjectsMap.get(id);\n      this._drawer.update(primitive, cesiumProps);\n      this.acHtmlCreator.addOrUpdate(id, primitive);\n    }\n  }\n\n  remove(id: string): void {\n    const primitive = this._cesiumObjectsMap.get(id);\n    this._drawer.remove(primitive);\n    this._cesiumObjectsMap.delete(id);\n    this.acHtmlCreator.remove(id, primitive);\n  }\n\n  removeAll(): void {\n    this._cesiumObjectsMap.forEach(((primitive, id) => {\n      this.acHtmlCreator.remove(id, primitive);\n    }));\n    this._cesiumObjectsMap.clear();\n    this._drawer.removeAll();\n  }\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\nimport { AcHtmlManager } from '../../services/ac-html-manager/ac-html-manager.service';\n\n@Directive({\n  selector: '[acHtmlContainer]'\n})\nexport class AcHtmlContainerDirective implements OnInit {\n\n  private _id: any;\n\n  constructor(\n    private _element: ElementRef,\n    private _acHtmlManager: AcHtmlManager\n  ) {\n  }\n\n  @Input()\n  set acHtmlContainer(id: string) {\n    this._id = id;\n  }\n\n  ngOnInit() {\n    if (this._id === undefined) {\n      throw new Error(`AcHtml container ERROR: entity id not defined`);\n    }\n\n    const entity = this._acHtmlManager.get(this._id);\n    entity.primitive.element = this._element.nativeElement;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport { ContextMenuService } from '../../services/context-menu/context-menu.service';\nimport { Subscription } from 'rxjs';\nimport { BasicContextMenu } from '../../models/basic-context-menu';\n\n/**\n * This component is used to inject the component that is passed to the ContextMenuService when opening a context menu.\n * It shouldn't be used directly.\n *\n * usage:\n * ```typescript\n * // We want to open the context menu on mouse right click.\n * // Register to mouse right click with the MapEventsManager\n * this.mapEventsManager.register({ event: CesiumEvent.RIGHT_CLICK, pick: PickOptions.NO_PICK })\n *    .subscribe(event => {\n *       const position = this.coordinateConverter.screenToCartesian3(event.movement.endPosition, true);\n *       if (!position) {\n *         return;\n *       }\n *       // Open the context menu on the position that was clicked and pass some data to MyCustomContextMenuComponent.\n *       this.contextMenuService.open(\n *         MyCustomContextMenuComponent,\n *         position,\n *         { data: { items: ['New Track', 'Change Map', 'Context Menu', 'Do Something'] } }\n *       )\n *    });\n *\n * ```\n */\n\n@Component({\n  selector: 'ac-context-menu-wrapper',\n  template: `\n    <ac-html *ngIf=\"contextMenuService.showContextMenu\" [props]=\"{position: contextMenuService.position}\">\n      <ng-template #contextMenuContainer></ng-template>\n    </ac-html>\n  `,\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AcContextMenuWrapperComponent implements OnInit, OnDestroy {\n\n  private contextMenuChangeSubscription: Subscription;\n  private contextMenuOpenSubscription: Subscription;\n\n  @ViewChild('contextMenuContainer', { read: ViewContainerRef }) viewContainerRef: ViewContainerRef;\n\n  constructor(public contextMenuService: ContextMenuService,\n              private cd: ChangeDetectorRef,\n              private componentFactoryResolver: ComponentFactoryResolver) {\n  }\n\n  ngOnInit() {\n    this.contextMenuChangeSubscription =\n      this.contextMenuService.contextMenuChangeNotifier.subscribe(() => this.cd.detectChanges());\n    this.contextMenuOpenSubscription =\n      this.contextMenuService.onOpen.subscribe(() => {\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.contextMenuService.content as any);\n        this.viewContainerRef.clear();\n        const componentRef = this.viewContainerRef.createComponent(componentFactory);\n        (componentRef.instance as BasicContextMenu).data = this.contextMenuService.options.data;\n        this.cd.detectChanges();\n      });\n  }\n\n  ngOnDestroy(): void {\n    if (this.contextMenuChangeSubscription) {\n      this.contextMenuChangeSubscription.unsubscribe();\n    }\n\n    if (this.contextMenuOpenSubscription) {\n      this.contextMenuOpenSubscription.unsubscribe();\n    }\n  }\n}\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { AcNotification } from '../../models/ac-notification';\nimport { Subject, Subscription } from 'rxjs';\nimport { IDescription } from '../../models/description';\nimport * as _get from 'lodash.get';\nimport { AcLayerComponent } from '../ac-layer/ac-layer.component';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\n\n/**\n *  This is component represents an array under `ac-layer`.\n *  The element must be a child of ac-layer element.\n *  + acFor `{string}` - get the tracked array and entityName (see the example).\n *  + idGetter `{Function}` - a function that gets the id for a given element in the array -should be defined for maximum performance.\n *  + show `{boolean}` - show/hide array's entities.\n *\n *  __Usage :__\n *  ```\n *<ac-layer acFor=\"let track of tracks$\" [show]=\"show\" [context]=\"this\" [store]=\"true\">\n *  <ac-array-desc acFor=\"let arrayItem of track.array\" [idGetter]=\"trackArrayIdGetter\">\n *    <ac-array-desc acFor=\"let innerArrayItem of arrayItem.innerArray\" [idGetter]=\"trackArrayIdGetter\">\n *      <ac-point-desc props=\"{\n *        position: innerArrayItem.pos,\n *        pixelSize: 10,\n *        color: getTrackColor(track),\n *        outlineColor: Cesium.Color.BLUE,\n *        outlineWidth: 1\n *      }\">\n *      </ac-point-desc>\n *    </ac-array-desc>\n *  </ac-array-desc>\n *</ac-layer>\n *  ```\n */\n\n@Component({\n  selector: 'ac-array-desc',\n  template: `\n    <ac-layer #layer [acFor]=\"getAcForString()\"\n              [context]=\"layerService.context\"\n              [options]=\"layerService.options\"\n              [show]=\"layerService.show && show\"\n              [zIndex]=\"layerService.zIndex\">\n      <ng-content #content></ng-content>\n    </ac-layer>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AcArrayDescComponent implements OnChanges, OnInit, AfterContentInit, OnDestroy, IDescription {\n\n  @Input() acFor: string;\n\n  @Input() idGetter: (item: any, index: number) => string;\n\n  @Input() show = true;\n  @ViewChild('layer', {static: true}) private layer: AcLayerComponent;\n  @ContentChildren(BasicDesc, {descendants: false}) private basicDescs: any;\n  @ContentChildren(AcArrayDescComponent, {descendants: false}) private arrayDescs: any;\n  private entitiesMap = new Map<string, string[]>();\n  private layerServiceSubscription: Subscription;\n  private id = 0;\n  private readonly acForRgx = /^let\\s+.+\\s+of\\s+.+$/;\n  entityName: string;\n  arrayPath: string;\n  arrayObservable$ = new Subject<AcNotification>();\n\n  constructor(public layerService: LayerService, private cd: ChangeDetectorRef) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['acFor'].firstChange) {\n      const acForString = changes['acFor'].currentValue;\n      if (!this.acForRgx.test(acForString)) {\n        throw new Error(`ac-layer: Invalid [acFor] syntax. Expected: [acFor]=\"let item of observable\" .Instead received: ${acForString}`);\n      }\n      const acForArr = changes['acFor'].currentValue.split(' ');\n      this.arrayPath = acForArr[3];\n      this.entityName = acForArr[1];\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.layer) {\n      this.layer.getLayerService().cache = false;\n    }\n\n    this.layerServiceSubscription = this.layerService.layerUpdates().subscribe(() => {\n      this.cd.detectChanges();\n    });\n  }\n\n  ngAfterContentInit(): void {\n    this.layerService.context['arrayObservable$'] = this.arrayObservable$;\n    this.layerService.registerDescription(this);\n    this.basicDescs._results.forEach((component: BasicDesc) => {\n      component.setLayerService(this.layer.getLayerService());\n    });\n    this.arrayDescs._results.splice(0, 1);\n    this.arrayDescs._results.forEach((component: AcArrayDescComponent) => {\n      this.layerService.unregisterDescription(component);\n      this.layer.getLayerService().registerDescription(component);\n      component.layerService = this.layer.getLayerService();\n      component.setLayerService(this.layer.getLayerService());\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.layerServiceSubscription) {\n      this.layerServiceSubscription.unsubscribe();\n    }\n  }\n\n  setLayerService(layerService: LayerService) {\n    this.layerService = layerService;\n  }\n\n  draw(context: any, id: string, contextEntity: any) {\n    const get = _get;\n    const entitiesArray: any[] = get(context, this.arrayPath);\n    if (!entitiesArray) {\n      return;\n    }\n    const previousEntitiesIdArray = this.entitiesMap.get(id);\n    const entitiesIdArray: any[] = [];\n    this.entitiesMap.set(id, entitiesIdArray);\n\n    entitiesArray.forEach((item, index) => {\n      this.layerService.context[this.entityName] = item;\n      const arrayItemId = this.generateCombinedId(id, item, index);\n      entitiesIdArray.push(arrayItemId);\n      this.layer.update(contextEntity, arrayItemId);\n    });\n\n    if (previousEntitiesIdArray) {\n      const entitiesToRemove = this.idGetter ?\n        previousEntitiesIdArray.filter((entityId) => entitiesIdArray.indexOf(entityId) < 0) :\n        previousEntitiesIdArray;\n      if (entitiesToRemove) {\n        entitiesToRemove.forEach((entityId) => this.layer.remove(entityId));\n      }\n    }\n  }\n\n  remove(id: string) {\n    const entitiesIdArray = this.entitiesMap.get(id);\n    if (entitiesIdArray) {\n      entitiesIdArray.forEach((entityId) => this.layer.remove(entityId));\n    }\n    this.entitiesMap.delete(id);\n  }\n\n  removeAll() {\n    this.layer.removeAll();\n    this.entitiesMap.clear();\n  }\n\n  getAcForString() {\n    return `let ${this.entityName + '___temp'} of arrayObservable$`;\n  }\n\n  private generateCombinedId(entityId: string, arrayItem: any, index: number): string {\n    let arrayItemId;\n    if (this.idGetter) {\n      arrayItemId = this.idGetter(arrayItem, index);\n    } else {\n      arrayItemId = (this.id++) % Number.MAX_SAFE_INTEGER;\n    }\n    return entityId + arrayItemId;\n  }\n}\n","import { Component } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { PointPrimitiveDrawerService } from '../../services/drawers/point-primitive-drawer/point-primitive-drawer.service';\n\n/**\n *  This is a label primitive implementation.\n *  The ac-label element must be a child of ac-layer element.\n *  The properties of props are:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Point.html\n *\n *  __Usage :__\n *  ```\n *    <ac-point-primitive-desc props=\"{\n *      position: track.position,\n *      color: Cesium.Color.RED\n *    }\">\n *    </ac-point-primitive-desc>\n *  ```\n */\n\n@Component({\n  selector: 'ac-point-primitive-desc',\n  template: '',\n})\nexport class AcPointPrimitiveDescComponent extends BasicDesc {\n\n  constructor(pointPrimitiveDrawerService: PointPrimitiveDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(pointPrimitiveDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\nimport { PolylinePrimitiveDrawerService } from '../../services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service';\n\n/**\n *  This is a polyline implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Polyline Primitive:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Polyline.html\n *\n *  __Usage:__\n *  ```\n *  <ac-polyline [props]=\"{\n *    position: position,\n *    text: 'labelText',\n *    font: '30px sans-serif'\n *    color: Cesium.Color.GREEN\n *  }\">;\n *  </ac-polyline>\n *  ```\n */\n\n@Component({\n  selector: 'ac-primitive-polyline',\n  template: '',\n})\nexport class AcPrimitivePolylineComponent extends EntityOnMapComponent {\n\n  constructor(polylineDrawer: PolylinePrimitiveDrawerService, mapLayers: MapLayersService) {\n    super(polylineDrawer, mapLayers);\n  }\n}\n","import { PixelOffsetPipe } from './pixel-offset/pixel-offset.pipe';\nimport { RadiansToDegreesPipe } from './radians-to-degrees/radians-to-degrees.pipe';\n\n// For angular parse usage\nexport default [\n  {pipeName: 'pixelOffset', pipeInstance: new PixelOffsetPipe()},\n  {pipeName: 'radiansToDegrees', pipeInstance: new RadiansToDegreesPipe()},\n];\n","import { Component, OnInit } from '@angular/core';\n\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CzmlDrawerService } from '../../services/drawers/czml-drawer/czml-drawer.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\n\n/**\n *  This is a czml implementation.\n *  The ac-czml-desc element must be a child of ac-layer element.\n *\n *  See CZML Guide for the structure of props.czmlPacket:\n *  + https://github.com/AnalyticalGraphicsInc/czml-writer/wiki/CZML-Structure\n *\n *  Attention: the first czmlPacket in the stream needs to be a document\n *  with an id and a name attribute. See this example\n *  + https://cesiumjs.org/Cesium/Apps/Sandcastle/index.html?src=CZML%20Point%20-%20Time%20Dynamic.html&label=CZML\n *\n *  To see a working example, use the demo app and\n *  + uncomment <czml-layer></czml-layer> in demo-map.component.html\n *  + set the properties 'timeline', 'animation' and 'shouldAnimate' true in viewerOptions of demo-map.component.ts\n *\n *\n *  __Usage:__\n *  ```\n *    <ac-czml-desc props=\"{\n *      czmlPacket: czmlPacket\n *    }\">\n *    </ac-czml-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-czml-desc',\n  template: '',\n})\nexport class AcCzmlDescComponent extends BasicDesc implements OnInit {\n  constructor(czmlDrawer: CzmlDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(czmlDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n\n}\n","import { Component } from '@angular/core';\nimport { RectangleDrawerService } from '../../services/drawers/rectangle-dawer/rectangle-drawer.service';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a rectangle implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and RectangleGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/RectangleGraphics.html\n *\n *  __Usage:__\n *  ```\n *    <ac-rectangle props=\"{\n *      coordinates: rectangle.coordinates,\n *      material: rectangle.material,\n *      height: rectangle.height\n *    }\">\n *    </ac-rectangle>\n *  ```\n */\n@Component({\n  selector: 'ac-rectangle',\n  template: ''\n})\nexport class AcRectangleComponent extends EntityOnMapComponent {\n  constructor(rectangleDrawer: RectangleDrawerService, mapLayers: MapLayersService) {\n    super(rectangleDrawer, mapLayers);\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AcMapComponent } from './components/ac-map/ac-map.component';\nimport { AcLayerComponent } from './components/ac-layer/ac-layer.component';\nimport { AcBillboardComponent } from './components/ac-billboard/ac-billboard.component';\nimport { AcBillboardDescComponent } from './components/ac-billborad-desc/ac-billborad-desc.component';\nimport { AcEllipseDescComponent } from './components/ac-ellipse-desc/ac-ellipse-desc.component';\nimport { AcPolylineDescComponent } from './components/ac-polyline-desc/ac-polyline-desc.component';\nimport { Angular2ParseModule, PIPES_CONFIG } from 'angular2parse';\nimport { PixelOffsetPipe } from './pipes/pixel-offset/pixel-offset.pipe';\nimport { RadiansToDegreesPipe } from './pipes/radians-to-degrees/radians-to-degrees.pipe';\nimport { JsonMapper } from './services/json-mapper/json-mapper.service';\nimport { CesiumProperties } from './services/cesium-properties/cesium-properties.service';\nimport { AcLabelDescComponent } from './components/ac-label-desc/ac-label-desc.component';\nimport { UtilsModule } from './utils/utils.module';\nimport { ViewerFactory } from './services/viewer-factory/viewer-factory.service';\nimport { GeoUtilsService } from './services/geo-utils/geo-utils.service';\nimport { AcCircleDescComponent } from './components/ac-circle-desc/ac-circle-desc.component';\nimport { AcArcDescComponent } from './components/ac-arc-desc/ac-arc-desc.component';\nimport { AcMapLayerProviderComponent } from './components/ac-map-layer-provider/ac-map-layer-provider.component';\nimport { AcMapTerrainProviderComponent } from './components/ac-map-terrain-provider/ac-map-terrain-provider.component';\nimport { AcPointDescComponent } from './components/ac-point-desc/ac-point-desc.component';\nimport { AcLabelComponent } from './components/ac-label/ac-label.component';\nimport { AcPolylineComponent } from './components/ac-polyline/ac-polyline.component';\nimport { AcEllipseComponent } from './components/ac-ellipse/ac-ellipse.component';\nimport { AcPointComponent } from './components/ac-point/ac-point.component';\nimport { AcHtmlComponent } from './components/ac-html/ac-html.component';\nimport { AcCircleComponent } from './components/ac-circle/ac-circle.component';\nimport { AcArcComponent } from './components/ac-arc/ac-arc.component';\nimport { AcPolygonDescComponent } from './components/ac-polygon-desc/ac-polygon-desc.component';\nimport { AcDefaultPlonterComponent } from './components/ac-default-plonter/ac-default-plonter.component';\nimport { AcPolygonComponent } from './components/ac-polygon/ac-polygon.component';\nimport { MapsManagerService } from './services/maps-manager/maps-manager.service';\nimport { AcStaticEllipseDescComponent } from './components/static-dynamic/ac-static-ellipse-desc/ac-static-ellipse-desc.component';\nimport { AcDynamicEllipseDescComponent } from './components/static-dynamic/ac-dynamic-ellipse-desc/ac-dynamic-ellipse-desc.component';\nimport { AcDynamicPolylineDescComponent } from './components/static-dynamic/ac-dynamic-polyline-desc/ac-dynamic-polyline-desc.component';\nimport { AcStaticPolygonDescComponent } from './components/static-dynamic/ac-static-polygon-desc/ac-static-polygon-desc.component';\nimport { AcStaticCircleDescComponent } from './components/static-dynamic/ac-static-circle-desc/ac-static-circle-desc.component';\nimport { AcDynamicCircleDescComponent } from './components/static-dynamic/ac-dynamic-circle-desc/ac-dynamic-circle-desc.component';\nimport { AcStaticPolylineDescComponent } from './components/static-dynamic/ac-static-polyline-desc/ac-static-polyline-desc.component';\nimport { AcModelDescComponent } from './components/ac-model-desc/ac-model-desc.component';\nimport { AcTileset3dComponent } from './components/ac-3d-tileset/ac-tileset-3d.component';\nimport { AcBoxDescComponent } from './components/ac-box-desc/ac-box-desc.component';\nimport { AcCylinderDescComponent } from './components/ac-cylinder-desc/ac-cylinder-desc.component';\nimport { AcCorridorDescComponent } from './components/ac-corridor-desc/ac-corridor-desc.component';\nimport { AcEllipsoidDescComponent } from './components/ac-ellipsoid-desc/ac-ellipsoid-desc.component';\nimport { AcPolylineVolumeDescComponent } from './components/ac-polyline-volume-desc/ac-polyline-volume-desc.component';\nimport { AcWallDescComponent } from './components/ac-wall-desc/ac-wall-desc.component';\nimport { AcRectangleDescComponent } from './components/ac-rectangle-desc/ac-rectangle-desc.component';\nimport { AcBillboardPrimitiveDescComponent } from './components/ac-billboard-primitive-desc/ac-billboard-primitive-desc.component';\nimport { AcLabelPrimitiveDescComponent } from './components/ac-label-primitive-desc/ac-label-primitive-desc.component';\nimport { AcPolylinePrimitiveDescComponent } from './components/ac-polyline-primitive-desc/ac-polyline-primitive-desc.component';\nimport { ModuleConfiguration } from './models/module-options';\nimport { ANGULAR_CESIUM_CONFIG, ConfigurationService } from './cesium-enhancements/ConfigurationService';\nimport { CesiumExtender } from '../cesium-extender/extender';\nimport { AcHtmlDescComponent } from './components/ac-html-desc/ac-html-desc.component';\nimport { AcHtmlDirective } from './directives/ac-html/ac-html.directive';\nimport { AcHtmlContainerDirective } from './directives/ac-html-container/ac-html-container.directive';\nimport { AcContextMenuWrapperComponent } from './components/ac-context-menu-wrapper/ac-context-menu-wrapper.component';\nimport { AcArrayDescComponent } from './components/ac-array-desc/ac-array-desc.component';\nimport { AcPointPrimitiveDescComponent } from './components/ac-point-primitive-desc/ac-point-primitive-desc.component';\nimport { AcPrimitivePolylineComponent } from './components/ac-primitive-polyline/ac-primitive-polyline.component';\nimport PARSE_PIPES_CONFIG_MAP from './pipes/pipe-config-map';\n\nimport { AcCzmlDescComponent } from './components/ac-czml-desc/ac-czml-desc.component';\nimport { AcRectangleComponent } from './components/ac-rectangle/ac-rectangle.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    Angular2ParseModule,\n    UtilsModule,\n  ],\n  declarations: [\n    AcMapComponent,\n    AcLayerComponent,\n    AcBillboardComponent,\n    AcBillboardDescComponent,\n    AcBillboardPrimitiveDescComponent,\n    AcLabelDescComponent,\n    AcLabelPrimitiveDescComponent,\n    AcEllipseDescComponent,\n    AcPolylineDescComponent,\n    AcPolylinePrimitiveDescComponent,\n    PixelOffsetPipe,\n    RadiansToDegreesPipe,\n    AcCircleDescComponent,\n    AcArcDescComponent,\n    AcMapLayerProviderComponent,\n    AcMapTerrainProviderComponent,\n    AcPointDescComponent,\n    AcLabelComponent,\n    AcPolylineComponent,\n    AcPrimitivePolylineComponent,\n    AcEllipseComponent,\n    AcPointComponent,\n    AcBillboardComponent,\n    AcHtmlComponent,\n    AcCircleComponent,\n    AcArcComponent,\n    AcPolygonDescComponent,\n    AcPolygonComponent,\n    AcDefaultPlonterComponent,\n    AcModelDescComponent,\n    AcTileset3dComponent,\n    AcBoxDescComponent,\n    AcCylinderDescComponent,\n    AcCorridorDescComponent,\n    AcEllipsoidDescComponent,\n    AcPolylineVolumeDescComponent,\n    AcWallDescComponent,\n    AcRectangleDescComponent,\n    AcContextMenuWrapperComponent,\n    AcPointPrimitiveDescComponent,\n    AcHtmlDescComponent,\n    AcHtmlDirective,\n    AcHtmlContainerDirective,\n    AcArrayDescComponent,\n    AcCzmlDescComponent,\n\n    AcStaticEllipseDescComponent,\n    AcDynamicEllipseDescComponent,\n    AcDynamicPolylineDescComponent,\n    AcStaticPolylineDescComponent,\n    AcDynamicCircleDescComponent,\n    AcStaticCircleDescComponent,\n    AcStaticPolygonDescComponent,\n    AcRectangleComponent\n  ],\n  exports: [\n    AcMapComponent,\n    AcBillboardComponent,\n    AcBillboardDescComponent,\n    AcBillboardPrimitiveDescComponent,\n    AcLabelDescComponent,\n    AcLabelPrimitiveDescComponent,\n    AcEllipseDescComponent,\n    AcPolylineDescComponent,\n    AcPolylinePrimitiveDescComponent,\n    AcLayerComponent,\n    AcCircleDescComponent,\n    AcArcDescComponent,\n    AcMapLayerProviderComponent,\n    AcMapTerrainProviderComponent,\n    AcPointDescComponent,\n    AcLabelComponent,\n    AcPolylineComponent,\n    AcPrimitivePolylineComponent,\n    AcEllipseComponent,\n    AcPointComponent,\n    AcBillboardComponent,\n    AcHtmlComponent,\n    AcCircleComponent,\n    AcArcComponent,\n    AcPolygonDescComponent,\n    AcPolygonComponent,\n    AcDefaultPlonterComponent,\n    AcModelDescComponent,\n    AcTileset3dComponent,\n    AcBoxDescComponent,\n    AcCylinderDescComponent,\n    AcCorridorDescComponent,\n    AcEllipsoidDescComponent,\n    AcPolylineVolumeDescComponent,\n    AcWallDescComponent,\n    AcRectangleDescComponent,\n    AcPointPrimitiveDescComponent,\n    AcHtmlDescComponent,\n    AcArrayDescComponent,\n    AcCzmlDescComponent,\n    AcRectangleComponent,\n    AcStaticEllipseDescComponent,\n    AcDynamicEllipseDescComponent,\n    AcDynamicPolylineDescComponent,\n    AcStaticPolylineDescComponent,\n    AcDynamicCircleDescComponent,\n    AcStaticCircleDescComponent,\n    AcStaticPolygonDescComponent,\n  ],\n})\nexport class AngularCesiumModule {\n  static forRoot(config?: ModuleConfiguration): ModuleWithProviders<AngularCesiumModule> {\n    return {\n      ngModule: AngularCesiumModule,\n      providers: [\n        JsonMapper, CesiumProperties, GeoUtilsService, ViewerFactory, MapsManagerService, ConfigurationService,\n        {provide: ANGULAR_CESIUM_CONFIG, useValue: config},\n        {provide: PIPES_CONFIG, multi: true, useValue: config && config.customPipes || []},\n        {provide: PIPES_CONFIG, multi: true, useValue: PARSE_PIPES_CONFIG_MAP},\n      ],\n    };\n  }\n\n  constructor() {\n    CesiumExtender.extend();\n  }\n}\n","import { Observable } from 'rxjs';\n\nexport class DisposableObservable<T> extends Observable<T> {\n  dispose: Function;\n}\n","export enum EditModes {\n  CREATE,\n  EDIT,\n  CREATE_OR_EDIT\n}\n","export enum EditActions {\n  INIT,\n  MOUSE_MOVE,\n  ADD_POINT,\n  ADD_LAST_POINT,\n  CHANGE_TO_EDIT,\n  REMOVE_POINT,\n  DRAG_POINT,\n  DRAG_POINT_FINISH,\n  DRAG_SHAPE,\n  DRAG_SHAPE_FINISH,\n  DONE,\n  DISABLE,\n  ENABLE,\n  DISPOSE,\n  SET_EDIT_LABELS_RENDER_CALLBACK,\n  UPDATE_EDIT_LABELS,\n  SET_MANUALLY,\n  TRANSFORM,\n}\n","import { filter, map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { AcEntity } from '../../models/ac-entity';\nimport { CesiumEvent } from '../map-events-mananger/consts/cesium-event.enum';\nimport { MapEventsManagerService } from '../map-events-mananger/map-events-manager';\nimport { PickOptions } from '../map-events-mananger/consts/pickOptions.enum';\nimport { CesiumEventModifier } from '../map-events-mananger/consts/cesium-event-modifier.enum';\nimport { MapsManagerService } from '../maps-manager/maps-manager.service';\n\n\nexport interface SelectionOptions {\n  event?: CesiumEvent;\n  modifier?: CesiumEventModifier;\n  entityType?: any;\n}\n\n/**\n * Manages entity selection service for any given mouse event and modifier\n * the service will manage the list of selected items.\n * check out the example\n * you must provide the service yourself\n *\n *  __Usage :__\n * ```\n * // provide the service in some component\n * @Component({\n * //...\n *  providers: [SelectionManagerService]\n * }\n *\n * // Usage example:\n * // init selection\n * const selectedIndicator = ture; // optional default true, if true a boolean \"selected\" property will be added to the selected entity\n * selectionManagerService.initSelection({ event: CesiumEvent.LEFT_CLICK,\n * \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmodifier: CesiumEventModifier.CTRL\n * \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},selectedIndicator);\n * // Get selected\n * const selected = selectionManagerService.selected();\n *\n * // Or as observer\n * const selected$ = selectionManagerService.selected$();\n *\n * ```\n *\n */\n@Injectable()\nexport class SelectionManagerService {\n  selectedEntitiesItems$: BehaviorSubject<AcEntity[]> = new BehaviorSubject<AcEntity[]>([]);\n  selectedEntitySubject$: Subject<AcEntity> = new Subject<AcEntity>();\n  private mapEventsManagerService: MapEventsManagerService;\n\n  constructor(private mapsManager: MapsManagerService) {\n  }\n\n  selectedEntities$(): Observable<AcEntity[]> {\n    return this.selectedEntitiesItems$.asObservable();\n  }\n\n  selectedEntities(): AcEntity[] {\n    return this.selectedEntitiesItems$.getValue();\n  }\n\n  selectedEntity$() {\n    return this.selectedEntitySubject$;\n  }\n\n  toggleSelection(entity: AcEntity, addSelectedIndicator: boolean) {\n    const current = this.selectedEntities();\n    if (current.indexOf(entity) === -1) {\n      this.addToSelected(entity, addSelectedIndicator);\n    } else {\n      this.removeSelected(entity, addSelectedIndicator);\n    }\n  }\n\n  private addToSelected(entity: AcEntity, addSelectedIndicator: boolean) {\n    if (addSelectedIndicator) {\n      entity['selected'] = true;\n    }\n\n    const current = this.selectedEntities();\n    this.selectedEntitySubject$.next(entity);\n    this.selectedEntitiesItems$.next([...current, entity]);\n  }\n\n  private removeSelected(entity: AcEntity, addSelectedIndicator: boolean) {\n    if (addSelectedIndicator) {\n      entity['selected'] = false;\n    }\n\n    const current = this.selectedEntities();\n    const entityIndex = current.indexOf(entity);\n    if (entityIndex !== -1) {\n      current.splice(entityIndex, 1);\n      this.selectedEntitiesItems$.next(current);\n      this.selectedEntitySubject$.next(entity);\n    }\n  }\n\n  initSelection(selectionOptions?: SelectionOptions, addSelectedIndicator = true, eventPriority?: number, mapId?: string) {\n    const mapComponent = this.mapsManager.getMap(mapId);\n    if (!mapComponent) {\n      return;\n    }\n\n    this.mapEventsManagerService = mapComponent.getMapEventsManager();\n\n    if (!selectionOptions) {\n      Object.assign(selectionOptions, {event: CesiumEvent.LEFT_CLICK});\n    }\n\n    const eventSubscription = this.mapEventsManagerService.register({\n      event: selectionOptions.event,\n      pick: PickOptions.PICK_ONE,\n      modifier: selectionOptions.modifier,\n      entityType: selectionOptions.entityType,\n      priority: eventPriority,\n    });\n\n    eventSubscription.pipe(\n      map(result => result.entities),\n      filter(entities => entities && entities.length > 0))\n      .subscribe(entities => {\n        const entity = entities[0];\n        this.toggleSelection(entity, addSelectedIndicator);\n      });\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { PointProps } from './point-edit-options';\n\nexport class EditPoint extends AcEntity {\n  static counter = 0;\n  private id: string;\n  private editedEntityId: string;\n  private position: Cartesian3;\n  private _virtualEditPoint: boolean;\n  private pointProps: PointProps;\n  private _show = true;\n\n  constructor(entityId: string, position: Cartesian3, pointProps?: PointProps, virtualPoint = false) {\n    super();\n    this.editedEntityId = entityId;\n    this.position = position;\n    this.id = this.generateId();\n    this.pointProps = {...pointProps};\n    this._virtualEditPoint = virtualPoint;\n  }\n\n  get show() {\n    return this._show;\n  }\n\n  set show(value) {\n    this._show = value;\n  }\n\n  get props(): PointProps {\n    return this.pointProps;\n  }\n\n  set props(value: PointProps) {\n    this.pointProps = value;\n  }\n\n  isVirtualEditPoint(): boolean {\n    return this._virtualEditPoint;\n  }\n\n  setVirtualEditPoint(value: boolean) {\n    this._virtualEditPoint = value;\n  }\n\n  getEditedEntityId(): string {\n    return this.editedEntityId;\n  }\n\n  getPosition(): Cartesian3 {\n    return this.position.clone();\n  }\n\n  getPositionCallbackProperty(): Cartesian3 {\n    return new Cesium.CallbackProperty(this.getPosition.bind(this), false);\n  }\n\n\n  setPosition(position: Cartesian3) {\n    this.position.x = position.x;\n    this.position.y = position.y;\n    this.position.z = position.z;\n  }\n\n  getId(): string {\n    return this.id;\n  }\n\n  private generateId(): string {\n    return 'edit-point-' + EditPoint.counter++;\n  }\n}\n","export function generateKey(length = 12): string {\n  let id = '';\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (let i = 0; i < length; i++) {\n    id += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return id;\n}\n\nexport function debounce(func, wait) {\n  let timeout;\n  return function (...args) {\n    const context = this;\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func.apply(context, args), wait);\n  };\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { MapsManagerService } from '../../angular-cesium/services/maps-manager/maps-manager.service';\nimport { CameraService } from '../../angular-cesium/services/camera/camera.service';\nimport { CesiumService } from '../../angular-cesium/services/cesium/cesium.service';\nimport { AcMapComponent } from '../../angular-cesium/components/ac-map/ac-map.component';\n\ninterface ZoomData {\n  container: HTMLElement;\n  borderElement?: HTMLElement;\n  resetOnEscapePressFunc?: EventListenerOrEventListenerObject;\n}\n\n/**\n * The Service is as a \"zoom to rectangle\" tool\n *\n * example:\n * ```\n * constructor(\n *   private cameraService: CameraService,\n *   private cesiumService: CesiumService,\n *   private zoomToRectangleService: ZoomToRectangleService,\n * ) {\n *   this.zoomToRectangleService.init(cesiumService, cameraService);\n * }\n * ...\n * this.zoomToRectangleService.activate({onComplete: () => this.zoomToRectangleService.disable()});\n * ```\n *\n * `init()` - initialize the service with CameraService and CesiumService.\n * If no mapId is provided to activate() - must be called before calling `activate()`.\n *\n * `disable()` - disables the tool.\n *\n * `activate()` -\n * @param options\n * {\n *  onStart - optional - a callback that will be called when the user start drawing the rectangle\n *  onComplete - optional - a callback that will be called when the tool zoom in\n *  autoDisableOnZoom - optional - determines if the tool should auto disable after zoom - default: true\n *  animationDurationInSeconds - optional - zoom animation duration in seconds - default: 0.5\n *  borderStyle - optional - the style of the rectangle element border - default: '3px dashed #FFFFFF'\n *  backgroundColor - optional - the background color of the rectangle element - default: 'transparent'\n *  resetKeyCode - optional - the key code of the key that is used to reset the drawing of the rectangle - default: 27 (ESC key)\n *  threshold - optional - the minimum area of the screen rectangle (in pixels) that is required to perform zoom - default: 9\n *  keepRotation - optional - whether or not to keep the rotation when zooming in - default: true\n *  mouseButton - optional - sets the mouse button for drawing the rectangle - default: left mouse button (0)\n * }\n * @param mapId - optional - the mapId of the map that the tool will be used in.\n *\n */\n\nexport enum MouseButtons {\n  LEFT = 0,\n  MIDDLE = 1,\n  RIGHT = 2,\n}\n\n@Injectable()\nexport class ZoomToRectangleService {\n  constructor(\n    private mapsManager: MapsManagerService,\n    @Optional() cameraService: CameraService,\n    @Optional() cesiumService: CesiumService,\n  ) {}\n\n  private cameraService: CameraService;\n  private cesiumService: CesiumService;\n\n  private mapsZoomElements = new Map<string, ZoomData>();\n  private defaultOptions = {\n    animationDurationInSeconds: 0.5,\n    resetKeyCode: 27,\n    borderStyle: '2px solid rgba(0,0,0,0.5)',\n    backgroundColor: 'rgba(0,0,0,0.2)',\n    autoDisableOnZoom: true,\n    threshold: 9,\n    keepRotation: true,\n    mouseButton: MouseButtons.LEFT,\n  };\n\n  init(cesiumService: CesiumService, cameraService: CameraService) {\n    this.cameraService = cameraService;\n    this.cesiumService = cesiumService;\n  }\n\n  activate(\n    options: {\n      onStart?: (acMap?: AcMapComponent) => any;\n      onComplete?: (acMap?: AcMapComponent) => any;\n      mouseButton?: MouseButtons;\n      autoDisableOnZoom?: boolean;\n      animationDurationInSeconds?: number;\n      threshold?: number;\n      keepRotation?: boolean;\n      borderStyle?: string;\n      backgroundColor?: string;\n      resetKeyCode?: number;\n    } = {},\n    mapId?: string,\n  ) {\n    if ((!this.cameraService || !this.cesiumService) && !mapId) {\n      throw new Error(`The function must receive a mapId if the service wasn't initialized`);\n    }\n    const finalOptions = Object.assign({}, this.defaultOptions, options);\n    let cameraService = this.cameraService;\n    let mapContainer;\n    let map;\n    if (this.cesiumService) {\n      mapContainer = this.cesiumService.getViewer().container;\n      map = this.cesiumService.getMap();\n    }\n    if (mapId) {\n      map = this.mapsManager.getMap(mapId);\n      if (!map) {\n        throw new Error(`Map not found with id: ${mapId}`);\n      }\n      cameraService = map.getCameraService();\n      mapContainer = map.getCesiumViewer().container;\n    }\n\n    if (!cameraService || !mapContainer) {\n      throw new Error(`The function must receive a mapId if the service wasn't initialized`);\n    }\n    this.disable(mapId);\n    const container = document.createElement('div');\n    mapContainer.style.position = 'relative';\n    container.style.position = 'absolute';\n    container.style.width = '100%';\n    container.style.height = '100%';\n    container.style.top = '0';\n    container.style.left = '0';\n    mapContainer.appendChild(container);\n    const mapZoomData: ZoomData = { container };\n    this.mapsZoomElements.set(mapId || this.cesiumService.getMap().getId(), mapZoomData);\n    let mouse = {\n      endX: 0,\n      endY: 0,\n      startX: 0,\n      startY: 0,\n    };\n    let borderElement: HTMLElement | undefined;\n\n    container.onmousedown = e => {\n      if (e.button !== finalOptions.mouseButton) {\n        return;\n      }\n      if (!borderElement) {\n        if (options && options.onStart) {\n          options.onStart(map);\n        }\n\n        const rect = (e.currentTarget as any).getBoundingClientRect();\n        const offsetX = e.clientX - rect.left;\n        const offsetY = e.clientY - rect.top;\n        mouse.startX = offsetX;\n        mouse.startY = offsetY;\n        borderElement = document.createElement('div');\n        borderElement.className = 'zoom-to-rectangle-border';\n        borderElement.style.position = 'absolute';\n        borderElement.style.border = finalOptions.borderStyle;\n        borderElement.style.backgroundColor = finalOptions.backgroundColor;\n        borderElement.style.left = mouse.startX + 'px';\n        borderElement.style.top = mouse.startY + 'px';\n        container.appendChild(borderElement);\n        mapZoomData.borderElement = borderElement;\n      }\n    };\n\n    container.onmouseup = e => {\n      if (borderElement) {\n        let zoomApplied;\n        if (mouse && Math.abs(mouse.endX - mouse.startX) * Math.abs(mouse.endY - mouse.startY) > finalOptions.threshold) {\n          zoomApplied = this.zoomCameraToRectangle(\n            cameraService,\n            mouse,\n            finalOptions.animationDurationInSeconds,\n            finalOptions,\n          );\n        }\n        borderElement.remove();\n        borderElement = undefined;\n        mapZoomData.borderElement = undefined;\n        mouse = {\n          endX: 0,\n          endY: 0,\n          startX: 0,\n          startY: 0,\n        };\n        if (!!finalOptions.onComplete) {\n          finalOptions.onComplete(map);\n        }\n        if (finalOptions.autoDisableOnZoom && zoomApplied) {\n          this.disable(mapId);\n        }\n      }\n    };\n\n    container.onmousemove = e => {\n      if (borderElement) {\n        const rect = (e.currentTarget as any).getBoundingClientRect();\n        const offsetX = e.clientX - rect.left;\n        const offsetY = e.clientY - rect.top;\n        mouse.endX = offsetX;\n        mouse.endY = offsetY;\n        borderElement.style.width = Math.abs(mouse.endX - mouse.startX) + 'px';\n        borderElement.style.height = Math.abs(mouse.endY - mouse.startY) + 'px';\n        borderElement.style.left = Math.min(mouse.startX, mouse.endX) + 'px';\n        borderElement.style.top = Math.min(mouse.startY, mouse.endY) + 'px';\n      }\n    };\n\n    const resetOnEscapePress = e => {\n      if (e.keyCode === finalOptions.resetKeyCode && borderElement) {\n        borderElement.remove();\n        borderElement = undefined;\n        mapZoomData.borderElement = undefined;\n        mouse = {\n          endX: 0,\n          endY: 0,\n          startX: 0,\n          startY: 0,\n        };\n      }\n    };\n    document.addEventListener('keydown', resetOnEscapePress);\n    mapZoomData.resetOnEscapePressFunc = resetOnEscapePress;\n  }\n\n  disable(mapId?: string) {\n    if (!this.cesiumService && !mapId) {\n      throw new Error('If the service was not initialized with CesiumService, mapId must be provided');\n    }\n    const data = this.mapsZoomElements.get(mapId || this.cesiumService.getMap().getId());\n    if (data) {\n      data.container.remove();\n      if (data.borderElement) {\n        data.borderElement.remove();\n      }\n      if (data.resetOnEscapePressFunc) {\n        document.removeEventListener('keydown', data.resetOnEscapePressFunc);\n      }\n    }\n    this.mapsZoomElements.delete(mapId);\n  }\n\n  private zoomCameraToRectangle(\n    cameraService: CameraService,\n    positions: { endX: number; endY: number; startX: number; startY: number },\n    animationDuration,\n    options,\n  ): boolean {\n    const camera = cameraService.getCamera();\n    const cartesian1 = camera.pickEllipsoid({ x: positions.startX, y: positions.startY });\n    const cartesian2 = camera.pickEllipsoid({ x: positions.endX, y: positions.endY });\n    if (!cartesian1 || !cartesian2) {\n      return false;\n    }\n    const cartographic1 = Cesium.Cartographic.fromCartesian(cartesian1);\n    const cartographic2 = Cesium.Cartographic.fromCartesian(cartesian2);\n    cameraService.cameraFlyTo({\n      destination: new Cesium.Rectangle(\n        Math.min(cartographic1.longitude, cartographic2.longitude),\n        Math.min(cartographic1.latitude, cartographic2.latitude),\n        Math.max(cartographic1.longitude, cartographic2.longitude),\n        Math.max(cartographic1.latitude, cartographic2.latitude),\n      ),\n      orientation: options.keepRotation ? { heading: camera.heading } : undefined,\n      duration: animationDuration,\n    });\n    return true;\n  }\n}\n","import { publish, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from '../../../models/edit-point';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { PointsManagerService } from './points-manager.service';\nimport { LabelProps } from '../../../models/label-props';\nimport { generateKey } from '../../utils';\nimport { CesiumService } from '../../../../angular-cesium';\nimport { PointEditOptions, PointProps } from '../../../models/point-edit-options';\nimport { PointEditUpdate } from '../../../models/point-edit-update';\nimport { PointEditorObservable } from '../../../models/point-editor-observable';\n\nexport const DEFAULT_POINT_OPTIONS: PointEditOptions = {\n  addLastPointEvent: CesiumEvent.LEFT_CLICK,\n  removePointEvent: CesiumEvent.RIGHT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  allowDrag: true,\n  pointProps: {\n    color: Cesium.Color.WHITE.withAlpha(0.95),\n    outlineColor: Cesium.Color.BLACK.withAlpha(0.5),\n    outlineWidth: 1,\n    pixelSize: 10,\n    show: true,\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\n  },\n};\n\n/**\n * Service for creating editable point\n *\n *  * You must provide `PointsEditorService` yourself.\n * PolygonsEditorService works together with `<points-editor>` component. Therefor you need to create `<points-editor>`\n * for each `PointsEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `PointEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `PointEditorObservable`.\n * + To stop editing call `dsipose()` from the `PointEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over editted shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `PointEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n * usage:\n * ```typescript\n *  // Start creating point\n *  const editing$ = pointEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit point from existing point cartesian3 positions\n *  const editing$ = this.pointEditor.edit(initialPos);\n *\n * ```\n */\n@Injectable()\nexport class PointsEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<PointEditUpdate>();\n  private updatePublisher = publish<PointEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private pointManager: PointsManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n  private cesiumScene;\n\n  init(mapEventsManager: MapEventsManagerService,\n       coordinateConverter: CoordinateConverter,\n       cameraService: CameraService,\n       pointManager: PointsManagerService,\n       cesiumViewer: CesiumService) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.pointManager = pointManager;\n    this.updatePublisher.connect();\n\n    this.cesiumScene = cesiumViewer.getScene();\n  }\n\n  onUpdate(): Observable<PointEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  private screenToPosition(cartesian2) {\n    const cartesian3 = this.coordinateConverter.screenToCartesian3(cartesian2);\n\n    // If cartesian3 is undefined then the point inst on the globe\n    if (cartesian3) {\n      const ray = this.cameraService.getCamera().getPickRay(cartesian2);\n      return this.cesiumScene.globe.pick(ray, this.cesiumScene);\n    }\n    return cartesian3;\n  }\n\n  create(options = DEFAULT_POINT_OPTIONS, eventPriority = 100): PointEditorObservable {\n    const id = generateKey();\n    const pointOptions = this.setOptions(options);\n\n    const clientEditSubject = new BehaviorSubject<PointEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      pointOptions: pointOptions,\n    });\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n      pickConfig: options.pickConfiguration,\n    });\n    const addLastPointRegistration = this.mapEventsManager.register({\n      event: pointOptions.addLastPointEvent,\n      modifier: pointOptions.addLastPointModifier,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n      pickConfig: options.pickConfiguration,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addLastPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id);\n\n    mouseMoveRegistration.subscribe(({ movement: { endPosition } }) => {\n      const position = this.screenToPosition(endPosition);\n      if (position) {\n\n        this.updateSubject.next({\n          id,\n          position,\n          editMode: EditModes.CREATE,\n          updatedPosition: position,\n          editAction: EditActions.MOUSE_MOVE,\n        });\n      }\n    });\n    addLastPointRegistration.subscribe(({ movement: { endPosition } }) => {\n      const position = this.screenToPosition(endPosition);\n      finishedCreate = this.switchToEditMode(\n          id,\n          clientEditSubject,\n          position,\n          eventPriority,\n          pointOptions,\n          editorObservable,\n          true);\n    });\n    return editorObservable;\n  }\n\n  private switchToEditMode(id,\n                           clientEditSubject,\n                           position: Cartesian3,\n                           eventPriority,\n                           pointOptions,\n                           editorObservable,\n                           finishedCreate: boolean) {\n    const update = {\n      id,\n      position: position,\n      editMode: EditModes.CREATE_OR_EDIT,\n      updatedPosition: position,\n      editAction: EditActions.ADD_LAST_POINT,\n    };\n    this.updateSubject.next(update);\n    clientEditSubject.next({\n      ...update,\n      position: position,\n      point: this.getPoint(id),\n    });\n\n    const changeMode = {\n      id,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.CHANGE_TO_EDIT,\n    };\n    this.updateSubject.next(changeMode);\n    clientEditSubject.next(changeMode);\n    if (this.observablesMap.has(id)) {\n      this.observablesMap.get(id).forEach(registration => registration.dispose());\n    }\n    this.observablesMap.delete(id);\n    this.editPoint(id, position, eventPriority, clientEditSubject, pointOptions, editorObservable);\n    finishedCreate = true;\n    return finishedCreate;\n  }\n\n  edit(position: Cartesian3, options = DEFAULT_POINT_OPTIONS, priority = 100): PointEditorObservable {\n    const id = generateKey();\n    const pointOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<PointEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT\n    });\n    const update = {\n      id,\n      position: position,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      pointOptions: pointOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n      position: position,\n      point: this.getPoint(id),\n    });\n    return this.editPoint(\n      id,\n      position,\n      priority,\n      editSubject,\n      pointOptions\n    );\n  }\n\n  private editPoint(id: string,\n                       position: Cartesian3,\n                       priority: number,\n                       editSubject: Subject<PointEditUpdate>,\n                       options: PointEditOptions,\n                       editObservable?: PointEditorObservable) {\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: options.dragPointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      pickConfig: options.pickConfiguration,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    const pointRemoveRegistration = this.mapEventsManager.register({\n      event: options.removePointEvent,\n      modifier: options.removePointModifier,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      pickConfig: options.pickConfiguration,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    pointDragRegistration.pipe(\n      tap(({ movement: { drop } }) => this.cameraService.enableInputs(drop)))\n      .subscribe(({ movement: { endPosition, drop }, entities }) => {\n        const updatedPosition = this.screenToPosition(endPosition);\n        if (!updatedPosition) {\n          return;\n        }\n        const update = {\n          id,\n          editMode: EditModes.EDIT,\n          updatedPosition,\n          editAction: drop ? EditActions.DRAG_POINT_FINISH : EditActions.DRAG_POINT,\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n          position: updatedPosition,\n          point: this.getPoint(id),\n        });\n\n      });\n\n    const observables = [pointDragRegistration, pointRemoveRegistration];\n    this.observablesMap.set(id, observables);\n    return this.createEditorObservable(editSubject, id);\n  }\n\n  private setOptions(options: PointEditOptions) {\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_POINT_OPTIONS));\n    const pointOptions: PointEditOptions = Object.assign(defaultClone, options);\n    pointOptions.pointProps = {...DEFAULT_POINT_OPTIONS.pointProps, ...options.pointProps};\n    pointOptions.pointProps = {...DEFAULT_POINT_OPTIONS.pointProps, ...options.pointProps};\n    return pointOptions;\n  }\n\n\n  private createEditorObservable(observableToExtend: any, id: string): PointEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      });\n    };\n\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        position: this.getPosition(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n      });\n    };\n\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        position: this.getPosition(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n      });\n    };\n\n    observableToExtend.setManually = (point: {\n      position: Cartesian3,\n      pointProp?: PointProps\n    } | Cartesian3, pointProps?: PointProps) => {\n      const newPoint = this.pointManager.get(id);\n      newPoint.setManually(point, pointProps);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: any) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      });\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      });\n    };\n    observableToExtend.getCurrentPoint = () => this.getPoint(id);\n\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n\n    observableToExtend.getLabels = (): LabelProps[] => this.pointManager.get(id).labels;\n\n    return observableToExtend as PointEditorObservable;\n  }\n\n  private getPosition(id: string) {\n    const point = this.pointManager.get(id);\n    return point.getPosition();\n  }\n\n  private getPoint(id: string) {\n    const point = this.pointManager.get(id);\n    if (point) {\n      return point.getCurrentPoint();\n    }\n  }\n}\n","import { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { Cartesian2 } from '../../angular-cesium/models/cartesian2';\n\nexport interface LabelStyle {\n  show?: boolean;\n  font?: string;\n  style?: any;\n  fillColor?: any;\n  outlineColor?: any;\n  backgroundColor?: any;\n  backgroundPadding?: any;\n  showBackground?: boolean;\n  scale?: number;\n  distanceDisplayCondition?: any;\n  heightReference?: any;\n  horizontalOrigin?: any;\n  eyeOffset?: Cartesian3;\n  position?: Cartesian3;\n  pixelOffset?: Cartesian2;\n  pixelOffsetScaleByDistance?: any;\n  outlineWidth?: any;\n  scaleByDistance?: any;\n  translucencyByDistance?: any;\n  verticalOrigin?: any;\n  disableDepthTestDistance?: number;\n}\n\nexport interface LabelProps {\n  text: string;\n  show?: boolean;\n  font?: string;\n  style?: any;\n  fillColor?: any;\n  outlineColor?: any;\n  backgroundColor?: any;\n  backgroundPadding?: any;\n  showBackground?: boolean;\n  scale?: number;\n  distanceDisplayCondition?: any;\n  heightReference?: any;\n  horizontalOrigin?: any;\n  eyeOffset?: Cartesian3;\n  position?: Cartesian3;\n  pixelOffset?: Cartesian2;\n  pixelOffsetScaleByDistance?: any;\n  outlineWidth?: any;\n  scaleByDistance?: any;\n  translucencyByDistance?: any;\n  verticalOrigin?: any;\n  disableDepthTestDistance?: number;\n}\n\nexport const defaultLabelProps: LabelProps = {\n  backgroundColor: new Cesium.Color(0.165, 0.165, 0.165, 0.7),\n  backgroundPadding: new Cesium.Cartesian2(25, 20),\n  distanceDisplayCondition: undefined,\n  fillColor: Cesium.Color.WHITE,\n  font: '30px sans-serif',\n  heightReference: Cesium.HeightReference.NONE,\n  horizontalOrigin: Cesium.HorizontalOrigin.LEFT,\n  outlineColor: Cesium.Color.BLACK,\n  outlineWidth: 1.0,\n  pixelOffset: Cesium.Cartesian2.ZERO,\n  pixelOffsetScaleByDistance: undefined,\n  scale: 1.0,\n  scaleByDistance: undefined,\n  show: true,\n  showBackground: false,\n  style: Cesium.LabelStyle.FILL,\n  text: '',\n  translucencyByDistance: undefined,\n  verticalOrigin: Cesium.VerticalOrigin.BASELINE,\n  eyeOffset: Cesium.Cartesian3.ZERO,\n  disableDepthTestDistance: 0,\n};\n","import { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from './edit-point';\nimport { defaultLabelProps, LabelProps } from './label-props';\nimport { PointEditOptions, PointProps } from './point-edit-options';\n\ninterface PositionWithPointProps {\n  position: Cartesian3;\n  pointProp?: PointProps;\n}\n\nexport class EditablePoint extends AcEntity {\n  private point: EditPoint;\n  private _enableEdit = true;\n  private _props: PointProps;\n  private _labels: LabelProps[] = [];\n\n  constructor(private id: string,\n              private pointLayer: AcLayerComponent,\n              private coordinateConverter: CoordinateConverter,\n              private editOptions: PointEditOptions,\n              position?: Cartesian3) {\n    super();\n    this._props = {...editOptions.pointProps};\n    if (position) {\n      this.createFromExisting(position);\n    }\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels) {\n      return;\n    }\n    const position = this.point.getPosition();\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        label.position = position;\n      }\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get props(): PointProps {\n    return this._props;\n  }\n\n  set props(value: PointProps) {\n    this._props = value;\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    if (value) {\n      this.point.props.color = Cesium.Color.WHITE;\n    } else {\n      this.point.props.color = Cesium.Color.DIMGREY;\n      this.point.props.pixelSize = 10;\n    }\n    this.updatePointLayer();\n  }\n\n  private createFromExisting(position: Cartesian3) {\n    this.point = new EditPoint(this.id, position, this._props);\n    this.updatePointLayer();\n  }\n\n  private hasPosition(point: PositionWithPointProps | Cartesian3): point is PositionWithPointProps {\n    if ((point as PositionWithPointProps).position) {\n      return true;\n    }\n    return false;\n  }\n\n  setManually(point: PositionWithPointProps | Cartesian3, props?: PointProps) {\n    if (!this.enableEdit) {\n      throw new Error('Update manually only in edit mode, after point is created');\n    }\n    let newProps = props;\n    if (this.hasPosition(point)) {\n      newProps = point.pointProp ? point.pointProp : props;\n      this.point.setPosition(point.position);\n    } else {\n      this.point.setPosition(point);\n    }\n    this.point.props = newProps;\n    this.updatePointLayer();\n  }\n\n  addLastPoint(position: Cartesian3) {\n    this.point.setPosition(position);\n    this.updatePointLayer();\n  }\n\n  movePoint(toPosition: Cartesian3) {\n    if (!this.point) {\n      this.point = new EditPoint(this.id, toPosition, this._props);\n    } else {\n      this.point.setPosition(toPosition);\n    }\n    this.updatePointLayer();\n  }\n\n  getCurrentPoint(): EditPoint {\n    return this.point;\n  }\n\n  getPosition(): Cartesian3 {\n    return this.point.getPosition();\n  }\n\n  getPositionCallbackProperty(): Cartesian3 {\n    return new Cesium.CallbackProperty(this.getPosition.bind(this), false);\n  }\n\n  private updatePointLayer() {\n    this.pointLayer.update(this.point, this.point.getId());\n  }\n\n  update() {\n    this.updatePointLayer();\n  }\n\n  dispose() {\n    this.pointLayer.remove(this.point.getId());\n  }\n\n  getId() {\n    return this.id;\n  }\n}\n","import { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Injectable } from '@angular/core';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { PointEditOptions } from '../../../models/point-edit-options';\nimport { EditablePoint } from '../../../models/editable-point';\n\n@Injectable()\nexport class PointsManagerService {\n  points: Map<string, EditablePoint> = new Map<string, EditablePoint>();\n\n  createEditablePoint(id: string,\n                      editPointLayer: AcLayerComponent,\n                      coordinateConverter: CoordinateConverter,\n                      editOptions?: PointEditOptions,\n                      position?: Cartesian3) {\n    const editablePoint = new EditablePoint(\n      id,\n      editPointLayer,\n      coordinateConverter,\n      editOptions,\n      position);\n    this.points.set(id, editablePoint\n    );\n  }\n\n  enableAll() {\n    this.points.forEach(point => point.enableEdit = true);\n  }\n\n  disableAll() {\n    this.points.forEach(point => point.enableEdit = false);\n  }\n\n  dispose(id: string) {\n    const point = this.points.get(id);\n    if (point.getCurrentPoint()) {\n      point.dispose();\n    }\n    this.points.delete(id);\n  }\n\n  get(id: string): EditablePoint {\n    return this.points.get(id);\n  }\n\n  clear() {\n    this.points.forEach(point => point.dispose());\n    this.points.clear();\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { CesiumService } from '../../../angular-cesium/services/cesium/cesium.service';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { PointsEditorService } from '../../services/entity-editors/points-editor/points-editor.service';\nimport { PointsManagerService } from '../../services/entity-editors/points-editor/points-manager.service';\nimport { PointEditUpdate } from '../../models/point-edit-update';\nimport { EditablePoint } from '../../models/editable-point';\nimport { LabelProps } from '../../models/label-props';\n\n@Component({\n  selector: 'points-editor',\n  template: /*html*/ `\n    <ac-layer #editPointLayer acFor=\"let point of editPoint$\" [context]=\"this\">\n      <ac-point-desc\n        props=\"{\n        position: point.getPositionCallbackProperty(),\n        pixelSize: getPointSize(point),\n        color: point.props.color,\n        outlineColor: point.props.outlineColor,\n        outlineWidth: point.props.outlineWidth,\n        show: getPointShow(point),\n        disableDepthTestDistance: point.props.disableDepthTestDistance,\n        heightReference: point.props.heightReference,\n    }\"\n      ></ac-point-desc>\n    </ac-layer>\n\n    <ac-layer #pointLabelsLayer acFor=\"let pointLabels of pointLabels$\" [context]=\"this\">\n      <ac-array-desc acFor=\"let label of pointLabels.labels\" [idGetter]=\"getLabelId\">\n        <ac-label-primitive-desc\n          props=\"{\n            position: label.position,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            text: label.text,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin,\n            disableDepthTestDistance: label.disableDepthTestDistance,\n        }\"\n        >\n        </ac-label-primitive-desc>\n      </ac-array-desc>\n    </ac-layer>\n  `,\n  providers: [CoordinateConverter, PointsManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PointsEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: PointEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoint$ = new Subject<AcNotification>();\n  public pointLabels$ = new Subject<AcNotification>();\n\n  @ViewChild('editPointLayer') private editPointLayer: AcLayerComponent;\n  @ViewChild('pointLabelsLayer') private pointLabelsLayer: AcLayerComponent;\n\n  constructor(\n    private pointsEditor: PointsEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private pointsManager: PointsManagerService,\n    private cesiumService: CesiumService,\n  ) {\n    this.pointsEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, pointsManager, this.cesiumService);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.pointsEditor.onUpdate().subscribe((update: PointEditUpdate) => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(point: EditablePoint, update: PointEditUpdate, labels?: LabelProps[]) {\n    if (labels) {\n      point.labels = labels;\n      this.pointLabelsLayer.update(point, point.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    update.position = point.getPosition();\n    update.point = point.getCurrentPoint();\n    point.labels = this.editLabelsRenderFn(update, point.labels);\n    this.pointLabelsLayer.update(point, point.getId());\n  }\n\n  removeEditLabels(point: EditablePoint) {\n    point.labels = [];\n    this.pointLabelsLayer.remove(point.getId());\n  }\n\n  handleCreateUpdates(update: PointEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.pointsManager.createEditablePoint(\n          update.id,\n          this.editPointLayer,\n          this.coordinateConverter,\n          update.pointOptions,\n          update.position\n        );\n        break;\n      }\n      case EditActions.ADD_LAST_POINT: {\n        const point = this.pointsManager.get(update.id);\n        if (update.updatedPosition) {\n          point.addLastPoint(update.updatedPosition);\n          this.renderEditLabels(point, update);\n        }\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const point = this.pointsManager.get(update.id);\n        if (update.updatedPosition) {\n          point.movePoint(update.updatedPosition);\n          this.renderEditLabels(point, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const point = this.pointsManager.get(update.id);\n        if (point && point.getCurrentPoint()) {\n          this.removeEditLabels(point);\n        }\n        this.pointsManager.dispose(update.id);\n        this.editLabelsRenderFn = undefined;\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const point = this.pointsManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(point, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const point = this.pointsManager.get(update.id);\n        this.renderEditLabels(point, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const point = this.pointsManager.get(update.id);\n        this.renderEditLabels(point, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: PointEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.pointsManager.createEditablePoint(\n          update.id,\n          this.editPointLayer,\n          this.coordinateConverter,\n          update.pointOptions,\n          update.position,\n        );\n        break;\n      }\n      case EditActions.DRAG_POINT: {\n        const point = this.pointsManager.get(update.id);\n        if (point && point.enableEdit) {\n          point.movePoint(update.updatedPosition);\n          this.renderEditLabels(point, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH: {\n        const point = this.pointsManager.get(update.id);\n        if (point && point.enableEdit) {\n          point.movePoint(update.updatedPosition);\n          this.renderEditLabels(point, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const point = this.pointsManager.get(update.id);\n        if (point) {\n          point.enableEdit = false;\n          this.renderEditLabels(point, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const point = this.pointsManager.get(update.id);\n        if (point) {\n          point.enableEdit = true;\n          this.renderEditLabels(point, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.pointsManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { PolylineProps } from './polyline-edit-options';\n\nexport class EditPolyline extends AcEntity {\n  static counter = 0;\n  private editedEntityId: string;\n  private id: string;\n  private positions: Cartesian3[];\n  private _polylineProps: PolylineProps;\n\n  constructor(entityId: string, startPosition: Cartesian3, endPosition: Cartesian3, polylineProps?: PolylineProps) {\n    super();\n    this.editedEntityId = entityId;\n    this.id = this.generateId();\n    this.positions = [startPosition, endPosition];\n    this._polylineProps = {...polylineProps};\n  }\n\n  get props(): PolylineProps {\n    return this._polylineProps;\n  }\n\n  set props(value: PolylineProps) {\n    this._polylineProps = value;\n  }\n\n  getEditedEntityId(): string {\n    return this.editedEntityId;\n  }\n\n  getPositions(): any[] {\n    return this.positions.map(p => p.clone());\n  }\n\n\n  getPositionsCallbackProperty(): Cartesian3[] {\n    return new Cesium.CallbackProperty(this.getPositions.bind(this), false);\n  }\n\n  validatePositions(): boolean {\n    return this.positions[0] !== undefined && this.positions[1] !== undefined;\n  }\n\n  getStartPosition() {\n    return this.positions[0];\n  }\n\n  getEndPosition() {\n    return this.positions[1];\n  }\n\n  setStartPosition(position: Cartesian3) {\n    this.positions[0] = position;\n  }\n\n  setEndPosition(position: Cartesian3) {\n    this.positions[1] = position;\n  }\n\n  getId(): string {\n    return this.id;\n  }\n\n  private generateId(): string {\n    return 'edit-polyline-' + EditPolyline.counter++;\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { EditPolyline } from './edit-polyline';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { PolygonEditOptions, PolygonProps } from './polygon-edit-options';\nimport { PointProps } from './point-edit-options';\nimport { PolylineProps } from './polyline-edit-options';\nimport { defaultLabelProps, LabelProps } from './label-props';\n\nexport class EditablePolygon extends AcEntity {\n  private positions: EditPoint[] = [];\n  private polylines: EditPolyline[] = [];\n  private movingPoint: EditPoint;\n  private doneCreation = false;\n  private _enableEdit = true;\n  private _polygonProps: PolygonProps;\n  private _defaultPointProps: PointProps;\n  private _defaultPolylineProps: PolylineProps;\n  private lastDraggedToPosition: Cartesian3;\n  private _labels: LabelProps[] = [];\n\n  constructor(private id: string,\n              private polygonsLayer: AcLayerComponent,\n              private pointsLayer: AcLayerComponent,\n              private polylinesLayer: AcLayerComponent,\n              private coordinateConverter: CoordinateConverter,\n              private polygonOptions: PolygonEditOptions,\n              positions?: Cartesian3[]) {\n    super();\n    this.polygonProps = {...polygonOptions.polygonProps};\n    this.defaultPointProps = {...polygonOptions.pointProps};\n    this.defaultPolylineProps = {...polygonOptions.polylineProps};\n    if (positions && positions.length >= 3) {\n      this.createFromExisting(positions);\n    }\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels) {\n      return;\n    }\n    const positions = this.getRealPositions();\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        label.position = positions[index];\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get defaultPolylineProps(): PolylineProps {\n    return this._defaultPolylineProps;\n  }\n\n  set defaultPolylineProps(value: PolylineProps) {\n    this._defaultPolylineProps = value;\n  }\n\n  get defaultPointProps(): PointProps {\n    return this._defaultPointProps;\n  }\n\n  get polygonProps(): PolygonProps {\n    return this._polygonProps;\n  }\n\n  set polygonProps(value: PolygonProps) {\n    this._polygonProps = value;\n  }\n\n  set defaultPointProps(value: PointProps) {\n    this._defaultPointProps = value;\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this.positions.forEach(point => {\n      point.show = value;\n      this.updatePointsLayer(false, point);\n    });\n  }\n\n  private createFromExisting(positions: Cartesian3[]) {\n    positions.forEach((position) => {\n      this.addPointFromExisting(position);\n    });\n    this.addAllVirtualEditPoints();\n    this.updatePolygonsLayer();\n    this.doneCreation = true;\n  }\n\n  setPointsManually(points: { position: Cartesian3, pointProps: PointProps }[] | Cartesian3[], polygonProps?: PolygonProps) {\n    if (!this.doneCreation) {\n      throw new Error('Update manually only in edit mode, after polygon is created');\n    }\n\n    this.positions.forEach(p => this.pointsLayer.remove(p.getId()));\n    const newPoints: EditPoint[] = [];\n    for (let i = 0; i < points.length; i++) {\n      const pointOrCartesian: any = points[i];\n      let newPoint = null;\n      if (pointOrCartesian.pointProps) {\n        newPoint = new EditPoint(this.id, pointOrCartesian.position, pointOrCartesian.pointProps);\n      } else {\n        newPoint = new EditPoint(this.id, pointOrCartesian, this.defaultPointProps);\n      }\n      newPoints.push(newPoint);\n    }\n    this.positions = newPoints;\n    this.polygonProps = polygonProps ? polygonProps : this.polygonProps;\n    this.updatePointsLayer(true, ...this.positions);\n    this.addAllVirtualEditPoints();\n    this.updatePolygonsLayer();\n  }\n\n  private addAllVirtualEditPoints() {\n    const currentPoints = [...this.positions];\n    currentPoints.forEach((pos, index) => {\n      const currentPoint = pos;\n      const nextIndex = (index + 1) % (currentPoints.length);\n      const nextPoint = currentPoints[nextIndex];\n      const midPoint = this.setMiddleVirtualPoint(currentPoint, nextPoint);\n      this.updatePointsLayer(false, midPoint);\n    });\n  }\n\n  private setMiddleVirtualPoint(firstP: EditPoint, secondP: EditPoint): EditPoint {\n    const midPointCartesian3 = Cesium.Cartesian3.lerp(firstP.getPosition(), secondP.getPosition(), 0.5, new Cesium.Cartesian3());\n    const midPoint = new EditPoint(this.id, midPointCartesian3, this.defaultPointProps);\n    midPoint.setVirtualEditPoint(true);\n\n    const firstIndex = this.positions.indexOf(firstP);\n    this.positions.splice(firstIndex + 1, 0, midPoint);\n    return midPoint;\n  }\n\n  private updateMiddleVirtualPoint(virtualEditPoint: EditPoint, prevPoint: EditPoint, nextPoint: EditPoint) {\n    const midPointCartesian3 = Cesium.Cartesian3.lerp(prevPoint.getPosition(), nextPoint.getPosition(), 0.5, new Cesium.Cartesian3());\n    virtualEditPoint.setPosition(midPointCartesian3);\n  }\n\n  changeVirtualPointToRealPoint(point: EditPoint) {\n    point.setVirtualEditPoint(false); // virtual point becomes a real point\n    const pointsCount = this.positions.length;\n    const pointIndex = this.positions.indexOf(point);\n    const nextIndex = (pointIndex + 1) % (pointsCount);\n    const preIndex = ((pointIndex - 1) + pointsCount) % pointsCount;\n\n    const nextPoint = this.positions[nextIndex];\n    const prePoint = this.positions[preIndex];\n\n    const firstMidPoint = this.setMiddleVirtualPoint(prePoint, point);\n    const secMidPoint = this.setMiddleVirtualPoint(point, nextPoint);\n    this.updatePointsLayer(true, firstMidPoint, secMidPoint, point);\n    this.updatePolygonsLayer();\n\n  }\n\n  private renderPolylines() {\n    this.polylines.forEach(polyline => this.polylinesLayer.remove(polyline.getId()));\n    this.polylines = [];\n    const realPoints = this.positions.filter(pos => !pos.isVirtualEditPoint());\n    realPoints.forEach((point, index) => {\n      const nextIndex = (index + 1) % (realPoints.length);\n      const nextPoint = realPoints[nextIndex];\n      const polyline = new EditPolyline(this.id, point.getPosition(), nextPoint.getPosition(), this.defaultPolylineProps);\n      this.polylines.push(polyline);\n      this.polylinesLayer.update(polyline, polyline.getId());\n    });\n  }\n\n  addPointFromExisting(position: Cartesian3) {\n    const newPoint = new EditPoint(this.id, position, this.defaultPointProps);\n    this.positions.push(newPoint);\n    this.updatePointsLayer(true, newPoint);\n  }\n\n\n  addPoint(position: Cartesian3) {\n    if (this.doneCreation) {\n      return;\n    }\n    const isFirstPoint = !this.positions.length;\n    if (isFirstPoint) {\n      const firstPoint = new EditPoint(this.id, position, this.defaultPointProps);\n      this.positions.push(firstPoint);\n      this.updatePointsLayer(true, firstPoint);\n    }\n\n    this.movingPoint = new EditPoint(this.id, position.clone(), this.defaultPointProps);\n    this.positions.push(this.movingPoint);\n\n    this.updatePointsLayer(true, this.movingPoint);\n    this.updatePolygonsLayer();\n  }\n\n  movePointFinish(editPoint: EditPoint) {\n    if (this.polygonOptions.clampHeightTo3D) {\n      editPoint.props.disableDepthTestDistance = Number.POSITIVE_INFINITY;\n      this.updatePointsLayer(false, editPoint);\n    }\n  }\n\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\n    editPoint.setPosition(toPosition);\n    if (this.doneCreation) {\n      if (editPoint.props.disableDepthTestDistance && this.polygonOptions.clampHeightTo3D) {\n        // To avoid bug with pickPosition() on point with disableDepthTestDistance\n        editPoint.props.disableDepthTestDistance = undefined;\n        return; // ignore first move because the pickPosition() could be wrong\n      }\n\n      if (editPoint.isVirtualEditPoint()) {\n        this.changeVirtualPointToRealPoint(editPoint);\n      }\n      const pointsCount = this.positions.length;\n      const pointIndex = this.positions.indexOf(editPoint);\n      const nextVirtualPoint = this.positions[(pointIndex + 1) % (pointsCount)];\n      const nextRealPoint = this.positions[(pointIndex + 2) % (pointsCount)];\n      const prevVirtualPoint = this.positions[((pointIndex - 1) + pointsCount) % pointsCount];\n      const prevRealPoint = this.positions[((pointIndex - 2) + pointsCount) % pointsCount];\n      this.updateMiddleVirtualPoint(nextVirtualPoint, editPoint, nextRealPoint);\n      this.updateMiddleVirtualPoint(prevVirtualPoint, editPoint, prevRealPoint);\n    }\n    this.updatePolygonsLayer();\n    this.updatePointsLayer(true, editPoint);\n  }\n\n  moveTempMovingPoint(toPosition: Cartesian3) {\n    if (this.movingPoint) {\n      this.movePoint(toPosition, this.movingPoint);\n    }\n  }\n\n  movePolygon(startMovingPosition: Cartesian3, draggedToPosition: Cartesian3) {\n    if (!this.doneCreation) {\n      return;\n    }\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = startMovingPosition;\n    }\n\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, draggedToPosition);\n    this.positions.forEach(point => {\n      const newPos = GeoUtilsService.addDeltaToPosition(point.getPosition(), delta, true);\n      point.setPosition(newPos);\n    });\n    this.updatePointsLayer();\n    this.lastDraggedToPosition = draggedToPosition;\n    this.positions.forEach(point => this.updatePointsLayer(true, point));\n  }\n\n  endMovePolygon() {\n    this.lastDraggedToPosition = undefined;\n  }\n\n  removePoint(pointToRemove: EditPoint) {\n    this.removePosition(pointToRemove);\n    this.positions\n      .filter(p => p.isVirtualEditPoint())\n      .forEach(p => this.removePosition(p));\n    this.addAllVirtualEditPoints();\n\n    this.renderPolylines();\n    if (this.getPointsCount() >= 3) {\n      this.polygonsLayer.update(this, this.id);\n    }\n  }\n\n  addLastPoint(position: Cartesian3) {\n    this.doneCreation = true;\n    this.removePosition(this.movingPoint); // remove movingPoint\n    this.movingPoint = null;\n    this.updatePolygonsLayer();\n\n    this.addAllVirtualEditPoints();\n  }\n\n  getRealPositions(): Cartesian3[] {\n    return this.getRealPoints().map(position => position.getPosition());\n  }\n\n  getRealPoints(): EditPoint[] {\n    return this.positions.filter(position => !position.isVirtualEditPoint() && position !== this.movingPoint);\n  }\n\n  getPoints(): EditPoint[] {\n    return this.positions.filter(position => position !== this.movingPoint);\n  }\n\n  getPositionsHierarchy(): Cartesian3[] {\n    const positions = this.positions.filter(position => !position.isVirtualEditPoint()).map(position => position.getPosition().clone());\n    return new Cesium.PolygonHierarchy(positions);\n  }\n\n  getPositionsHierarchyCallbackProperty(): Cartesian3[] {\n    return new Cesium.CallbackProperty(this.getPositionsHierarchy.bind(this), false);\n  }\n\n  private removePosition(point: EditPoint) {\n    const index = this.positions.findIndex((p) => p === point);\n    if (index < 0) {\n      return;\n    }\n    this.positions.splice(index, 1);\n    this.pointsLayer.remove(point.getId());\n  }\n\n  private updatePolygonsLayer() {\n    if (this.getPointsCount() >= 3) {\n      this.polygonsLayer.update(this, this.id);\n    }\n  }\n\n  private updatePointsLayer(renderPolylines = true, ...points: EditPoint[]) {\n    if (renderPolylines) {\n      this.renderPolylines();\n    }\n    points.forEach(p => this.pointsLayer.update(p, p.getId()));\n  }\n\n  dispose() {\n    this.polygonsLayer.remove(this.id);\n\n    this.positions.forEach(editPoint => {\n      this.pointsLayer.remove(editPoint.getId());\n    });\n    this.polylines.forEach(line => this.polylinesLayer.remove(line.getId()));\n    if (this.movingPoint) {\n      this.pointsLayer.remove(this.movingPoint.getId());\n      this.movingPoint = undefined;\n    }\n    this.positions.length = 0;\n  }\n\n  getPointsCount(): number {\n    return this.positions.length;\n  }\n\n  getId() {\n    return this.id;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EditablePolygon } from '../../../models/editable-polygon';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { PolygonEditOptions } from '../../../models/polygon-edit-options';\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\n\n@Injectable()\nexport class PolygonsManagerService {\n  polygons: Map<string, EditablePolygon> = new Map<string, EditablePolygon>();\n\n  createEditablePolygon(id: string, editPolygonsLayer: AcLayerComponent, editPointsLayer: AcLayerComponent,\n                        editPolylinesLayer: AcLayerComponent, coordinateConverter: CoordinateConverter,\n                        polygonOptions?: PolygonEditOptions, positions?: Cartesian3[]) {\n    const editablePolygon = new EditablePolygon(\n      id,\n      editPolygonsLayer,\n      editPointsLayer,\n      editPolylinesLayer,\n      coordinateConverter,\n      polygonOptions,\n      positions);\n    this.polygons.set(id, editablePolygon\n    );\n  }\n\n  dispose(id: string) {\n    this.polygons.get(id).dispose();\n    this.polygons.delete(id);\n  }\n\n  get(id: string): EditablePolygon {\n    return this.polygons.get(id);\n  }\n\n  clear() {\n    this.polygons.forEach(polygon => polygon.dispose());\n    this.polygons.clear();\n  }\n}\n","import { publish, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { CesiumService } from '../../../../angular-cesium/services/cesium/cesium.service';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { PolygonEditUpdate } from '../../../models/polygon-edit-update';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from '../../../models/edit-point';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { PolygonsManagerService } from './polygons-manager.service';\nimport { PolygonEditorObservable } from '../../../models/polygon-editor-observable';\nimport { EditablePolygon } from '../../../models/editable-polygon';\nimport { PolygonEditOptions, PolygonProps } from '../../../models/polygon-edit-options';\nimport { ClampTo3DOptions } from '../../../models/polyline-edit-options';\nimport { PointProps } from '../../../models/point-edit-options';\nimport { LabelProps } from '../../../models/label-props';\nimport { debounce, generateKey } from '../../utils';\n\nexport const DEFAULT_POLYGON_OPTIONS: PolygonEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  addLastPointEvent: CesiumEvent.LEFT_DOUBLE_CLICK,\n  removePointEvent: CesiumEvent.RIGHT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  allowDrag: true,\n  pointProps: {\n    color: Cesium.Color.WHITE.withAlpha(0.95),\n    outlineColor: Cesium.Color.BLACK.withAlpha(0.2),\n    outlineWidth: 1,\n    pixelSize: 13,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\n  },\n  polygonProps: {\n    material: Cesium.Color.CORNFLOWERBLUE.withAlpha(0.4),\n    fill: true,\n    classificationType: Cesium.ClassificationType.BOTH,\n    zIndex: 0,\n  },\n  polylineProps: {\n    material: () => Cesium.Color.WHITE,\n    width: 3,\n    clampToGround: false,\n    zIndex: 0,\n    classificationType: Cesium.ClassificationType.BOTH,\n  },\n  clampHeightTo3D: false,\n  clampHeightTo3DOptions: {\n    clampToTerrain: false,\n    clampMostDetailed: true,\n    clampToHeightPickWidth: 2,\n  },\n};\n\n/**\n * Service for creating editable polygons\n *\n * You must provide `PolygonsEditorService` yourself.\n * PolygonsEditorService works together with `<polygons-editor>` component. Therefor you need to create `<polygons-editor>`\n * for each `PolygonsEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `PolygonEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `PolygonEditorObservable`.\n * + To stop editing call `dsipose()` from the `PolygonEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over editted shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `PolygonEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n * usage:\n * ```typescript\n *  // Start creating polygon\n *  const editing$ = polygonsEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit polygon from existing polygon positions\n *  const editing$ = this.polygonsEditorService.edit(initialPos);\n *\n * ```\n */\n@Injectable()\nexport class PolygonsEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<PolygonEditUpdate>();\n  private updatePublisher = publish<PolygonEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private polygonsManager: PolygonsManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n  private cesiumScene: any;\n\n  private clampPointsDebounced = debounce((id, clampHeightTo3D: boolean, clampHeightTo3DOptions) => {\n    this.clampPoints(id, clampHeightTo3D, clampHeightTo3DOptions);\n  }, 300);\n\n  init(mapEventsManager: MapEventsManagerService,\n       coordinateConverter: CoordinateConverter,\n       cameraService: CameraService,\n       polygonsManager: PolygonsManagerService,\n       cesiumViewer: CesiumService,\n  ) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.polygonsManager = polygonsManager;\n    this.updatePublisher.connect();\n\n    this.cesiumScene = cesiumViewer.getScene();\n  }\n\n  onUpdate(): Observable<PolygonEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  private clampPoints(id, clampHeightTo3D: boolean, { clampToTerrain, clampMostDetailed, clampToHeightPickWidth }: ClampTo3DOptions) {\n    if (clampHeightTo3D && clampMostDetailed) {\n      const polygon = this.polygonsManager.get(id);\n      const points = polygon.getPoints();\n\n      if (!clampToTerrain) {\n        // 3dTiles\n        points.forEach(point => {\n          point.setPosition(this.cesiumScene.clampToHeight(point.getPosition(), undefined, clampToHeightPickWidth));\n        });\n        // const cartesians = points.map(point => point.getPosition());\n        // const promise = this.cesiumScene.clampToHeightMostDetailed(cartesians, undefined, clampToHeightPickWidth);\n        // promise.then((updatedCartesians) => {\n        //   points.forEach((point, index) => {\n        //     point.setPosition(updatedCartesians[index]);\n        //   });\n        // });\n      } else {\n        const cartographics = points.map(point => this.coordinateConverter.cartesian3ToCartographic(point.getPosition()));\n        const promise = Cesium.sampleTerrain(this.cesiumScene.terrainProvider, 11, cartographics);\n        Cesium.when(promise, (updatedPositions) => {\n          points.forEach((point, index) => {\n            point.setPosition(Cesium.Cartographic.toCartesian(updatedPositions[index]));\n          });\n        });\n      }\n    }\n  }\n\n  private screenToPosition(cartesian2, clampHeightTo3D: boolean, { clampToHeightPickWidth, clampToTerrain }: ClampTo3DOptions) {\n    const cartesian3 = this.coordinateConverter.screenToCartesian3(cartesian2);\n\n    // If cartesian3 is undefined then the point inst on the globe\n    if (clampHeightTo3D && cartesian3) {\n      const globePositionPick = () => {\n        const ray = this.cameraService.getCamera().getPickRay(cartesian2);\n        return this.cesiumScene.globe.pick(ray, this.cesiumScene);\n      };\n\n      // is terrain?\n      if (clampToTerrain) {\n        return globePositionPick();\n      } else {\n        const cartesian3PickPosition = this.cesiumScene.pickPosition(cartesian2);\n        const latLon = CoordinateConverter.cartesian3ToLatLon(cartesian3PickPosition);\n        if (latLon.height < 0) {// means nothing picked -> Validate it\n          return globePositionPick();\n        }\n        return this.cesiumScene.clampToHeight(cartesian3PickPosition, undefined, clampToHeightPickWidth);\n      }\n    }\n\n    return cartesian3;\n  }\n\n  create(options = DEFAULT_POLYGON_OPTIONS, priority = 100): PolygonEditorObservable {\n    const positions: Cartesian3[] = [];\n    const id = generateKey();\n    const polygonOptions = this.setOptions(options);\n\n    const clientEditSubject = new BehaviorSubject<PolygonEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      positions,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      polygonOptions: polygonOptions,\n    });\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      pickConfig: options.pickConfiguration,\n      priority,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: polygonOptions.addPointEvent,\n      modifier: polygonOptions.addPointModifier,\n      pick: PickOptions.NO_PICK,\n      pickConfig: options.pickConfiguration,\n      priority,\n    });\n    const addLastPointRegistration = this.mapEventsManager.register({\n      event: polygonOptions.addLastPointEvent,\n      modifier: polygonOptions.addLastPointModifier,\n      pick: PickOptions.NO_PICK,\n      pickConfig: options.pickConfiguration,\n      priority,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration, addLastPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id);\n\n    mouseMoveRegistration.subscribe(({ movement: { endPosition } }) => {\n      const position = this.screenToPosition(endPosition, polygonOptions.clampHeightTo3D, polygonOptions.clampHeightTo3DOptions);\n\n      if (position) {\n        this.updateSubject.next({\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.CREATE,\n          updatedPosition: position,\n          editAction: EditActions.MOUSE_MOVE,\n        });\n      }\n    });\n\n    addPointRegistration.subscribe(({ movement: { endPosition } }) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.screenToPosition(endPosition, polygonOptions.clampHeightTo3D, polygonOptions.clampHeightTo3DOptions);\n      if (!position) {\n        return;\n      }\n      const allPositions = this.getPositions(id);\n      if (allPositions.find((cartesian) => cartesian.equals(position))) {\n        return;\n      }\n\n      const updateValue = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.CREATE,\n        updatedPosition: position,\n        editAction: EditActions.ADD_POINT,\n      };\n      this.updateSubject.next(updateValue);\n      clientEditSubject.next({\n        ...updateValue,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n      });\n\n      if (polygonOptions.maximumNumberOfPoints && allPositions.length + 1 === polygonOptions.maximumNumberOfPoints) {\n        finishedCreate = this.switchToEditMode(\n          id,\n          position,\n          clientEditSubject,\n          positions,\n          priority,\n          polygonOptions,\n          editorObservable,\n          finishedCreate);\n      }\n    });\n\n\n    addLastPointRegistration.subscribe(({ movement: { endPosition } }) => {\n      const position = this.screenToPosition(endPosition, polygonOptions.clampHeightTo3D, polygonOptions.clampHeightTo3DOptions);\n      if (!position) {\n        return;\n      }\n      // position already added by addPointRegistration\n      finishedCreate = this.switchToEditMode(\n        id,\n        position,\n        clientEditSubject,\n        positions,\n        priority,\n        polygonOptions,\n        editorObservable,\n        finishedCreate);\n    });\n\n    return editorObservable;\n  }\n\n  private switchToEditMode(id,\n                           position,\n                           clientEditSubject,\n                           positions: Cartesian3[],\n                           priority,\n                           polygonOptions,\n                           editorObservable,\n                           finishedCreate: boolean) {\n    const updateValue = {\n      id,\n      positions: this.getPositions(id),\n      editMode: EditModes.CREATE,\n      updatedPosition: position,\n      editAction: EditActions.ADD_LAST_POINT,\n    };\n    this.updateSubject.next(updateValue);\n    clientEditSubject.next({\n      ...updateValue,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n    });\n\n    const changeMode = {\n      id,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.CHANGE_TO_EDIT,\n    };\n    this.updateSubject.next(changeMode);\n    clientEditSubject.next(changeMode);\n    if (this.observablesMap.has(id)) {\n      this.observablesMap.get(id).forEach(registration => registration.dispose());\n    }\n    this.observablesMap.delete(id);\n    this.editPolygon(id, positions, priority, clientEditSubject, polygonOptions, editorObservable);\n    finishedCreate = true;\n    return finishedCreate;\n  }\n\n  edit(positions: Cartesian3[], options = DEFAULT_POLYGON_OPTIONS, priority = 100): PolygonEditorObservable {\n    if (positions.length < 3) {\n      throw new Error('Polygons editor error edit(): polygon should have at least 3 positions');\n    }\n    const id = generateKey();\n    const polygonOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<PolygonEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT\n    });\n    const update = {\n      id,\n      positions: positions,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      polygonOptions: polygonOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n    });\n    return this.editPolygon(\n      id,\n      positions,\n      priority,\n      editSubject,\n      polygonOptions\n    );\n  }\n\n  private editPolygon(id: string,\n                      positions: Cartesian3[],\n                      priority: number,\n                      editSubject: Subject<PolygonEditUpdate>,\n                      options: PolygonEditOptions,\n                      editObservable?: PolygonEditorObservable): PolygonEditorObservable {\n    this.clampPoints(id, options.clampHeightTo3D, options.clampHeightTo3DOptions);\n\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: options.dragPointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      pickConfig: options.pickConfiguration,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: options.dragShapeEvent,\n        entityType: EditablePolygon,\n        pick: PickOptions.PICK_FIRST,\n        pickConfig: options.pickConfiguration,\n        priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n    const pointRemoveRegistration = this.mapEventsManager.register({\n      event: options.removePointEvent,\n      entityType: EditPoint,\n      modifier: options.removePointModifier,\n      pick: PickOptions.PICK_FIRST,\n      pickConfig: options.pickConfiguration,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    pointDragRegistration.pipe(\n      tap(({ movement: { drop } }) => this.polygonsManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\n      .subscribe(({ movement: { endPosition, drop }, entities }) => {\n        const position = this.screenToPosition(endPosition, options.clampHeightTo3D, options.clampHeightTo3DOptions);\n        if (!position) {\n          return;\n        }\n        const point: EditPoint = entities[0];\n\n        const update = {\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.EDIT,\n          updatedPosition: position,\n          updatedPoint: point,\n          editAction: drop ? EditActions.DRAG_POINT_FINISH : EditActions.DRAG_POINT,\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n          positions: this.getPositions(id),\n          points: this.getPoints(id),\n        });\n\n        this.clampPointsDebounced(id, options.clampHeightTo3D, options.clampHeightTo3DOptions);\n      });\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({ movement: { drop } }) => this.polygonsManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\n        .subscribe(({ movement: { startPosition, endPosition, drop }, entities }) => {\n          const endDragPosition = this.screenToPosition(endPosition, false, options.clampHeightTo3DOptions);\n          const startDragPosition = this.screenToPosition(startPosition, false, options.clampHeightTo3DOptions);\n          if (!endDragPosition) {\n            return;\n          }\n\n          const update = {\n            id,\n            positions: this.getPositions(id),\n            editMode: EditModes.EDIT,\n            updatedPosition: endDragPosition,\n            draggedPosition: startDragPosition,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n            positions: this.getPositions(id),\n            points: this.getPoints(id),\n          });\n        });\n    }\n\n    pointRemoveRegistration.subscribe(({ entities }) => {\n      const point: EditPoint = entities[0];\n      const allPositions = [...this.getPositions(id)];\n      if (allPositions.length < 4) {\n        return;\n      }\n      const index = allPositions.findIndex(position => point.getPosition().equals(position as Cartesian3));\n      if (index < 0) {\n        return;\n      }\n\n      const update = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.EDIT,\n        updatedPoint: point,\n        editAction: EditActions.REMOVE_POINT,\n      };\n      this.updateSubject.next(update);\n      editSubject.next({\n        ...update,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n      });\n\n      this.clampPoints(id, options.clampHeightTo3D, options.clampHeightTo3DOptions);\n    });\n\n    const observables = [pointDragRegistration, pointRemoveRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n\n    this.observablesMap.set(id, observables);\n    return editObservable || this.createEditorObservable(editSubject, id);\n  }\n\n  private setOptions(options: PolygonEditOptions) {\n    if (options.maximumNumberOfPoints && options.maximumNumberOfPoints < 3) {\n      console.warn('Warn: PolygonEditor invalid option.' +\n        ' maximumNumberOfPoints smaller then 3, maximumNumberOfPoints changed to 3');\n      options.maximumNumberOfPoints = 3;\n    }\n\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_POLYGON_OPTIONS));\n    const polygonOptions: PolygonEditOptions = Object.assign(defaultClone, options);\n    polygonOptions.pointProps = { ...DEFAULT_POLYGON_OPTIONS.pointProps, ...options.pointProps};\n    polygonOptions.polygonProps = {...DEFAULT_POLYGON_OPTIONS.polygonProps, ...options.polygonProps};\n    polygonOptions.polylineProps = {...DEFAULT_POLYGON_OPTIONS.polylineProps, ...options.polylineProps};\n    polygonOptions.clampHeightTo3DOptions = { ...DEFAULT_POLYGON_OPTIONS.clampHeightTo3DOptions, ...options.clampHeightTo3DOptions};\n\n    if (options.clampHeightTo3D) {\n      if (!this.cesiumScene.pickPositionSupported || !this.cesiumScene.clampToHeightSupported) {\n        throw new Error(`Cesium pickPosition and clampToHeight must be supported to use clampHeightTo3D`);\n      }\n\n      if (this.cesiumScene.pickTranslucentDepth) {\n        console.warn(`Cesium scene.pickTranslucentDepth must be false in order to make the editors work properly on 3D`);\n      }\n\n      if (polygonOptions.pointProps.color.alpha === 1 || polygonOptions.pointProps.outlineColor.alpha === 1) {\n        console.warn('Point color and outline color must have alpha in order to make the editor work properly on 3D');\n      }\n\n      polygonOptions.allowDrag = false;\n      polygonOptions.polylineProps.clampToGround = true;\n      polygonOptions.pointProps.heightReference = polygonOptions.clampHeightTo3DOptions.clampToTerrain ?\n        Cesium.HeightReference.CLAMP_TO_GROUND : Cesium.HeightReference.RELATIVE_TO_GROUND;\n      polygonOptions.pointProps.disableDepthTestDistance = Number.POSITIVE_INFINITY;\n    }\n    return polygonOptions;\n  }\n\n\n  private createEditorObservable(observableToExtend: any, id: string): PolygonEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      });\n    };\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n      });\n    };\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n      });\n    };\n    observableToExtend.setManually = (points: {\n      position: Cartesian3, pointProps: PointProps\n    }[] | Cartesian3[], polygonProps?: PolygonProps) => {\n      const polygon = this.polygonsManager.get(id);\n      polygon.setPointsManually(points, polygonProps);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: any) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      });\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      });\n    };\n\n    observableToExtend.getCurrentPoints = () => this.getPoints(id);\n\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n\n    observableToExtend.getLabels = (): LabelProps[] => this.polygonsManager.get(id).labels;\n\n    return observableToExtend as PolygonEditorObservable;\n  }\n\n  private getPositions(id: string) {\n    const polygon = this.polygonsManager.get(id);\n    return polygon.getRealPositions();\n  }\n\n  private getPoints(id: string) {\n    const polygon = this.polygonsManager.get(id);\n    return polygon.getRealPoints();\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { CesiumService } from '../../../angular-cesium/services/cesium/cesium.service';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { PolygonEditUpdate } from '../../models/polygon-edit-update';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { PolygonsManagerService } from '../../services/entity-editors/polygons-editor/polygons-manager.service';\nimport { PolygonsEditorService } from '../../services/entity-editors/polygons-editor/polygons-editor.service';\nimport { LabelProps } from '../../models/label-props';\nimport { EditablePolygon } from '../../models/editable-polygon';\n\n@Component({\n  selector: 'polygons-editor',\n  template: /*html*/ `\n    <ac-layer #editPolylinesLayer acFor=\"let polyline of editPolylines$\" [context]=\"this\">\n      <ac-polyline-desc\n        props=\"{\n        positions: polyline.getPositionsCallbackProperty(),\n        width: polyline.props.width,\n        material: polyline.props.material(),\n        clampToGround: polyline.props.clampToGround,\n        zIndex: polyline.props.zIndex,\n        classificationType: polyline.props.classificationType,\n      }\"\n      >\n      </ac-polyline-desc>\n    </ac-layer>\n\n    <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n      <ac-point-desc\n        props=\"{\n        position: point.getPositionCallbackProperty(),\n        pixelSize: getPointSize(point),\n        color: point.props.color,\n        outlineColor: point.props.outlineColor,\n        outlineWidth: point.props.outlineWidth,\n        show: getPointShow(point),\n        disableDepthTestDistance: point.props.disableDepthTestDistance,\n        heightReference: point.props.heightReference,\n    }\"\n      >\n      </ac-point-desc>\n    </ac-layer>\n\n    <ac-layer #editPolygonsLayer acFor=\"let polygon of editPolygons$\" [context]=\"this\">\n      <ac-polygon-desc\n        props=\"{\n          hierarchy: polygon.getPositionsHierarchyCallbackProperty(),\n          material: polygon.polygonProps.material,\n          fill: polygon.polygonProps.fill,\n          classificationType: polygon.polygonProps.classificationType,\n          zIndex: polygon.polygonProps.zIndex,\n        }\"\n      >\n      </ac-polygon-desc>\n      <ac-array-desc acFor=\"let label of polygon.labels\" [idGetter]=\"getLabelId\">\n        <ac-label-primitive-desc\n          props=\"{\n            position: label.position,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            text: label.text,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin,\n            disableDepthTestDistance: label.disableDepthTestDistance,\n        }\"\n        >\n        </ac-label-primitive-desc>\n      </ac-array-desc>\n    </ac-layer>\n  `,\n  providers: [CoordinateConverter, PolygonsManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PolygonsEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: PolygonEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editPolylines$ = new Subject<AcNotification>();\n  public editPolygons$ = new Subject<AcNotification>();\n\n  @ViewChild('editPolygonsLayer') private editPolygonsLayer: AcLayerComponent;\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\n  @ViewChild('editPolylinesLayer') private editPolylinesLayer: AcLayerComponent;\n\n  constructor(\n    private polygonsEditor: PolygonsEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private polygonsManager: PolygonsManagerService,\n    private cesiumService: CesiumService\n  ) {\n    this.polygonsEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, this.polygonsManager, this.cesiumService);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.polygonsEditor.onUpdate().subscribe((update: PolygonEditUpdate) => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(polygon: EditablePolygon, update: PolygonEditUpdate, labels?: LabelProps[]) {\n    update.positions = polygon.getRealPositions();\n    update.points = polygon.getRealPoints();\n\n    if (labels) {\n      polygon.labels = labels;\n      this.editPolygonsLayer.update(polygon, polygon.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    polygon.labels = this.editLabelsRenderFn(update, polygon.labels);\n    this.editPolygonsLayer.update(polygon, polygon.getId());\n  }\n\n  removeEditLabels(polygon: EditablePolygon) {\n    polygon.labels = [];\n    this.editPolygonsLayer.update(polygon, polygon.getId());\n  }\n\n  handleCreateUpdates(update: PolygonEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.polygonsManager.createEditablePolygon(\n          update.id,\n          this.editPolygonsLayer,\n          this.editPointsLayer,\n          this.editPolylinesLayer,\n          this.coordinateConverter,\n          update.polygonOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (update.updatedPosition) {\n          polygon.moveTempMovingPoint(update.updatedPosition);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (update.updatedPosition) {\n          polygon.addPoint(update.updatedPosition);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.ADD_LAST_POINT: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (update.updatedPosition) {\n          polygon.addLastPoint(update.updatedPosition);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon) {\n          polygon.dispose();\n          this.removeEditLabels(polygon);\n          this.editLabelsRenderFn = undefined;\n        }\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const polygon = this.polygonsManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(polygon, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const polygon = this.polygonsManager.get(update.id);\n        this.renderEditLabels(polygon, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const polygon = this.polygonsManager.get(update.id);\n        this.renderEditLabels(polygon, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: PolygonEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.polygonsManager.createEditablePolygon(\n          update.id,\n          this.editPolygonsLayer,\n          this.editPointsLayer,\n          this.editPolylinesLayer,\n          this.coordinateConverter,\n          update.polygonOptions,\n          update.positions,\n        );\n        break;\n      }\n      case EditActions.DRAG_POINT: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon && polygon.enableEdit) {\n          polygon.movePoint(update.updatedPosition, update.updatedPoint);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon && polygon.enableEdit) {\n          polygon.movePointFinish(update.updatedPoint);\n\n          if (update.updatedPoint.isVirtualEditPoint()) {\n            polygon.changeVirtualPointToRealPoint(update.updatedPoint);\n            this.renderEditLabels(polygon, update);\n          }\n        }\n        break;\n      }\n      case EditActions.REMOVE_POINT: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon && polygon.enableEdit) {\n          polygon.removePoint(update.updatedPoint);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon) {\n          polygon.enableEdit = false;\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon && polygon.enableEdit) {\n          polygon.movePolygon(update.draggedPosition, update.updatedPosition);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon && polygon.enableEdit) {\n          polygon.endMovePolygon();\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon) {\n          polygon.enableEdit = true;\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.polygonsManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { PolylineProps } from './polyline-edit-options';\n\nexport class EditArc extends AcEntity {\n  static counter = 0;\n  private id: string;\n  private editedEntityId: string;\n  private _center: Cartesian3;\n  private _radius: number;\n  private _delta: number;\n  private _angle: number;\n\n  constructor(entityId: string, center: Cartesian3, radius: number, delta: number, angle: number, private _arcProps: PolylineProps) {\n    super();\n    this.id = this.generateId();\n    this.editedEntityId = entityId;\n    this._center = center;\n    this._radius = radius;\n    this._delta = delta;\n    this._angle = angle;\n  }\n\n  get props() {\n    return this._arcProps;\n  }\n\n  set props(props: PolylineProps) {\n    this._arcProps = props;\n  }\n\n  get angle(): number {\n    return this._angle;\n  }\n\n  set angle(value: number) {\n    this._angle = value;\n  }\n\n  get delta(): number {\n    return this._delta;\n  }\n\n  set delta(value: number) {\n    this._delta = value;\n  }\n\n  get radius(): number {\n    return this._radius;\n  }\n\n  set radius(value: number) {\n    this._radius = value;\n  }\n\n  get center(): Cartesian3 {\n    return this._center;\n  }\n\n  set center(value: Cartesian3) {\n    this._center = value;\n  }\n\n  updateCenter(center: Cartesian3) {\n    this._center.x = center.x;\n    this._center.y = center.y;\n    this._center.z = center.z;\n  }\n\n  getId(): string {\n    return this.id;\n  }\n\n  private generateId(): string {\n    return 'edit-arc-' + EditArc.counter++;\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { EditArc } from './edit-arc';\nimport { CircleEditOptions } from './circle-edit-options';\nimport { PointProps } from './point-edit-options';\nimport { PolylineProps } from './polyline-edit-options';\nimport { defaultLabelProps, LabelProps } from './label-props';\nimport { EllipseProps } from './ellipse-edit-options';\n\nexport class EditableCircle extends AcEntity {\n  private _center: EditPoint;\n  private _radiusPoint: EditPoint;\n  private _outlineArc: EditArc;\n  private doneCreation = false;\n  private _enableEdit = true;\n  private lastDraggedToPosition: any;\n  private _circleProps: EllipseProps;\n  private _pointProps: PointProps;\n  private _polylineProps: PolylineProps;\n  private _labels: LabelProps[] = [];\n\n  constructor(\n    private id: string,\n    private circlesLayer: AcLayerComponent,\n    private pointsLayer: AcLayerComponent,\n    private arcsLayer: AcLayerComponent,\n    private options: CircleEditOptions,\n  ) {\n    super();\n    this._circleProps = {...options.circleProps};\n    this._pointProps = {...options.pointProps};\n    this._polylineProps = {...options.polylineProps};\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels || !this._center || !this._radiusPoint) {\n      return;\n    }\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        if (index !== labels.length - 1) {\n          label.position = this._center.getPosition();\n        } else {\n          label.position = this._radiusPoint.getPosition();\n        }\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get polylineProps(): PolylineProps {\n    return this._polylineProps;\n  }\n\n  set polylineProps(value: PolylineProps) {\n    this._polylineProps = value;\n  }\n\n  get pointProps(): PointProps {\n    return this._pointProps;\n  }\n\n  set pointProps(value: PointProps) {\n    this._pointProps = value;\n  }\n\n  get circleProps(): EllipseProps {\n    return this._circleProps;\n  }\n\n  set circleProps(value: EllipseProps) {\n    this._circleProps = value;\n  }\n\n  get center(): EditPoint {\n    return this._center;\n  }\n\n  get radiusPoint(): EditPoint {\n    return this._radiusPoint;\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this._center.show = value;\n    this._radiusPoint.show = value;\n    this.updatePointsLayer();\n  }\n\n  setManually(\n    center: Cartesian3,\n    radiusPoint: Cartesian3,\n    centerPointProp = this.pointProps,\n    radiusPointProp = this.pointProps,\n    circleProp = this.circleProps,\n  ) {\n    if (!this._center) {\n      this._center = new EditPoint(this.id, center, centerPointProp);\n    } else {\n      this._center.setPosition(center);\n    }\n\n    if (!this._radiusPoint) {\n      this._radiusPoint = new EditPoint(this.id, radiusPoint, radiusPointProp);\n    } else {\n      this._radiusPoint.setPosition(radiusPoint);\n    }\n\n    if (!this._outlineArc) {\n      this.createOutlineArc();\n    } else {\n      this._outlineArc.radius = this.getRadius();\n    }\n\n    this.circleProps = circleProp;\n    this.doneCreation = true;\n    this.updateArcsLayer();\n    this.updatePointsLayer();\n    this.updateCirclesLayer();\n  }\n\n  addPoint(position: Cartesian3) {\n    if (this.doneCreation) {\n      return;\n    }\n\n    if (!this._center) {\n      this._center = new EditPoint(this.id, position, this.pointProps);\n      this._radiusPoint = new EditPoint(this.id, position.clone(), this.pointProps);\n      if (!this._outlineArc) {\n        this.createOutlineArc();\n      }\n    }\n\n    this.updateArcsLayer();\n    this.updatePointsLayer();\n    this.updateCirclesLayer();\n  }\n\n  addLastPoint(position: Cartesian3) {\n    if (this.doneCreation || !this._center || !this._radiusPoint) {\n      return;\n    }\n\n    this._radiusPoint.setPosition(position);\n    this.doneCreation = true;\n\n    this.updatePointsLayer();\n    this.updateCirclesLayer();\n  }\n\n  movePoint(toPosition: Cartesian3) {\n    if (!this._center || !this._radiusPoint) {\n      return;\n    }\n\n    this._radiusPoint.setPosition(toPosition);\n    this._outlineArc.radius = this.getRadius();\n\n    this.updateArcsLayer();\n    this.updatePointsLayer();\n    this.updateCirclesLayer();\n  }\n\n  moveCircle(dragStartPosition: Cartesian3, dragEndPosition: Cartesian3) {\n    if (!this.doneCreation) {\n      return;\n    }\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = dragStartPosition;\n    }\n\n    const radius = this.getRadius();\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, dragEndPosition);\n    const newCenterPosition = GeoUtilsService.addDeltaToPosition(this.getCenter(), delta, true);\n    this._center.setPosition(newCenterPosition);\n    this.radiusPoint.setPosition(GeoUtilsService.pointByLocationDistanceAndAzimuth(this.getCenter(), radius, Math.PI / 2, true));\n    this._outlineArc.radius = this.getRadius();\n    this._outlineArc.center = this._center.getPosition();\n    this.updateArcsLayer();\n    this.updatePointsLayer();\n    this.updateCirclesLayer();\n    this.lastDraggedToPosition = dragEndPosition;\n  }\n\n  endMovePolygon() {\n    this.lastDraggedToPosition = undefined;\n  }\n\n  getRadius(): number {\n    if (!this._center || !this._radiusPoint) {\n      return 0;\n    }\n    return GeoUtilsService.distance(this._center.getPosition(), this._radiusPoint.getPosition());\n  }\n\n  getRadiusCallbackProperty() {\n    return new Cesium.CallbackProperty(this.getRadius.bind(this), false);\n  }\n\n  getCenter(): Cartesian3 {\n    return this._center ? this._center.getPosition() : undefined;\n  }\n\n  getCenterCallbackProperty() {\n    return new Cesium.CallbackProperty(this.getCenter.bind(this), false);\n  }\n\n  getRadiusPoint(): Cartesian3 {\n    return this._radiusPoint ? this._radiusPoint.getPosition() : undefined;\n  }\n\n  dispose() {\n    if (this._center) {\n      this.pointsLayer.remove(this._center.getId());\n    }\n\n    if (this._radiusPoint) {\n      this.pointsLayer.remove(this._radiusPoint.getId());\n    }\n\n    if (this._outlineArc) {\n      this.arcsLayer.remove(this._outlineArc.getId());\n    }\n\n    this.circlesLayer.remove(this.id);\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  private updateCirclesLayer() {\n    this.circlesLayer.update(this, this.id);\n  }\n\n  private updatePointsLayer() {\n    if (this._center) {\n      this.pointsLayer.update(this._center, this._center.getId());\n    }\n    if (this._radiusPoint) {\n      this.pointsLayer.update(this._radiusPoint, this._radiusPoint.getId());\n    }\n  }\n\n  private updateArcsLayer() {\n    if (!this._outlineArc) {\n      return;\n    }\n    this.arcsLayer.update(this._outlineArc, this._outlineArc.getId());\n  }\n\n  private createOutlineArc() {\n    if (!this._center || !this._radiusPoint) {\n      return;\n    }\n    this._outlineArc = new EditArc(this.id, this.getCenter(), this.getRadius(), Math.PI * 2, 0, this.polylineProps);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EditableCircle } from '../../../models/editable-circle';\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CircleEditOptions } from '../../../models/circle-edit-options';\n\n@Injectable()\nexport class CirclesManagerService {\n  private circles = new Map<string, EditableCircle>();\n\n  createEditableCircle(id: string,\n                       editCirclesLayer: AcLayerComponent,\n                       editPointsLayer: AcLayerComponent,\n                       editArcsLayer: AcLayerComponent,\n                       circleOptions: CircleEditOptions): EditableCircle {\n    const editableCircle = new EditableCircle(id, editCirclesLayer, editPointsLayer, editArcsLayer, circleOptions);\n    this.circles.set(id, editableCircle);\n    return editableCircle;\n  }\n\n  dispose(id: string) {\n    const circle = this.circles.get(id);\n    if (circle) {\n      circle.dispose();\n    }\n    this.circles.delete(id);\n  }\n\n  get(id: string): EditableCircle {\n    return this.circles.get(id);\n  }\n\n  clear() {\n    this.circles.forEach(circle => circle.dispose());\n    this.circles.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { publish, tap } from 'rxjs/operators';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { GeoUtilsService } from '../../../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BasicEditUpdate } from '../../../models/basic-edit-update';\nimport { CircleEditOptions } from '../../../models/circle-edit-options';\nimport { CircleEditUpdate } from '../../../models/circle-edit-update';\nimport { CircleEditorObservable } from '../../../models/circle-editor-observable';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditPoint } from '../../../models/edit-point';\nimport { EditableCircle } from '../../../models/editable-circle';\nimport { EllipseProps } from '../../../models/ellipse-edit-options';\nimport { LabelProps } from '../../../models/label-props';\nimport { PointProps } from '../../../models/point-edit-options';\nimport { generateKey } from '../../utils';\nimport { CirclesManagerService } from './circles-manager.service';\n\nexport const DEFAULT_CIRCLE_OPTIONS: CircleEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  allowDrag: true,\n  circleProps: {\n    material: Cesium.Color.CORNFLOWERBLUE.withAlpha(0.4),\n    fill: true,\n    outline: false,\n    outlineWidth: 1,\n    outlineColor: Cesium.Color.WHITE.withAlpha(0.8),\n    classificationType: Cesium.ClassificationType.BOTH,\n    zIndex: 0,\n    shadows: Cesium.ShadowMode.DISABLED,\n  },\n  pointProps: {\n    color: Cesium.Color.WHITE,\n    outlineColor: Cesium.Color.BLACK.withAlpha(0.2),\n    outlineWidth: 1,\n    pixelSize: 13,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\n  },\n  polylineProps: {\n    width: 1,\n    material: () => Cesium.Color.WHITE.withAlpha(0.8),\n  },\n};\n\n/**\n * Service for creating editable circles\n *\n * You must provide `CircleEditorService` yourself.\n * PolygonsEditorService works together with `<circle-editor>` component. Therefor you need to create `<circle-editor>`\n * for each `CircleEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `CircleEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `CircleEditorObservable`.\n * + To stop editing call `dsipose()` from the `CircleEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over editted shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `CircleEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n * usage:\n * ```typescript\n *  // Start creating circle\n *  const editing$ = circlesEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit circle from existing center point and radius\n *  const editing$ = this.circlesEditorService.edit(center, radius);\n *\n * ```\n */\n@Injectable()\nexport class CirclesEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<CircleEditUpdate>();\n  private updatePublisher = publish<CircleEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private circlesManager: CirclesManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n\n  init(\n    mapEventsManager: MapEventsManagerService,\n    coordinateConverter: CoordinateConverter,\n    cameraService: CameraService,\n    circlesManager: CirclesManagerService,\n  ) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.circlesManager = circlesManager;\n    this.updatePublisher.connect();\n  }\n\n  onUpdate(): Observable<CircleEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  create(options = DEFAULT_CIRCLE_OPTIONS, priority = 100): CircleEditorObservable {\n    let center: any;\n    const id = generateKey();\n    const circleOptions = this.setOptions(options);\n    const clientEditSubject = new BehaviorSubject<CircleEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE,\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      circleOptions,\n    });\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      pickConfig: options.pickConfiguration,\n      priority,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.LEFT_CLICK,\n      pick: PickOptions.NO_PICK,\n      pickConfig: options.pickConfiguration,\n      priority,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id);\n\n    addPointRegistration.subscribe(({movement: {endPosition}}) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (!position) {\n        return;\n      }\n\n      if (!center) {\n        const update = {\n          id,\n          center: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.ADD_POINT,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n          ...this.getCircleProperties(id),\n        });\n        center = position;\n      } else {\n        const update = {\n          id,\n          center,\n          radiusPoint: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.ADD_LAST_POINT,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n          ...this.getCircleProperties(id),\n        });\n\n        const changeMode = {\n          id,\n          center,\n          radiusPoint: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.CHANGE_TO_EDIT,\n        };\n\n        this.updateSubject.next(changeMode);\n        clientEditSubject.next({\n          ...update,\n          ...this.getCircleProperties(id),\n        });\n        if (this.observablesMap.has(id)) {\n          this.observablesMap.get(id).forEach(registration => registration.dispose());\n        }\n        this.observablesMap.delete(id);\n        this.editCircle(id, priority, clientEditSubject, circleOptions, editorObservable);\n        finishedCreate = true;\n      }\n    });\n\n    mouseMoveRegistration.subscribe(({movement: {endPosition}}) => {\n      if (!center) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n\n      if (position) {\n        const update = {\n          id,\n          center,\n          radiusPoint: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.MOUSE_MOVE,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n          ...this.getCircleProperties(id),\n        });\n      }\n    });\n\n    return editorObservable;\n  }\n\n  edit(center: Cartesian3, radius: number, options = DEFAULT_CIRCLE_OPTIONS, priority = 100): CircleEditorObservable {\n    const id = generateKey();\n    const circleOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<CircleEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT,\n    });\n\n    const radiusPoint: Cartesian3 = GeoUtilsService.pointByLocationDistanceAndAzimuth(center, radius, Math.PI / 2, true);\n\n    const update = {\n      id,\n      center,\n      radiusPoint,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      circleOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n      ...this.getCircleProperties(id),\n    });\n\n    return this.editCircle(id, priority, editSubject, circleOptions);\n  }\n\n  private editCircle(\n    id: string,\n    priority: number,\n    editSubject: Subject<CircleEditUpdate>,\n    options: CircleEditOptions,\n    editObservable?: CircleEditorObservable,\n  ): CircleEditorObservable {\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.LEFT_CLICK_DRAG,\n      entityType: EditPoint,\n      pickConfig: options.pickConfiguration,\n      pick: PickOptions.PICK_FIRST,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: CesiumEvent.LEFT_CLICK_DRAG,\n        entityType: EditableCircle,\n        pickConfig: options.pickConfiguration,\n        pick: PickOptions.PICK_FIRST,\n        priority: priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n\n    pointDragRegistration\n      .pipe(tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n      .subscribe(({movement: {endPosition, startPosition, drop}, entities}) => {\n        const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n        const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n        if (!endDragPosition) {\n          return;\n        }\n\n        const point: EditPoint = entities[0];\n        const pointIsCenter = point === this.getCenterPoint(id);\n        let editAction;\n        if (drop) {\n          editAction = pointIsCenter ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_POINT_FINISH;\n        } else {\n          editAction = pointIsCenter ? EditActions.DRAG_SHAPE : EditActions.DRAG_POINT;\n        }\n\n        if (!options.allowDrag && (editAction === EditActions.DRAG_SHAPE || editAction === EditActions.DRAG_SHAPE_FINISH)) {\n          this.cameraService.enableInputs(true);\n          return;\n        }\n\n        const update = {\n          id,\n          center: this.getCenterPosition(id),\n          radiusPoint: this.getRadiusPosition(id),\n          startDragPosition,\n          endDragPosition,\n          editMode: EditModes.EDIT,\n          editAction,\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n          ...this.getCircleProperties(id),\n        });\n      });\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n        .subscribe(({movement: {startPosition, endPosition, drop}}) => {\n          const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n          const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n          if (!endDragPosition || !startDragPosition) {\n            return;\n          }\n\n          const update = {\n            id,\n            center: this.getCenterPosition(id),\n            radiusPoint: this.getRadiusPosition(id),\n            startDragPosition,\n            endDragPosition,\n            editMode: EditModes.EDIT,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n            ...this.getCircleProperties(id),\n          });\n        });\n    }\n\n    const observables = [pointDragRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n\n    this.observablesMap.set(id, observables);\n    return editObservable || this.createEditorObservable(editSubject, id);\n  }\n\n  private createEditorObservable(observableToExtend: any, id: string): CircleEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        center: this.getCenterPosition(id),\n        radiusPoint: this.getRadiusPosition(id),\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      });\n    };\n\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        center: this.getCenterPosition(id),\n        radiusPoint: this.getRadiusPosition(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n      });\n    };\n\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        center: this.getCenterPosition(id),\n        radiusPoint: this.getRadiusPosition(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n      });\n    };\n\n    observableToExtend.setManually = (\n      center: Cartesian3,\n      radius: number,\n      centerPointProp?: PointProps,\n      radiusPointProp?: PointProps,\n      circleProp?: EllipseProps,\n    ) => {\n      const radiusPoint = GeoUtilsService.pointByLocationDistanceAndAzimuth(center, radius, Math.PI / 2, true);\n      const circle = this.circlesManager.get(id);\n      circle.setManually(center, radiusPoint, centerPointProp, radiusPointProp, circleProp);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: (update: BasicEditUpdate<any>, labels: LabelProps[]) => LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      });\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      });\n    };\n\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n\n    observableToExtend.getLabels = (): LabelProps[] => this.circlesManager.get(id).labels;\n    observableToExtend.getCenter = (): Cartesian3 => this.getCenterPosition(id);\n    observableToExtend.getRadius = (): number => this.getRadius(id);\n\n    return observableToExtend as CircleEditorObservable;\n  }\n\n  private setOptions(options: CircleEditOptions): CircleEditOptions {\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_CIRCLE_OPTIONS));\n    const circleOptions = Object.assign(defaultClone, options);\n    circleOptions.pointProps = Object.assign({}, DEFAULT_CIRCLE_OPTIONS.pointProps, options.pointProps);\n    circleOptions.circleProps = Object.assign({}, DEFAULT_CIRCLE_OPTIONS.circleProps, options.circleProps);\n    circleOptions.polylineProps = Object.assign({}, DEFAULT_CIRCLE_OPTIONS.polylineProps, options.polylineProps);\n    return circleOptions;\n  }\n\n  private getCenterPosition(id: string): Cartesian3 {\n    return this.circlesManager.get(id).getCenter();\n  }\n\n  private getCenterPoint(id: string): EditPoint {\n    return this.circlesManager.get(id).center;\n  }\n\n  private getRadiusPosition(id: string): Cartesian3 {\n    return this.circlesManager.get(id).getRadiusPoint();\n  }\n\n  private getRadius(id: string): number {\n    return this.circlesManager.get(id).getRadius();\n  }\n\n  private getCircleProperties(id: string) {\n    const circle = this.circlesManager.get(id);\n    return {\n      center: circle.getCenter(),\n      radiusPoint: circle.getRadiusPoint(),\n      radius: circle.getRadius(),\n    };\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { CirclesManagerService } from '../../services/entity-editors/circles-editor/circles-manager.service';\nimport { CirclesEditorService } from '../../services/entity-editors/circles-editor/circles-editor.service';\nimport { CircleEditUpdate } from '../../models/circle-edit-update';\nimport { LabelProps } from '../../models/label-props';\nimport { EditableCircle } from '../../models/editable-circle';\n\n@Component({\n  selector: 'circles-editor',\n  template: /*html*/ `\n      <ac-layer #editArcsLayer acFor=\"let arc of editArcs$\" [context]=\"this\">\n          <ac-arc-desc\n                  props=\"{\n        angle: arc.angle,\n        delta: arc.delta,\n        center: arc.center,\n        radius: arc.radius,\n        quality: 30,\n        color: arc.props.material()\n    }\"\n          >\n          </ac-arc-desc>\n      </ac-layer>\n\n      <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n          <ac-point-desc\n                  props=\"{\n                    position: point.getPositionCallbackProperty(),\n                    pixelSize: getPointSize(point),\n                    color: point.props.color,\n                    outlineColor: point.props.outlineColor,\n                    outlineWidth: point.props.outlineWidth,\n                    show: getPointShow(point),\n                    disableDepthTestDistance: point.props.disableDepthTestDistance,\n                    heightReference: point.props.heightReference,\n    }\"\n          >\n          </ac-point-desc>\n      </ac-layer>\n\n      <ac-layer #editCirclesLayer acFor=\"let circle of editCircles$\" [context]=\"this\" [zIndex]=\"0\">\n          <ac-ellipse-desc\n                  props=\"{\n                  position: circle.getCenterCallbackProperty(),\n                  semiMajorAxis: circle.getRadiusCallbackProperty(),\n                  semiMinorAxis: circle.getRadiusCallbackProperty(),\n                  material: circle.circleProps.material,\n                  outline: circle.circleProps.outline,\n                  height: 0\n                  outlineWidth: circle.circleProps.outlineWidth,\n                  outlineColor: circle.circleProps.outlineColor,\n                  fill: circle.circleProps.fill,\n                  classificationType: circle.circleProps.classificationType,\n                  zIndex: circle.circleProps.zIndex,\n                  shadows: circle.circleProps.shadows,\n    }\"\n          >\n          </ac-ellipse-desc>\n\n          <ac-array-desc acFor=\"let label of circle.labels\" [idGetter]=\"getLabelId\">\n              <ac-label-primitive-desc\n                      props=\"{\n            position: label.position,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            text: label.text,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin,\n            disableDepthTestDistance: label.disableDepthTestDistance,\n        }\"\n              >\n              </ac-label-primitive-desc>\n          </ac-array-desc>\n      </ac-layer>\n  `,\n  providers: [CoordinateConverter, CirclesManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CirclesEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: CircleEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editCircles$ = new Subject<AcNotification>();\n  public editArcs$ = new Subject<AcNotification>();\n\n  @ViewChild('editCirclesLayer') private editCirclesLayer: AcLayerComponent;\n  @ViewChild('editArcsLayer') private editArcsLayer: AcLayerComponent;\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\n\n  constructor(\n    private circlesEditor: CirclesEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private circlesManager: CirclesManagerService,\n  ) {\n    this.circlesEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, this.circlesManager);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.circlesEditor.onUpdate().subscribe(update => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(circle: EditableCircle, update: CircleEditUpdate, labels?: LabelProps[]) {\n    update.center = circle.getCenter();\n    update.radiusPoint = circle.getRadiusPoint();\n    update.radius = circle.getRadius();\n\n    if (labels) {\n      circle.labels = labels;\n      this.editCirclesLayer.update(circle, circle.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    circle.labels = this.editLabelsRenderFn(update, circle.labels);\n    this.editCirclesLayer.update(circle, circle.getId());\n  }\n\n  removeEditLabels(circle: EditableCircle) {\n    circle.labels = [];\n    this.editCirclesLayer.update(circle, circle.getId());\n  }\n\n  handleCreateUpdates(update: CircleEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.circlesManager.createEditableCircle(\n          update.id,\n          this.editCirclesLayer,\n          this.editPointsLayer,\n          this.editArcsLayer,\n          update.circleOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const circle = this.circlesManager.get(update.id);\n        if (update.radiusPoint) {\n          circle.movePoint(update.radiusPoint);\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const circle = this.circlesManager.get(update.id);\n        if (update.center) {\n          circle.addPoint(update.center);\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.ADD_LAST_POINT: {\n        const circle = this.circlesManager.get(update.id);\n        if (update.radiusPoint) {\n          circle.addLastPoint(update.radiusPoint);\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle) {\n          this.removeEditLabels(circle);\n          this.circlesManager.dispose(update.id);\n        }\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const circle = this.circlesManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(circle, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const circle = this.circlesManager.get(update.id);\n        this.renderEditLabels(circle, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const circle = this.circlesManager.get(update.id);\n        this.renderEditLabels(circle, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: CircleEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        const circle = this.circlesManager.createEditableCircle(\n          update.id,\n          this.editCirclesLayer,\n          this.editPointsLayer,\n          this.editArcsLayer,\n          update.circleOptions,\n        );\n        circle.setManually(update.center, update.radiusPoint);\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH:\n      case EditActions.DRAG_POINT: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle && circle.enableEdit) {\n          circle.movePoint(update.endDragPosition);\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle && circle.enableEdit) {\n          circle.moveCircle(update.startDragPosition, update.endDragPosition);\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle && circle.enableEdit) {\n          circle.endMovePolygon();\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle) {\n          circle.enableEdit = false;\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle) {\n          circle.enableEdit = true;\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.circlesManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { EllipseEditOptions, EllipseProps } from './ellipse-edit-options';\nimport { PointProps } from './point-edit-options';\nimport { PolylineProps } from './polyline-edit-options';\nimport { defaultLabelProps, LabelProps } from './label-props';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\n\nexport class EditableEllipse extends AcEntity {\n  private _center: EditPoint;\n  private _majorRadiusPoint: EditPoint;\n  private _majorRadius: number;\n  private _minorRadius: number;\n  private _rotation = 0;\n  private doneCreation = false;\n  private _enableEdit = true;\n  private _minorRadiusPoints: EditPoint[] = [];\n  private lastDraggedToPosition: any;\n  private _ellipseProps: EllipseProps;\n  private _pointProps: PointProps;\n  private _polylineProps: PolylineProps;\n  private _labels: LabelProps[] = [];\n\n  constructor(\n    private id: string,\n    private ellipsesLayer: AcLayerComponent,\n    private pointsLayer: AcLayerComponent,\n    private coordinateConverter: CoordinateConverter,\n    private options: EllipseEditOptions,\n  ) {\n    super();\n    this._ellipseProps = {...options.ellipseProps};\n    this._pointProps = {...options.pointProps};\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels || !this._center) {\n      return;\n    }\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        if (index === 0) {\n          label.position = this._center.getPosition();\n        } else if (index === 1) {\n          label.position = this._majorRadiusPoint\n            ? Cesium.Cartesian3.midpoint(this.getCenter(), this._majorRadiusPoint.getPosition(), new Cesium.Cartesian3())\n            : new Cesium.Cartesian3();\n        } else if (index === 2) {\n          label.position =\n            this._minorRadiusPoints.length > 0 && this._minorRadius\n              ? Cesium.Cartesian3.midpoint(this.getCenter(), this.getMinorRadiusPointPosition(), new Cesium.Cartesian3())\n              : new Cesium.Cartesian3();\n        }\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get polylineProps(): PolylineProps {\n    return this._polylineProps;\n  }\n\n  set polylineProps(value: PolylineProps) {\n    this._polylineProps = value;\n  }\n\n  get pointProps(): PointProps {\n    return this._pointProps;\n  }\n\n  set pointProps(value: PointProps) {\n    this._pointProps = value;\n  }\n\n  get ellipseProps(): EllipseProps {\n    return this._ellipseProps;\n  }\n\n  set ellipseProps(value: EllipseProps) {\n    this._ellipseProps = value;\n  }\n\n  get center(): EditPoint {\n    return this._center;\n  }\n\n  get majorRadiusPoint(): EditPoint {\n    return this._majorRadiusPoint;\n  }\n\n  getMajorRadiusPointPosition() {\n    if (!this._majorRadiusPoint) {\n      return undefined;\n    }\n\n    return this._majorRadiusPoint.getPosition();\n  }\n\n  getMinorRadiusPointPosition(): Cartesian3 {\n    if (this._minorRadiusPoints.length < 1) {\n      return undefined;\n    }\n\n    return this._minorRadiusPoints[0].getPosition();\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this._center.show = value;\n    this._majorRadiusPoint.show = value;\n    this.updatePointsLayer();\n  }\n\n  setManually(\n    center: Cartesian3,\n    majorRadius: number,\n    rotation = Math.PI / 2,\n    minorRadius?: number,\n    centerPointProp = this.pointProps,\n    radiusPointProp = this.pointProps,\n    ellipseProp = this.ellipseProps,\n  ) {\n    if (majorRadius < minorRadius) {\n      throw new Error('Major radius muse be equal or greater than minor radius');\n    }\n    this._rotation = rotation;\n    this._majorRadius = majorRadius;\n    if (!this._center) {\n      this._center = new EditPoint(this.id, center, centerPointProp);\n    } else {\n      this._center.setPosition(center);\n    }\n\n    const majorRadiusPosition = GeoUtilsService.pointByLocationDistanceAndAzimuth(this.center.getPosition(), majorRadius, rotation);\n\n    if (!this._majorRadiusPoint) {\n      this._majorRadiusPoint = new EditPoint(this.id, majorRadiusPosition, radiusPointProp);\n    } else {\n      this._majorRadiusPoint.setPosition(majorRadiusPosition);\n    }\n\n    if (minorRadius) {\n      this._minorRadius = minorRadius;\n    }\n\n    this.ellipseProps = ellipseProp;\n    this.doneCreation = true;\n    this.updateMinorRadiusEditPoints();\n    this.updatePointsLayer();\n    this.updateEllipsesLayer();\n  }\n\n  addPoint(position: Cartesian3) {\n    if (this.doneCreation) {\n      return;\n    }\n\n    if (!this._center) {\n      this._center = new EditPoint(this.id, position, this.pointProps);\n      this._majorRadiusPoint = new EditPoint(this.id, position.clone(), this.pointProps);\n      this._majorRadius = 0;\n    }\n\n    this.updateRotation();\n    this.updateMinorRadiusEditPoints();\n    this.updatePointsLayer();\n    this.updateEllipsesLayer();\n  }\n\n  transformToEllipse() {\n    if (this._minorRadius) {\n      return;\n    }\n\n    this._minorRadius = this.getMajorRadius();\n    this.updateMinorRadiusEditPoints();\n    this.updatePointsLayer();\n    this.updateEllipsesLayer();\n  }\n\n  addLastPoint(position: Cartesian3) {\n    if (this.doneCreation || !this._center || !this._majorRadiusPoint) {\n      return;\n    }\n\n    const newRadius = GeoUtilsService.distance(this._center.getPosition(), position);\n    this._majorRadiusPoint.setPosition(position);\n    this._majorRadius = newRadius;\n    this.doneCreation = true;\n\n    if (!this.options.circleToEllipseTransformation) {\n      this._minorRadius = this._majorRadius;\n    }\n\n    this.updateRotation();\n    this.updateMinorRadiusEditPoints();\n    this.updatePointsLayer();\n    this.updateEllipsesLayer();\n  }\n\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\n    if (!this._center || !this._majorRadiusPoint) {\n      return;\n    }\n\n    const newRadius = GeoUtilsService.distance(this._center.getPosition(), toPosition);\n    if (this.majorRadiusPoint === editPoint) {\n      if (newRadius < this._minorRadius) {\n        this._majorRadius = this._minorRadius;\n        this._majorRadiusPoint.setPosition(\n          GeoUtilsService.pointByLocationDistanceAndAzimuth(this.getCenter(), this._minorRadius, this._rotation),\n        );\n      } else {\n        this.majorRadiusPoint.setPosition(toPosition);\n        this._majorRadius = newRadius;\n      }\n    } else {\n      if (newRadius > this._majorRadius) {\n        this._minorRadius = this._majorRadius;\n      } else {\n        this._minorRadius = newRadius;\n      }\n    }\n\n    this.updateRotation();\n    this.updateMinorRadiusEditPoints();\n    this.updatePointsLayer();\n    this.updateEllipsesLayer();\n  }\n\n  moveEllipse(dragStartPosition: Cartesian3, dragEndPosition: Cartesian3) {\n    if (!this.doneCreation) {\n      return;\n    }\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = dragStartPosition;\n    }\n\n    const majorRadius = this.getMajorRadius();\n    const rotation = this.getRotation();\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, dragEndPosition);\n    const newCenterPosition = GeoUtilsService.addDeltaToPosition(this.getCenter(), delta, true);\n    this._center.setPosition(newCenterPosition);\n    this.majorRadiusPoint.setPosition(GeoUtilsService.pointByLocationDistanceAndAzimuth(this.getCenter(), majorRadius, rotation));\n    this.updatePointsLayer();\n    this.updateMinorRadiusEditPoints();\n    this.updateEllipsesLayer();\n    this.lastDraggedToPosition = dragEndPosition;\n  }\n\n  endMoveEllipse() {\n    this.lastDraggedToPosition = undefined;\n  }\n\n  private updateMinorRadiusEditPoints() {\n    if (this._minorRadius === undefined) {\n      return;\n    }\n    if (this._minorRadiusPoints.length === 0) {\n      this._minorRadiusPoints.push(new EditPoint(this.id, new Cesium.Cartesian3(), this.pointProps, true));\n      this._minorRadiusPoints.push(new EditPoint(this.id, new Cesium.Cartesian3(), this.pointProps, true));\n    }\n\n    this._minorRadiusPoints[0].setPosition(\n      GeoUtilsService.pointByLocationDistanceAndAzimuth(this._center.getPosition(), this._minorRadius, this.getRotation() - Math.PI / 2),\n    );\n\n    this._minorRadiusPoints[1].setPosition(\n      GeoUtilsService.pointByLocationDistanceAndAzimuth(this._center.getPosition(), this._minorRadius, this.getRotation() + Math.PI / 2),\n    );\n  }\n\n  getMajorRadius(): number {\n    return this._majorRadius || 0;\n  }\n\n  getMinorRadius() {\n    if (this._minorRadius === undefined) {\n      return this.getMajorRadius();\n    } else {\n      return this._minorRadius;\n    }\n  }\n\n  getRotation(): number {\n    return this._rotation || 0;\n  }\n\n  updateRotation(): number {\n    if (!this._majorRadiusPoint) {\n      return 0;\n    }\n\n    const azimuthInDegrees = this.coordinateConverter.bearingToCartesian(this.getCenter(), this._majorRadiusPoint.getPosition());\n    this._rotation = Cesium.Math.toRadians(azimuthInDegrees);\n    return this._rotation;\n  }\n\n  getRotationCallbackProperty() {\n    return new Cesium.CallbackProperty(() => Math.PI / 2 - this.getRotation(), false);\n  }\n\n  getMinorRadiusCallbackProperty() {\n    return new Cesium.CallbackProperty(() => this.getMinorRadius(), false);\n  }\n\n  getMajorRadiusCallbackProperty() {\n    return new Cesium.CallbackProperty(() => this.getMajorRadius(), false);\n  }\n\n  getCenter(): Cartesian3 {\n    return this._center ? this._center.getPosition() : undefined;\n  }\n\n  getCenterCallbackProperty() {\n    return new Cesium.CallbackProperty(() => this.getCenter(), false);\n  }\n\n  dispose() {\n    if (this._center) {\n      this.pointsLayer.remove(this._center.getId());\n    }\n\n    if (this._majorRadiusPoint) {\n      this.pointsLayer.remove(this._majorRadiusPoint.getId());\n    }\n\n    if (this._minorRadiusPoints) {\n      this._minorRadiusPoints.forEach(point => this.pointsLayer.remove(point.getId()));\n    }\n\n    this.ellipsesLayer.remove(this.id);\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  private updateEllipsesLayer() {\n    this.ellipsesLayer.update(this, this.id);\n  }\n\n  private updatePointsLayer() {\n    if (this._center) {\n      this.pointsLayer.update(this._center, this._center.getId());\n    }\n    if (this._majorRadiusPoint) {\n      this.pointsLayer.update(this._majorRadiusPoint, this._majorRadiusPoint.getId());\n    }\n    if (this._minorRadiusPoints.length > 0) {\n      this.pointsLayer.update(this._minorRadiusPoints[0], this._minorRadiusPoints[0].getId());\n      this.pointsLayer.update(this._minorRadiusPoints[1], this._minorRadiusPoints[1].getId());\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EditableEllipse } from '../../../models/editable-ellipse';\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { EllipseEditOptions } from '../../../models/ellipse-edit-options';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\n\n@Injectable()\nexport class EllipsesManagerService {\n  private ellipses = new Map<string, EditableEllipse>();\n\n  createEditableEllipse(id: string,\n                        editEllipsesLayer: AcLayerComponent,\n                        editPointsLayer: AcLayerComponent,\n                        coordinateConverter: CoordinateConverter,\n                        ellipseOptions: EllipseEditOptions): EditableEllipse {\n    const editableEllipse = new EditableEllipse(id, editEllipsesLayer, editPointsLayer, coordinateConverter, ellipseOptions);\n    this.ellipses.set(id, editableEllipse);\n    return editableEllipse;\n  }\n\n  dispose(id: string) {\n    this.ellipses.get(id).dispose();\n    this.ellipses.delete(id);\n  }\n\n  get(id: string): EditableEllipse {\n    return this.ellipses.get(id);\n  }\n\n  clear() {\n    this.ellipses.forEach(ellipse => ellipse.dispose());\n    this.ellipses.clear();\n  }\n}\n","import { publish, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from '../../../models/edit-point';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { EllipseEditUpdate } from '../../../models/ellipse-edit-update';\nimport { EllipsesManagerService } from './ellipses-manager.service';\nimport { EllipseEditorObservable } from '../../../models/ellipse-editor-observable';\nimport { EllipseEditOptions, EllipseProps } from '../../../models/ellipse-edit-options';\nimport { EditableEllipse } from '../../../models/editable-ellipse';\nimport { PointProps } from '../../../models/point-edit-options';\nimport { LabelProps } from '../../../models/label-props';\nimport { BasicEditUpdate } from '../../../models/basic-edit-update';\nimport { generateKey } from '../../utils';\nimport { CesiumEventModifier } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event-modifier.enum';\nimport { CesiumService } from '../../../../angular-cesium';\n\nexport const DEFAULT_ELLIPSE_OPTIONS: EllipseEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  circleToEllipseTransformEvent: CesiumEvent.LEFT_CLICK,\n  circleToEllipseTransformEventModifier: CesiumEventModifier.ALT,\n  allowDrag: true,\n  ellipseProps: {\n    material: Cesium.Color.CORNFLOWERBLUE.withAlpha(0.4),\n    fill: true,\n    outline: true,\n    outlineWidth: 1,\n    outlineColor: Cesium.Color.WHITE.withAlpha(0.8),\n    classificationType: Cesium.ClassificationType.BOTH,\n    zIndex: 0,\n    shadows: Cesium.ShadowMode.DISABLED,\n  },\n  pointProps: {\n    color: Cesium.Color.WHITE,\n    outlineColor: Cesium.Color.BLACK.withAlpha(0.2),\n    outlineWidth: 1,\n    pixelSize: 13,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\n  },\n  polylineProps: {\n    width: 1,\n    material: () => Cesium.Color.WHITE,\n  },\n  circleToEllipseTransformation: false,\n};\n\n/**\n * Service for creating editable ellipses\n *\n * You must provide `EllipsesEditorService` yourself.\n * EllipsesEditorService works together with `<ellipse-editor>` component. Therefor you need to create `<ellipse-editor>`\n * for each `EllipsesEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `EllipseEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `EllipseEditorObservable`.\n * + To stop editing call `dispose()` from the `EllipseEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over edited shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `EllipseEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n * usage:\n * ```typescript\n *  // Start creating ellipse\n *  const editing$ = ellipsesEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit ellipse from existing center point, two radiuses and rotation\n *  const editing$ = this.ellipsesEditorService.edit(center, majorRadius, rotation, minorRadius);\n *\n * ```\n */\n@Injectable()\nexport class EllipsesEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<EllipseEditUpdate>();\n  private updatePublisher = publish<EllipseEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private ellipsesManager: EllipsesManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n  private cesiumScene: any;\n\n  init(\n    mapEventsManager: MapEventsManagerService,\n    coordinateConverter: CoordinateConverter,\n    cameraService: CameraService,\n    ellipsesManager: EllipsesManagerService,\n    cesiumViewer: CesiumService,\n  ) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.ellipsesManager = ellipsesManager;\n    this.updatePublisher.connect();\n\n    this.cesiumScene = cesiumViewer.getScene();\n  }\n\n  onUpdate(): Observable<EllipseEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  create(options = DEFAULT_ELLIPSE_OPTIONS, priority = 100): EllipseEditorObservable {\n    let center: any;\n    const id = generateKey();\n    const ellipseOptions = this.setOptions(options);\n    const clientEditSubject = new BehaviorSubject<EllipseEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE,\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      ellipseOptions,\n    });\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      pickConfig: options.pickConfiguration,\n      priority,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: ellipseOptions.addPointEvent,\n      pick: PickOptions.NO_PICK,\n      pickConfig: options.pickConfiguration,\n      priority,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id);\n\n    addPointRegistration.subscribe(({ movement: { endPosition } }) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (!position) {\n        return;\n      }\n\n      if (!center) {\n        const update: EllipseEditUpdate = {\n          id,\n          center: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.ADD_POINT,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n        });\n        center = position;\n      } else {\n        const update: EllipseEditUpdate = {\n          id,\n          center,\n          updatedPosition: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.ADD_LAST_POINT,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n        });\n\n        const changeMode: EllipseEditUpdate = {\n          id,\n          center,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.CHANGE_TO_EDIT,\n        };\n\n        this.updateSubject.next(changeMode);\n        clientEditSubject.next({\n          ...update,\n        });\n        if (this.observablesMap.has(id)) {\n          this.observablesMap.get(id).forEach(registration => registration.dispose());\n        }\n        this.observablesMap.delete(id);\n        this.editEllipse(id, priority, clientEditSubject, ellipseOptions, editorObservable);\n        finishedCreate = true;\n      }\n    });\n\n    mouseMoveRegistration.subscribe(({ movement: { endPosition } }) => {\n      if (!center) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n\n      if (position) {\n        const update: EllipseEditUpdate = {\n          id,\n          center,\n          updatedPosition: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.MOUSE_MOVE,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n        });\n      }\n    });\n\n    return editorObservable;\n  }\n\n  edit(\n    center: Cartesian3,\n    majorRadius: number,\n    rotation = Math.PI / 2,\n    minorRadius?: number,\n    options = DEFAULT_ELLIPSE_OPTIONS,\n    priority = 100,\n  ): EllipseEditorObservable {\n    const id = generateKey();\n    const ellipseOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<EllipseEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT,\n    });\n\n    const update: EllipseEditUpdate = {\n      id,\n      center,\n      majorRadius,\n      rotation,\n      minorRadius,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      ellipseOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n    });\n\n    return this.editEllipse(id, priority, editSubject, ellipseOptions);\n  }\n\n  private editEllipse(\n    id: string,\n    priority: number,\n    editSubject: Subject<EllipseEditUpdate>,\n    options: EllipseEditOptions,\n    editObservable?: EllipseEditorObservable,\n  ): EllipseEditorObservable {\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: options.dragPointEvent,\n      entityType: EditPoint,\n      pickConfig: options.pickConfiguration,\n      pick: PickOptions.PICK_FIRST,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    let addSecondRadiusRegistration;\n    if (options.circleToEllipseTransformation) {\n      addSecondRadiusRegistration = this.mapEventsManager.register({\n        event: options.circleToEllipseTransformEvent,\n        modifier: options.circleToEllipseTransformEventModifier,\n        entityType: EditableEllipse,\n        pickConfig: options.pickConfiguration,\n        pick: PickOptions.PICK_FIRST,\n        priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: options.dragShapeEvent,\n        entityType: EditableEllipse,\n        pickConfig: options.pickConfiguration,\n        pick: PickOptions.PICK_FIRST,\n        priority: priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n\n    pointDragRegistration\n      .pipe(tap(({ movement: { drop } }) => this.ellipsesManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\n      .subscribe(({ movement: { endPosition, startPosition, drop }, entities }) => {\n        const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n        const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n        if (!endDragPosition) {\n          return;\n        }\n\n        const point: EditPoint = entities[0];\n        const pointIsCenter = point === this.getCenterPoint(id);\n        let editAction;\n        if (drop) {\n          editAction = pointIsCenter ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_POINT_FINISH;\n        } else {\n          editAction = pointIsCenter ? EditActions.DRAG_SHAPE : EditActions.DRAG_POINT;\n        }\n\n        if (!options.allowDrag && this.ellipsesManager.get(id).enableEdit &&\n          (editAction === EditActions.DRAG_SHAPE || editAction === EditActions.DRAG_SHAPE_FINISH)) {\n          this.cameraService.enableInputs(true);\n          return;\n        }\n\n        const update: EllipseEditUpdate = {\n          id,\n          updatedPoint: point,\n          startDragPosition,\n          endDragPosition,\n          editMode: EditModes.EDIT,\n          editAction,\n          ...this.getEllipseProperties(id),\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n        });\n      });\n\n    if (addSecondRadiusRegistration) {\n      addSecondRadiusRegistration.subscribe(({ movement: { endPosition, startPosition, drop }, entities }) => {\n        const update: EllipseEditUpdate = {\n          id,\n          editMode: EditModes.EDIT,\n          editAction: EditActions.TRANSFORM,\n          ...this.getEllipseProperties(id),\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n        });\n      });\n    }\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({ movement: { drop } }) => this.ellipsesManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\n        .subscribe(({ movement: { startPosition, endPosition, drop } }) => {\n          const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n          const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n          if (!endDragPosition || !startDragPosition) {\n            return;\n          }\n\n          const update: EllipseEditUpdate = {\n            id,\n            startDragPosition,\n            endDragPosition,\n            editMode: EditModes.EDIT,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n            ...this.getEllipseProperties(id),\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n          });\n        });\n    }\n\n    const observables = [pointDragRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n    if (addSecondRadiusRegistration) {\n      observables.push(addSecondRadiusRegistration);\n    }\n\n    this.observablesMap.set(id, observables);\n    return editObservable || this.createEditorObservable(editSubject, id);\n  }\n\n  private createEditorObservable(observableToExtend: any, id: string): EllipseEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      } as EllipseEditUpdate);\n    };\n\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n        ...this.getEllipseProperties(id),\n      } as EllipseEditUpdate);\n    };\n\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n        ...this.getEllipseProperties(id),\n      } as EllipseEditUpdate);\n    };\n\n    observableToExtend.setManually = (\n      center: Cartesian3,\n      majorRadius: number,\n      rotation?: number,\n      minorRadius?: number,\n      centerPointProp?: PointProps,\n      radiusPointProp?: PointProps,\n      ellipseProp?: EllipseProps,\n    ) => {\n      const ellipse = this.ellipsesManager.get(id);\n      ellipse.setManually(center, majorRadius, rotation, minorRadius, centerPointProp, radiusPointProp, ellipseProp);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: (update: BasicEditUpdate<any>, labels: LabelProps[]) => LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      } as EllipseEditUpdate);\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      } as EllipseEditUpdate);\n    };\n\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n\n    observableToExtend.getLabels = (): LabelProps[] => this.ellipsesManager.get(id).labels;\n    observableToExtend.getCenter = (): Cartesian3 => this.getCenterPosition(id);\n    observableToExtend.getMajorRadius = (): number => this.getMajorRadius(id);\n    observableToExtend.getMinorRadius = (): number => this.getMinorRadius(id);\n\n    return observableToExtend as EllipseEditorObservable;\n  }\n\n  private setOptions(options: EllipseEditOptions): EllipseEditOptions {\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_ELLIPSE_OPTIONS));\n    const ellipseOptions = Object.assign(defaultClone, options);\n    ellipseOptions.pointProps = Object.assign({}, DEFAULT_ELLIPSE_OPTIONS.pointProps, options.pointProps);\n    ellipseOptions.ellipseProps = Object.assign({}, DEFAULT_ELLIPSE_OPTIONS.ellipseProps, options.ellipseProps);\n    ellipseOptions.polylineProps = Object.assign({}, DEFAULT_ELLIPSE_OPTIONS.polylineProps, options.polylineProps);\n    return ellipseOptions;\n  }\n\n  private getCenterPosition(id: string): Cartesian3 {\n    return this.ellipsesManager.get(id).getCenter();\n  }\n\n  private getCenterPoint(id: string): EditPoint {\n    return this.ellipsesManager.get(id).center;\n  }\n\n  private getMajorRadius(id: string): number {\n    return this.ellipsesManager.get(id).getMajorRadius();\n  }\n\n  private getMinorRadius(id: string): number {\n    return this.ellipsesManager.get(id).getMinorRadius();\n  }\n\n  private getEllipseProperties(id: string) {\n    const ellipse = this.ellipsesManager.get(id);\n    return {\n      center: ellipse.getCenter(),\n      rotation: ellipse.getRotation(),\n      minorRadius: ellipse.getMinorRadius(),\n      majorRadius: ellipse.getMajorRadius(),\n      minorRadiusPointPosition: ellipse.getMinorRadiusPointPosition(),\n      majorRadiusPointPosition: ellipse.getMajorRadiusPointPosition(),\n    };\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { CesiumService } from '../../../angular-cesium/services/cesium/cesium.service';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { EllipsesManagerService } from '../../services/entity-editors/ellipses-editor/ellipses-manager.service';\nimport { EllipsesEditorService } from '../../services/entity-editors/ellipses-editor/ellipses-editor.service';\nimport { EllipseEditUpdate } from '../../models/ellipse-edit-update';\nimport { LabelProps } from '../../models/label-props';\nimport { EditableEllipse } from '../../models/editable-ellipse';\n\n@Component({\n  selector: 'ellipses-editor',\n  template: /*html*/ `\n      <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n          <ac-point-desc\n                  props=\"{\n                    position: point.getPositionCallbackProperty(),\n                    pixelSize: getPointSize(point),\n                    color: point.props.color,\n                    outlineColor: point.props.outlineColor,\n                    outlineWidth: point.props.outlineWidth,\n                    show: getPointShow(point),\n                    disableDepthTestDistance: point.props.disableDepthTestDistance,\n                    heightReference: point.props.heightReference,\n    }\"\n          >\n          </ac-point-desc>\n      </ac-layer>\n\n      <ac-layer #editEllipsesLayer acFor=\"let ellipse of editEllipses$\" [context]=\"this\" [zIndex]=\"0\">\n          <ac-ellipse-desc\n                  props=\"{\n                    position: ellipse.getCenterCallbackProperty(),\n                    semiMajorAxis: ellipse.getMajorRadiusCallbackProperty(),\n                    semiMinorAxis: ellipse.getMinorRadiusCallbackProperty(),\n                    rotation: ellipse.getRotationCallbackProperty(),\n                    material: ellipse.ellipseProps.material,\n                    outline: ellipse.ellipseProps.outline,\n                    outlineWidth: ellipse.ellipseProps.outlineWidth,\n                    outlineColor: ellipse.ellipseProps.outlineColor,\n                    height: 0,\n                    fill: ellipse.ellipseProps.fill,\n                    classificationType: ellipse.ellipseProps.classificationType,\n                    zIndex: ellipse.ellipseProps.zIndex,\n                    shadows: ellipse.ellipseProps.shadows,\n    }\"\n          >\n          </ac-ellipse-desc>\n\n          <ac-array-desc acFor=\"let label of ellipse.labels\" [idGetter]=\"getLabelId\">\n              <ac-label-primitive-desc\n                      props=\"{\n                        position: label.position,\n                        text: label.text,\n                        backgroundColor: label.backgroundColor,\n                        backgroundPadding: label.backgroundPadding,\n                        distanceDisplayCondition: label.distanceDisplayCondition,\n                        eyeOffset: label.eyeOffset,\n                        fillColor: label.fillColor,\n                        font: label.font,\n                        heightReference: label.heightReference,\n                        horizontalOrigin: label.horizontalOrigin,\n                        outlineColor: label.outlineColor,\n                        outlineWidth: label.outlineWidth,\n                        pixelOffset: label.pixelOffset,\n                        pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n                        scale: label.scale,\n                        scaleByDistance: label.scaleByDistance,\n                        show: label.show,\n                        showBackground: label.showBackground,\n                        style: label.style,\n                        translucencyByDistance: label.translucencyByDistance,\n                        verticalOrigin: label.verticalOrigin,\n                        disableDepthTestDistance: label.disableDepthTestDistance,\n        }\"\n              >\n              </ac-label-primitive-desc>\n          </ac-array-desc>\n      </ac-layer>\n  `,\n  providers: [CoordinateConverter, EllipsesManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EllipsesEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: EllipseEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editEllipses$ = new Subject<AcNotification>();\n\n  @ViewChild('editEllipsesLayer') private editEllipsesLayer: AcLayerComponent;\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\n\n  constructor(\n    private ellipsesEditor: EllipsesEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private ellipsesManager: EllipsesManagerService,\n    private cesiumService: CesiumService,\n  ) {\n    this.ellipsesEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, this.ellipsesManager, this.cesiumService);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.ellipsesEditor.onUpdate().subscribe(update => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(ellipse: EditableEllipse, update: EllipseEditUpdate, labels?: LabelProps[]) {\n    update.center = ellipse.getCenter();\n    update.majorRadius = ellipse.getMajorRadius();\n    update.minorRadius = ellipse.getMinorRadius();\n    update.rotation = ellipse.getRotation();\n\n    if (labels) {\n      ellipse.labels = labels;\n      this.editEllipsesLayer.update(ellipse, ellipse.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    ellipse.labels = this.editLabelsRenderFn(update, ellipse.labels);\n    this.editEllipsesLayer.update(ellipse, ellipse.getId());\n  }\n\n  removeEditLabels(ellipse: EditableEllipse) {\n    ellipse.labels = [];\n    this.editEllipsesLayer.update(ellipse, ellipse.getId());\n  }\n\n  handleCreateUpdates(update: EllipseEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.ellipsesManager.createEditableEllipse(\n          update.id,\n          this.editEllipsesLayer,\n          this.editPointsLayer,\n          this.coordinateConverter,\n          update.ellipseOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (update.updatedPosition) {\n          ellipse.movePoint(update.updatedPosition, ellipse.majorRadiusPoint);\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (update.center) {\n          ellipse.addPoint(update.center);\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.ADD_LAST_POINT: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (update.updatedPosition) {\n          ellipse.addLastPoint(update.updatedPosition);\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse) {\n          this.removeEditLabels(ellipse);\n          this.ellipsesManager.dispose(update.id);\n        }\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(ellipse, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        this.renderEditLabels(ellipse, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        this.renderEditLabels(ellipse, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: EllipseEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        const ellipse = this.ellipsesManager.createEditableEllipse(\n          update.id,\n          this.editEllipsesLayer,\n          this.editPointsLayer,\n          this.coordinateConverter,\n          update.ellipseOptions,\n        );\n        ellipse.setManually(\n          update.center,\n          update.majorRadius,\n          update.rotation,\n          update.minorRadius,\n          (update.ellipseOptions && update.ellipseOptions.pointProps) || undefined,\n          (update.ellipseOptions && update.ellipseOptions.pointProps) || undefined,\n          (update.ellipseOptions && update.ellipseOptions.ellipseProps) || undefined,\n        );\n        this.renderEditLabels(ellipse, update);\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH:\n      case EditActions.DRAG_POINT: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse && ellipse.enableEdit) {\n          ellipse.movePoint(update.endDragPosition, update.updatedPoint);\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse && ellipse.enableEdit) {\n          ellipse.moveEllipse(update.startDragPosition, update.endDragPosition);\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse && ellipse.enableEdit) {\n          ellipse.endMoveEllipse();\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.TRANSFORM: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse && ellipse.enableEdit) {\n          ellipse.transformToEllipse();\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse) {\n          ellipse.enableEdit = false;\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse) {\n          ellipse.enableEdit = true;\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.ellipsesManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { EditPolyline } from './edit-polyline';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { PointProps } from './point-edit-options';\nimport { PolylineEditOptions, PolylineProps } from './polyline-edit-options';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { defaultLabelProps, LabelProps } from './label-props';\n\nexport class EditablePolyline extends AcEntity {\n  private positions: EditPoint[] = [];\n\n  private polylines: EditPolyline[] = [];\n  private movingPoint: EditPoint;\n  private doneCreation = false;\n  private _enableEdit = true;\n  private _pointProps: PointProps;\n  private polylineProps: PolylineProps;\n  private lastDraggedToPosition: any;\n  private _labels: LabelProps[] = [];\n\n  constructor(private id: string,\n              private pointsLayer: AcLayerComponent,\n              private polylinesLayer: AcLayerComponent,\n              private coordinateConverter: CoordinateConverter,\n              private editOptions: PolylineEditOptions,\n              positions?: Cartesian3[]) {\n    super();\n    this._pointProps = {...editOptions.pointProps};\n    this.props = {...editOptions.polylineProps};\n    if (positions && positions.length >= 2) {\n      this.createFromExisting(positions);\n    }\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels) {\n      return;\n    }\n    const positions = this.getRealPositions();\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        label.position = positions[index];\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get props(): PolylineProps {\n    return this.polylineProps;\n  }\n\n  set props(value: PolylineProps) {\n    this.polylineProps = value;\n  }\n\n  get pointProps(): PointProps {\n    return this._pointProps;\n  }\n\n  set pointProps(value: PointProps) {\n    this._pointProps = value;\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this.positions.forEach(point => {\n      point.show = value;\n      this.updatePointsLayer(false, point);\n    });\n  }\n\n  private createFromExisting(positions: Cartesian3[]) {\n    positions.forEach((position) => {\n      this.addPointFromExisting(position);\n    });\n    this.addAllVirtualEditPoints();\n    this.doneCreation = true;\n  }\n\n  setManually(points: {\n    position: Cartesian3,\n    pointProp?: PointProps\n  }[] | Cartesian3[], polylineProps?: PolylineProps) {\n    if (!this.doneCreation) {\n      throw new Error('Update manually only in edit mode, after polyline is created');\n    }\n    this.positions.forEach(p => this.pointsLayer.remove(p.getId()));\n\n    const newPoints: EditPoint[] = [];\n    for (let i = 0; i < points.length; i++) {\n      const pointOrCartesian: any = points[i];\n      let newPoint = null;\n      if (pointOrCartesian.pointProps) {\n        newPoint = new EditPoint(this.id, pointOrCartesian.position, pointOrCartesian.pointProps);\n      } else {\n        newPoint = new EditPoint(this.id, pointOrCartesian, this._pointProps);\n      }\n      newPoints.push(newPoint);\n    }\n    this.positions = newPoints;\n    this.polylineProps = polylineProps ? polylineProps : this.polylineProps;\n\n    this.updatePointsLayer(true, ...this.positions);\n    this.addAllVirtualEditPoints();\n  }\n\n  private addAllVirtualEditPoints() {\n    const currentPoints = [...this.positions];\n    currentPoints.forEach((pos, index) => {\n      if (index !== currentPoints.length - 1) {\n        const currentPoint = pos;\n        const nextIndex = (index + 1) % (currentPoints.length);\n        const nextPoint = currentPoints[nextIndex];\n\n        const midPoint = this.setMiddleVirtualPoint(currentPoint, nextPoint);\n\n        this.updatePointsLayer(false, midPoint);\n      }\n    });\n  }\n\n  private setMiddleVirtualPoint(firstP: EditPoint, secondP: EditPoint): EditPoint {\n    const midPointCartesian3 = Cesium.Cartesian3.lerp(firstP.getPosition(), secondP.getPosition(), 0.5, new Cesium.Cartesian3());\n    const midPoint = new EditPoint(this.id, midPointCartesian3, this._pointProps);\n    midPoint.setVirtualEditPoint(true);\n\n    const firstIndex = this.positions.indexOf(firstP);\n    this.positions.splice(firstIndex + 1, 0, midPoint);\n    return midPoint;\n  }\n\n  private updateMiddleVirtualPoint(virtualEditPoint: EditPoint, prevPoint: EditPoint, nextPoint: EditPoint) {\n    const midPointCartesian3 = Cesium.Cartesian3.lerp(prevPoint.getPosition(), nextPoint.getPosition(), 0.5, new Cesium.Cartesian3());\n    virtualEditPoint.setPosition(midPointCartesian3);\n  }\n\n  changeVirtualPointToRealPoint(point: EditPoint) {\n    point.setVirtualEditPoint(false); // actual point becomes a real point\n    const pointsCount = this.positions.length;\n    const pointIndex = this.positions.indexOf(point);\n    const nextIndex = (pointIndex + 1) % (pointsCount);\n    const preIndex = ((pointIndex - 1) + pointsCount) % pointsCount;\n\n    const nextPoint = this.positions[nextIndex];\n    const prePoint = this.positions[preIndex];\n\n    const firstMidPoint = this.setMiddleVirtualPoint(prePoint, point);\n    const secMidPoint = this.setMiddleVirtualPoint(point, nextPoint);\n    this.updatePointsLayer(false, firstMidPoint, secMidPoint, point);\n\n  }\n\n  private renderPolylines() {\n    this.polylines.forEach(polyline => this.polylinesLayer.remove(polyline.getId()));\n    this.polylines = [];\n    const realPoints = this.positions.filter(point => !point.isVirtualEditPoint());\n    realPoints.forEach((point, index) => {\n      if (index !== realPoints.length - 1) {\n        const nextIndex = (index + 1);\n        const nextPoint = realPoints[nextIndex];\n        const polyline = new EditPolyline(this.id, point.getPosition(), nextPoint.getPosition(), this.polylineProps);\n        this.polylines.push(polyline);\n        this.polylinesLayer.update(polyline, polyline.getId());\n      }\n    });\n  }\n\n  addPointFromExisting(position: Cartesian3) {\n    const newPoint = new EditPoint(this.id, position, this._pointProps);\n    this.positions.push(newPoint);\n    this.updatePointsLayer(true, newPoint);\n  }\n\n\n  addPoint(position: Cartesian3) {\n    if (this.doneCreation) {\n      return;\n    }\n    const isFirstPoint = !this.positions.length;\n    if (isFirstPoint) {\n      const firstPoint = new EditPoint(this.id, position, this._pointProps);\n      this.positions.push(firstPoint);\n      this.updatePointsLayer(true, firstPoint);\n    }\n\n    this.movingPoint = new EditPoint(this.id, position.clone(), this._pointProps);\n    this.positions.push(this.movingPoint);\n\n    this.updatePointsLayer(true, this.movingPoint);\n  }\n\n  movePointFinish(editPoint: EditPoint) {\n    if (this.editOptions.clampHeightTo3D) {\n      editPoint.props.disableDepthTestDistance = Number.POSITIVE_INFINITY;\n      this.updatePointsLayer(false, editPoint);\n    }\n  }\n\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\n    editPoint.setPosition(toPosition);\n    if (this.doneCreation) {\n      if (editPoint.props.disableDepthTestDistance && this.editOptions.clampHeightTo3D) {\n        // To avoid bug with pickPosition() on point with disableDepthTestDistance\n        editPoint.props.disableDepthTestDistance = undefined;\n        return; // ignore first move because the pickPosition() could be wrong\n      }\n\n      if (editPoint.isVirtualEditPoint()) {\n        this.changeVirtualPointToRealPoint(editPoint);\n      }\n      const pointsCount = this.positions.length;\n      const pointIndex = this.positions.indexOf(editPoint);\n\n      if (pointIndex < this.positions.length - 1) {\n        const nextVirtualPoint = this.positions[(pointIndex + 1) % (pointsCount)];\n        const nextRealPoint = this.positions[(pointIndex + 2) % (pointsCount)];\n        this.updateMiddleVirtualPoint(nextVirtualPoint, editPoint, nextRealPoint);\n      }\n      if (pointIndex > 0) {\n        const prevVirtualPoint = this.positions[((pointIndex - 1) + pointsCount) % pointsCount];\n        const prevRealPoint = this.positions[((pointIndex - 2) + pointsCount) % pointsCount];\n        this.updateMiddleVirtualPoint(prevVirtualPoint, editPoint, prevRealPoint);\n      }\n    }\n    this.updatePointsLayer(true, editPoint);\n  }\n\n  moveTempMovingPoint(toPosition: Cartesian3) {\n    if (this.movingPoint) {\n      this.movePoint(toPosition, this.movingPoint);\n    }\n  }\n\n  moveShape(startMovingPosition: Cartesian3, draggedToPosition: Cartesian3) {\n    if (!this.doneCreation) {\n      return;\n    }\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = startMovingPosition;\n    }\n\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, draggedToPosition);\n    this.positions.forEach(point => {\n      const newPos = GeoUtilsService.addDeltaToPosition(point.getPosition(), delta, true);\n      point.setPosition(newPos);\n    });\n    this.updatePointsLayer(true, ...this.positions);\n    this.lastDraggedToPosition = draggedToPosition;\n  }\n\n  endMoveShape() {\n    this.lastDraggedToPosition = undefined;\n    this.updatePointsLayer(true, ...this.positions);\n  }\n\n  removePoint(pointToRemove: EditPoint) {\n    this.removePosition(pointToRemove);\n    this.positions\n      .filter(p => p.isVirtualEditPoint())\n      .forEach(p => this.removePosition(p));\n    this.addAllVirtualEditPoints();\n\n    this.renderPolylines();\n  }\n\n  addLastPoint(position: Cartesian3) {\n    this.doneCreation = true;\n    this.removePosition(this.movingPoint); // remove movingPoint\n    this.movingPoint = null;\n\n    this.addAllVirtualEditPoints();\n  }\n\n  getRealPositions(): Cartesian3[] {\n    return this.getRealPoints()\n      .map(position => position.getPosition());\n  }\n\n  getRealPoints(): EditPoint[] {\n    return this.positions\n      .filter(position => !position.isVirtualEditPoint() && position !== this.movingPoint);\n  }\n\n  getPoints(): EditPoint[] {\n    return this.positions.filter(position => position !== this.movingPoint);\n  }\n\n  getPositions(): Cartesian3[] {\n    return this.positions.map(position => position.getPosition());\n  }\n\n  getPositionsCallbackProperty(): Cartesian3[] {\n    return new Cesium.CallbackProperty(this.getPositions.bind(this), false);\n  }\n\n  private removePosition(point: EditPoint) {\n    const index = this.positions.findIndex((p) => p === point);\n    if (index < 0) {\n      return;\n    }\n    this.positions.splice(index, 1);\n    this.pointsLayer.remove(point.getId());\n  }\n\n  private updatePointsLayer(renderPolylines = true, ...point: EditPoint[]) {\n    if (renderPolylines) {\n      this.renderPolylines();\n    }\n    point.forEach(p => this.pointsLayer.update(p, p.getId()));\n  }\n\n  update() {\n    this.updatePointsLayer();\n  }\n\n  dispose() {\n    this.positions.forEach(editPoint => {\n      this.pointsLayer.remove(editPoint.getId());\n    });\n    this.polylines.forEach(line => this.polylinesLayer.remove(line.getId()));\n    if (this.movingPoint) {\n      this.pointsLayer.remove(this.movingPoint.getId());\n      this.movingPoint = undefined;\n    }\n    this.positions.length = 0;\n  }\n\n  getPointsCount(): number {\n    return this.positions.length;\n  }\n\n  getId() {\n    return this.id;\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { Rectangle } from '../../angular-cesium/models/rectangle';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { RectangleEditOptions, RectangleProps } from './rectangle-edit-options';\nimport { PointProps } from './point-edit-options';\nimport { defaultLabelProps, LabelProps } from './label-props';\n\nexport class EditableRectangle extends AcEntity {\n  private positions: EditPoint[] = [];\n  private movingPoint: EditPoint;\n  private done = false;\n  private _enableEdit = true;\n  private _defaultPointProps: PointProps;\n  private _rectangleProps: RectangleProps;\n  private lastDraggedToPosition: Cartesian3;\n  private _labels: LabelProps[] = [];\n\n  constructor(\n    private id: string,\n    private pointsLayer: AcLayerComponent,\n    private rectangleLayer: AcLayerComponent,\n    private coordinateConverter: CoordinateConverter,\n    editOptions: RectangleEditOptions,\n    positions?: Cartesian3[]\n  ) {\n    super();\n    this.defaultPointProps = {...editOptions.pointProps};\n    this.rectangleProps = {...editOptions.rectangleProps};\n    if (positions && positions.length === 2) {\n      this.createFromExisting(positions);\n    } else if (positions) {\n      throw new Error('Rectangle consist of 2 points but provided ' + positions.length);\n    }\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels) {\n      return;\n    }\n    const positions = this.getRealPositions();\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        label.position = positions[index];\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get rectangleProps(): RectangleProps {\n    return this._rectangleProps;\n  }\n\n  set rectangleProps(value: RectangleProps) {\n    this._rectangleProps = value;\n  }\n\n  get defaultPointProps(): PointProps {\n    return this._defaultPointProps;\n  }\n\n  set defaultPointProps(value: PointProps) {\n    this._defaultPointProps = value;\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this.positions.forEach(point => {\n      point.show = value;\n      this.updatePointsLayer(point);\n    });\n  }\n\n  private createFromExisting(positions: Cartesian3[]) {\n    positions.forEach(position => {\n      this.addPointFromExisting(position);\n    });\n    this.updateRectangleLayer();\n    this.updatePointsLayer(...this.positions);\n    this.done = true;\n  }\n\n  setPointsManually(points: EditPoint[], widthMeters?: number) {\n    if (!this.done) {\n      throw new Error('Update manually only in edit mode, after rectangle is created');\n    }\n    this.positions.forEach(p => this.pointsLayer.remove(p.getId()));\n    this.positions = points;\n    this.updatePointsLayer(...points);\n    this.updateRectangleLayer();\n  }\n\n  addPointFromExisting(position: Cartesian3) {\n    const newPoint = new EditPoint(this.id, position, this.defaultPointProps);\n    this.positions.push(newPoint);\n    this.updatePointsLayer(newPoint);\n  }\n\n  addPoint(position: Cartesian3) {\n    if (this.done) {\n      return;\n    }\n    const isFirstPoint = !this.positions.length;\n    if (isFirstPoint) {\n      const firstPoint = new EditPoint(this.id, position, this.defaultPointProps);\n      this.positions.push(firstPoint);\n      this.movingPoint = new EditPoint(this.id, position.clone(), this.defaultPointProps);\n      this.positions.push(this.movingPoint);\n      this.updatePointsLayer(firstPoint);\n    } else {\n\n      this.updatePointsLayer(...this.positions);\n      this.updateRectangleLayer();\n      this.done = true;\n      this.movingPoint = null;\n    }\n  }\n\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\n    if (!editPoint.isVirtualEditPoint()) {\n      editPoint.setPosition(toPosition);\n      this.updatePointsLayer(...this.positions);\n      this.updateRectangleLayer();\n    }\n  }\n\n  moveShape(startMovingPosition: Cartesian3, draggedToPosition: Cartesian3) {\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = startMovingPosition;\n    }\n\n    const lastDraggedCartographic = Cesium.Cartographic.fromCartesian(this.lastDraggedToPosition);\n    const draggedToPositionCartographic = Cesium.Cartographic.fromCartesian(draggedToPosition);\n    this.getRealPoints().forEach(point => {\n      const cartographic = Cesium.Cartographic.fromCartesian(point.getPosition());\n      cartographic.longitude += (draggedToPositionCartographic.longitude - lastDraggedCartographic.longitude);\n      cartographic.latitude += (draggedToPositionCartographic.latitude - lastDraggedCartographic.latitude);\n      point.setPosition(Cesium.Cartesian3.fromRadians(cartographic.longitude, cartographic.latitude, 0));\n    });\n\n    this.updatePointsLayer(...this.positions);\n    this.updateRectangleLayer();\n    this.lastDraggedToPosition = draggedToPosition;\n  }\n\n  endMoveShape() {\n    this.lastDraggedToPosition = undefined;\n    this.positions.forEach(point => this.updatePointsLayer(point));\n    this.updateRectangleLayer();\n  }\n\n  endMovePoint() {\n    this.updatePointsLayer(...this.positions);\n  }\n\n  moveTempMovingPoint(toPosition: Cartesian3) {\n    if (this.movingPoint) {\n      this.movePoint(toPosition, this.movingPoint);\n    }\n  }\n\n  removePoint(pointToRemove: EditPoint) {\n    this.removePosition(pointToRemove);\n    this.positions.filter(p => p.isVirtualEditPoint()).forEach(p => this.removePosition(p));\n  }\n\n  addLastPoint(position: Cartesian3) {\n    this.done = true;\n    this.removePosition(this.movingPoint); // remove movingPoint\n    this.movingPoint = null;\n  }\n\n  getRealPositions(): Cartesian3[] {\n    return this.getRealPoints().map(position => position.getPosition());\n  }\n\n  getRealPositionsCallbackProperty() {\n    return new Cesium.CallbackProperty(this.getRealPositions.bind(this), false);\n  }\n\n  getRealPoints(): EditPoint[] {\n    return this.positions.filter(position => !position.isVirtualEditPoint());\n  }\n\n  getPositions(): Cartesian3[] {\n    return this.positions.map(position => position.getPosition());\n  }\n\n  getRectangle(): Rectangle {\n    const cartographics = this.getPositions().map(cartesian => Cesium.Cartographic.fromCartesian(cartesian));\n    const longitudes = cartographics.map(position => position.longitude);\n    const latitudes = cartographics.map(position =>  position.latitude);\n\n    return new Cesium.Rectangle(\n      Math.min(...longitudes),\n      Math.min(...latitudes),\n      Math.max(...longitudes),\n      Math.max(...latitudes)\n    );\n  }\n\n  getRectangleCallbackProperty(): Rectangle {\n    return new Cesium.CallbackProperty(this.getRectangle.bind(this), false);\n  }\n\n  private removePosition(point: EditPoint) {\n    const index = this.positions.findIndex(p => p === point);\n    if (index < 0) {\n      return;\n    }\n    this.positions.splice(index, 1);\n    this.pointsLayer.remove(point.getId());\n  }\n\n  private updatePointsLayer(...point: EditPoint[]) {\n    point.forEach(p => this.pointsLayer.update(p, p.getId()));\n  }\n\n  private updateRectangleLayer() {\n    this.rectangleLayer.update(this, this.id);\n  }\n\n  dispose() {\n    this.rectangleLayer.remove(this.id);\n\n    this.positions.forEach(editPoint => {\n      this.pointsLayer.remove(editPoint.getId());\n    });\n    if (this.movingPoint) {\n      this.pointsLayer.remove(this.movingPoint.getId());\n      this.movingPoint = undefined;\n    }\n    this.positions.length = 0;\n  }\n\n  getPointsCount(): number {\n    return this.positions.length;\n  }\n\n  getId() {\n    return this.id;\n  }\n}\n\n","import { Observable } from 'rxjs';\nimport { LabelProps } from './label-props';\n\nexport class EditorObservable<T> extends Observable<T> {\n  dispose: Function;\n  enable: Function;\n  disable: Function;\n  getLabels: () => LabelProps[];\n  getEditValue: () => T;\n  setLabelsRenderFn: (func: (update: T, labels: LabelProps[]) => LabelProps[]) => void;\n  updateLabels: (labels: LabelProps[]) => void;\n}\n","import { EditPoint } from './edit-point';\nimport { EditorObservable } from './editor-observable';\nimport { PointProps } from './point-edit-options';\nimport { Cartesian3 } from '../../angular-cesium';\nimport { PointEditUpdate } from './point-edit-update';\n\nexport class PointEditorObservable extends EditorObservable<PointEditUpdate> {\n  setManually: (point: { position: Cartesian3, pointProp?: PointProps } | Cartesian3, pointProps?: PointProps) => void;\n  getCurrentPoint: () => EditPoint;\n}\n","import { EditPoint } from './edit-point';\nimport { EditorObservable } from './editor-observable';\nimport { PolylineEditUpdate } from './polyline-edit-update';\nimport { PointProps } from './point-edit-options';\nimport { PolylineProps } from './polyline-edit-options';\nimport { Cartesian3 } from '../../angular-cesium';\n\nexport class PolylineEditorObservable extends EditorObservable<PolylineEditUpdate> {\n  setManually: (points: { position: Cartesian3, pointProp?: PointProps }[] | Cartesian3[], polylineProps?: PolylineProps) => void;\n  getCurrentPoints: () => EditPoint[];\n}\n","import { EditPoint } from './edit-point';\nimport { EditorObservable } from './editor-observable';\nimport { PolygonEditUpdate } from './polygon-edit-update';\nimport { PointProps } from './point-edit-options';\nimport { PolygonProps } from './polygon-edit-options';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\n\n\nexport class PolygonEditorObservable extends EditorObservable<PolygonEditUpdate> {\n  setManually: (points: { position: Cartesian3, pointProp?: PointProps }[] | Cartesian3[],\n                polygonProps?: PolygonProps) => void;\n  getCurrentPoints: () => EditPoint[];\n}\n","import { EditPoint } from './edit-point';\nimport { EditorObservable } from './editor-observable';\nimport { RectangleEditUpdate } from './rectangle-edit-update';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { PointProps } from './point-edit-options';\n\nexport class RectangleEditorObservable extends EditorObservable<RectangleEditUpdate> {\n  setManually: (\n    firstPosition: Cartesian3,\n    secondPosition: Cartesian3,\n    firstPointProp?: PointProps,\n    secondPointProp?: PointProps\n  ) => void;\n  getCurrentPoints: () => EditPoint[];\n}\n\n","import { EditorObservable } from './editor-observable';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CircleEditUpdate } from './circle-edit-update';\nimport { PointProps } from './point-edit-options';\nimport { EllipseProps } from './ellipse-edit-options';\n\nexport class CircleEditorObservable extends EditorObservable<CircleEditUpdate> {\n  setManually: (center: Cartesian3, radius: number, centerPointProp?: PointProps,\n                radiusPointProp?: PointProps, circleProp?: EllipseProps) => void;\n  getCenter: () => Cartesian3;\n  getRadius: () => number; // meters\n}\n","import { EditorObservable } from './editor-observable';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { EllipseEditUpdate } from './ellipse-edit-update';\nimport { PointProps } from './point-edit-options';\nimport { EllipseProps } from './ellipse-edit-options';\n\nexport class EllipseEditorObservable extends EditorObservable<EllipseEditUpdate> {\n  setManually: (\n    center: Cartesian3,\n    majorRadius: number,\n    rotation?: number,\n    minorRadius?: number,\n    centerPointProp?: PointProps,\n    radiusPointProp?: PointProps,\n    ellipseProp?: EllipseProps,\n  ) => void;\n  getCenter: () => Cartesian3;\n  getMinorRadius: () => number; // meters\n  getMajorRadius: () => number; // meters\n}\n","import { EditPoint } from './edit-point';\nimport { EditorObservable } from './editor-observable';\nimport { HippodromeEditUpdate } from './hippodrome-edit-update';\nimport { PointProps } from './point-edit-options';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\n\nexport class HippodromeEditorObservable extends EditorObservable<HippodromeEditUpdate> {\n  setManually: (firstPosition: Cartesian3,\n                secondPosition: Cartesian3,\n                widthMeters?: number,\n                firstPointProp?: PointProps,\n                secondPointProp?: PointProps) => void;\n  getCurrentPoints: () => EditPoint[];\n  getCurrentWidth: () => number; // meters\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { PointProps } from './point-edit-options';\nimport { HippodromeEditOptions, HippodromeProps } from './hippodrome-edit-options';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { defaultLabelProps, LabelProps } from './label-props';\n\nexport class EditableHippodrome extends AcEntity {\n  private positions: EditPoint[] = [];\n  private movingPoint: EditPoint;\n  private done = false;\n  private _enableEdit = true;\n  private _defaultPointProps: PointProps;\n  private _hippodromeProps: HippodromeProps;\n  private lastDraggedToPosition: Cartesian3;\n  private _labels: LabelProps[] = [];\n\n  constructor(\n    private id: string,\n    private pointsLayer: AcLayerComponent,\n    private hippodromeLayer: AcLayerComponent,\n    private coordinateConverter: CoordinateConverter,\n    editOptions: HippodromeEditOptions,\n    positions?: Cartesian3[],\n  ) {\n    super();\n    this.defaultPointProps = {...editOptions.pointProps};\n    this.hippodromeProps = {...editOptions.hippodromeProps};\n    if (positions && positions.length === 2) {\n      this.createFromExisting(positions);\n    } else if (positions) {\n      throw new Error('Hippodrome consist of 2 points but provided ' + positions.length);\n    }\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels) {\n      return;\n    }\n    const positions = this.getRealPositions();\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        label.position = positions[index];\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get hippodromeProps(): HippodromeProps {\n    return this._hippodromeProps;\n  }\n\n  set hippodromeProps(value: HippodromeProps) {\n    this._hippodromeProps = value;\n  }\n\n  get defaultPointProps(): PointProps {\n    return this._defaultPointProps;\n  }\n\n  set defaultPointProps(value: PointProps) {\n    this._defaultPointProps = value;\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this.positions.forEach(point => {\n      point.show = value;\n      this.updatePointsLayer(point);\n    });\n  }\n\n  private createFromExisting(positions: Cartesian3[]) {\n    positions.forEach(position => {\n      this.addPointFromExisting(position);\n    });\n    this.createHeightEditPoints();\n    this.updateHippdromeLayer();\n    this.updatePointsLayer(...this.positions);\n    this.done = true;\n  }\n\n  setPointsManually(points: EditPoint[], widthMeters?: number) {\n    if (!this.done) {\n      throw new Error('Update manually only in edit mode, after polyline is created');\n    }\n    this.hippodromeProps.width = widthMeters ? widthMeters : this.hippodromeProps.width;\n    this.positions.forEach(p => this.pointsLayer.remove(p.getId()));\n    this.positions = points;\n    this.createHeightEditPoints();\n    this.updatePointsLayer(...points);\n    this.updateHippdromeLayer();\n  }\n\n  addPointFromExisting(position: Cartesian3) {\n    const newPoint = new EditPoint(this.id, position, this.defaultPointProps);\n    this.positions.push(newPoint);\n    this.updatePointsLayer(newPoint);\n  }\n\n  addPoint(position: Cartesian3) {\n    if (this.done) {\n      return;\n    }\n    const isFirstPoint = !this.positions.length;\n    if (isFirstPoint) {\n      const firstPoint = new EditPoint(this.id, position, this.defaultPointProps);\n      this.positions.push(firstPoint);\n      this.movingPoint = new EditPoint(this.id, position.clone(), this.defaultPointProps);\n      this.positions.push(this.movingPoint);\n      this.updatePointsLayer(firstPoint);\n    } else {\n      this.createHeightEditPoints();\n\n      this.updatePointsLayer(...this.positions);\n      this.updateHippdromeLayer();\n      this.done = true;\n      this.movingPoint = null;\n    }\n  }\n\n  private createHeightEditPoints() {\n    this.positions.filter(p => p.isVirtualEditPoint()).forEach(p => this.removePosition(p));\n\n    const firstP = this.getRealPoints()[0];\n    const secP = this.getRealPoints()[1];\n\n    const midPointCartesian3 = Cesium.Cartesian3.lerp(firstP.getPosition(), secP.getPosition(), 0.5, new Cesium.Cartesian3());\n    const bearingDeg = this.coordinateConverter.bearingToCartesian(firstP.getPosition(), secP.getPosition());\n\n    const upAzimuth = Cesium.Math.toRadians(bearingDeg) - Math.PI / 2;\n    this.createMiddleEditablePoint(midPointCartesian3, upAzimuth);\n    const downAzimuth = Cesium.Math.toRadians(bearingDeg) + Math.PI / 2;\n    this.createMiddleEditablePoint(midPointCartesian3, downAzimuth);\n  }\n\n  private createMiddleEditablePoint(midPointCartesian3: any, azimuth: number) {\n    const upEditCartesian3 = GeoUtilsService.pointByLocationDistanceAndAzimuth(\n      midPointCartesian3,\n      this.hippodromeProps.width / 2,\n      azimuth,\n      true,\n    );\n    const midPoint = new EditPoint(this.id, upEditCartesian3, this.defaultPointProps);\n    midPoint.setVirtualEditPoint(true);\n    this.positions.push(midPoint);\n  }\n\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\n    if (!editPoint.isVirtualEditPoint()) {\n      editPoint.setPosition(toPosition);\n      this.createHeightEditPoints();\n      this.updatePointsLayer(...this.positions);\n      this.updateHippdromeLayer();\n    } else {\n      this.changeWidthByNewPoint(toPosition);\n    }\n  }\n\n  private changeWidthByNewPoint(toPosition: Cartesian3) {\n    const firstP = this.getRealPoints()[0];\n    const secP = this.getRealPoints()[1];\n    const midPointCartesian3 = Cesium.Cartesian3.lerp(firstP.getPosition(), secP.getPosition(), 0.5, new Cesium.Cartesian3());\n\n    const bearingDeg = this.coordinateConverter.bearingToCartesian(midPointCartesian3, toPosition);\n    let normalizedBearingDeb = bearingDeg;\n    if (bearingDeg > 270) {\n      normalizedBearingDeb = bearingDeg - 270;\n    } else if (bearingDeg > 180) {\n      normalizedBearingDeb = bearingDeg - 180;\n    }\n    let bearingDegHippodromeDots = this.coordinateConverter.bearingToCartesian(firstP.getPosition(), secP.getPosition());\n    if (bearingDegHippodromeDots > 180) {\n      bearingDegHippodromeDots = this.coordinateConverter.bearingToCartesian(secP.getPosition(), firstP.getPosition());\n    }\n    let fixedBearingDeg =\n      bearingDegHippodromeDots > normalizedBearingDeb\n        ? bearingDegHippodromeDots - normalizedBearingDeb\n        : normalizedBearingDeb - bearingDegHippodromeDots;\n\n    if (bearingDeg > 270) {\n      fixedBearingDeg = bearingDeg - bearingDegHippodromeDots;\n    }\n\n    const distanceMeters = Math.abs(GeoUtilsService.distance(midPointCartesian3, toPosition));\n    const radiusWidth = Math.sin(Cesium.Math.toRadians(fixedBearingDeg)) * distanceMeters;\n\n    this.hippodromeProps.width = Math.abs(radiusWidth) * 2;\n    this.createHeightEditPoints();\n    this.updatePointsLayer(...this.positions);\n    this.updateHippdromeLayer();\n  }\n\n  moveShape(startMovingPosition: Cartesian3, draggedToPosition: Cartesian3) {\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = startMovingPosition;\n    }\n\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, draggedToPosition);\n    this.getRealPoints().forEach(point => {\n      const newPos = GeoUtilsService.addDeltaToPosition(point.getPosition(), delta, true);\n      point.setPosition(newPos);\n    });\n    this.createHeightEditPoints();\n    this.updatePointsLayer(...this.positions);\n    this.updateHippdromeLayer();\n    this.lastDraggedToPosition = draggedToPosition;\n  }\n\n  endMoveShape() {\n    this.lastDraggedToPosition = undefined;\n    this.createHeightEditPoints();\n    this.positions.forEach(point => this.updatePointsLayer(point));\n    this.updateHippdromeLayer();\n  }\n\n  endMovePoint() {\n    this.createHeightEditPoints();\n    this.updatePointsLayer(...this.positions);\n  }\n\n  moveTempMovingPoint(toPosition: Cartesian3) {\n    if (this.movingPoint) {\n      this.movePoint(toPosition, this.movingPoint);\n    }\n  }\n\n  removePoint(pointToRemove: EditPoint) {\n    this.removePosition(pointToRemove);\n    this.positions.filter(p => p.isVirtualEditPoint()).forEach(p => this.removePosition(p));\n  }\n\n  addLastPoint(position: Cartesian3) {\n    this.done = true;\n    this.removePosition(this.movingPoint); // remove movingPoint\n    this.movingPoint = null;\n  }\n\n  getRealPositions(): Cartesian3[] {\n    return this.getRealPoints().map(position => position.getPosition());\n  }\n\n  getRealPositionsCallbackProperty() {\n    return new Cesium.CallbackProperty(this.getRealPositions.bind(this), false);\n  }\n\n  getRealPoints(): EditPoint[] {\n    return this.positions.filter(position => !position.isVirtualEditPoint());\n  }\n\n  getWidth(): number {\n    return this.hippodromeProps.width;\n  }\n\n  getPositions(): Cartesian3[] {\n    return this.positions.map(position => position.getPosition());\n  }\n\n  private removePosition(point: EditPoint) {\n    const index = this.positions.findIndex(p => p === point);\n    if (index < 0) {\n      return;\n    }\n    this.positions.splice(index, 1);\n    this.pointsLayer.remove(point.getId());\n  }\n\n  private updatePointsLayer(...point: EditPoint[]) {\n    point.forEach(p => this.pointsLayer.update(p, p.getId()));\n  }\n\n  private updateHippdromeLayer() {\n    this.hippodromeLayer.update(this, this.id);\n  }\n\n  dispose() {\n    this.hippodromeLayer.remove(this.id);\n\n    this.positions.forEach(editPoint => {\n      this.pointsLayer.remove(editPoint.getId());\n    });\n    if (this.movingPoint) {\n      this.pointsLayer.remove(this.movingPoint.getId());\n      this.movingPoint = undefined;\n    }\n    this.positions.length = 0;\n  }\n\n  getPointsCount(): number {\n    return this.positions.length;\n  }\n\n  getId() {\n    return this.id;\n  }\n}\n","import { publish, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from '../../../models/edit-point';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { PolylinesManagerService } from './polylines-manager.service';\nimport { ClampTo3DOptions, PolylineEditOptions, PolylineProps } from '../../../models/polyline-edit-options';\nimport { PointProps } from '../../../models/point-edit-options';\nimport { PolylineEditUpdate } from '../../../models/polyline-edit-update';\nimport { PolylineEditorObservable } from '../../../models/polyline-editor-observable';\nimport { EditPolyline } from '../../../models';\nimport { LabelProps } from '../../../models/label-props';\nimport { debounce, generateKey } from '../../utils';\nimport { CesiumService } from '../../../../angular-cesium';\n\nexport const DEFAULT_POLYLINE_OPTIONS: PolylineEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  addLastPointEvent: CesiumEvent.LEFT_DOUBLE_CLICK,\n  removePointEvent: CesiumEvent.RIGHT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  allowDrag: true,\n  pointProps: {\n    color: Cesium.Color.WHITE.withAlpha(0.95),\n    outlineColor: Cesium.Color.BLACK.withAlpha(0.5),\n    outlineWidth: 1,\n    pixelSize: 15,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\n  },\n  polylineProps: {\n    material: () => Cesium.Color.BLACK,\n    width: 3,\n    clampToGround: false,\n    zIndex: 0,\n    classificationType: Cesium.ClassificationType.BOTH,\n  },\n  clampHeightTo3D: false,\n  clampHeightTo3DOptions: {\n    clampToTerrain: false,\n    clampMostDetailed: true,\n    clampToHeightPickWidth: 2,\n  },\n};\n\n/**\n * Service for creating editable polylines\n *\n *  * You must provide `PolylineEditorService` yourself.\n * PolygonsEditorService works together with `<polylines-editor>` component. Therefor you need to create `<polylines-editor>`\n * for each `PolylineEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `PolylineEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `PolylineEditorObservable`.\n * + To stop editing call `dsipose()` from the `PolylineEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over editted shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `PolylineEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n * usage:\n * ```typescript\n *  // Start creating polyline\n *  const editing$ = polylinesEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit polyline from existing polyline cartesian3 positions\n *  const editing$ = this.polylinesEditor.edit(initialPos);\n *\n * ```\n */\n@Injectable()\nexport class PolylinesEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<PolylineEditUpdate>();\n  private updatePublisher = publish<PolylineEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private polylinesManager: PolylinesManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n  private cesiumScene;\n\n  private clampPointsDebounced = debounce((id, clampHeightTo3D: boolean, clampHeightTo3DOptions) => {\n    this.clampPoints(id, clampHeightTo3D, clampHeightTo3DOptions);\n  }, 300);\n\n  init(mapEventsManager: MapEventsManagerService,\n       coordinateConverter: CoordinateConverter,\n       cameraService: CameraService,\n       polylinesManager: PolylinesManagerService,\n       cesiumViewer: CesiumService) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.polylinesManager = polylinesManager;\n    this.updatePublisher.connect();\n\n    this.cesiumScene = cesiumViewer.getScene();\n  }\n\n  onUpdate(): Observable<PolylineEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  private clampPoints(id, clampHeightTo3D: boolean, { clampToTerrain, clampMostDetailed, clampToHeightPickWidth }: ClampTo3DOptions) {\n    if (clampHeightTo3D && clampMostDetailed) {\n      const polyline = this.polylinesManager.get(id);\n      const points = polyline.getPoints();\n\n      if (!clampToTerrain) {\n        // 3dTiles\n        points.forEach(point => {\n          point.setPosition(this.cesiumScene.clampToHeight(point.getPosition(), undefined, clampToHeightPickWidth));\n        });\n      } else {\n        const cartographics = points.map(point => this.coordinateConverter.cartesian3ToCartographic(point.getPosition()));\n        const promise = Cesium.sampleTerrain(this.cesiumScene.terrainProvider, 11, cartographics);\n        Cesium.when(promise, function (updatedPositions) {\n          points.forEach((point, index) => {\n            point.setPosition(Cesium.Cartographic.toCartesian(updatedPositions[index]));\n          });\n        });\n      }\n    }\n  }\n\n\n  private screenToPosition(cartesian2, clampHeightTo3D: boolean, {clampToHeightPickWidth, clampToTerrain}: ClampTo3DOptions) {\n    const cartesian3 = this.coordinateConverter.screenToCartesian3(cartesian2);\n\n    // If cartesian3 is undefined then the point inst on the globe\n    if (clampHeightTo3D && cartesian3) {\n      const globePositionPick = () => {\n        const ray = this.cameraService.getCamera().getPickRay(cartesian2);\n        return this.cesiumScene.globe.pick(ray, this.cesiumScene);\n      };\n\n      // is terrain?\n      if (clampToTerrain) {\n        return globePositionPick();\n      } else {\n        const cartesian3PickPosition = this.cesiumScene.pickPosition(cartesian2);\n        const latLon = CoordinateConverter.cartesian3ToLatLon(cartesian3PickPosition);\n        if (latLon.height < 0) {// means nothing picked -> Validate it\n          return globePositionPick();\n        }\n        return this.cesiumScene.clampToHeight(cartesian3PickPosition, undefined, clampToHeightPickWidth);\n      }\n    }\n\n    return cartesian3;\n  }\n\n  create(options = DEFAULT_POLYLINE_OPTIONS, eventPriority = 100): PolylineEditorObservable {\n    const positions: Cartesian3[] = [];\n    const id = generateKey();\n    const polylineOptions = this.setOptions(options);\n\n    const clientEditSubject = new BehaviorSubject<PolylineEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      positions,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      polylineOptions: polylineOptions,\n    });\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n      pickConfig: options.pickConfiguration,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: polylineOptions.addPointEvent,\n      modifier: polylineOptions.addPointModifier,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n      pickConfig: options.pickConfiguration,\n    });\n    const addLastPointRegistration = this.mapEventsManager.register({\n      event: polylineOptions.addLastPointEvent,\n      modifier: polylineOptions.addLastPointModifier,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n      pickConfig: options.pickConfiguration,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration, addLastPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id);\n\n    mouseMoveRegistration.subscribe(({ movement: { endPosition } }) => {\n      const position = this.screenToPosition(endPosition, polylineOptions.clampHeightTo3D, polylineOptions.clampHeightTo3DOptions);\n      if (position) {\n        this.updateSubject.next({\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.CREATE,\n          updatedPosition: position,\n          editAction: EditActions.MOUSE_MOVE,\n        });\n      }\n    });\n\n    addPointRegistration.subscribe(({ movement: { endPosition } }) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.screenToPosition(endPosition, polylineOptions.clampHeightTo3D, polylineOptions.clampHeightTo3DOptions);\n      if (!position) {\n        return;\n      }\n      const allPositions = this.getPositions(id);\n      if (allPositions.find((cartesian) => cartesian.equals(position))) {\n        return;\n      }\n      const updateValue = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.CREATE,\n        updatedPosition: position,\n        editAction: EditActions.ADD_POINT,\n      };\n      this.updateSubject.next(updateValue);\n      clientEditSubject.next({\n        ...updateValue,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n      });\n      if (polylineOptions.maximumNumberOfPoints && allPositions.length + 1 === polylineOptions.maximumNumberOfPoints) {\n        finishedCreate = this.switchToEditMode(\n          id,\n          position,\n          clientEditSubject,\n          positions,\n          eventPriority,\n          polylineOptions,\n          editorObservable,\n          finishedCreate);\n      }\n    });\n\n    addLastPointRegistration.subscribe(({ movement: { endPosition } }) => {\n      const position = this.screenToPosition(endPosition, polylineOptions.clampHeightTo3D, polylineOptions.clampHeightTo3DOptions);\n      if (!position) {\n        return;\n      }\n      // position already added by addPointRegistration\n      finishedCreate = this.switchToEditMode(\n        id,\n        position,\n        clientEditSubject,\n        positions,\n        eventPriority,\n        polylineOptions,\n        editorObservable,\n        finishedCreate);\n    });\n\n    return editorObservable;\n  }\n\n  private switchToEditMode(id,\n                           position,\n                           clientEditSubject,\n                           positions: Cartesian3[],\n                           eventPriority,\n                           polylineOptions,\n                           editorObservable,\n                           finishedCreate: boolean) {\n    const update = {\n      id,\n      positions: this.getPositions(id),\n      editMode: EditModes.CREATE,\n      updatedPosition: position,\n      editAction: EditActions.ADD_LAST_POINT,\n    };\n    this.updateSubject.next(update);\n    clientEditSubject.next({\n      ...update,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n    });\n\n    const changeMode = {\n      id,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.CHANGE_TO_EDIT,\n    };\n    this.updateSubject.next(changeMode);\n    clientEditSubject.next(changeMode);\n    if (this.observablesMap.has(id)) {\n      this.observablesMap.get(id).forEach(registration => registration.dispose());\n    }\n    this.observablesMap.delete(id);\n    this.editPolyline(id, positions, eventPriority, clientEditSubject, polylineOptions, editorObservable);\n    finishedCreate = true;\n    return finishedCreate;\n  }\n\n  edit(positions: Cartesian3[], options = DEFAULT_POLYLINE_OPTIONS, priority = 100): PolylineEditorObservable {\n    if (positions.length < 2) {\n      throw new Error('Polylines editor error edit(): polyline should have at least 2 positions');\n    }\n    const id = generateKey();\n    const polylineOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<PolylineEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT\n    });\n    const update = {\n      id,\n      positions: positions,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      polylineOptions: polylineOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n    });\n    return this.editPolyline(\n      id,\n      positions,\n      priority,\n      editSubject,\n      polylineOptions\n    );\n  }\n\n  private editPolyline(id: string,\n                       positions: Cartesian3[],\n                       priority: number,\n                       editSubject: Subject<PolylineEditUpdate>,\n                       options: PolylineEditOptions,\n                       editObservable?: PolylineEditorObservable) {\n    this.clampPoints(id, options.clampHeightTo3D, options.clampHeightTo3DOptions);\n\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: options.dragPointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      pickConfig: options.pickConfiguration,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    const pointRemoveRegistration = this.mapEventsManager.register({\n      event: options.removePointEvent,\n      modifier: options.removePointModifier,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      pickConfig: options.pickConfiguration,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: options.dragShapeEvent,\n        entityType: EditPolyline,\n        pick: PickOptions.PICK_FIRST,\n        pickConfig: options.pickConfiguration,\n        priority,\n        pickFilter: entity => id === entity.editedEntityId,\n      });\n    }\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({ movement: { drop } }) => this.polylinesManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\n        .subscribe(({ movement: { startPosition, endPosition, drop }, entities }) => {\n          const endDragPosition = this.screenToPosition(endPosition, false, options.clampHeightTo3DOptions);\n          const startDragPosition = this.screenToPosition(startPosition, false, options.clampHeightTo3DOptions);\n          if (!endDragPosition) {\n            return;\n          }\n\n          const update = {\n            id,\n            positions: this.getPositions(id),\n            editMode: EditModes.EDIT,\n            updatedPosition: endDragPosition,\n            draggedPosition: startDragPosition,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n            positions: this.getPositions(id),\n            points: this.getPoints(id),\n          });\n        });\n    }\n\n    pointDragRegistration.pipe(\n      tap(({ movement: { drop } }) => this.polylinesManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\n      .subscribe(({ movement: { endPosition, drop }, entities }) => {\n        const position = this.screenToPosition(endPosition, options.clampHeightTo3D, options.clampHeightTo3DOptions);\n        if (!position) {\n          return;\n        }\n        const point: EditPoint = entities[0];\n\n        const update = {\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.EDIT,\n          updatedPosition: position,\n          updatedPoint: point,\n          editAction: drop ? EditActions.DRAG_POINT_FINISH : EditActions.DRAG_POINT,\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n          positions: this.getPositions(id),\n          points: this.getPoints(id),\n        });\n\n        this.clampPointsDebounced(id, options.clampHeightTo3D, options.clampHeightTo3DOptions);\n      });\n\n    pointRemoveRegistration.subscribe(({ entities }) => {\n      const point: EditPoint = entities[0];\n      const allPositions = [...this.getPositions(id)];\n      if (allPositions.length < 3) {\n        return;\n      }\n      const index = allPositions.findIndex(position => point.getPosition().equals(position as Cartesian3));\n      if (index < 0) {\n        return;\n      }\n\n      const update = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.EDIT,\n        updatedPoint: point,\n        editAction: EditActions.REMOVE_POINT,\n      };\n      this.updateSubject.next(update);\n      editSubject.next({\n        ...update,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n      });\n\n      this.clampPoints(id, options.clampHeightTo3D, options.clampHeightTo3DOptions);\n    });\n\n    const observables = [pointDragRegistration, pointRemoveRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n    this.observablesMap.set(id, observables);\n    return this.createEditorObservable(editSubject, id);\n  }\n\n  private setOptions(options: PolylineEditOptions) {\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_POLYLINE_OPTIONS));\n    const polylineOptions: PolylineEditOptions = Object.assign(defaultClone, options);\n    polylineOptions.pointProps = {...DEFAULT_POLYLINE_OPTIONS.pointProps, ...options.pointProps};\n    polylineOptions.polylineProps = {...DEFAULT_POLYLINE_OPTIONS.polylineProps, ...options.polylineProps};\n    polylineOptions.clampHeightTo3DOptions = {...DEFAULT_POLYLINE_OPTIONS.clampHeightTo3DOptions, ...options.clampHeightTo3DOptions};\n\n    if (options.clampHeightTo3D) {\n      if (!this.cesiumScene.pickPositionSupported || !this.cesiumScene.clampToHeightSupported) {\n        throw new Error(`Cesium pickPosition and clampToHeight must be supported to use clampHeightTo3D`);\n      }\n\n      if (this.cesiumScene.pickTranslucentDepth) {\n        console.warn(`Cesium scene.pickTranslucentDepth must be false in order to make the editors work properly on 3D`);\n      }\n\n      if (polylineOptions.pointProps.color.alpha === 1 || polylineOptions.pointProps.outlineColor.alpha === 1) {\n        console.warn('Point color and outline color must have alpha in order to make the editor work properly on 3D');\n      }\n\n      polylineOptions.allowDrag = false;\n      polylineOptions.polylineProps.clampToGround = true;\n      polylineOptions.pointProps.heightReference = polylineOptions.clampHeightTo3DOptions.clampToTerrain ?\n        Cesium.HeightReference.CLAMP_TO_GROUND : Cesium.HeightReference.RELATIVE_TO_GROUND;\n      polylineOptions.pointProps.disableDepthTestDistance = Number.POSITIVE_INFINITY;\n    }\n    return polylineOptions;\n  }\n\n\n  private createEditorObservable(observableToExtend: any, id: string): PolylineEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      });\n    };\n\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n      });\n    };\n\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n      });\n    };\n\n    observableToExtend.setManually = (points: {\n      position: Cartesian3,\n      pointProp?: PointProps\n    }[] | Cartesian3[], polylineProps?: PolylineProps) => {\n      const polyline = this.polylinesManager.get(id);\n      polyline.setManually(points, polylineProps);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: any) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      });\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      });\n    };\n    observableToExtend.getCurrentPoints = () => this.getPoints(id);\n\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n\n    observableToExtend.getLabels = (): LabelProps[] => this.polylinesManager.get(id).labels;\n\n    return observableToExtend as PolylineEditorObservable;\n  }\n\n  private getPositions(id: string) {\n    const polyline = this.polylinesManager.get(id);\n    return polyline.getRealPositions();\n  }\n\n  private getPoints(id: string) {\n    const polyline = this.polylinesManager.get(id);\n    return polyline.getRealPoints();\n  }\n}\n","import { CoordinateConverter } from './../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { AcLayerComponent } from './../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Injectable } from '@angular/core';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { PolygonEditOptions } from '../../../models/polygon-edit-options';\nimport { EditablePolyline } from '../../../models/editable-polyline';\n\n@Injectable()\nexport class PolylinesManagerService {\n  polylines: Map<string, EditablePolyline> = new Map<string, EditablePolyline>();\n\n  createEditablePolyline(id: string, editPolylinesLayer: AcLayerComponent, editPointsLayer: AcLayerComponent,\n                         coordinateConverter: CoordinateConverter, polylineOptions?: PolygonEditOptions, positions?: Cartesian3[]) {\n    const editablePolyline = new EditablePolyline(\n      id,\n      editPolylinesLayer,\n      editPointsLayer,\n      coordinateConverter,\n      polylineOptions,\n      positions);\n    this.polylines.set(id, editablePolyline\n    );\n  }\n\n  get(id: string): EditablePolyline {\n    return this.polylines.get(id);\n  }\n\n  clear() {\n    this.polylines.forEach(polyline => polyline.dispose());\n    this.polylines.clear();\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { CesiumService } from '../../../angular-cesium/services/cesium/cesium.service';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { PolylinesEditorService } from '../../services/entity-editors/polyline-editor/polylines-editor.service';\nimport { PolylinesManagerService } from '../../services/entity-editors/polyline-editor/polylines-manager.service';\nimport { PolylineEditUpdate } from '../../models/polyline-edit-update';\nimport { EditablePolyline } from '../../models/editable-polyline';\nimport { LabelProps } from '../../models/label-props';\n\n@Component({\n  selector: 'polylines-editor',\n  template: /*html*/ `\n    <ac-layer #editPolylinesLayer acFor=\"let polyline of editPolylines$\" [context]=\"this\">\n      <ac-polyline-desc\n        props=\"{\n        positions: polyline.getPositionsCallbackProperty(),\n        width: polyline.props.width,\n        material: polyline.props.material(),\n        clampToGround: polyline.props.clampToGround,\n        zIndex: polyline.props.zIndex,\n        classificationType: polyline.props.classificationType,\n      }\"\n      >\n      </ac-polyline-desc>\n    </ac-layer>\n\n    <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n      <ac-point-desc\n        props=\"{\n        position: point.getPositionCallbackProperty(),\n        pixelSize: getPointSize(point),\n        color: point.props.color,\n        outlineColor: point.props.outlineColor,\n        outlineWidth: point.props.outlineWidth,\n        show: getPointShow(point),\n        disableDepthTestDistance: point.props.disableDepthTestDistance,\n        heightReference: point.props.heightReference,\n    }\"\n      ></ac-point-desc>\n    </ac-layer>\n\n    <ac-layer #polylineLabelsLayer acFor=\"let polylineLabels of polylineLabels$\" [context]=\"this\">\n      <ac-array-desc acFor=\"let label of polylineLabels.labels\" [idGetter]=\"getLabelId\">\n        <ac-label-primitive-desc\n          props=\"{\n            position: label.position,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            text: label.text,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin,\n            disableDepthTestDistance: label.disableDepthTestDistance,\n        }\"\n        >\n        </ac-label-primitive-desc>\n      </ac-array-desc>\n    </ac-layer>\n  `,\n  providers: [CoordinateConverter, PolylinesManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PolylinesEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: PolylineEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editPolylines$ = new Subject<AcNotification>();\n  public polylineLabels$ = new Subject<AcNotification>();\n\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\n  @ViewChild('editPolylinesLayer') private editPolylinesLayer: AcLayerComponent;\n  @ViewChild('polylineLabelsLayer') private polylineLabelsLayer: AcLayerComponent;\n\n  constructor(\n    private polylinesEditor: PolylinesEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private polylinesManager: PolylinesManagerService,\n    private cesiumService: CesiumService,\n  ) {\n    this.polylinesEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, polylinesManager, this.cesiumService);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.polylinesEditor.onUpdate().subscribe((update: PolylineEditUpdate) => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(polyline: EditablePolyline, update: PolylineEditUpdate, labels?: LabelProps[]) {\n    update.positions = polyline.getRealPositions();\n    update.points = polyline.getRealPoints();\n\n    if (labels) {\n      polyline.labels = labels;\n      this.polylineLabelsLayer.update(polyline, polyline.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    polyline.labels = this.editLabelsRenderFn(update, polyline.labels);\n    this.polylineLabelsLayer.update(polyline, polyline.getId());\n  }\n\n  removeEditLabels(polyline: EditablePolyline) {\n    polyline.labels = [];\n    this.polylineLabelsLayer.remove(polyline.getId());\n  }\n\n  handleCreateUpdates(update: PolylineEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.polylinesManager.createEditablePolyline(\n          update.id,\n          this.editPointsLayer,\n          this.editPolylinesLayer,\n          this.coordinateConverter,\n          update.polylineOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (update.updatedPosition) {\n          polyline.moveTempMovingPoint(update.updatedPosition);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (update.updatedPosition) {\n          polyline.addPoint(update.updatedPosition);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.ADD_LAST_POINT: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (update.updatedPosition) {\n          polyline.addLastPoint(update.updatedPosition);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline) {\n          polyline.dispose();\n          this.removeEditLabels(polyline);\n          this.editLabelsRenderFn = undefined;\n        }\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const polyline = this.polylinesManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(polyline, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const polyline = this.polylinesManager.get(update.id);\n        this.renderEditLabels(polyline, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const polyline = this.polylinesManager.get(update.id);\n        this.renderEditLabels(polyline, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: PolylineEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.polylinesManager.createEditablePolyline(\n          update.id,\n          this.editPointsLayer,\n          this.editPolylinesLayer,\n          this.coordinateConverter,\n          update.polylineOptions,\n          update.positions,\n        );\n        break;\n      }\n      case EditActions.DRAG_POINT: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline && polyline.enableEdit) {\n          polyline.movePoint(update.updatedPosition, update.updatedPoint);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline && polyline.enableEdit) {\n          polyline.movePointFinish(update.updatedPoint);\n\n          if (update.updatedPoint.isVirtualEditPoint()) {\n            polyline.changeVirtualPointToRealPoint(update.updatedPoint);\n            this.renderEditLabels(polyline, update);\n          }\n        }\n        break;\n      }\n      case EditActions.REMOVE_POINT: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline && polyline.enableEdit) {\n          polyline.removePoint(update.updatedPoint);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline) {\n          polyline.enableEdit = false;\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline) {\n          polyline.enableEdit = true;\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline && polyline.enableEdit) {\n          polyline.moveShape(update.draggedPosition, update.updatedPosition);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline && polyline.enableEdit) {\n          polyline.endMoveShape();\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.polylinesManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { EditableHippodrome } from '../../../models/editable-hippodrome';\nimport { HippodromeEditOptions } from '../../../models/hippodrome-edit-options';\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\n\n@Injectable()\nexport class HippodromeManagerService {\n  hippodromes: Map<string, EditableHippodrome> = new Map<string, EditableHippodrome>();\n\n  createEditableHippodrome(id: string, editHippodromeLayer: AcLayerComponent, editPointsLayer: AcLayerComponent,\n                           coordinateConverter: CoordinateConverter, hippodromeEditOptions?: HippodromeEditOptions,\n                           positions?: Cartesian3[]) {\n    const editableHippodrome = new EditableHippodrome(\n      id,\n      editHippodromeLayer,\n      editPointsLayer,\n      coordinateConverter,\n      hippodromeEditOptions,\n      positions);\n    this.hippodromes.set(id, editableHippodrome);\n  }\n\n  get(id: string): EditableHippodrome {\n    return this.hippodromes.get(id);\n  }\n\n  clear() {\n    this.hippodromes.forEach(hippodrome => hippodrome.dispose());\n    this.hippodromes.clear();\n  }\n}\n","import { publish, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from '../../../models/edit-point';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { HippodromeEditOptions } from '../../../models/hippodrome-edit-options';\nimport { HippodromeManagerService } from './hippodrome-manager.service';\nimport { HippodromeEditorObservable } from '../../../models/hippodrome-editor-oboservable';\nimport { HippodromeEditUpdate } from '../../../models/hippodrome-edit-update';\nimport { EditableHippodrome } from '../../../models/editable-hippodrome';\nimport { PointProps } from '../../../models/point-edit-options';\nimport { LabelProps } from '../../../models/label-props';\nimport { generateKey } from '../../utils';\n\nexport const DEFAULT_HIPPODROME_OPTIONS: HippodromeEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  allowDrag: true,\n  hippodromeProps: {\n    fill: true,\n    material: Cesium.Color.CORNFLOWERBLUE.withAlpha(0.4),\n    outline: true,\n    width: 200000.0,\n    outlineWidth: 1,\n    outlineColor: Cesium.Color.WHITE.withAlpha(0.8),\n    classificationType: Cesium.ClassificationType.BOTH,\n    zIndex: 0,\n    shadows: Cesium.ShadowMode.DISABLED,\n  },\n  pointProps: {\n    color: Cesium.Color.WHITE,\n    outlineColor: Cesium.Color.BLACK.withAlpha(0.2),\n    outlineWidth: 1,\n    pixelSize: 13,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\n  },\n};\n\n/**\n * Service for creating editable hippodromes\n *\n * You must provide `HippodromeEditorService` yourself.\n * HippodromeEditorService works together with `<hippodromes-editor>` component. Therefor you need to create `<hippodromes-editor>`\n * for each `PolylineEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `HippodromeEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `HippodromeEditorObservable`.\n * + To stop editing call `dsipose()` from the `HippodromeEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over editted shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `HippodromeEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n *\n * usage:\n * ```typescript\n *  // Start creating hippodrome\n *  const editing$ = hippodromeEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit hippodromes from existing hippodromes cartesian3 positions\n *  const editing$ = this.hippodromeEditor.edit(initialPos);\n *\n * ```\n */\n@Injectable()\nexport class HippodromeEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<HippodromeEditUpdate>();\n  private updatePublisher = publish<HippodromeEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private hippodromeManager: HippodromeManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n\n  init(mapEventsManager: MapEventsManagerService,\n       coordinateConverter: CoordinateConverter,\n       cameraService: CameraService,\n       managerService: HippodromeManagerService) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.hippodromeManager = managerService;\n    this.updatePublisher.connect();\n  }\n\n  onUpdate(): Observable<HippodromeEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  create(options = DEFAULT_HIPPODROME_OPTIONS, eventPriority = 100): HippodromeEditorObservable {\n    const positions: Cartesian3[] = [];\n    const id = generateKey();\n    const hippodromeOptions = this.setOptions(options);\n\n    const clientEditSubject = new BehaviorSubject<HippodromeEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      positions,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      hippodromeOptions: hippodromeOptions,\n    });\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pickConfig: options.pickConfiguration,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: hippodromeOptions.addPointEvent,\n      pickConfig: options.pickConfiguration,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id);\n\n    mouseMoveRegistration.subscribe(({movement: {endPosition}}) => {\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n\n      if (position) {\n        this.updateSubject.next({\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.CREATE,\n          updatedPosition: position,\n          editAction: EditActions.MOUSE_MOVE,\n        });\n      }\n    });\n\n    addPointRegistration.subscribe(({movement: {endPosition}}) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (!position) {\n        return;\n      }\n\n      const allPositions = this.getPositions(id);\n      const isFirstPoint = this.getPositions(id).length === 0;\n\n      const updateValue = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.CREATE,\n        updatedPosition: position,\n        editAction: EditActions.ADD_POINT,\n      };\n      this.updateSubject.next(updateValue);\n      clientEditSubject.next({\n        ...updateValue,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n        width: this.getWidth(id),\n      });\n\n      if (!isFirstPoint) {\n        const changeMode = {\n          id,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.CHANGE_TO_EDIT,\n        };\n        this.updateSubject.next(changeMode);\n        clientEditSubject.next(changeMode);\n        if (this.observablesMap.has(id)) {\n          this.observablesMap.get(id).forEach(registration => registration.dispose());\n        }\n        this.observablesMap.delete(id);\n        this.editHippodrome(id, eventPriority, clientEditSubject, hippodromeOptions, editorObservable);\n        finishedCreate = true;\n      }\n    });\n\n    return editorObservable;\n  }\n\n  edit(positions: Cartesian3[], options = DEFAULT_HIPPODROME_OPTIONS, priority = 100): HippodromeEditorObservable {\n    if (positions.length !== 2) {\n      throw new Error('Hippodrome editor error edit(): polygon should have 2 positions but received ' + positions);\n    }\n    const id = generateKey();\n    const hippodromeEditOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<HippodromeEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT\n    });\n    const update = {\n      id,\n      positions: positions,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      hippodromeOptions: hippodromeEditOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n      width: this.getWidth(id),\n    });\n    return this.editHippodrome(\n      id,\n      priority,\n      editSubject,\n      hippodromeEditOptions\n    );\n  }\n\n  private editHippodrome(id: string,\n                         priority: number,\n                         editSubject: Subject<HippodromeEditUpdate>,\n                         options: HippodromeEditOptions,\n                         editObservable?: HippodromeEditorObservable): HippodromeEditorObservable {\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: options.dragShapeEvent,\n        entityType: EditableHippodrome,\n        pick: PickOptions.PICK_FIRST,\n        pickConfig: options.pickConfiguration,\n        priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: options.dragPointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      pickConfig: options.pickConfiguration,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    pointDragRegistration.pipe(\n      tap(({movement: {drop}}) => this.hippodromeManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\n      .subscribe(({movement: {endPosition, drop}, entities}) => {\n        const position = this.coordinateConverter.screenToCartesian3(endPosition);\n        if (!position) {\n          return;\n        }\n        const point: EditPoint = entities[0];\n\n        const update = {\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.EDIT,\n          updatedPosition: position,\n          updatedPoint: point,\n          editAction: drop ? EditActions.DRAG_POINT_FINISH : EditActions.DRAG_POINT,\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n          positions: this.getPositions(id),\n          points: this.getPoints(id),\n          width: this.getWidth(id),\n        });\n      });\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({movement: {drop}}) => this.hippodromeManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\n        .subscribe(({movement: {startPosition, endPosition, drop}, entities}) => {\n          const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n          const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n          if (!endDragPosition) {\n            return;\n          }\n\n          const update = {\n            id,\n            positions: this.getPositions(id),\n            editMode: EditModes.EDIT,\n            updatedPosition: endDragPosition,\n            draggedPosition: startDragPosition,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n            positions: this.getPositions(id),\n            points: this.getPoints(id),\n            width: this.getWidth(id),\n          });\n        });\n    }\n\n    const observables = [pointDragRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n\n    this.observablesMap.set(id, observables);\n    return this.createEditorObservable(editSubject, id);\n  }\n\n  private setOptions(options: HippodromeEditOptions): HippodromeEditOptions {\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_HIPPODROME_OPTIONS));\n    const hippodromeOptions = Object.assign(defaultClone, options);\n    hippodromeOptions.hippodromeProps = Object.assign({}, DEFAULT_HIPPODROME_OPTIONS.hippodromeProps, options.hippodromeProps);\n    hippodromeOptions.pointProps = Object.assign({}, DEFAULT_HIPPODROME_OPTIONS.pointProps, options.pointProps);\n    return hippodromeOptions;\n  }\n\n\n  private createEditorObservable(observableToExtend: any, id: string): HippodromeEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      });\n    };\n\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n      });\n    };\n\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n      });\n    };\n\n    observableToExtend.setManually = (firstPosition: Cartesian3,\n                                      secondPosition: Cartesian3,\n                                      widthMeters: number,\n                                      firstPointProp?: PointProps,\n                                      secondPointProp?: PointProps) => {\n      const firstP = new EditPoint(id, firstPosition, firstPointProp ? firstPointProp : DEFAULT_HIPPODROME_OPTIONS.pointProps);\n      const secP = new EditPoint(id, secondPosition, secondPointProp ? secondPointProp : DEFAULT_HIPPODROME_OPTIONS.pointProps);\n\n      const hippodrome = this.hippodromeManager.get(id);\n      hippodrome.setPointsManually([firstP, secP], widthMeters);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: any) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      });\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      });\n    };\n\n    observableToExtend.getCurrentPoints = () => this.getPoints(id);\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n    observableToExtend.getLabels = (): LabelProps[] => this.hippodromeManager.get(id).labels;\n    observableToExtend.getCurrentWidth = (): number => this.getWidth(id);\n\n    return observableToExtend as HippodromeEditorObservable;\n  }\n\n  private getPositions(id: any) {\n    const hippodrome = this.hippodromeManager.get(id);\n    return hippodrome.getRealPositions();\n  }\n\n  private getPoints(id: any) {\n    const hippodrome = this.hippodromeManager.get(id);\n    return hippodrome.getRealPoints();\n  }\n\n  private getWidth(id: string) {\n    const hippodrome = this.hippodromeManager.get(id);\n    return hippodrome.getWidth();\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { HippodromeManagerService } from '../../services/entity-editors/hippodrome-editor/hippodrome-manager.service';\nimport { HippodromeEditorService } from '../../services/entity-editors/hippodrome-editor/hippodrome-editor.service';\nimport { HippodromeEditUpdate } from '../../models/hippodrome-edit-update';\nimport { LabelProps } from '../../models/label-props';\nimport { EditableHippodrome } from '../../models/editable-hippodrome';\n\n@Component({\n  selector: 'hippodrome-editor',\n  template: /*html*/ `\n      <ac-layer #editHippodromesLayer acFor=\"let hippodrome of editHippodromes$\" [context]=\"this\">\n          <ac-corridor-desc props=\"{\n            positions: hippodrome.getRealPositionsCallbackProperty(),\n            cornerType: Cesium.CornerType.ROUNDED,\n            material: hippodrome.hippodromeProps.material,\n            width : hippodrome.hippodromeProps.width,\n            outline: hippodrome.hippodromeProps.outline,\n            outlineColor: hippodrome.hippodromeProps.outlineColor,\n            outlineWidth: hippodrome.hippodromeProps.outlineWidth,\n            height: 0,\n            classificationType: hippodrome.hippodromeProps.classificationType,\n            zIndex: hippodrome.hippodromeProps.zIndex,\n            shadows: hippodrome.hippodromeProps.shadows,\n    }\">\n          </ac-corridor-desc>\n\n          <ac-array-desc acFor=\"let label of hippodrome.labels\" [idGetter]=\"getLabelId\">\n              <ac-label-primitive-desc props=\"{\n            position: label.position,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            text: label.text,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin,\n            disableDepthTestDistance: label.disableDepthTestDistance,\n        }\">\n              </ac-label-primitive-desc>\n          </ac-array-desc>\n      </ac-layer>\n\n      <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n          <ac-point-desc props=\"{\n         position: point.getPositionCallbackProperty(),\n         pixelSize: getPointSize(point),\n         color: point.props.color,\n         outlineColor: point.props.outlineColor,\n         outlineWidth: point.props.outlineWidth,\n         show: getPointShow(point),\n         disableDepthTestDistance: point.props.disableDepthTestDistance,\n         heightReference: point.props.heightReference,\n    }\">\n          </ac-point-desc>\n      </ac-layer>\n  `,\n  providers: [CoordinateConverter, HippodromeManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HippodromeEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: HippodromeEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editHippodromes$ = new Subject<AcNotification>();\n\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\n  @ViewChild('editHippodromesLayer') private editHippodromesLayer: AcLayerComponent;\n\n  constructor(\n    private hippodromesEditor: HippodromeEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private hippodromesManager: HippodromeManagerService,\n  ) {\n    this.hippodromesEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, hippodromesManager);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.hippodromesEditor.onUpdate().subscribe((update: HippodromeEditUpdate) => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(hippodrome: EditableHippodrome, update: HippodromeEditUpdate, labels?: LabelProps[]) {\n    update.positions = hippodrome.getRealPositions();\n    update.points = hippodrome.getRealPoints();\n\n    if (labels) {\n      hippodrome.labels = labels;\n      this.editHippodromesLayer.update(hippodrome, hippodrome.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    hippodrome.labels = this.editLabelsRenderFn(update, hippodrome.labels);\n    this.editHippodromesLayer.update(hippodrome, hippodrome.getId());\n  }\n\n  removeEditLabels(hippodrome: EditableHippodrome) {\n    hippodrome.labels = [];\n    this.editHippodromesLayer.update(hippodrome, hippodrome.getId());\n  }\n\n  handleCreateUpdates(update: HippodromeEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.hippodromesManager.createEditableHippodrome(\n          update.id,\n          this.editPointsLayer,\n          this.editHippodromesLayer,\n          this.coordinateConverter,\n          update.hippodromeOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (update.updatedPosition) {\n          hippodrome.moveTempMovingPoint(update.updatedPosition);\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (update.updatedPosition) {\n          hippodrome.addPoint(update.updatedPosition);\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome) {\n          hippodrome.dispose();\n          this.removeEditLabels(hippodrome);\n        }\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(hippodrome, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        this.renderEditLabels(hippodrome, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        this.renderEditLabels(hippodrome, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: HippodromeEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.hippodromesManager.createEditableHippodrome(\n          update.id,\n          this.editPointsLayer,\n          this.editHippodromesLayer,\n          this.coordinateConverter,\n          update.hippodromeOptions,\n          update.positions,\n        );\n        break;\n      }\n      case EditActions.DRAG_POINT: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome && hippodrome.enableEdit) {\n          hippodrome.movePoint(update.updatedPosition, update.updatedPoint);\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome && hippodrome.enableEdit) {\n          hippodrome.endMovePoint();\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome) {\n          hippodrome.enableEdit = false;\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome) {\n          hippodrome.enableEdit = true;\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome && hippodrome.enableEdit) {\n          hippodrome.moveShape(update.draggedPosition, update.updatedPosition);\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome && hippodrome.enableEdit) {\n          hippodrome.endMoveShape();\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.hippodromesManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { fromEvent as observableFromEvent, Observable, Subject } from 'rxjs';\n\nimport { map, merge, takeUntil, tap } from 'rxjs/operators';\nimport { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Vec2 } from '../../angular-cesium/models/vec2';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapsManagerService } from '../../angular-cesium/services/maps-manager/maps-manager.service';\n\nexport interface IconDragEvent {\n  initialScreenPosition: Vec2;\n  screenPosition: Vec2;\n  mapPosition: Cartesian3;\n  drop: boolean;\n}\n\n/**\n * The Service is used to preform, handle and subscribe to icon dragging when using the `DraggableToMapDirective`.\n * For more info check `DraggableToMapDirective` docs.\n */\n\n@Injectable()\nexport class DraggableToMapService {\n\n  private coordinateConverter: CoordinateConverter;\n  private dragObservable: Observable<IconDragEvent>;\n  private stopper: Subject<any>;\n  private mainSubject = new Subject<IconDragEvent>();\n\n  constructor(@Inject(DOCUMENT) private document: any, private mapsManager: MapsManagerService) {\n  }\n\n  setCoordinateConverter(coordinateConverter: CoordinateConverter) {\n    this.coordinateConverter = coordinateConverter;\n  }\n\n  drag(imageSrc: string, style?: any) {\n    if (!this.coordinateConverter) {\n      const mapComponent = this.mapsManager.getMap();\n      if (mapComponent) {\n        this.coordinateConverter = mapComponent.getCoordinateConverter();\n      }\n    }\n    this.cancel();\n    const imgElement = document.createElement('img');\n    imgElement.src = imageSrc;\n    imgElement.style.position = 'fixed';\n    imgElement.style.visibility = 'hidden';\n    imgElement.style.width = '30px';\n    imgElement.style.height = '30px';\n    imgElement.style['user-drag'] = 'none';\n    imgElement.style['user-select'] = 'none';\n    imgElement.style['-moz-user-select'] = 'none';\n    imgElement.style['-webkit-user-drag'] = 'none';\n    imgElement.style['-webkit-user-select'] = 'none';\n    imgElement.style['-ms-user-select'] = 'none';\n    Object.assign(imgElement.style, style);\n    document.body.appendChild(imgElement);\n\n    this.createDragObservable();\n    this.dragObservable.subscribe(\n      (e) => {\n        imgElement.style.visibility = 'visible';\n        imgElement.style.left = e.screenPosition.x - imgElement.clientWidth / 2 + 'px';\n        imgElement.style.top = e.screenPosition.y - imgElement.clientHeight / 2 + 'px';\n        this.mainSubject.next(e);\n        if (e.drop) {\n          imgElement.remove();\n        }\n      },\n      (e: any) => {\n        imgElement.remove();\n      },\n      () => {\n        imgElement.remove();\n      }\n    );\n  }\n\n  dragUpdates(): Observable<IconDragEvent> {\n    return this.mainSubject;\n  }\n\n  cancel() {\n    if (this.stopper) {\n      this.stopper.next(true);\n      this.stopper = undefined;\n      this.dragObservable = undefined;\n    }\n  }\n\n  private createDragObservable() {\n    const stopper = new Subject();\n    const dropSubject = new Subject<any>();\n    const pointerUp = observableFromEvent(document, 'pointerup');\n    const pointerMove = observableFromEvent(document, 'pointermove');\n\n    let dragStartPositionX: number;\n    let dragStartPositionY: number;\n    let lastMove: any;\n    const moveObservable = pointerMove.pipe(map((e: any) => {\n        dragStartPositionX = dragStartPositionX ? dragStartPositionX : e.x;\n        dragStartPositionY = dragStartPositionY ? dragStartPositionY : e.y;\n        lastMove = {\n          drop: false,\n          initialScreenPosition: {\n            x: dragStartPositionX,\n            y: dragStartPositionY,\n          },\n          screenPosition: {\n            x: e.x,\n            y: e.y,\n          },\n          mapPosition: this.coordinateConverter ?\n            this.coordinateConverter.screenToCartesian3({x: e.x, y: e.y}) : undefined,\n        };\n        return lastMove;\n      }),\n      takeUntil(pointerUp),\n      tap(undefined, undefined, () => {\n        if (lastMove) {\n          const dropEvent = Object.assign({}, lastMove);\n          dropEvent.drop = true;\n          dropSubject.next(dropEvent);\n        }\n      }), );\n\n    this.dragObservable = moveObservable.pipe(merge(dropSubject), takeUntil(stopper), );\n    this.stopper = stopper;\n  }\n}\n","import { Directive, ElementRef, HostListener, Input, OnInit } from '@angular/core';\nimport { DraggableToMapService } from '../services/draggable-to-map.service';\n\n/**\n * This directive is used to allow dragging of icons from outside the map over the map\n * while being notified of the dragging position and drop position with an observable exposed from `DraggableToMapService`.\n * @Input {src: string, style?: any} | string -\n * the [src: string | string] should be the image src of the dragged image.\n * The style is an optional style object for the image.\n *\n * example:\n * ```\n * <a href=\"...\" class=\"...\" [draggableToMap]=\"{src: '../assets/GitHub-Mark-Light.png', style: {width: '50px', height: '50px'}}\">\n *     <img class=\"github\" src=\"../assets/GitHub-Mark-Light.png\">\n * </a>\n * ```\n *\n * In order the get notified of the dragging location  and drop state subscribe to `DraggableToMapService.dragUpdates()`\n * ```\n *  this.iconDragService.dragUpdates().subscribe(e => console.log(e));\n * ```\n *\n * In order the cancel dragging use `DraggableToMapService.cancel()`\n * ```\n *  this.iconDragService.cancel();\n * ```\n */\n\n@Directive({selector: '[draggableToMap]'})\nexport class DraggableToMapDirective implements OnInit {\n  @Input() draggableToMap: { src: string, style?: any } | string;\n  private src: string;\n  private style: any;\n\n  constructor(el: ElementRef, private iconDragService: DraggableToMapService) {\n    el.nativeElement.style['user-drag'] = 'none';\n    el.nativeElement.style['user-select'] = 'none';\n    el.nativeElement.style['-moz-user-select'] = 'none';\n    el.nativeElement.style['-webkit-user-drag'] = 'none';\n    el.nativeElement.style['-webkit-user-select'] = 'none';\n    el.nativeElement.style['-ms-user-select'] = 'none';\n  }\n\n  ngOnInit(): void {\n    if (typeof this.draggableToMap === 'string') {\n      this.src = this.draggableToMap;\n    } else {\n      this.src = this.draggableToMap.src;\n      this.style = this.draggableToMap.style;\n    }\n  }\n\n  @HostListener('mousedown')\n  onMouseDown() {\n    this.iconDragService.drag(this.src, this.style);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { fromEvent as observableFromEvent, Subscription, Observable } from 'rxjs';\nimport { switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { CesiumService } from '../../../../angular-cesium/services/cesium/cesium.service';\n\n\n/**\n * Toolbar widget, act as a container for ac-toolbar-button components\n * allowing drag configuration and passing `toolbarClass` as attributes\n *\n * Usage:\n * ```\n * <ac-toolbar [allowDrag]=\"true\" (onDrag)=\"handleDrag($event)\">\n <ac-toolbar-button [iconUrl]=\"'assets/home-icon.svg'\" (onClick)=\"goHome()\">\n </ac-toolbar-button>\n <ac-toolbar-button [iconUrl]=\"'assets/explore-icon.svg'\" (onClick)=\"rangeAndBearing()\">\n </ac-toolbar-button>\n </ac-toolbar>\n * ```\n *\n */\n@Component(\n  {\n    selector: 'ac-toolbar',\n    template: `\n        <div class=\"{{toolbarClass}}\">\n            <div *ngIf=\"allowDrag\">\n                <ac-toolbar-button>\n                    <ac-drag-icon></ac-drag-icon>\n                </ac-toolbar-button>\n            </div>\n\n            <ng-content></ng-content>\n        </div>\n    `,\n    styles: [`\n        :host {\n            position: absolute;\n            top: 20px;\n            left: 20px;\n            width: 20px;\n            height: 20px;\n            z-index: 999;\n            -webkit-user-drag: none;\n        }\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n  }\n)\nexport class AcToolbarComponent implements OnInit, OnChanges, OnDestroy {\n  @Input()\n  toolbarClass: string;\n  @Input()\n  allowDrag = true;\n  @Output()\n  onDrag = new EventEmitter<MouseEvent>();\n\n  dragStyle = {\n    'height.px': 20,\n    'width.px': 20,\n  };\n\n  private mouseDown$: Observable<MouseEvent>;\n  private mouseMove$: Observable<MouseEvent>;\n  private mouseUp$: Observable<MouseEvent>;\n  private drag$: Observable<MouseEvent>;\n  private dragSubscription: Subscription;\n\n  constructor(private element: ElementRef, private cesiumService: CesiumService) {}\n\n  ngOnInit() {\n    this.cesiumService.getMap().getMapContainer().appendChild(this.element.nativeElement);\n    if (this.allowDrag) {\n      this.listenForDragging();\n    }\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.allowDrag && changes.allowDrag.currentValue && !changes.allowDrag.previousValue) {\n      this.listenForDragging();\n    }\n\n    if (changes.allowDrag && !changes.allowDrag.currentValue && changes.allowDrag.previousValue) {\n      this.dragSubscription.unsubscribe();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.dragSubscription) {\n      this.dragSubscription.unsubscribe();\n    }\n  }\n\n  private listenForDragging() {\n    this.mouseDown$ = this.mouseDown$ || observableFromEvent(this.element.nativeElement, 'mousedown');\n    this.mouseMove$ = this.mouseMove$ || observableFromEvent(document, 'mousemove') as Observable<MouseEvent>;\n    this.mouseUp$ = this.mouseUp$ || observableFromEvent(document, 'mouseup') as Observable<MouseEvent>;\n\n    this.drag$ = this.drag$ ||\n                 this.mouseDown$.pipe(\n                    switchMap(() => this.mouseMove$.pipe(\n                      tap(this.onDrag.emit),\n                      takeUntil(this.mouseUp$)\n                    ))\n                 );\n\n    this.dragSubscription = this.drag$.subscribe((event: MouseEvent) => {\n      this.element.nativeElement.style.left = `${event.x}px`;\n      this.element.nativeElement.style.top = `${event.y}px`;\n    });\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component(\n  {\n    selector: 'ac-drag-icon',\n    template: `\n        <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\"  x=\"0px\" y=\"0px\"  height=\"25\"  width=\"25\"\n\t viewBox=\"0 0 476.737 476.737\" style=\"enable-background:new 0 0 476.737 476.737;\" xml:space=\"preserve\">\n<g>\n\t<g>\n\t\t<path style=\"fill:#010002;\" d=\"M475.498,232.298l-3.401-5.149l-63.565-63.565c-6.198-6.198-16.304-6.198-22.47,0\n\t\t\tc-6.198,6.198-6.198,16.273,0,22.47l36.423,36.423H254.26V54.253l36.423,36.423c6.166,6.198,16.273,6.198,22.47,0\n\t\t\tc6.166-6.198,6.166-16.273,0-22.47L249.588,4.64l-0.159-0.095l-4.99-3.305L238.369,0h-0.064l-6.007,1.24l-4.99,3.305l-0.191,0.095\n\t\t\tl-63.565,63.565c-6.198,6.198-6.198,16.273,0,22.47s16.273,6.198,22.47,0l36.455-36.423v168.225H54.253l36.423-36.423\n\t\t\tc6.198-6.198,6.198-16.273,0-22.47s-16.273-6.198-22.47,0L4.64,227.149l-0.095,0.159l-3.305,4.99L0,238.369v0.064l1.24,6.007\n\t\t\tl3.305,4.958l0.095,0.191l63.565,63.565c6.198,6.198,16.273,6.198,22.47,0c6.198-6.166,6.198-16.273,0-22.47L54.253,254.26\n\t\t\th168.225v168.225l-36.423-36.423c-6.198-6.166-16.273-6.166-22.47,0c-6.198,6.198-6.198,16.304,0,22.47l63.565,63.565l5.149,3.432\n\t\t\tl6.007,1.208h0.064l6.07-1.24l5.149-3.401l63.565-63.565c6.166-6.198,6.166-16.304,0-22.47c-6.198-6.198-16.304-6.198-22.47,0\n\t\t\tl-36.423,36.423V254.26h168.225l-36.423,36.423c-6.166,6.166-6.166,16.273,0,22.47c6.198,6.166,16.304,6.166,22.47,0\n\t\t\tl63.565-63.565l3.432-5.149l1.208-6.007v-0.064L475.498,232.298z\"/>\n\t</g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n</svg>\n    `,\n  }\n)\nexport class DragIconComponent {\n  constructor() {\n  }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n/**\n * Toolbar button widget, act as a single button inside ac-toolbar component\n * Can accepts content components or passing [iconUrl]\n * configure with: `[iconUrl]`,`[buttonClass]`,`[iconClass]`,`(onClick)`\n *\n * Usage:\n * ```\n * <ac-toolbar [allowDrag]=\"true\">\n <ac-toolbar-button [iconUrl]=\"'assets/home-icon.svg'\" (onClick)=\"goHome()\">\n </ac-toolbar-button>\n <ac-toolbar-button [iconUrl]=\"'assets/explore-icon.svg'\" (onClick)=\"rangeAndBearing()\">\n </ac-toolbar-button>\n </ac-toolbar>\n * ```\n *\n */\n@Component(\n  {\n    selector: 'ac-toolbar-button',\n    template: `\n        <div (click)=\"onClick.emit()\" class=\"button-container {{buttonClass}}\">\n            <img *ngIf=\"iconUrl\" [src]=\"iconUrl\" class=\"icon {{iconClass}}\"/>\n            <ng-content></ng-content>\n        </div>\n    `,\n    styles: [`\n        .button-container {\n            border-radius: 1px;\n            background-color: rgba(255, 255, 255, 0.8);\n            height: 30px;\n            width: 30px;\n            padding: 5px;\n            transition: all 0.2s;\n            cursor: pointer;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            flex-direction: column;\n        }\n\n        .button-container:hover {\n            background-color: rgba(255, 255, 255, 0.95);\n        }\n\n        .icon {\n            height: 30px;\n            width: 30px;\n        }\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n  }\n)\nexport class AcToolbarButtonComponent implements OnInit {\n\n  @Input()\n  iconUrl: string;\n\n  @Input()\n  buttonClass: string;\n\n  @Input()\n  iconClass: string;\n\n  @Output()\n  onClick = new EventEmitter();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { PolylineEditorObservable } from '../../models/polyline-editor-observable';\nimport { PolylineEditOptions } from '../../models/polyline-edit-options';\nimport { LabelProps, LabelStyle } from '../../models/label-props';\nimport { PolylineEditUpdate } from '../../models/polyline-edit-update';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { PolylinesEditorService } from '../../services/entity-editors/polyline-editor/polylines-editor.service';\n\n/**\n *\n * Range and bearing component that is used to draw range and bearing on the map.\n * The inputs are used to customize the range and bearing style and behavior.\n * Create component reference and use the `create()` function to start creating R&B on the map.\n * The function receives an optional RangeAndBearingOptions object that defines the created range and bearing style and behavior\n * (on top of the default and global definitions).\n *\n * Usage:\n *\n * my-component.ts:\n *\n * ```\n * \\@ViewChild('rangeAndBearing', {static: false}) private rangeAndBearing: RangeAndBearingComponent; // Get R&B reference\n *  // ...\n * this.rangeAndBearing.create({style: { pointProps: { pixelSize: 12 } }, bearingLabelsStyle: { fillColor: Cesium.Color.GREEN } });\n * ```\n *\n * my-component.html\n * ```\n * <range-and-bearing #rangeAndBearing></range-and-bearing> // Optional inputs defines global style and behavior.\n * ```\n *\n */\n@Component({\n  selector: 'range-and-bearing',\n  template: `\n    <polylines-editor></polylines-editor>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PolylinesEditorService],\n})\nexport class RangeAndBearingComponent {\n  @Input() lineEditOptions?: PolylineEditOptions = {};\n  @Input() labelsStyle?: LabelStyle = {};\n  @Input() distanceLabelsStyle?: LabelStyle = {};\n  @Input() bearingLabelsStyle?: LabelStyle = {};\n  @Input() bearingStringFn?: (value: number) => string;\n  @Input() distanceStringFn?: (value: number) => string;\n  @Input() labelsRenderFn?: (update: PolylineEditUpdate, labels: LabelProps[]) => LabelProps[];\n\n  constructor(private polylineEditor: PolylinesEditorService, private coordinateConverter: CoordinateConverter) {\n  }\n\n  create(\n    {\n      lineEditOptions = {},\n      labelsStyle = {},\n      distanceLabelsStyle = {},\n      bearingLabelsStyle = {},\n      bearingStringFn,\n      distanceStringFn,\n      labelsRenderFn,\n    }: RangeAndBearingOptions = {lineEditOptions: {}, labelsStyle: {}, distanceLabelsStyle: {}, bearingLabelsStyle: {}},\n  ): PolylineEditorObservable {\n    const rnb = this.polylineEditor.create({\n      allowDrag: false,\n      pointProps: {\n        showVirtual: false,\n        pixelSize: 8,\n      },\n      polylineProps: {\n        width: 2,\n      },\n      ...this.lineEditOptions,\n      ...lineEditOptions,\n    });\n\n    if (labelsRenderFn) {\n      rnb.setLabelsRenderFn(labelsRenderFn);\n    } else if (this.labelsRenderFn) {\n      rnb.setLabelsRenderFn(this.labelsRenderFn);\n    } else {\n      rnb.setLabelsRenderFn(update => {\n        const positions = update.positions;\n        let totalDistance = 0;\n        if (!positions || positions.length === 0) {\n          return [];\n        }\n        return (update.editMode === EditModes.CREATE && update.editAction !== EditActions.ADD_LAST_POINT\n            ? [...positions, update.updatedPosition]\n            : positions\n        ).reduce(\n          (labels, position, index, array) => {\n            if (index !== 0) {\n              const previousPosition = array[index - 1];\n              const bearing = this.coordinateConverter.bearingToCartesian(previousPosition, position);\n              const distance = Cesium.Cartesian3.distance(previousPosition, position) / 1000;\n              labels.push(\n                {\n                  text:\n                    (bearingStringFn && bearingStringFn(bearing)) ||\n                    (this.bearingStringFn && this.bearingStringFn(bearing)) ||\n                    `${bearing.toFixed(2)}°`,\n                  scale: 0.2,\n                  font: '80px Helvetica',\n                  pixelOffset: new Cesium.Cartesian2(-20, -8),\n                  position: new Cesium.Cartesian3(\n                    (position.x + previousPosition.x) / 2,\n                    (position.y + previousPosition.y) / 2,\n                    (position.z + previousPosition.z) / 2,\n                  ),\n                  fillColor: Cesium.Color.WHITE,\n                  outlineColor: Cesium.Color.WHITE,\n                  showBackground: true,\n                  ...(this.labelsStyle as any),\n                  ...(labelsStyle as any),\n                  ...(this.bearingLabelsStyle as any),\n                  ...(bearingLabelsStyle as any),\n                },\n                {\n                  text:\n                    (distanceStringFn && distanceStringFn(totalDistance + distance)) ||\n                    (this.distanceStringFn && this.distanceStringFn(totalDistance + distance)) ||\n                    `${(totalDistance + distance).toFixed(2)} Km`,\n                  scale: 0.2,\n                  font: '80px Helvetica',\n                  pixelOffset: new Cesium.Cartesian2(-35, -8),\n                  position: position,\n                  fillColor: Cesium.Color.WHITE,\n                  outlineColor: Cesium.Color.WHITE,\n                  showBackground: true,\n                  ...(this.labelsStyle as any),\n                  ...(labelsStyle as any),\n                  ...(this.distanceLabelsStyle as any),\n                  ...(distanceLabelsStyle as any),\n                },\n              );\n\n              totalDistance += distance;\n            }\n\n            return labels;\n          },\n          [\n            {\n              text: (distanceStringFn && distanceStringFn(0)) || (this.distanceStringFn && this.distanceStringFn(0)) || `0 Km`,\n              scale: 0.2,\n              font: '80px Helvetica',\n              pixelOffset: new Cesium.Cartesian2(-20, -8),\n              position: positions[0],\n              fillColor: Cesium.Color.WHITE,\n              outlineColor: Cesium.Color.WHITE,\n              showBackground: true,\n              ...(this.labelsStyle as any),\n              ...(labelsStyle as any),\n              ...(this.distanceLabelsStyle as any),\n              ...(distanceLabelsStyle as any),\n            },\n          ],\n        );\n      });\n    }\n\n    return rnb;\n  }\n}\n\nexport interface RangeAndBearingOptions {\n  lineEditOptions?: PolylineEditOptions;\n  labelsStyle?: LabelStyle;\n  distanceLabelsStyle?: LabelStyle;\n  bearingLabelsStyle?: LabelStyle;\n  bearingStringFn?: (value: number) => string;\n  distanceStringFn?: (value: number) => string;\n  labelsRenderFn?: (update: PolylineEditUpdate, labels: LabelProps[]) => LabelProps[];\n}\n","import { Injectable } from '@angular/core';\nimport { EditableRectangle } from '../../../models/editable-rectangle';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { RectangleEditOptions } from '../../../models/rectangle-edit-options';\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\n\n@Injectable()\nexport class RectanglesManagerService {\n  rectangles: Map<string, EditableRectangle> = new Map<string, EditableRectangle>();\n\n  createEditableRectangle(\n    id: string,\n    editRectanglesLayer: AcLayerComponent,\n    editPointsLayer: AcLayerComponent,\n    coordinateConverter: CoordinateConverter,\n    rectangleOptions?: RectangleEditOptions,\n    positions?: Cartesian3[]\n  ) {\n    const editableRectangle = new EditableRectangle(\n      id,\n      editPointsLayer,\n      editRectanglesLayer,\n      coordinateConverter,\n      rectangleOptions,\n      positions\n    );\n\n    this.rectangles.set(id, editableRectangle);\n  }\n\n  dispose(id: string) {\n    this.rectangles.get(id).dispose();\n    this.rectangles.delete(id);\n  }\n\n  get(id: string): EditableRectangle {\n    return this.rectangles.get(id);\n  }\n\n  clear() {\n    this.rectangles.forEach(rectangle => rectangle.dispose());\n    this.rectangles.clear();\n  }\n}\n\n","import { publish, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { CesiumService } from '../../../../angular-cesium/services/cesium/cesium.service';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { RectangleEditUpdate } from '../../../models/rectangle-edit-update';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from '../../../models/edit-point';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { RectanglesManagerService } from './rectangles-manager.service';\nimport { RectangleEditorObservable } from '../../../models/rectangle-editor-observable';\nimport { EditableRectangle } from '../../../models/editable-rectangle';\nimport { RectangleEditOptions } from '../../../models/rectangle-edit-options';\nimport { PointProps } from '../../../models/point-edit-options';\nimport { LabelProps } from '../../../models/label-props';\nimport { generateKey } from '../../utils';\n\nexport const DEFAULT_RECTANGLE_OPTIONS: RectangleEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  allowDrag: true,\n  pointProps: {\n    color: Cesium.Color.WHITE,\n    outlineColor: Cesium.Color.BLACK.withAlpha(0.2),\n    outlineWidth: 1,\n    pixelSize: 13,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\n  },\n  rectangleProps: {\n    height: 0,\n    extrudedHeight: 0,\n    material: Cesium.Color.CORNFLOWERBLUE.withAlpha(0.4),\n    fill: true,\n    classificationType: Cesium.ClassificationType.BOTH,\n    outline: true,\n    outlineColor: Cesium.Color.WHITE,\n    zIndex: 0,\n  },\n  clampHeightTo3D: false,\n  clampHeightTo3DOptions: {\n    clampToTerrain: false,\n  },\n};\n\n/**\n * Service for creating editable rectangles\n *\n * You must provide `RectanglesEditorService` yourself.\n * RectanglesEditorService works together with `<rectangles-editor>` component. Therefor you need to create `<rectangles-editor>`\n * for each `RectanglesEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `RectangleEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `RectangleEditorObservable`.\n * + To stop editing call `dsipose()` from the `RectangleEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over editted shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `RectangleEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n * usage:\n * ```typescript\n *  // Start creating rectangle\n *  const editing$ = rectanglesEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit rectangle from existing rectangle positions\n *  const editing$ = this.rectanglesEditorService.edit(initialPos);\n *\n * ```\n */\n@Injectable()\nexport class RectanglesEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<RectangleEditUpdate>();\n  private updatePublisher = publish<RectangleEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private rectanglesManager: RectanglesManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n  private cesiumScene: any;\n\n  init(mapEventsManager: MapEventsManagerService,\n       coordinateConverter: CoordinateConverter,\n       cameraService: CameraService,\n       rectanglesManager: RectanglesManagerService,\n       cesiumViewer: CesiumService,\n  ) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.rectanglesManager = rectanglesManager;\n    this.updatePublisher.connect();\n\n    this.cesiumScene = cesiumViewer.getScene();\n  }\n\n  onUpdate(): Observable<RectangleEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  create(options = DEFAULT_RECTANGLE_OPTIONS, priority = 100): RectangleEditorObservable {\n    const positions: Cartesian3[] = [];\n    const id = generateKey();\n    const rectangleOptions = this.setOptions(options);\n\n    const clientEditSubject = new BehaviorSubject<RectangleEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      positions,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      rectangleOptions: rectangleOptions,\n    });\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      pickConfig: options.pickConfiguration,\n      priority,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: rectangleOptions.addPointEvent,\n      pick: PickOptions.NO_PICK,\n      pickConfig: options.pickConfiguration,\n      priority,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration ]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id);\n\n    mouseMoveRegistration.subscribe(({ movement: { endPosition } }) => {\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n\n      if (position) {\n        this.updateSubject.next({\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.CREATE,\n          updatedPosition: position,\n          editAction: EditActions.MOUSE_MOVE,\n        });\n      }\n    });\n\n    addPointRegistration.subscribe(({ movement: { endPosition } }) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (!position) {\n        return;\n      }\n      const allPositions = this.getPositions(id);\n      const isFirstPoint = this.getPositions(id).length === 0;\n\n      const updateValue = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.CREATE,\n        updatedPosition: position,\n        editAction: EditActions.ADD_POINT,\n      };\n      this.updateSubject.next(updateValue);\n      clientEditSubject.next({\n        ...updateValue,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n      });\n\n      if (!isFirstPoint) {\n        const changeMode = {\n          id,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.CHANGE_TO_EDIT,\n        };\n        this.updateSubject.next(changeMode);\n        clientEditSubject.next(changeMode);\n        if (this.observablesMap.has(id)) {\n          this.observablesMap.get(id).forEach(registration => registration.dispose());\n        }\n        this.observablesMap.delete(id);\n        this.editRectangle(id, positions, priority, clientEditSubject, rectangleOptions, editorObservable);\n        finishedCreate = true;\n      }\n\n    });\n\n    return editorObservable;\n  }\n\n  edit(positions: Cartesian3[], options = DEFAULT_RECTANGLE_OPTIONS, priority = 100): RectangleEditorObservable {\n    if (positions.length !== 2) {\n      throw new Error('Rectangles editor error edit(): rectangle should have at least 2 positions');\n    }\n    const id = generateKey();\n    const rectangleOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<RectangleEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT\n    });\n    const update = {\n      id,\n      positions: positions,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      rectangleOptions: rectangleOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n    });\n    return this.editRectangle(\n      id,\n      positions,\n      priority,\n      editSubject,\n      rectangleOptions\n    );\n  }\n\n  private editRectangle(id: string,\n                      positions: Cartesian3[],\n                      priority: number,\n                      editSubject: Subject<RectangleEditUpdate>,\n                      options: RectangleEditOptions,\n                      editObservable?: RectangleEditorObservable): RectangleEditorObservable {\n\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: options.dragPointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      pickConfig: options.pickConfiguration,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: options.dragShapeEvent,\n        entityType: EditableRectangle,\n        pick: PickOptions.PICK_FIRST,\n        pickConfig: options.pickConfiguration,\n        priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n\n    pointDragRegistration.pipe(\n      tap(({ movement: { drop } }) => this.rectanglesManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\n      .subscribe(({ movement: { endPosition, drop }, entities }) => {\n        const position = this.coordinateConverter.screenToCartesian3(endPosition);\n        if (!position) {\n          return;\n        }\n        const point: EditPoint = entities[0];\n\n        const update = {\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.EDIT,\n          updatedPosition: position,\n          updatedPoint: point,\n          editAction: drop ? EditActions.DRAG_POINT_FINISH : EditActions.DRAG_POINT,\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n          positions: this.getPositions(id),\n          points: this.getPoints(id),\n        });\n      });\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({ movement: { drop } }) => this.rectanglesManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\n        .subscribe(({ movement: { startPosition, endPosition, drop }, entities }) => {\n          const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n          const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n          if (!endDragPosition) {\n            return;\n          }\n\n          const update = {\n            id,\n            positions: this.getPositions(id),\n            editMode: EditModes.EDIT,\n            updatedPosition: endDragPosition,\n            draggedPosition: startDragPosition,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n            positions: this.getPositions(id),\n            points: this.getPoints(id),\n          });\n        });\n    }\n\n    const observables = [pointDragRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n\n    this.observablesMap.set(id, observables);\n    return editObservable || this.createEditorObservable(editSubject, id);\n  }\n\n  private setOptions(options: RectangleEditOptions) {\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_RECTANGLE_OPTIONS));\n    const rectangleOptions: RectangleEditOptions = Object.assign(defaultClone, options);\n    rectangleOptions.pointProps = Object.assign({}, DEFAULT_RECTANGLE_OPTIONS.pointProps, options.pointProps);\n    rectangleOptions.rectangleProps = Object.assign({}, DEFAULT_RECTANGLE_OPTIONS.rectangleProps, options.rectangleProps);\n\n    if (options.clampHeightTo3D) {\n      if (!this.cesiumScene.pickPositionSupported || !this.cesiumScene.clampToHeightSupported) {\n        throw new Error(`Cesium pickPosition and clampToHeight must be supported to use clampHeightTo3D`);\n      }\n\n      if (this.cesiumScene.pickTranslucentDepth) {\n        console.warn(`Cesium scene.pickTranslucentDepth must be false in order to make the editors work properly on 3D`);\n      }\n\n      if (rectangleOptions.pointProps.color.alpha === 1 || rectangleOptions.pointProps.outlineColor.alpha === 1) {\n        console.warn('Point color and outline color must have alpha in order to make the editor work properly on 3D');\n      }\n\n      rectangleOptions.pointProps.heightReference =  rectangleOptions.clampHeightTo3DOptions.clampToTerrain ?\n        Cesium.HeightReference.CLAMP_TO_GROUND : Cesium.HeightReference.RELATIVE_TO_GROUND;\n      rectangleOptions.pointProps.disableDepthTestDistance = Number.POSITIVE_INFINITY;\n    }\n    return rectangleOptions;\n  }\n\n\n  private createEditorObservable(observableToExtend: any, id: string): RectangleEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      });\n    };\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n      });\n    };\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n      });\n    };\n\n    observableToExtend.setManually = (firstPosition: Cartesian3,\n                                      secondPosition: Cartesian3,\n                                      firstPointProp?: PointProps,\n                                      secondPointProp?: PointProps) => {\n      const firstP = new EditPoint(id, firstPosition, firstPointProp ? firstPointProp : DEFAULT_RECTANGLE_OPTIONS.pointProps);\n      const secP = new EditPoint(id, secondPosition, secondPointProp ? secondPointProp : DEFAULT_RECTANGLE_OPTIONS.pointProps);\n\n      const rectangle = this.rectanglesManager.get(id);\n      rectangle.setPointsManually([firstP, secP]);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: any) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      });\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      });\n    };\n\n    observableToExtend.getCurrentPoints = () => this.getPoints(id);\n\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n\n    observableToExtend.getLabels = (): LabelProps[] => this.rectanglesManager.get(id).labels;\n\n    return observableToExtend as RectangleEditorObservable;\n  }\n\n  private getPositions(id: any) {\n    const rectangle = this.rectanglesManager.get(id);\n    return rectangle.getRealPositions();\n  }\n\n  private getPoints(id: any) {\n    const rectangle = this.rectanglesManager.get(id);\n    return rectangle.getRealPoints();\n  }\n}\n\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { CesiumService } from '../../../angular-cesium/services/cesium/cesium.service';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { RectangleEditUpdate } from '../../models/rectangle-edit-update';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { RectanglesManagerService } from '../../services/entity-editors/rectangles-editor/rectangles-manager.service';\nimport { RectanglesEditorService } from '../../services/entity-editors/rectangles-editor/rectangles-editor.service';\nimport { LabelProps } from '../../models/label-props';\nimport { EditableRectangle } from '../../models/editable-rectangle';\n\n@Component({\n  selector: 'rectangles-editor',\n  template: /*html*/ `\n    <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n      <ac-point-desc\n        props=\"{\n        position: point.getPositionCallbackProperty(),\n        pixelSize: getPointSize(point),\n        color: point.props.color,\n        outlineColor: point.props.outlineColor,\n        outlineWidth: point.props.outlineWidth,\n        show: getPointShow(point),\n        disableDepthTestDistance: point.props.disableDepthTestDistance,\n        heightReference: point.props.heightReference,\n    }\"\n      >\n      </ac-point-desc>\n    </ac-layer>\n\n    <ac-layer #editRectanglesLayer acFor=\"let rectangle of editRectangles$\" [context]=\"this\">\n      <ac-rectangle-desc\n        props=\"{\n          coordinates: rectangle.getRectangleCallbackProperty(),\n          material: rectangle.rectangleProps.material,\n          fill: rectangle.rectangleProps.fill,\n          classificationType: rectangle.rectangleProps.classificationType,\n          zIndex: rectangle.rectangleProps.zIndex,\n          outline: rectangle.rectangleProps.outline,\n          outlineColor: rectangle.rectangleProps.outlineColor,\n          height: rectangle.rectangleProps.height,\n          extrudedHeight: rectangle.rectangleProps.extrudedHeight\n        }\"\n      >\n      </ac-rectangle-desc>\n      <ac-array-desc acFor=\"let label of rectangle.labels\" [idGetter]=\"getLabelId\">\n        <ac-label-primitive-desc\n          props=\"{\n            position: label.position,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            text: label.text,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin,\n            disableDepthTestDistance: label.disableDepthTestDistance,\n        }\"\n        >\n        </ac-label-primitive-desc>\n      </ac-array-desc>\n    </ac-layer>\n  `,\n  providers: [CoordinateConverter, RectanglesManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RectanglesEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: RectangleEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editRectangles$ = new Subject<AcNotification>();\n\n  @ViewChild('editRectanglesLayer') private editRectanglesLayer: AcLayerComponent;\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\n\n  constructor(\n    private rectanglesEditor: RectanglesEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private rectanglesManager: RectanglesManagerService,\n    private cesiumService: CesiumService\n  ) {\n    this.rectanglesEditor.init(\n      this.mapEventsManager,\n      this.coordinateConverter,\n      this.cameraService,\n      this.rectanglesManager,\n      this.cesiumService\n    );\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.rectanglesEditor.onUpdate().subscribe((update: RectangleEditUpdate) => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(rectangle: EditableRectangle, update: RectangleEditUpdate, labels?: LabelProps[]) {\n    update.positions = rectangle.getRealPositions();\n    update.points = rectangle.getRealPoints();\n\n    if (labels) {\n      rectangle.labels = labels;\n      this.editRectanglesLayer.update(rectangle, rectangle.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    rectangle.labels = this.editLabelsRenderFn(update, rectangle.labels);\n    this.editRectanglesLayer.update(rectangle, rectangle.getId());\n  }\n\n  removeEditLabels(rectangle: EditableRectangle) {\n    rectangle.labels = [];\n    this.editRectanglesLayer.update(rectangle, rectangle.getId());\n  }\n\n  handleCreateUpdates(update: RectangleEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.rectanglesManager.createEditableRectangle(\n          update.id,\n          this.editRectanglesLayer,\n          this.editPointsLayer,\n          this.coordinateConverter,\n          update.rectangleOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        if (update.updatedPosition) {\n          rectangle.moveTempMovingPoint(update.updatedPosition);\n          this.renderEditLabels(rectangle, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        if (update.updatedPosition) {\n          rectangle.addPoint(update.updatedPosition);\n          this.renderEditLabels(rectangle, update);\n        }\n        break;\n      }\n      case EditActions.ADD_LAST_POINT: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        if (update.updatedPosition) {\n          rectangle.addLastPoint(update.updatedPosition);\n          this.renderEditLabels(rectangle, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        if (rectangle) {\n          rectangle.dispose();\n          this.removeEditLabels(rectangle);\n        }\n        this.editLabelsRenderFn = undefined;\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(rectangle, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        this.renderEditLabels(rectangle, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        this.renderEditLabels(rectangle, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: RectangleEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.rectanglesManager.createEditableRectangle(\n          update.id,\n          this.editRectanglesLayer,\n          this.editPointsLayer,\n          this.coordinateConverter,\n          update.rectangleOptions,\n          update.positions,\n        );\n        break;\n      }\n      case EditActions.DRAG_POINT: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        if (rectangle && rectangle.enableEdit) {\n          rectangle.movePoint(update.updatedPosition, update.updatedPoint);\n          this.renderEditLabels(rectangle, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        if (rectangle && rectangle.enableEdit) {\n          rectangle.endMovePoint();\n          this.renderEditLabels(rectangle, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        if (rectangle) {\n          rectangle.enableEdit = false;\n          this.renderEditLabels(rectangle, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        if (rectangle) {\n          rectangle.enableEdit = true;\n          this.renderEditLabels(rectangle, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        if (rectangle && rectangle.enableEdit) {\n          rectangle.moveShape(update.draggedPosition, update.updatedPosition);\n          this.renderEditLabels(rectangle, update);\n        }\n        break;\n      }\n\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        if (rectangle && rectangle.enableEdit) {\n          rectangle.endMoveShape();\n          this.renderEditLabels(rectangle, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.rectanglesManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AngularCesiumModule } from '../angular-cesium/angular-cesium.module';\nimport { PointsEditorComponent } from './components/points-editor/points-editor.component';\nimport { PolygonsEditorComponent } from './components/polygons-editor/polygons-editor.component';\nimport { CirclesEditorComponent } from './components/circles-editor/circles-editor.component';\nimport { EllipsesEditorComponent } from './components/ellipses-editor/ellipses-editor.component';\nimport { PolylinesEditorComponent } from './components/polylines-editor/polylines-editor.component';\nimport { HippodromeEditorComponent } from './components/hippodrome-editor/hippodrome-editor.component';\nimport { DraggableToMapDirective } from './directives/draggable-to-map.directive';\nimport { DraggableToMapService } from './services/draggable-to-map.service';\nimport { AcToolbarComponent } from './components/toolbar/ac-toolbar/ac-toolbar.component';\nimport { DragIconComponent } from './components/toolbar/ac-toolbar/drag-icon.component';\nimport { AcToolbarButtonComponent } from './components/toolbar/ac-toolbar-button/ac-toolbar-button.component';\nimport { RangeAndBearingComponent } from './components/range-and-bearing/range-and-bearing.component';\nimport { ZoomToRectangleService } from './services/zoom-to-rectangle.service';\nimport { RectanglesEditorComponent } from './components/rectangles-editor/rectangles-editor.component';\n\n@NgModule({\n  imports: [CommonModule, AngularCesiumModule],\n  declarations: [\n    PointsEditorComponent,\n    HippodromeEditorComponent,\n    PolygonsEditorComponent,\n    RectanglesEditorComponent,\n    CirclesEditorComponent,\n    EllipsesEditorComponent,\n    PolylinesEditorComponent,\n    DraggableToMapDirective,\n    DragIconComponent,\n    AcToolbarComponent,\n    AcToolbarButtonComponent,\n    RangeAndBearingComponent,\n  ],\n  exports: [\n    PointsEditorComponent,\n    HippodromeEditorComponent,\n    PolygonsEditorComponent,\n    RectanglesEditorComponent,\n    CirclesEditorComponent,\n    EllipsesEditorComponent,\n    PolylinesEditorComponent,\n    DraggableToMapDirective,\n    AcToolbarComponent,\n    AcToolbarButtonComponent,\n    RangeAndBearingComponent,\n  ],\n  providers: [\n    DraggableToMapService,\n    ZoomToRectangleService,\n  ]\n})\nexport class AngularCesiumWidgetsModule {\n}\n"]}