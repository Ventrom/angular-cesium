{"version":3,"sources":["../../../projects/angular-cesium/src/lib/angular-cesium/services/viewer-factory/viewer-factory.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/viewer-configuration/viewer-configuration.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/cesium/cesium.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/cesium-enhancements/StaticGeometryColorBatch.ts","../../../projects/angular-cesium/src/lib/angular-cesium/models/scene-mode.enum.ts","../../../projects/angular-cesium/src/lib/angular-cesium/cesium-enhancements/ConfigurationService.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/map-events-mananger/consts/cesium-event.enum.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/map-events-mananger/consts/pickOptions.enum.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/camera/camera.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/context-menu/context-menu.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/coordinate-converter/coordinate-converter.service.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/basic-drawer/basic-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/primitives-drawer/primitives-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/geo-utils/geo-utils.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/entities-drawer/enums/graphics-type.enum.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/arc-drawer/arc-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/entities-drawer/optimized-entity-collection.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/entities-drawer/entities-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/billboard-drawer/billboard-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/czml-drawer/czml-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/ellipse-drawer/ellipse-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/label-drawer/label-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/point-drawer/point-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/polygon-drawer/polygon-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/polyline-drawer/polyline-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/models/ac-keyboard-action.enum.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/keyboard-control/predefined-actions.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/keyboard-control/keyboard-control.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/map-events-mananger/event-observers/cesium-pure-event-observer.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/map-events-mananger/event-observers/cesium-long-press-observer.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/map-events-mananger/cesium-event-builder.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/plonter/plonter.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/utils/utils.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/map-events-mananger/event-observers/cesium-drag-drop-helper.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/map-events-mananger/map-events-manager.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/map-layers/map-layers.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/maps-manager/maps-manager.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/screenshot/screenshot.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-map/ac-map.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/models/action-type.enum.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/layer-service/layer-service.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/computation-cache/computation-cache.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/utils/checker.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/static-dynamic/ellipse-drawer/dynamic-ellipse-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/static-dynamic/dynamic-polyline-drawer/dynamic-polyline-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/static-dynamic/static-primitive-drawer/static-primitive-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/static-dynamic/static-circle-drawer/static-circle-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/static-dynamic/static-polyline-drawer/static-polyline-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/static-dynamic/static-polygon-drawer/polygon-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/static-dynamic/ellipse-drawer/ellipse-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/model-drawer/model-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/box-dawer/box-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/corridor-dawer/corridor-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/cylinder-dawer/cylinder-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/ellipoid-drawer/ellipsoid-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/polyline-volume-dawer/polyline-volume-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/wall-dawer/wall-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/rectangle-dawer/rectangle-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/label-primitive-drawer/label-primitive-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/billboard-primitive-drawer/billboard-primitive-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/point-primitive-drawer/point-primitive-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/drawers/html-drawer/html-drawer.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-layer/ac-layer.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/entity-on-map/entity-on-map.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-billboard/ac-billboard.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/json-mapper/json-mapper.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/smart-assigner/smart-assigner.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/cesium-properties/cesium-properties.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/basic-desc/basic-desc.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-billborad-desc/ac-billborad-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-ellipse-desc/ac-ellipse-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-polyline-desc/ac-polyline-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/pipes/pixel-offset/pixel-offset.pipe.ts","../../../projects/angular-cesium/src/lib/angular-cesium/pipes/radians-to-degrees/radians-to-degrees.pipe.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-label-desc/ac-label-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/utils/utils.module.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-circle-desc/ac-circle-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-arc-desc/ac-arc-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/models/map-layer-provider-options.enum.ts","../../../projects/angular-cesium/src/lib/angular-cesium/models/map-terrain-provider-options.enum.ts","../../../projects/angular-cesium/src/lib/angular-cesium/models/ac-entity.ts","../../../projects/angular-cesium/src/lib/angular-cesium/models/ac-notification.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-map-layer-provider/ac-map-layer-provider.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-map-terrain-provider/ac-map-terrain-provider.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-point-desc/ac-point-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-label/ac-label.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-polyline/ac-polyline.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-ellipse/ac-ellipse.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-point/ac-point.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-html/ac-html.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-circle/ac-circle.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-arc/ac-arc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-polygon-desc/ac-polygon-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-default-plonter/ac-default-plonter.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-polygon/ac-polygon.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/basic-primitive-desc/basic-static-primitive-desc.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/static-dynamic/ac-static-ellipse-desc/ac-static-ellipse-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/static-dynamic/ac-dynamic-ellipse-desc/ac-dynamic-ellipse-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/static-dynamic/ac-dynamic-polyline-desc/ac-dynamic-polyline-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/static-dynamic/ac-static-polygon-desc/ac-static-polygon-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/static-dynamic/ac-static-circle-desc/ac-static-circle-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/static-dynamic/ac-dynamic-circle-desc/ac-dynamic-circle-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/static-dynamic/ac-static-polyline-desc/ac-static-polyline-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-model-desc/ac-model-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-3d-tileset/ac-tileset-3d.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-box-desc/ac-box-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-cylinder-desc/ac-cylinder-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-corridor-desc/ac-corridor-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-ellipsoid-desc/ac-ellipsoid-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-polyline-volume-desc/ac-polyline-volume-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-wall-desc/ac-wall-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-rectangle-desc/ac-rectangle-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-billboard-primitive-desc/ac-billboard-primitive-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-label-primitive-desc/ac-label-primitive-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-polyline-primitive-desc/ac-polyline-primitive-desc.component.ts","../../../projects/angular-cesium/src/lib/cesium-extender/primitives/html.ts","../../../projects/angular-cesium/src/lib/cesium-extender/collections/html.ts","../../../projects/angular-cesium/src/lib/cesium-extender/extender.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/ac-html-manager/ac-html-manager.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium/directives/ac-html/ac-html.directive.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-html-desc/ac-html-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/directives/ac-html-container/ac-html-container.directive.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-context-menu-wrapper/ac-context-menu-wrapper.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-array-desc/ac-array-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-point-primitive-desc/ac-point-primitive-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-primitive-polyline/ac-primitive-polyline.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/pipes/pipe-config-map.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-czml-desc/ac-czml-desc.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/components/ac-rectangle/ac-rectangle.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium/angular-cesium.module.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/map-events-mananger/consts/cesium-event-modifier.enum.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/map-events-mananger/disposable-observable.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/models/edit-mode.enum.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/models/edit-actions.enum.ts","../../../projects/angular-cesium/src/lib/angular-cesium/services/selection-manager/selection-manager.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/models/edit-point.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/services/utils.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/services/entity-editors/points-editor/points-editor.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/models/label-props.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/models/editable-point.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/services/entity-editors/points-editor/points-manager.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/components/points-editor/points-editor.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/models/edit-polyline.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/models/editable-polygon.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/services/entity-editors/polygons-editor/polygons-manager.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/services/entity-editors/polygons-editor/polygons-editor.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/components/polygons-editor/polygons-editor.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/models/edit-arc.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/models/editable-circle.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/services/entity-editors/circles-editor/circles-manager.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/services/entity-editors/circles-editor/circles-editor.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/components/circles-editor/circles-editor.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/models/editable-ellipse.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/services/entity-editors/ellipses-editor/ellipses-manager.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/services/entity-editors/ellipses-editor/ellipses-editor.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/components/ellipses-editor/ellipses-editor.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/models/editable-polyline.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/models/editable-rectangle.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/models/editor-observable.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/models/point-editor-observable.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/models/polyline-editor-observable.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/models/polygon-editor-observable.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/models/rectangle-editor-observable.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/models/circle-editor-observable.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/models/ellipse-editor-observable.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/models/hippodrome-editor-oboservable.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/models/editable-hippodrome.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/services/entity-editors/polyline-editor/polylines-editor.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/services/entity-editors/polyline-editor/polylines-manager.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/components/polylines-editor/polylines-editor.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/services/entity-editors/hippodrome-editor/hippodrome-manager.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/services/entity-editors/hippodrome-editor/hippodrome-editor.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/components/hippodrome-editor/hippodrome-editor.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/services/draggable-to-map.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/directives/draggable-to-map.directive.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/components/toolbar/ac-toolbar/ac-toolbar.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/components/toolbar/ac-toolbar/drag-icon.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/components/toolbar/ac-toolbar-button/ac-toolbar-button.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/services/zoom-to-rectangle.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/components/range-and-bearing/range-and-bearing.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/services/entity-editors/rectangles-editor/rectangles-manager.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/services/entity-editors/rectangles-editor/rectangles-editor.service.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/components/rectangles-editor/rectangles-editor.component.ts","../../../projects/angular-cesium/src/lib/angular-cesium-widgets/angular-cesium-widgets.module.ts"],"names":["ViewerFactory","this","cesium","Cesium","prototype","createViewer","mapContainer","options","Viewer","Object","assign","contextOptions","webgl","preserveDrawingBuffer","Injectable","ViewerConfiguration","nextViewerOptionsIndex","nextViewerModifierIndex","defineProperty","_viewerOptions","value","getNextViewerOptions","Array","_viewerModifier","getNextViewerModifier","CesiumService","ngZone","viewerFactory","viewerConfiguration","init","map","_this","runOutsideAngular","undefined","cesiumViewer","viewerModifier","getViewer","getScene","scene","getCanvas","canvas","getMap","NgZone","decorators","type","Optional","AssociativeArray","Color","ColorGeometryInstanceAttribute","defined","DistanceDisplayCondition","DistanceDisplayConditionGeometryInstanceAttribute","ShowGeometryInstanceAttribute","Primitive","ShadowMode","BoundingSphereState","ColorMaterialProperty","MaterialProperty","Property","colorScratch","distanceDisplayConditionScratch","defaultDistanceDisplayCondition","Batch","primitives","translucent","appearanceType","depthFailAppearanceType","depthFailMaterialProperty","closed","shadows","removeMaterialSubscription","depthFailMaterial","createPrimitive","waitingOnCreate","primitive","oldPrimitive","geometry","updaters","updatersWithAttributes","attributes","subscriptions","showsUpdated","itemsToRemove","invalidated","definitionChanged","addEventListener","onMaterialChanged","isMaterial","updater","material","updaterMaterial","equals","add","instance","id","set","hasConstantFill","fillMaterialProperty","isConstant","distanceDisplayConditionProperty","that","entity","propertyName","newValue","oldValue","remove","unsubscribe","get","update","time","i","isUpdated","removedCount","geometries","values","length","geometryItem","originalAttributes","show","color","depthFailColor","depthFailAppearance","getValue","asynchronous","geometryInstances","appearance","flat","DISABLED","CAST_ONLY","removeAll","ready","getGeometryInstanceAttributes","colorProperty","resultColor","getValueOrDefault","WHITE","_lastColor","clone","toValue","depthFailColorProperty","depthColor","_lastDepthFailColor","isShowing","isFilled","distanceDisplayCondition","_lastDistanceDisplayCondition","updateShows","contains","getBoundingSphere","result","PENDING","boundingSphere","FAILED","DONE","removeAllPrimitives","destroy","wasFixed","SceneMode","ANGULAR_CESIUM_CONFIG","InjectionToken","config","fixEntitiesShadows","StaticGeometryColorBatch","items","createFillGeometryInstance","_solidItems","_translucentItems","item","batch","_primitives","_appearanceType","_depthFailAppearanceType","_closed","_shadows","push","Inject","args","CesiumEvent","PickOptions","CameraService","isSceneModePerformance2D","cesiumService","viewer","screenSpaceCameraController","camera","lastRotate","enableRotate","lastTilt","enableTilt","lastLook","enableLook","_listenToSceneModeMorph","callback","morphListenerCancelFn","morphStart","_revertCameraProperties","getCamera","getScreenSpaceCameraController","getMinimumZoom","minimumZoomDistance","setMinimumZoom","amount","getMaximumZoom","maximumZoomDistance","setMaximumZoom","tilt","rotate","lock","enableTranslate","translate","enableZoom","zoom","enableInputs","inputs","setSceneMode","sceneMode","duration","SCENE3D","morphTo3D","COLUMBUS_VIEW","morphToColumbusView","SCENE2D","morphTo2D","PERFORMANCE_SCENE2D","morphCompleteEventListener_1","morphComplete","setView","destination","Cartesian3","fromDegrees","Math","min","PERFORMANCE_2D_ALTITUDE","orientation","pitch","toRadians","bind","cameraFlyTo","flyTo","target","zoomIn","defaultZoomAmount","zoomOut","zoomTo","offset","setRotation","degreesInRadians","heading","lockRotation","trackEntity","cesiumEntity","trackedEntity","Promise","resolve","flyToDuration","altitude","entPosCar3","position","JulianDate","now","entPosCart","Cartographic","fromCartesian","zoomAmount_1","height","flyToPosition","fromRadians","longitude","latitude","complete","setTimeout","untrackEntity","ScreenSpaceEventType","MOUSE_MOVE","LEFT_CLICK","LEFT_DOUBLE_CLICK","LEFT_DOWN","LEFT_UP","MIDDLE_CLICK","MIDDLE_DOUBLE_CLICK","MIDDLE_DOWN","MIDDLE_UP","PINCH_START","PINCH_END","PINCH_MOVE","RIGHT_CLICK","RIGHT_DOUBLE_CLICK","RIGHT_DOWN","RIGHT_UP","WHEEL","ContextMenuService","_showContextMenu","_contextMenuChangeNotifier","EventEmitter","_onOpen","_onClose","_defaultContextMenuOptions","closeOnLeftCLick","closeOnLeftClickPriority","_options","_position","_content","mapEventsManager","open","contentComponent","close","leftClickRegistration","register","event","pick","NO_PICK","priority","leftClickSubscription","subscribe","emit","dispose","LatLonVectors","geodesy['LatLonVectors']","window","geodesy","CoordinateConverter","cartesian3ToLatLon","cartesian3","ellipsoid","cart","lon","toDegrees","lat","screenToCartesian3","screenPos","addMapCanvasBoundsToPos","screenPosition","mapBounds","getBoundingClientRect","x","left","y","top","pickEllipsoid","Error","screenToCartographic","cartesian3ToCartographic","cartesian","degreesToCartographic","radiansToCartographic","degreesToUTM","LatLonEllipsoidal","toUtm","UTMToDegrees","zone","hemisphereType","easting","northing","geodesyToCesiumObject","Utm","toLatLonE","geodesyRadians","midPointToCartesian3","first","second","toDeg","rad","firstPoint","secondPoint","middlePoint","midpointTo","middlePointByScreen","position0","position1","screenPosition1","SceneTransforms","wgs84ToWindowCoordinates","screenPosition2","middleScreenPoint","Cartesian2","pickPosition","bearingTo","bearingToCartesian","firstCartesian3","secondCartesian3","firstCart","secondCart","extendStatics","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","call","__extends","TypeError","String","__","constructor","create","__read","o","n","m","Symbol","iterator","r","e","ar","next","done","error","__spread","arguments","concat","BasicDrawerService","setPropsAssigner","assigner","_propsAssigner","PrimitivesDrawerService","drawerType","_super","_show","_cesiumCollection","_primitiveCollectionWrap","PrimitiveCollection","destroyPrimitives","cesiumProps","_i","setShow","showValue","getShow","GeoUtilsService","pointByLocationDistanceAndAzimuth","currentLocation","meterDistance","radianAzimuth","deprecated","resultPosition","resultDistance","distance","Ellipsoid","WGS84","maximumRadius","cartographicLocation","cartesianLocation","counter","distanceFactorRangeMax","distanceFactorRangeMin","max","factor","_pointByLocationDistanceAndAzimuth","curLat","curLon","destinationLat","asin","sin","cos","destinationLon","atan2","PI","pos0","pos1","getPositionsDelta","z","addDeltaToPosition","delta","updateReference","cartographic","middleCartesian3Point","screenPositionToCartesian3","GraphicsType","ArcDrawerService","PolylineCollection","_calculateArcPositions","quality","pointsArray","point","center","radius","angle","_calculateTriangle","_calculateArc","arcPoints","drawEdges","positions","Material","fromType","uniforms","constantColor","width","EllipseGraphics","EllipsoidGraphics","PolygonGraphics","PolylineGraphics","PolylineVolumeGraphics","BoxGraphics","CorridorGraphics","CylinderGraphics","LabelGraphics","BillboardGraphics","ModelGraphics","PathGraphics","PointGraphics","RectangleGraphics","WallGraphics","OptimizedEntityCollection","entityCollection","collectionSize","updateRate","_isSuspended","_isHardSuspend","_updateRate","_collectionSize","collection","isFree","suspend","removeNoSuspend","onEventSuspension","once","_onEventSuspensionCallback","onEventResume","_onEventResumeCallback","triggerEventResume","triggerEventSuspension","suspendEvents","_suspensionTimeout","resumeEvents","hardSuspend","hardResume","EntitiesDrawerService","graphicsType","defaultOptions","collectionMaxSize","collectionSuspensionTime","collectionsNumber","entityCollections","Map","graphicsTypeName","getFreeEntitiesCollection","freeEntityCollection","forEach","finalOptions","dataSources","dataSource","CustomDataSource","entities","optimizedEntityCollection","entityObject","_a","description","viewFrom","name","availability","suspendEntityCollection","CallbackProperty","_isConstant","has","BillboardDrawerService","billboard","CzmlDrawerService","czmlStream","CzmlDataSource","process","czmlPacket","removeById","acEntity","EllipseDrawerService","ellipse","LabelDrawerService","label","PointDrawerService","PolygonDrawerService","polygon","PolylineDrawerService","polyline","KeyboardAction","PolylinePrimitiveDrawerService","withColorMaterial","cesiumObject","KeyEventState","CAMERA_MOVEMENT_DEFAULT_FACTOR","CAMERA_LOOK_DEFAULT_FACTOR","CAMERA_ROTATE_DEFAULT_FACTOR","PREDEFINED_KEYBOARD_ACTIONS","CAMERA_FORWARD","params","moveRate","globe","cartesianToCartographic","moveForward","CAMERA_BACKWARD","moveBackward","CAMERA_UP","moveUp","CAMERA_DOWN","moveDown","CAMERA_RIGHT","moveRight","CAMERA_LEFT","moveLeft","CAMERA_LOOK_RIGHT","currentPosition","positionCartographic","lookFactor","lookRight","CAMERA_LOOK_LEFT","lookLeft","CAMERA_LOOK_UP","lookUp","CAMERA_LOOK_DOWN","lookDown","CAMERA_TWIST_RIGHT","twistRight","CAMERA_TWIST_LEFT","twistLeft","CAMERA_ROTATE_RIGHT","rotateRight","CAMERA_ROTATE_LEFT","rotateLeft","CAMERA_ROTATE_UP","rotateUp","CAMERA_ROTATE_DOWN","rotateDown","CAMERA_ZOOM_IN","CAMERA_ZOOM_OUT","KeyboardControlService","document","_currentDefinitions","_activeDefinitions","_keyMappingFn","defaultKeyMappingFn","focus","handleKeydown","handleKeyup","handleTick","setKeyboardControls","definitions","keyMappingFn","outsideOfAngularZone","removeKeyboardControls","registerEvents","keys","key","state","NOT_PRESSED","action","keyboardEvent","unregisterEvents","getAction","char","keyEvent","fromCharCode","keyCode","IGNORED","execute","getParams","validation","PRESSED","actionState","executeAction","paramsDef","execution","isNumber","predefinedAction","registerToEvents","clock","onTick","removeEventListener","DOCUMENT","CesiumPureEventObserver","modifier","eventsHandler","observer","Observable","setInputAction","movement","startPosition","endPosition","CesiumLongPressObserver","eventFactory","startEvent","stopEvent","LONG_LEFT_PRESS","LONG_RIGHT_PRESS","LONG_MIDDLE_PRESS","startEventObservable","stopEventObservable","merge","publish","pipe","mergeMap","observableOf","delay","LONG_PRESS_EVENTS_DURATION","takeUntil","CesiumEventBuilder","cesiumEventsObservables","getEventFullName","toString","screenSpaceEventHandler","eventName","eventObserver","createCesiumEventObservable","cesiumEventObservable","longPressEvents","createSpecialCesiumEventObservable","connect","Set","PlonterService","_entitesToPlonter","_plonterChangeNotifier","_plonterObserver","Subject","_plonterShown","_eventResult","plonterIt","eventResult","resolvePlonter","UtilsService","array","reduce","accumulator","currentValue","indexOf","CesiumDragDropHelper","getDragEventTypes","dragEvent","mouseDownEvent","mouseUpEvent","LEFT_CLICK_DRAG","RIGHT_CLICK_DRAG","MIDDLE_CLICK_DRAG","dragEvents","Registration","observable","stopper","isPaused","MapEventsManagerService","eventBuilder","plonterService","eventRegistrations","input","pickConfig","entityType","eventRegistration","createEventRegistration","registrationObservable","disposeObservable","sortRegistrationsByPriority","registrations","index","splice","sort","a","currentPriority","registration","pickOption","pickFilter","createDragEvent","filter","triggerPick","cesiumEntities","picksAndMovement","addEntities","switchMap","entitiesAndMovement","plonter","_b","mouseUpObservable","mouseMoveObservable","mouseDownRegistration","dropSubject","dragObserver","lastMove","dragStartPositionX","dragStartPositionY","drop","tap","dropEvent","pickOptions","picks","PICK_ONE","PICK_ALL","drillPick","drillPickLimit","pickWidth","pickHeight","PICK_FIRST","Entity","MapLayersService","layersDataSources","registerLayerDataSources","zIndex","ds","drawAllLayers","updateAndRefresh","newZIndex","removeDataSources","MapsManagerService","defaultIdCounter","_Maps","eventRemoveCallbacks","firstMap","_registerMap","acMap","mapId","generateDefaultId","_removeMapById","iter","delete","sync2DMapsCameras","mapsConfiguration","unsyncMapsCameras","maps","sensitivity","bindZoom","masterMapConfig","masterMap","masterCamera","getCameraService","masterCameraCartographic","percentageChanged","removeCallback","changed","slaveMapConfig","slaveMap","slaveMapOptions","slaveCamera","slaveCameraCartographic","cartographicToCartesian","getCesiumViewer","mode","MORPHING","ScreenshotService","getMapScreenshotDataUrlBase64","toDataURL","downloadMapScreenshot","filename","dataUrl","downloadURI","uri","link","createElement","download","href","body","appendChild","click","removeChild","AcMapComponent","_cesiumService","_cameraService","_elemRef","mapsManagerService","billboardDrawerService","labelDrawerService","ellipseDrawerService","polylineDrawerService","polygonDrawerService","arcDrawerService","pointDrawerService","czmlDrawerService","keyboardControlService","mapLayersService","configurationService","screenshotService","contextMenuService","coordinateConverter","disableDefaultPlonter","style","className","ngOnInit","containerId","nativeElement","ngOnChanges","changes","firstChange","element","getElementById","ngAfterViewInit","ngOnDestroy","getCesiumService","getId","getMapContainer","getMapEventsManager","getContextMenuService","getScreenshotService","getKeyboardControlService","getCoordinateConverter","Component","selector","template","providers","ElementRef","ConfigurationService","Input","ActionType","LayerService","_cache","descriptions","layerUpdate","_zIndex","_context","context","setEntityName","_entityName","getEntityName","registerDescription","descriptionComponent","unregisterDescription","getDescriptions","layerUpdates","ComputationCache","expression","insertFn","clear","Checker","throwIfAnyNotPresent","propertyNames","throwIfNotPresent","present","DynamicEllipseDrawerService","EllipsePrimitive","updateLocationData","DynamicPolylineDrawerService","StaticPrimitiveDrawer","geometryType","geometryProps","instanceProps","primitiveProps","GeometryInstance","StaticCircleDrawerService","CircleGeometry","StaticPolylineDrawerService","PolylineGeometry","when","readyPromise","then","readyPrimitive","StaticPolygonDrawerService","PolygonGeometry","StaticEllipseDrawerService","EllipseGeometry","ModelDrawerService","model","BoxDrawerService","box","CorridorDrawerService","corridor","CylinderDrawerService","cylinder","EllipsoidDrawerService","PolylineVolumeDrawerService","polylineVolume","WallDrawerService","wall","RectangleDrawerService","rectangle","LabelPrimitiveDrawerService","LabelCollection","BillboardPrimitiveDrawerService","BillboardCollection","PointPrimitiveDrawerService","PointPrimitiveCollection","HtmlDrawerService","HtmlCollection","AcLayerComponent","layerService","_computationCache","modelDrawerService","boxDrawerService","corridorDrawerService","cylinderDrawerService","ellipsoidDrawerSerice","polylineVolumeDrawerService","wallDrawerService","rectangleDrawerService","dynamicEllipseDrawerService","dynamicPolylineDrawerService","staticCircleDrawerService","staticPolylineDrawerService","staticPolygonDrawerService","staticEllipseDrawerService","polylinePrimitiveDrawerService","labelPrimitiveDrawerService","billboardPrimitiveDrawerService","pointPrimitiveDrawerService","htmlDrawerService","store","debug","acForRgx","stopObservable","_updateStream","entitiesStore","layerDrawerDataSources","_drawerList","initValidParams","observableMerge","notification","console","log","contextEntity","updateStore","entityName","actionType","ADD_UPDATE","draw","DELETE","test","acFor","acForArr","split","isObservable","obj","ngAfterContentInit","drawer","drawerName","initOptions","drawerDataSources","apply","showValue_1","zIndexValue","getLayerService","getLayerDrawerDataSources","getDrawerDataSourcesByName","getStore","entityId","updateNotification","refreshAll","observableFrom","changeDetection","ChangeDetectionStrategy","OnPush","EntityOnMapComponent","_drawer","mapLayers","selfPrimitiveIsDraw","drawOnMap","props","previousValue","updateOnMap","selfPrimitive","removeFromMap","Directive","AcBillboardComponent","billboardDrawer","JsonMapper","_mapper","JsonStringMapper","SmartAssigner","allowUndefined","fnBody","prop","assignFn","Function","obj1","obj2","CesiumProperties","_parser","_jsonMapper","_assignersCache","_evaluatorsCache","_compile","withCache","cesiumDesc","propsMap","resultExpression","eval","JSON","stringify","replace","getFn","cache","_build","from","smartAssigner","oldVal","newVal","createEvaluator","newEvaluator","evaluatorFn","createAssigner","Parse","BasicDesc","_layerService","_cesiumProperties","onDraw","onRemove","_cesiumObjectsMap","_propsEvaluator","_propsEvaluateFn","_getPropsAssigner","desc","_propsAssignerFn","setLayerService","getCesiumObjectsMap","Output","AcBillboardDescComponent","computationCache","cesiumProperties","provide","useExisting","forwardRef","AcEllipseDescComponent","ellipseDrawer","AcPolylineDescComponent","PixelOffsetPipe","transform","Pipe","RadiansToDegreesPipe","round","AcLabelDescComponent","labelDrawer","NgModule","imports","CommonModule","AcCircleDescComponent","semiMajorAxis","semiMinorAxis","AcArcDescComponent","arcDrawer","MapLayerProviderOptions","MapTerrainProviderOptions","AcEntity","json","ArcGisMapServerImageryProvider","WebMapTileServiceImageryProvider","TileMapServiceImageryProvider","WebMapServiceImageryProvider","SingleTileImageryProvider","OpenStreetMapImageryProvider","BingMapsImageryProvider","GoogleEarthEnterpriseMapsProvider","MapboxImageryProvider","MapboxStyleImageryProvider","UrlTemplateImageryProvider","CesiumTerrainProvider","ArcGISTiledElevationTerrainProvider","GoogleEarthEnterpriseTerrainProvider","VRTheWorldTerrainProvider","EllipsoidTerrainProvider","createWorldTerrain","AcMapLayerProviderComponent","provider","OFFLINE","alpha","brightness","contrast","imageryLayersCollection","imageryLayers","createOfflineMapProvider","createTileMapServiceImageryProvider","url","buildModuleUrl","WebMapService","WebMapTileService","ArcGisMapServer","SingleTileImagery","BingMaps","GoogleEarthEnterpriseMaps","MapBox","UrlTemplateImagery","MapTileService","OpenStreetMap","layerProvider","imageryLayer","addImageryProvider","isFirstChange","AcMapTerrainProviderComponent","WorldTerrain","defaultTerrainProvider","terrainProvider","CesiumTerrain","ArcGISTiledElevation","GoogleEarthEnterprise","VRTheWorld","AcPointDescComponent","AcLabelComponent","AcPolylineComponent","polylineDrawer","AcEllipseComponent","AcPointComponent","pointDrawer","AcHtmlComponent","elementRef","renderer","isDraw","setScreenPosition","setStyle","hideElement","preRender","preRenderEventListener","ngDoCheck","Renderer2","AcCircleComponent","updateEllipseProps","rotation","AcArcComponent","AcPolygonDescComponent","polygonDrawer","AcDefaultPlonterComponent","cd","geoConverter","plonterChangeNotifier","detectChanges","plonterShown","plonterClickPosition","chooseEntity","ChangeDetectorRef","AcPolygonComponent","BasicStaticPrimitiveDesc","_staticPrimitiveDrawer","_geometryPropsEvaluator","_instancePropsEvaluator","_primitivePropsEvaluator","AcStaticEllipseDescComponent","AcDynamicEllipseDescComponent","AcDynamicPolylineDescComponent","AcStaticPolygonDescComponent","AcStaticCircleDescComponent","staticCircleDrawer","AcDynamicCircleDescComponent","AcStaticPolylineDescComponent","AcModelDescComponent","modelDrawer","AcTileset3dComponent","tilesetInstance","_3dtilesCollection","Cesium3DTileset","Cesium3DTileStyle","AcBoxDescComponent","drawerService","AcCylinderDescComponent","AcCorridorDescComponent","AcEllipsoidDescComponent","AcPolylineVolumeDescComponent","AcWallDescComponent","AcRectangleDescComponent","AcBillboardPrimitiveDescComponent","billboardPrimitiveDrawer","AcLabelPrimitiveDescComponent","labelPrimitiveDrawer","AcPolylinePrimitiveDescComponent","HtmlPrimitive","_mapContainer","pixelOffset","_scene","_element","display","_pixelOffset","Number","MAX_VALUE","_collection","_lastPosition","html","len","pop","CesiumExtender","extend","AcHtmlManager","_entities","addOrUpdate","info","AcHtmlDirective","_templateRef","_viewContainerRef","_changeDetector","_acHtmlManager","_views","_handleView","AcHtmlContext","$implicit","viewRef","createEmbeddedView","TemplateRef","ViewContainerRef","AcHtmlDescComponent","htmlDrawer","acHtmlCreator","acHtmlTemplate","ViewChild","static","ContentChild","AcHtmlContainerDirective","_id","AcContextMenuWrapperComponent","componentFactoryResolver","contextMenuChangeSubscription","contextMenuChangeNotifier","contextMenuOpenSubscription","onOpen","componentFactory","resolveComponentFactory","content","viewContainerRef","createComponent","data","ComponentFactoryResolver","read","AcArrayDescComponent","entitiesMap","arrayObservable$","acForString","arrayPath","layer","layerServiceSubscription","basicDescs","_results","component","arrayDescs","entitiesArray","_get","previousEntitiesIdArray","entitiesIdArray","arrayItemId","generateCombinedId","entitiesToRemove","idGetter","getAcForString","arrayItem","MAX_SAFE_INTEGER","ContentChildren","descendants","AcPointPrimitiveDescComponent","AcPrimitivePolylineComponent","PARSE_PIPES_CONFIG_MAP","pipeName","pipeInstance","AcCzmlDescComponent","czmlDrawer","AcRectangleComponent","rectangleDrawer","AngularCesiumModule","forRoot","ngModule","useValue","PIPES_CONFIG","multi","customPipes","Angular2ParseModule","UtilsModule","declarations","exports","CesiumEventModifier","DisposableObservable","KeyboardEventModifier","ALT","CTRL","SHIFT","EditModes","EditActions","SelectionManagerService","mapsManager","selectedEntitiesItems$","BehaviorSubject","selectedEntitySubject$","selectedEntities$","asObservable","selectedEntities","selectedEntity$","toggleSelection","addSelectedIndicator","addToSelected","removeSelected","current","entityIndex","initSelection","selectionOptions","eventPriority","mapComponent","mapEventsManagerService","EditPoint","pointProps","virtualPoint","editedEntityId","generateId","_virtualEditPoint","isVirtualEditPoint","setVirtualEditPoint","getEditedEntityId","getPosition","getPositionCallbackProperty","setPosition","generateKey","possible","charAt","floor","random","debounce","func","wait","timeout","clearTimeout","DEFAULT_POINT_OPTIONS","addLastPointEvent","removePointEvent","dragPointEvent","allowDrag","withAlpha","outlineColor","BLACK","outlineWidth","pixelSize","disableDepthTestDistance","POSITIVE_INFINITY","PointsEditorService","updateSubject","updatePublisher","observablesMap","cameraService","pointManager","cesiumScene","onUpdate","screenToPosition","cartesian2","ray","getPickRay","pointOptions","setOptions","clientEditSubject","editAction","editMode","CREATE","INIT","finishCreation","switchToEditMode","editorObservable","mouseMoveRegistration","pickConfiguration","addLastPointRegistration","addLastPointModifier","createEditorObservable","updatedPosition","finishedCreate","CREATE_OR_EDIT","ADD_LAST_POINT","getPoint","changeMode","CHANGE_TO_EDIT","editPoint","edit","editSubject","EDIT","editObservable","pointDragRegistration","pointRemoveRegistration","removePointModifier","DRAG_POINT_FINISH","DRAG_POINT","observables","defaultClone","parse","observableToExtend","obs","DISPOSE","enable","ENABLE","disable","DISABLE","setManually","SET_MANUALLY","setLabelsRenderFn","SET_EDIT_LABELS_RENDER_CALLBACK","labelsRenderFn","updateLabels","labels","UPDATE_EDIT_LABELS","getCurrentPoint","getEditValue","getLabels","defaultLabelProps","backgroundColor","backgroundPadding","fillColor","font","heightReference","HeightReference","NONE","horizontalOrigin","HorizontalOrigin","LEFT","ZERO","pixelOffsetScaleByDistance","scale","scaleByDistance","showBackground","LabelStyle","FILL","text","translucencyByDistance","verticalOrigin","VerticalOrigin","BASELINE","eyeOffset","EditablePoint","pointLayer","editOptions","_enableEdit","_labels","_props","createFromExisting","DIMGREY","updatePointLayer","hasPosition","enableEdit","newProps","pointProp","addLastPoint","movePoint","toPosition","PointsManagerService","points","createEditablePoint","editPointLayer","editablePoint","enableAll","disableAll","PointsEditorComponent","pointsEditor","pointsManager","editPoint$","pointLabels$","startListeningToEditorUpdates","handleCreateUpdates","handleEditUpdates","getLabelId","renderEditLabels","pointLabelsLayer","editLabelsRenderFn","removeEditLabels","getPointSize","virtualPointPixelSize","getPointShow","showVirtual","EditPolyline","polylineProps","_polylineProps","getPositions","getPositionsCallbackProperty","validatePositions","getStartPosition","getEndPosition","setStartPosition","setEndPosition","EditablePolygon","polygonsLayer","pointsLayer","polylinesLayer","polygonOptions","polylines","doneCreation","polygonProps","defaultPointProps","defaultPolylineProps","getRealPositions","_defaultPolylineProps","_defaultPointProps","_polygonProps","updatePointsLayer","addPointFromExisting","addAllVirtualEditPoints","updatePolygonsLayer","setPointsManually","newPoints","pointOrCartesian","newPoint","currentPoints","pos","currentPoint","nextIndex","nextPoint","midPoint","setMiddleVirtualPoint","firstP","secondP","midPointCartesian3","lerp","firstIndex","updateMiddleVirtualPoint","virtualEditPoint","prevPoint","changeVirtualPointToRealPoint","pointsCount","pointIndex","preIndex","prePoint","firstMidPoint","secMidPoint","renderPolylines","realPoints","addPoint","movingPoint","movePointFinish","clampHeightTo3D","nextVirtualPoint","nextRealPoint","prevVirtualPoint","prevRealPoint","moveTempMovingPoint","movePolygon","startMovingPosition","draggedToPosition","lastDraggedToPosition","newPos","endMovePolygon","removePoint","pointToRemove","removePosition","getPointsCount","getRealPoints","getPoints","getPositionsHierarchy","PolygonHierarchy","getPositionsHierarchyCallbackProperty","findIndex","line","PolygonsManagerService","polygons","createEditablePolygon","editPolygonsLayer","editPointsLayer","editPolylinesLayer","editablePolygon","DEFAULT_POLYGON_OPTIONS","addPointEvent","dragShapeEvent","CORNFLOWERBLUE","fill","classificationType","ClassificationType","BOTH","ɵ0$1","clampToGround","clampHeightTo3DOptions","clampToTerrain","clampMostDetailed","clampToHeightPickWidth","PolygonsEditorService","clampPointsDebounced","clampPoints","polygonsManager","points_1","cartographics","promise","sampleTerrain","updatedPositions","toCartesian","clampToHeight","globePositionPick","cartesian3PickPosition","addPointRegistration","addPointModifier","allPositions","find","updateValue","ADD_POINT","maximumNumberOfPoints","editPolygon","shapeDragRegistration","updatedPoint","endDragPosition","startDragPosition","draggedPosition","DRAG_SHAPE_FINISH","DRAG_SHAPE","REMOVE_POINT","warn","pickPositionSupported","clampToHeightSupported","pickTranslucentDepth","CLAMP_TO_GROUND","RELATIVE_TO_GROUND","getCurrentPoints","PolygonsEditorComponent","polygonsEditor","editPoints$","editPolylines$","editPolygons$","EditArc","_arcProps","_center","_radius","_delta","_angle","updateCenter","EditableCircle","circlesLayer","arcsLayer","_circleProps","circleProps","_pointProps","_radiusPoint","radiusPoint","centerPointProp","radiusPointProp","circleProp","_outlineArc","getRadius","createOutlineArc","updateArcsLayer","updateCirclesLayer","moveCircle","dragStartPosition","dragEndPosition","newCenterPosition","getCenter","getRadiusCallbackProperty","getCenterCallbackProperty","getRadiusPoint","CirclesManagerService","circles","createEditableCircle","editCirclesLayer","editArcsLayer","circleOptions","editableCircle","circle","DEFAULT_CIRCLE_OPTIONS","outline","CirclesEditorService","circlesManager","getCircleProperties","editCircle","pointIsCenter","getCenterPoint","getCenterPosition","getRadiusPosition","CirclesEditorComponent","circlesEditor","editCircles$","editArcs$","EditableEllipse","ellipsesLayer","_rotation","_minorRadiusPoints","_ellipseProps","ellipseProps","_majorRadiusPoint","midpoint","_minorRadius","getMinorRadiusPointPosition","getMajorRadiusPointPosition","majorRadius","minorRadius","ellipseProp","_majorRadius","majorRadiusPosition","updateMinorRadiusEditPoints","updateEllipsesLayer","updateRotation","transformToEllipse","getMajorRadius","newRadius","circleToEllipseTransformation","majorRadiusPoint","moveEllipse","getRotation","endMoveEllipse","getMinorRadius","azimuthInDegrees","getRotationCallbackProperty","getMinorRadiusCallbackProperty","getMajorRadiusCallbackProperty","EllipsesManagerService","ellipses","createEditableEllipse","editEllipsesLayer","ellipseOptions","editableEllipse","DEFAULT_ELLIPSE_OPTIONS","circleToEllipseTransformEvent","circleToEllipseTransformEventModifier","EllipsesEditorService","ellipsesManager","editEllipse","addSecondRadiusRegistration","getEllipseProperties","TRANSFORM","minorRadiusPointPosition","majorRadiusPointPosition","EllipsesEditorComponent","ellipsesEditor","editEllipses$","EditablePolyline","moveShape","endMoveShape","EditableRectangle","rectangleLayer","rectangleProps","_rectangleProps","updateRectangleLayer","widthMeters","lastDraggedCartographic","draggedToPositionCartographic","endMovePoint","getRealPositionsCallbackProperty","getRectangle","longitudes","latitudes","Rectangle","getRectangleCallbackProperty","EditorObservable","PointEditorObservable","PolylineEditorObservable","PolygonEditorObservable","RectangleEditorObservable","CircleEditorObservable","EllipseEditorObservable","HippodromeEditorObservable","EditableHippodrome","hippodromeLayer","hippodromeProps","_hippodromeProps","createHeightEditPoints","updateHippdromeLayer","secP","bearingDeg","upAzimuth","createMiddleEditablePoint","downAzimuth","azimuth","upEditCartesian3","changeWidthByNewPoint","normalizedBearingDeb","bearingDegHippodromeDots","fixedBearingDeg","distanceMeters","abs","radiusWidth","getWidth","DEFAULT_POLYLINE_OPTIONS","PolylinesEditorService","polylinesManager","polylineOptions","editPolyline","PolylinesManagerService","createEditablePolyline","editablePolyline","PolylinesEditorComponent","polylinesEditor","polylineLabels$","polylineLabelsLayer","HippodromeManagerService","hippodromes","createEditableHippodrome","editHippodromeLayer","hippodromeEditOptions","editableHippodrome","hippodrome","DEFAULT_HIPPODROME_OPTIONS","HippodromeEditorService","managerService","hippodromeManager","hippodromeOptions","editHippodrome","isFirstPoint","firstPosition","secondPosition","firstPointProp","secondPointProp","getCurrentWidth","HippodromeEditorComponent","hippodromesEditor","hippodromesManager","editHippodromes$","editHippodromesLayer","DraggableToMapService","mainSubject","setCoordinateConverter","drag","imageSrc","cancel","imgElement","src","visibility","createDragObservable","dragObservable","clientWidth","clientHeight","dragUpdates","pointerUp","observableFromEvent","moveObservable","initialScreenPosition","mapPosition","DraggableToMapDirective","el","iconDragService","draggableToMap","onMouseDown","HostListener","AcToolbarComponent","onDrag","dragStyle","height.px","width.px","listenForDragging","dragSubscription","mouseDown$","mouseMove$","mouseUp$","drag$","AcToolbarButtonComponent","onClick","MouseButtons","RangeAndBearingComponent","polylineEditor","lineEditOptions","labelsStyle","distanceLabelsStyle","bearingLabelsStyle","_c","_d","_e","_f","bearingStringFn","distanceStringFn","rnb","totalDistance","previousPosition","bearing","toFixed","ZoomToRectangleService","mapsZoomElements","animationDurationInSeconds","resetKeyCode","borderStyle","autoDisableOnZoom","threshold","keepRotation","mouseButton","activate","container","mapZoomData","borderElement","mouse","endX","endY","startX","startY","onmousedown","button","onStart","rect","currentTarget","offsetX","clientX","offsetY","clientY","border","onmouseup","zoomApplied","zoomCameraToRectangle","onComplete","onmousemove","resetOnEscapePress","resetOnEscapePressFunc","animationDuration","cartesian1","cartographic1","cartographic2","RectanglesManagerService","rectangles","createEditableRectangle","editRectanglesLayer","rectangleOptions","editableRectangle","DEFAULT_RECTANGLE_OPTIONS","extrudedHeight","RectanglesEditorService","rectanglesManager","editRectangle","RectanglesEditorComponent","rectanglesEditor","editRectangles$","DragIconComponent"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ViewerFactory {\n  cesium: any;\n\n\n  constructor() {\n    this.cesium = Cesium;\n  }\n\n  /**\n   * Creates a viewer with default or custom options\n   * @param mapContainer - container to initialize the viewer on\n   * @param options - Options to create the viewer with - Optional\n   *\n   * @returns new viewer\n   */\n  createViewer(mapContainer: HTMLElement, options?: any) {\n    let viewer = null;\n    if (options) {\n      viewer = new this.cesium.Viewer(mapContainer, {\n        contextOptions: {\n          webgl: {preserveDrawingBuffer: true}\n        },\n        ...options\n      });\n    } else {\n      viewer = new this.cesium.Viewer(mapContainer,\n        {\n          contextOptions: {\n            webgl: {preserveDrawingBuffer: true}\n          },\n        });\n    }\n\n    return viewer;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Service for setting cesium viewer map options.\n * defaulty angular-cesium doesnt provide this service and viewer is created with default options.\n * In order set specific options you must set this service as provider in your component and\n * set the wanted options.\n * ```typescript\n * constructor(viewerConf :ViewerConfiguration ) {\n *   viewerConf.viewerOptions = { timeline: false };\n * }\n * ```\n * notice this configuration will be for all <ac-maps> in your component.\n */\n@Injectable()\nexport class ViewerConfiguration {\n  /**\n   * cesium viewer options According to [Viewer]{@link https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=vie}\n   */\n  private _viewerOptions: object | object[];\n  private _viewerModifier: Function | Function[];\n  private nextViewerOptionsIndex = 0;\n  private nextViewerModifierIndex = 0;\n\n  get viewerOptions(): object | object[] {\n    return this._viewerOptions;\n  }\n\n  Ï;\n\n  getNextViewerOptions(): object | object[] {\n    if (this._viewerOptions instanceof Array) {\n      return this._viewerOptions[this.nextViewerOptionsIndex++];\n    } else {\n      return this._viewerOptions;\n    }\n  }\n\n  /**\n   * Can be used to set initial map viewer options.\n   * If there is more than one map you can give the function an array of options.\n   * The map initialized first will be set with the first option object in the options array and so on.\n   */\n  set viewerOptions(value: object | object[]) {\n    this._viewerOptions = value;\n  }\n\n  get viewerModifier(): Function | Function[] {\n    return this._viewerModifier;\n  }\n\n  getNextViewerModifier(): Function | Function[] {\n    if (this._viewerModifier instanceof Array) {\n      return this._viewerModifier[this.nextViewerModifierIndex++];\n    } else {\n      return this._viewerModifier;\n    }\n  }\n\n  /**\n   * Can be used to set map viewer options after the map has been initialized.\n   * If there is more than one map you can give the function an array of functions.\n   * The map initialized first will be set with the first option object in the options array and so on.\n   */\n  set viewerModifier(value: Function | Function[]) {\n    this._viewerModifier = value;\n  }\n}\n","import { Injectable, NgZone, Optional } from '@angular/core';\nimport { ViewerFactory } from '../viewer-factory/viewer-factory.service';\nimport { ViewerConfiguration } from '../viewer-configuration/viewer-configuration.service';\nimport { AcMapComponent } from '../../components/ac-map/ac-map.component';\n\n/**\n *  Service that initialize cesium viewer and expose cesium viewer and scene.\n */\n@Injectable()\nexport class CesiumService {\n  private cesiumViewer: any;\n  private map: AcMapComponent;\n\n  constructor(private ngZone: NgZone, private viewerFactory: ViewerFactory, @Optional() private viewerConfiguration: ViewerConfiguration) {\n  }\n\n  init(mapContainer: HTMLElement, map: AcMapComponent) {\n    this.map = map;\n    this.ngZone.runOutsideAngular(() => {\n      const options = this.viewerConfiguration ? this.viewerConfiguration.getNextViewerOptions() : undefined;\n      this.cesiumViewer = this.viewerFactory.createViewer(mapContainer, options);\n\n      const viewerModifier = this.viewerConfiguration && this.viewerConfiguration.getNextViewerModifier();\n      if (typeof viewerModifier === 'function') {\n        viewerModifier(this.cesiumViewer);\n      }\n    });\n  }\n\n  /**\n   * For more information see https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=viewe\n   * @returns cesiumViewer\n   */\n  getViewer() {\n    return this.cesiumViewer;\n  }\n\n  /**\n   * For more information see https://cesiumjs.org/Cesium/Build/Documentation/Scene.html?classFilter=scene\n   * @returns cesium scene\n   */\n  getScene() {\n    return this.cesiumViewer.scene;\n  }\n\n  /**\n   * For more information see https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API\n   * @returns cesium canvas\n   */\n  getCanvas(): HTMLCanvasElement {\n    return this.cesiumViewer.canvas as HTMLCanvasElement;\n  }\n\n  getMap(): AcMapComponent {\n    return this.map;\n  }\n}\n","/**\n * Fix for the constant entity shadowing.\n * PR in Cesium repo: https://github.com/AnalyticalGraphicsInc/cesium/pull/5736\n */\n\n// tslint:disable\nconst AssociativeArray = Cesium.AssociativeArray;\nconst Color = Cesium.Color;\nconst ColorGeometryInstanceAttribute = Cesium.ColorGeometryInstanceAttribute;\nconst defined = Cesium.defined;\nconst DistanceDisplayCondition = Cesium.DistanceDisplayCondition;\nconst DistanceDisplayConditionGeometryInstanceAttribute = Cesium.DistanceDisplayConditionGeometryInstanceAttribute;\nconst ShowGeometryInstanceAttribute = Cesium.ShowGeometryInstanceAttribute;\nconst Primitive = Cesium.Primitive;\nconst ShadowMode = Cesium.ShadowMode;\nconst BoundingSphereState = Cesium.BoundingSphereState;\nconst ColorMaterialProperty = Cesium.ColorMaterialProperty;\nconst MaterialProperty = Cesium.MaterialProperty;\nconst Property = Cesium.Property;\n\nvar colorScratch = new Color();\nvar distanceDisplayConditionScratch = new DistanceDisplayCondition();\nvar defaultDistanceDisplayCondition = new DistanceDisplayCondition();\n\nfunction Batch(primitives, translucent, appearanceType, depthFailAppearanceType, depthFailMaterialProperty, closed, shadows) {\n  this.translucent = translucent;\n  this.appearanceType = appearanceType;\n  this.depthFailAppearanceType = depthFailAppearanceType;\n  this.depthFailMaterialProperty = depthFailMaterialProperty;\n  this.depthFailMaterial = undefined;\n  this.closed = closed;\n  this.shadows = shadows;\n  this.primitives = primitives;\n  this.createPrimitive = false;\n  this.waitingOnCreate = false;\n  this.primitive = undefined;\n  this.oldPrimitive = undefined;\n  this.geometry = new AssociativeArray();\n  this.updaters = new AssociativeArray();\n  this.updatersWithAttributes = new AssociativeArray();\n  this.attributes = new AssociativeArray();\n  this.subscriptions = new AssociativeArray();\n  this.showsUpdated = new AssociativeArray();\n  this.itemsToRemove = [];\n  this.invalidated = false;\n  \n  var removeMaterialSubscription;\n  if (defined(depthFailMaterialProperty)) {\n    removeMaterialSubscription = depthFailMaterialProperty.definitionChanged.addEventListener(Batch.prototype.onMaterialChanged, this);\n  }\n  this.removeMaterialSubscription = removeMaterialSubscription;\n}\n\nBatch.prototype.onMaterialChanged = function () {\n  this.invalidated = true;\n};\n\nBatch.prototype.isMaterial = function (updater) {\n  var material = this.depthFailMaterialProperty;\n  var updaterMaterial = updater.depthFailMaterialProperty;\n  if (updaterMaterial === material) {\n    return true;\n  }\n  if (defined(material)) {\n    return material.equals(updaterMaterial);\n  }\n  return false;\n};\n\nBatch.prototype.add = function (updater, instance) {\n  var id = updater.id;\n  this.createPrimitive = true;\n  this.geometry.set(id, instance);\n  this.updaters.set(id, updater);\n  if (!updater.hasConstantFill || !updater.fillMaterialProperty.isConstant || !Property.isConstant(updater.distanceDisplayConditionProperty)) {\n    this.updatersWithAttributes.set(id, updater);\n  } else {\n    var that = this;\n    this.subscriptions.set(id, updater.entity.definitionChanged.addEventListener(function (entity, propertyName, newValue, oldValue) {\n      if (propertyName === 'isShowing') {\n        that.showsUpdated.set(updater.id, updater);\n      }\n    }));\n  }\n};\n\nBatch.prototype.remove = function (updater) {\n  var id = updater.id;\n  this.createPrimitive = this.geometry.remove(id) || this.createPrimitive;\n  if (this.updaters.remove(id)) {\n    this.updatersWithAttributes.remove(id);\n    var unsubscribe = this.subscriptions.get(id);\n    if (defined(unsubscribe)) {\n      unsubscribe();\n      this.subscriptions.remove(id);\n    }\n  }\n};\n\nBatch.prototype.update = function (time) {\n  var isUpdated = true;\n  var removedCount = 0;\n  var primitive = this.primitive;\n  var primitives = this.primitives;\n  var attributes;\n  var i;\n  \n  if (this.createPrimitive) {\n    var geometries = this.geometry.values;\n    if (geometries.length > 0) {\n      if (defined(primitive)) {\n        if (!defined(this.oldPrimitive)) {\n          this.oldPrimitive = primitive;\n        } else {\n          primitives.remove(primitive);\n        }\n      }\n      \n      for (i = 0; i < geometries.length; i++) {\n        var geometryItem = geometries[i];\n        var originalAttributes = geometryItem.attributes;\n        attributes = this.attributes.get(geometryItem.id.id);\n        \n        if (defined(attributes)) {\n          if (defined(originalAttributes.show)) {\n            originalAttributes.show.value = attributes.show;\n          }\n          if (defined(originalAttributes.color)) {\n            originalAttributes.color.value = attributes.color;\n          }\n          if (defined(originalAttributes.depthFailColor)) {\n            originalAttributes.depthFailColor.value = attributes.depthFailColor;\n          }\n        }\n      }\n      \n      var depthFailAppearance;\n      if (defined(this.depthFailAppearanceType)) {\n        if (defined(this.depthFailMaterialProperty)) {\n          this.depthFailMaterial = MaterialProperty.getValue(time, this.depthFailMaterialProperty, this.depthFailMaterial);\n        }\n        depthFailAppearance = new this.depthFailAppearanceType({\n          material: this.depthFailMaterial,\n          translucent: this.translucent,\n          closed: this.closed\n        });\n      }\n      \n      primitive = new Primitive({\n        show: false,\n        asynchronous: true,\n        geometryInstances: geometries,\n        appearance: new this.appearanceType({\n          flat: this.shadows === ShadowMode.DISABLED || this.shadows === ShadowMode.CAST_ONLY,\n          translucent: this.translucent,\n          closed: this.closed\n        }),\n        depthFailAppearance: depthFailAppearance,\n        shadows: this.shadows\n      });\n      primitives.add(primitive);\n      isUpdated = false;\n    } else {\n      if (defined(primitive)) {\n        primitives.remove(primitive);\n        primitive = undefined;\n      }\n      var oldPrimitive = this.oldPrimitive;\n      if (defined(oldPrimitive)) {\n        primitives.remove(oldPrimitive);\n        this.oldPrimitive = undefined;\n      }\n    }\n    \n    this.attributes.removeAll();\n    this.primitive = primitive;\n    this.createPrimitive = false;\n    this.waitingOnCreate = true;\n  } else if (defined(primitive) && primitive.ready) {\n    primitive.show = true;\n    if (defined(this.oldPrimitive)) {\n      primitives.remove(this.oldPrimitive);\n      this.oldPrimitive = undefined;\n    }\n    \n    if (defined(this.depthFailAppearanceType) && !(this.depthFailMaterialProperty instanceof ColorMaterialProperty)) {\n      this.depthFailMaterial = MaterialProperty.getValue(time, this.depthFailMaterialProperty, this.depthFailMaterial);\n      this.primitive.depthFailAppearance.material = this.depthFailMaterial;\n    }\n    \n    var updatersWithAttributes = this.updatersWithAttributes.values;\n    var length = updatersWithAttributes.length;\n    var waitingOnCreate = this.waitingOnCreate;\n    for (i = 0; i < length; i++) {\n      var updater = updatersWithAttributes[i];\n      var instance = this.geometry.get(updater.id);\n      \n      attributes = this.attributes.get(instance.id.id);\n      if (!defined(attributes)) {\n        attributes = primitive.getGeometryInstanceAttributes(instance.id);\n        this.attributes.set(instance.id.id, attributes);\n      }\n      \n      if (!updater.fillMaterialProperty.isConstant || waitingOnCreate) {\n        var colorProperty = updater.fillMaterialProperty.color;\n        var resultColor = Property.getValueOrDefault(colorProperty, time, Color.WHITE, colorScratch);\n        if (!Color.equals(attributes._lastColor, resultColor)) {\n          attributes._lastColor = Color.clone(resultColor, attributes._lastColor);\n          attributes.color = ColorGeometryInstanceAttribute.toValue(resultColor, attributes.color);\n          if ((this.translucent && attributes.color[3] === 255) || (!this.translucent && attributes.color[3] !== 255)) {\n            this.itemsToRemove[removedCount++] = updater;\n          }\n        }\n      }\n      \n      if (defined(this.depthFailAppearanceType) && updater.depthFailMaterialProperty instanceof ColorMaterialProperty && (!updater.depthFailMaterialProperty.isConstant || waitingOnCreate)) {\n        var depthFailColorProperty = updater.depthFailMaterialProperty.color;\n        var depthColor = Property.getValueOrDefault(depthFailColorProperty, time, Color.WHITE, colorScratch);\n        if (!Color.equals(attributes._lastDepthFailColor, depthColor)) {\n          attributes._lastDepthFailColor = Color.clone(depthColor, attributes._lastDepthFailColor);\n          attributes.depthFailColor = ColorGeometryInstanceAttribute.toValue(depthColor, attributes.depthFailColor);\n        }\n      }\n      \n      var show = updater.entity.isShowing && (updater.hasConstantFill || updater.isFilled(time));\n      var currentShow = attributes.show[0] === 1;\n      if (show !== currentShow) {\n        attributes.show = ShowGeometryInstanceAttribute.toValue(show, attributes.show);\n      }\n      \n      var distanceDisplayConditionProperty = updater.distanceDisplayConditionProperty;\n      if (!Property.isConstant(distanceDisplayConditionProperty)) {\n        var distanceDisplayCondition = Property.getValueOrDefault(distanceDisplayConditionProperty, time, defaultDistanceDisplayCondition, distanceDisplayConditionScratch);\n        if (!DistanceDisplayCondition.equals(distanceDisplayCondition, attributes._lastDistanceDisplayCondition)) {\n          attributes._lastDistanceDisplayCondition = DistanceDisplayCondition.clone(distanceDisplayCondition, attributes._lastDistanceDisplayCondition);\n          attributes.distanceDisplayCondition = DistanceDisplayConditionGeometryInstanceAttribute.toValue(distanceDisplayCondition, attributes.distanceDisplayCondition);\n        }\n      }\n    }\n    \n    this.updateShows(primitive);\n    this.waitingOnCreate = false;\n  } else if (defined(primitive) && !primitive.ready) {\n    isUpdated = false;\n  }\n  this.itemsToRemove.length = removedCount;\n  return isUpdated;\n};\n\nBatch.prototype.updateShows = function (primitive) {\n  var showsUpdated = this.showsUpdated.values;\n  var length = showsUpdated.length;\n  for (var i = 0; i < length; i++) {\n    var updater = showsUpdated[i];\n    var instance = this.geometry.get(updater.id);\n    \n    var attributes = this.attributes.get(instance.id.id);\n    if (!defined(attributes)) {\n      attributes = primitive.getGeometryInstanceAttributes(instance.id);\n      this.attributes.set(instance.id.id, attributes);\n    }\n    \n    var show = updater.entity.isShowing;\n    var currentShow = attributes.show[0] === 1;\n    if (show !== currentShow) {\n      attributes.show = ShowGeometryInstanceAttribute.toValue(show, attributes.show);\n    }\n  }\n  this.showsUpdated.removeAll();\n};\n\nBatch.prototype.contains = function (updater) {\n  return this.updaters.contains(updater.id);\n};\n\nBatch.prototype.getBoundingSphere = function (updater, result) {\n  var primitive = this.primitive;\n  if (!primitive.ready) {\n    return BoundingSphereState.PENDING;\n  }\n  var attributes = primitive.getGeometryInstanceAttributes(updater.entity);\n  if (!defined(attributes) || !defined(attributes.boundingSphere) ||//\n    (defined(attributes.show) && attributes.show[0] === 0)) {\n    return BoundingSphereState.FAILED;\n  }\n  attributes.boundingSphere.clone(result);\n  return BoundingSphereState.DONE;\n};\n\nBatch.prototype.removeAllPrimitives = function () {\n  var primitives = this.primitives;\n  \n  var primitive = this.primitive;\n  if (defined(primitive)) {\n    primitives.remove(primitive);\n    this.primitive = undefined;\n    this.geometry.removeAll();\n    this.updaters.removeAll();\n  }\n  \n  var oldPrimitive = this.oldPrimitive;\n  if (defined(oldPrimitive)) {\n    primitives.remove(oldPrimitive);\n    this.oldPrimitive = undefined;\n  }\n};\n\nBatch.prototype.destroy = function () {\n  var primitive = this.primitive;\n  var primitives = this.primitives;\n  if (defined(primitive)) {\n    primitives.remove(primitive);\n  }\n  var oldPrimitive = this.oldPrimitive;\n  if (defined(oldPrimitive)) {\n    primitives.remove(oldPrimitive);\n  }\n  if (defined(this.removeMaterialSubscription)) {\n    this.removeMaterialSubscription();\n  }\n};\n\n\nlet wasFixed = false;\n\nexport function fixCesiumEntitiesShadows() {\n  if (wasFixed) {\n    return;\n  }\n  Cesium.StaticGeometryColorBatch.prototype.add = function (time: any, updater: any) {\n    var items;\n    var translucent;\n    var instance = updater.createFillGeometryInstance(time);\n    if (instance.attributes.color.value[3] === 255) {\n      items = this._solidItems;\n      translucent = false;\n    } else {\n      items = this._translucentItems;\n      translucent = true;\n    }\n    \n    var length = items.length;\n    for (var i = 0; i < length; i++) {\n      var item = items[i];\n      if (item.isMaterial(updater)) {\n        item.add(updater, instance);\n        return;\n      }\n      \n    }\n    \n    var batch: any = new Batch(this._primitives, translucent, this._appearanceType, this._depthFailAppearanceType, updater.depthFailMaterialProperty, this._closed, this._shadows);\n    batch.add(updater, instance);\n    items.push(batch);\n  };\n  wasFixed = true;\n}\n","/**\n * Cesium scene modes\n */\nexport enum SceneMode {\n  SCENE3D,\n  COLUMBUS_VIEW,\n  SCENE2D,\n  PERFORMANCE_SCENE2D\n}\n","import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { fixCesiumEntitiesShadows } from './StaticGeometryColorBatch';\n\nexport const ANGULAR_CESIUM_CONFIG = new InjectionToken('ANGULAR_CESIUM_CONFIG');\n\n@Injectable()\nexport class ConfigurationService {\n  constructor(@Optional() @Inject(ANGULAR_CESIUM_CONFIG) private config: any) {\n    const fixEntitiesShadows = config ? config.fixEntitiesShadows : true;\n    if (fixEntitiesShadows !== false) {\n      fixCesiumEntitiesShadows();\n    }\n  }\n}\n","/**\n * Event options for registration on map-event-manager.\n */\nexport enum CesiumEvent {\n  MOUSE_MOVE = Cesium.ScreenSpaceEventType.MOUSE_MOVE,\n  LEFT_CLICK = Cesium.ScreenSpaceEventType.LEFT_CLICK,\n  LEFT_DOUBLE_CLICK = Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK,\n  LEFT_DOWN = Cesium.ScreenSpaceEventType.LEFT_DOWN,\n  LEFT_UP = Cesium.ScreenSpaceEventType.LEFT_UP,\n  MIDDLE_CLICK = Cesium.ScreenSpaceEventType.MIDDLE_CLICK,\n  MIDDLE_DOUBLE_CLICK = Cesium.ScreenSpaceEventType.MIDDLE_DOUBLE_CLICK,\n  MIDDLE_DOWN = Cesium.ScreenSpaceEventType.MIDDLE_DOWN,\n  MIDDLE_UP = Cesium.ScreenSpaceEventType.MIDDLE_UP,\n  PINCH_START = Cesium.ScreenSpaceEventType.PINCH_START,\n  PINCH_END = Cesium.ScreenSpaceEventType.PINCH_END,\n  PINCH_MOVE = Cesium.ScreenSpaceEventType.PINCH_MOVE,\n  RIGHT_CLICK = Cesium.ScreenSpaceEventType.RIGHT_CLICK,\n  RIGHT_DOUBLE_CLICK = Cesium.ScreenSpaceEventType.RIGHT_DOUBLE_CLICK,\n  RIGHT_DOWN = Cesium.ScreenSpaceEventType.RIGHT_DOWN,\n  RIGHT_UP = Cesium.ScreenSpaceEventType.RIGHT_UP,\n  WHEEL = Cesium.ScreenSpaceEventType.WHEEL,\n  LONG_LEFT_PRESS = 110,\n  LONG_RIGHT_PRESS,\n  LONG_MIDDLE_PRESS,\n  LEFT_CLICK_DRAG,\n  RIGHT_CLICK_DRAG,\n  MIDDLE_CLICK_DRAG,\n}\n","/**\n *  NO_PICK,    - will not pick entities\n *  PICK_FIRST  - first entity will be picked . use Cesium.scene.pick()\n *  PICK_ONE    - in case a few entities are picked plonter is resolved . use Cesium.scene.drillPick()\n *  PICK_ALL    - all entities are picked. use Cesium.scene.drillPick()\n */\nexport enum PickOptions {\n  NO_PICK,\n  PICK_FIRST,\n  PICK_ONE,\n  PICK_ALL\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../cesium/cesium.service';\nimport { SceneMode } from '../../models/scene-mode.enum';\n\n/**\n *  The service exposes the scene's camera and screenSpaceCameraController\n *  SceneMode.PERFORMANCE_SCENE2D -  is a 3D scene mode that acts like Cesium 2D mode,\n *  but is more efficient performance wise.\n */\n@Injectable()\nexport class CameraService {\n  static PERFORMANCE_2D_ALTITUDE = 25000000;\n\n  private viewer: any;\n  private scene: any;\n  private camera: any;\n  private screenSpaceCameraController: any;\n  private morphListenerCancelFn: any;\n  private lastRotate: boolean;\n  private lastTilt: boolean;\n  private lastLook: boolean;\n  private isSceneModePerformance2D = false;\n\n  constructor() {\n  }\n\n  init(cesiumService: CesiumService) {\n    this.viewer = cesiumService.getViewer();\n    this.scene = cesiumService.getScene();\n    this.screenSpaceCameraController = this.scene.screenSpaceCameraController;\n    this.camera = this.scene.camera;\n    this.lastRotate = this.screenSpaceCameraController.enableRotate;\n    this.lastTilt = this.screenSpaceCameraController.enableTilt;\n    this.lastLook = this.screenSpaceCameraController.enableLook;\n  }\n\n  _listenToSceneModeMorph(callback: Function) {\n    this.morphListenerCancelFn = this.scene.morphStart.addEventListener(\n      callback\n    );\n  }\n\n  _revertCameraProperties() {\n    this.isSceneModePerformance2D = false;\n    this.enableTilt(this.lastTilt);\n    this.enableRotate(this.lastRotate);\n    this.enableLook(this.lastLook);\n  }\n\n  /**\n   * Gets the scene's camera\n   */\n  getCamera() {\n    return this.camera;\n  }\n\n  /**\n   * Gets the scene's screenSpaceCameraController\n   */\n  getScreenSpaceCameraController() {\n    return this.screenSpaceCameraController;\n  }\n\n  /**\n   * Gets the minimum zoom value in meters\n   */\n  getMinimumZoom(): number {\n    return this.screenSpaceCameraController.minimumZoomDistance;\n  }\n\n  /**\n   * Sets the minimum zoom value in meters\n   * @param zoom amount\n   */\n  setMinimumZoom(amount: number): void {\n    this.screenSpaceCameraController.minimumZoomDistance = amount;\n  }\n\n  /**\n   * Gets the maximum zoom value in meters\n   */\n  getMaximumZoom(): number {\n    return this.screenSpaceCameraController.maximumZoomDistance;\n  }\n\n  /**\n   * Sets the maximum zoom value in meters\n   * @param zoom amount\n   */\n  setMaximumZoom(amount: number): void {\n    this.screenSpaceCameraController.maximumZoomDistance = amount;\n  }\n\n  /**\n   * Sets if the camera is able to tilt\n   */\n  enableTilt(tilt: boolean): void {\n    this.screenSpaceCameraController.enableTilt = tilt;\n  }\n\n  /**\n   * Sets if the camera is able to rotate\n   */\n  enableRotate(rotate: boolean): void {\n    this.screenSpaceCameraController.enableRotate = rotate;\n  }\n\n  /**\n   * Sets if the camera is able to free-look\n   */\n  enableLook(lock: boolean): void {\n    this.screenSpaceCameraController.enableLook = lock;\n  }\n\n  /**\n   * Sets if the camera is able to translate\n   */\n  enableTranslate(translate: boolean): void {\n    this.screenSpaceCameraController.enableTranslate = translate;\n  }\n\n  /**\n   * Sets if the camera is able to zoom\n   */\n  enableZoom(zoom: boolean): void {\n    this.screenSpaceCameraController.enableZoom = zoom;\n  }\n\n  /**\n   * Sets if the camera receives inputs\n   */\n  enableInputs(inputs: boolean): void {\n    this.screenSpaceCameraController.enableInputs = inputs;\n  }\n\n  /**\n   * Sets the map's SceneMode\n   * @param sceneMode - The SceneMode to morph the scene into.\n   * @param duration - The duration of scene morph animations, in seconds\n   */\n  setSceneMode(sceneMode: SceneMode, duration?: number) {\n    switch (sceneMode) {\n      case SceneMode.SCENE3D: {\n        if (this.isSceneModePerformance2D) {\n          this._revertCameraProperties();\n        }\n\n        this.scene.morphTo3D(duration);\n\n        break;\n      }\n      case SceneMode.COLUMBUS_VIEW: {\n        if (this.isSceneModePerformance2D) {\n          this._revertCameraProperties();\n        }\n\n        this.scene.morphToColumbusView(duration);\n\n        break;\n      }\n      case SceneMode.SCENE2D: {\n        if (this.isSceneModePerformance2D) {\n          this._revertCameraProperties();\n        }\n        this.scene.morphTo2D(duration);\n\n        break;\n      }\n      case SceneMode.PERFORMANCE_SCENE2D: {\n        this.isSceneModePerformance2D = true;\n        this.lastLook = this.screenSpaceCameraController.enableLook;\n        this.lastTilt = this.screenSpaceCameraController.enableTilt;\n        this.lastRotate = this.screenSpaceCameraController.enableRotate;\n        this.screenSpaceCameraController.enableTilt = false;\n        this.screenSpaceCameraController.enableRotate = false;\n        this.screenSpaceCameraController.enableLook = false;\n        if (this.morphListenerCancelFn) {\n          this.morphListenerCancelFn();\n        }\n        this.scene.morphToColumbusView(duration);\n        const morphCompleteEventListener = this.scene.morphComplete.addEventListener(\n          () => {\n            this.camera.setView({\n              destination: Cesium.Cartesian3.fromDegrees(\n                0.0,\n                0.0,\n                Math.min(\n                  CameraService.PERFORMANCE_2D_ALTITUDE,\n                  this.getMaximumZoom()\n                )\n              ),\n              orientation: {\n                pitch: Cesium.Math.toRadians(-90)\n              }\n            });\n            morphCompleteEventListener();\n            this._listenToSceneModeMorph(\n              this._revertCameraProperties.bind(this)\n            );\n          }\n        );\n\n        break;\n      }\n    }\n  }\n\n  /**\n   * Flies the camera to a destination\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Camera.html?classFilter=cam#flyTo\n   */\n  cameraFlyTo(options: any) {\n    if (options) {\n      return this.camera.flyTo(options);\n    }\n  }\n\n  /**\n   * Flies the camera to a target\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=viewer#flyTo\n   * @returns Promise<boolean>\n   */\n  flyTo(target: any, options?: any) {\n    return this.viewer.flyTo(target, options);\n  }\n\n  /**\n   * Zooms amount along the camera's view vector.\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Camera.html#zoomIn\n   */\n  zoomIn(amount: number) {\n    return this.camera.zoomIn(amount || this.camera.defaultZoomAmount);\n  }\n\n  /**\n   * Zooms amount along the opposite direction of the camera's view vector.\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Camera.html#zoomOut\n   */\n  zoomOut(amount: number) {\n    return this.camera.zoomOut(amount || this.camera.defaultZoomAmount);\n  }\n\n  /**\n   * Zoom the camera to a target\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=viewer#zoomTo\n   * @returns Promise<boolean>\n   */\n  zoomTo(target: any, offset?: any) {\n    return this.viewer.zoomTo(target, offset);\n  }\n\n  /**\n   * Flies the camera to a destination\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Camera.html?classFilter=camera#setView\n   * @param options viewer options\n   */\n  setView(options: any) {\n    this.camera.setView(options);\n  }\n\n  /**\n   * Set camera's rotation\n   */\n  setRotation(degreesInRadians: number) {\n    this.setView({orientation: {heading: degreesInRadians}});\n  }\n\n  /**\n   * Locks or unlocks camera rotation\n   */\n  lockRotation(lock: boolean) {\n    this.scene.screenSpaceCameraController.enableRotate = !lock;\n  }\n\n  /**\n   * Make the camera track a specific entity\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=viewer#trackedEntity\n   * @param cesiumEntity - cesium entity( billboard, polygon...) to track\n   * @param options - track entity options\n   */\n  trackEntity(\n    cesiumEntity?: any,\n    options?: { flyTo: boolean; flyToDuration?: number; altitude?: number }\n  ) {\n    const flyTo = (options && options.flyTo) || false;\n\n    this.viewer.trackedEntity = undefined;\n    return new Promise<void>(resolve => {\n      if (flyTo) {\n        const flyToDuration = (options && options.flyToDuration) || 1;\n        const altitude = (options && options.altitude) || 10000;\n\n        // Calc entity flyTo position and wanted altitude\n        const entPosCar3 = cesiumEntity.position.getValue(Cesium.JulianDate.now());\n        const entPosCart = Cesium.Cartographic.fromCartesian(entPosCar3);\n        const zoomAmount = altitude - entPosCart.height;\n        entPosCart.height = altitude;\n        const flyToPosition = Cesium.Cartesian3.fromRadians(\n          entPosCart.longitude,\n          entPosCart.latitude,\n          entPosCart.height\n        );\n\n        this.cameraFlyTo({\n          duration: flyToDuration,\n          destination: flyToPosition,\n          complete: () => {\n            this.viewer.trackedEntity = cesiumEntity;\n            setTimeout(() => {\n              if (zoomAmount > 0) {\n                this.camera.zoomOut(zoomAmount);\n              } else {\n                this.camera.zoomIn(zoomAmount);\n              }\n            }, 0);\n            resolve();\n          }\n        });\n      } else {\n        this.viewer.trackedEntity = cesiumEntity;\n        resolve();\n      }\n    });\n  }\n\n  untrackEntity() {\n    this.trackEntity();\n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { Cartesian3 } from '../../models/cartesian3';\nimport { ContextMenuOptions } from '../../models/context-menu-options';\nimport { MapEventsManagerService } from '../map-events-mananger/map-events-manager';\nimport { CesiumEvent } from '../map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../map-events-mananger/consts/pickOptions.enum';\nimport { DisposableObservable } from '../map-events-mananger/disposable-observable';\nimport { BasicContextMenu } from '../../models/basic-context-menu';\nimport { Subscription } from 'rxjs';\n\n\n/**\n * The Service manages a singleton context menu over the map. It should be initialized with MapEventsManager.\n * The Service allows opening and closing of the context menu and passing data to the context menu inner component.\n *\n * notice, `data` will be injected to your custom menu component into the `data` field in the component.\n * __Usage :__\n * ```\n *  ngOnInit() {\n *   this.clickEvent$ = this.eventsManager.register({ event: CesiumEvent.RIGHT_CLICK, pick: PickOptions.PICK_ONE });\n *   this.clickEvent$.subscribe(result => {\n *    if (result.entities) {\n *      const pickedMarker = result.entities[0];\n *      this.contextMenuService.open(MapContextmenuComponent, pickedMarker.position, {\n *        data: {\n *          myData: data,\n *          onDelete: () => this.delete(pickedMarker.id)\n *        }\n *      });\n *    }\n *   });\n *  }\n *\n *\n *  private delete(id) {\n *    this.mapMenu.close();\n *    this.detailedSiteService.removeMarker(id);\n *  }\n * ```\n */\n@Injectable()\nexport class ContextMenuService {\n  private _showContextMenu = false;\n  private _options: ContextMenuOptions;\n  private _position: Cartesian3;\n  private _content: BasicContextMenu;\n  private mapEventsManager: MapEventsManagerService;\n  private leftClickRegistration: DisposableObservable<any>;\n  private leftClickSubscription: Subscription;\n  private _contextMenuChangeNotifier = new EventEmitter();\n  private _onOpen = new EventEmitter();\n  private _onClose = new EventEmitter();\n  private _defaultContextMenuOptions: ContextMenuOptions = {\n    closeOnLeftCLick: true,\n    closeOnLeftClickPriority: 10,\n  };\n\n  get contextMenuChangeNotifier(): EventEmitter<any> {\n    return this._contextMenuChangeNotifier;\n  }\n\n  get showContextMenu(): boolean {\n    return this._showContextMenu;\n  }\n\n  get options(): ContextMenuOptions {\n    return this._options;\n  }\n\n  get position(): Cartesian3 {\n    return this._position;\n  }\n\n  get content(): BasicContextMenu {\n    return this._content;\n  }\n\n  get onOpen(): EventEmitter<any> {\n    return this._onOpen;\n  }\n\n  get onClose(): EventEmitter<any> {\n    return this._onClose;\n  }\n\n\n  init(mapEventsManager: MapEventsManagerService) {\n    this.mapEventsManager = mapEventsManager;\n  }\n\n  open<D>(contentComponent: any, position: Cartesian3, options: ContextMenuOptions<D> = {}) {\n    this.close();\n    this._content = contentComponent;\n    this._position = position;\n    this._options = Object.assign({}, this._defaultContextMenuOptions, options);\n    this._showContextMenu = true;\n    if (this.mapEventsManager && this._options.closeOnLeftCLick) {\n      this.leftClickRegistration = this.mapEventsManager.register({\n        event: CesiumEvent.LEFT_CLICK,\n        pick: PickOptions.NO_PICK,\n        priority: this._options.closeOnLeftClickPriority,\n      });\n      this.leftClickSubscription = this.leftClickRegistration.subscribe(() => {\n        this.leftClickSubscription.unsubscribe();\n        this.close();\n      });\n    }\n\n    this._contextMenuChangeNotifier.emit();\n    this._onOpen.emit();\n  }\n\n  close() {\n    this._content = undefined;\n    this._position = undefined;\n    this._options = undefined;\n    this._showContextMenu = false;\n    if (this.leftClickRegistration) {\n      this.leftClickRegistration.dispose();\n      this.leftClickRegistration = undefined;\n    }\n    if (this.leftClickSubscription) {\n      this.leftClickSubscription.unsubscribe();\n      this.leftClickSubscription = undefined;\n    }\n\n    this._contextMenuChangeNotifier.emit();\n    this._onClose.emit();\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { CesiumService } from '../cesium/cesium.service';\nimport * as geodesy from 'geodesy';\nimport { hemisphere, LatLon, LatLonEllipsoidal, Utm } from 'geodesy';\nimport { Cartesian3 } from '../../models/cartesian3';\n\nconst LatLonVectors = geodesy['LatLonVectors']; // doesnt exists on typings\n\nwindow['geodesy'] = geodesy;\n\n/**\n *  Given different types of coordinates, we provide you a service converting those types to the most common other types.\n *  We are using the geodesy implementation of UTM conversion. see: https://github.com/chrisveness/geodesy.\n *\n * @example\n * import { Component, OnInit } from '@angular/core';\n * import { CoordinateConverter } from 'angular2-cesium';\n *\n * @Component({\n * \t\tselector:'my-component',\n * \t\ttemplate:'<div>{{showCartographic}}</div>',\n * \t\tproviders:[CoordinateConverter]\n * })\n * export class MyComponent implements OnInit {\n * \t\tshowCartographic;\n *\n * \t\tconstructor(private coordinateConverter:CoordinateConverter){\n * \t\t}\n *\n * \t\tngOnInit(){\n * \t\t\tthis.showCartographic = this.coordinateConverter.degreesToCartographic(5, 5, 5);\n *  }\n * }\n *\n */\n@Injectable()\nexport class CoordinateConverter {\n  constructor(@Optional() private cesiumService?: CesiumService) {\n  }\n\n  static cartesian3ToLatLon(cartesian3: Cartesian3, ellipsoid?: any): {lon: number, lat: number; height: number} {\n    const cart = Cesium.Cartographic.fromCartesian(cartesian3, ellipsoid);\n    return {\n      lon: Cesium.Math.toDegrees(cart.longitude),\n      lat: Cesium.Math.toDegrees(cart.latitude),\n      height: cart.height\n    };\n  }\n\n  screenToCartesian3(screenPos: { x: number, y: number }, addMapCanvasBoundsToPos?: boolean) {\n    if (!this.cesiumService) {\n      throw new Error('ANGULAR2-CESIUM - Cesium service should be provided in order' +\n        ' to do screen position calculations');\n    } else {\n      const screenPosition = { ...screenPos };\n      if (addMapCanvasBoundsToPos) {\n        const mapBounds = this.cesiumService.getViewer().canvas.getBoundingClientRect();\n        screenPosition.x += mapBounds.left;\n        screenPosition.y += mapBounds.top;\n      }\n\n      const camera = this.cesiumService.getViewer().camera;\n      return camera.pickEllipsoid(screenPosition);\n    }\n  }\n\n  screenToCartographic(screenPos: { x: number, y: number }, ellipsoid?: any) {\n    return this.cartesian3ToCartographic(this.screenToCartesian3(screenPos), ellipsoid);\n  }\n\n  cartesian3ToCartographic(cartesian: Cartesian3, ellipsoid?: any) {\n    return Cesium.Cartographic.fromCartesian(cartesian, ellipsoid);\n  }\n\n  degreesToCartographic(longitude: number, latitude: number, height?: number) {\n    return Cesium.Cartographic.fromDegrees(longitude, latitude, height);\n  }\n\n  radiansToCartographic(longitude: number, latitude: number, height?: number) {\n    return Cesium.Cartographic.fromRadians(longitude, latitude, height);\n  }\n\n  degreesToUTM(longitude: number, latitude: number) {\n    return new LatLonEllipsoidal(latitude, longitude).toUtm();\n  }\n\n  UTMToDegrees(zone: number, hemisphereType: hemisphere, easting: number, northing: number) {\n    return this.geodesyToCesiumObject(new Utm(zone, hemisphereType, easting, northing).toLatLonE());\n  }\n\n  private geodesyToCesiumObject(geodesyRadians: LatLon) {\n    return {\n      longitude: geodesyRadians.lon,\n      latitude: geodesyRadians.lat,\n      height: geodesyRadians['height'] ? geodesyRadians['height'] : 0\n    };\n  }\n\n  /**\n   * middle point between two points\n   * @param first  (latitude,longitude) in radians\n   * @param second (latitude,longitude) in radians\n   */\n  midPointToCartesian3(first: { latitude: number, longitude: number }, second: { latitude: number, longitude: number }) {\n    const toDeg = (rad: number) => Cesium.Math.toDegrees(rad);\n    const firstPoint = new LatLonVectors(toDeg(first.latitude), toDeg(first.longitude));\n    const secondPoint = new LatLonVectors(toDeg(second.latitude), toDeg(second.longitude));\n    const middlePoint: any = firstPoint.midpointTo(secondPoint);\n\n    return Cesium.Cartesian3.fromDegrees(middlePoint.lon, middlePoint.lat);\n  }\n\n  middlePointByScreen(position0: Cartesian3, position1: Cartesian3): Cartesian3 {\n    const scene = this.cesiumService.getScene();\n    const screenPosition1 = Cesium.SceneTransforms.wgs84ToWindowCoordinates(scene, position0);\n    const screenPosition2 = Cesium.SceneTransforms.wgs84ToWindowCoordinates(scene, position1);\n    const middleScreenPoint =\n      new Cesium.Cartesian2((screenPosition2.x + screenPosition1.x) / 2.0, (screenPosition2.y + screenPosition1.y) / 2.0);\n    return scene.pickPosition(middleScreenPoint);\n  }\n\n  /**\n   * initial bearing between two points\n   *\n   * * @return bearing in degrees\n   * @param first - {latitude,longitude} in radians\n   * @param second - {latitude,longitude} in radians\n   */\n  bearingTo(first: { latitude: number, longitude: number }, second: { latitude: number, longitude: number }) {\n    const toDeg = (rad: number) => Cesium.Math.toDegrees(rad);\n    const firstPoint = new LatLonVectors(toDeg(first.latitude), toDeg(first.longitude));\n    const secondPoint = new LatLonVectors(toDeg(second.latitude), toDeg(second.longitude));\n    const bearing = firstPoint.bearingTo(secondPoint);\n\n    return bearing;\n  }\n\n  /**\n   * initial bearing between two points\n   *\n   * @return bearing in degrees\n   */\n  bearingToCartesian(firstCartesian3: Cartesian3, secondCartesian3: Cartesian3) {\n    const firstCart = Cesium.Cartographic.fromCartesian(firstCartesian3);\n    const secondCart = Cesium.Cartographic.fromCartesian(secondCartesian3);\n\n    return this.bearingTo(firstCart, secondCart);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","/**\n *  Abstract drawer. All drawers extends this class.\n */\n\nexport abstract class BasicDrawerService {\n  protected _propsAssigner: Function;\n\n  constructor() {\n  }\n\n  abstract add(cesiumProps: any, ...args: any[]): any;\n\n  abstract update(primitive: any, cesiumProps: any, ...args: any[]): void;\n\n  abstract remove(primitive: any): void;\n\n  abstract removeAll(): void;\n\n  abstract setShow(showValue: boolean): void;\n\n  abstract init(options?: any): any;\n\n  setPropsAssigner(assigner: Function) {\n    this._propsAssigner = assigner;\n  }\n}\n","import { CesiumService } from '../../cesium/cesium.service';\nimport { BasicDrawerService } from '../basic-drawer/basic-drawer.service';\n\n/**\n *  General primitives drawer responsible of drawing Cesium primitives.\n *  Drawers the handle Cesium primitives extend it.\n */\nexport abstract class PrimitivesDrawerService extends BasicDrawerService {\n  private _show = true;\n  private _primitiveCollectionWrap: any;\n  protected _cesiumCollection: any;\n  protected _propsAssigner: Function;\n\n  constructor(private drawerType: any, private cesiumService: CesiumService) {\n    super();\n  }\n\n  init() {\n    this._cesiumCollection = new this.drawerType();\n    this._primitiveCollectionWrap = new Cesium.PrimitiveCollection({destroyPrimitives: false});\n    this._primitiveCollectionWrap.add(this._cesiumCollection);\n    this.cesiumService.getScene().primitives.add(this._primitiveCollectionWrap);\n  }\n\n  add(cesiumProps: any, ...args: any[]): any {\n    return this._cesiumCollection.add(cesiumProps);\n  }\n\n  update(entity: any, cesiumProps: any, ...args: any[]) {\n    if (this._propsAssigner) {\n      this._propsAssigner(entity, cesiumProps);\n    } else {\n      Object.assign(entity, cesiumProps);\n    }\n  }\n\n  remove(entity: any) {\n    this._cesiumCollection.remove(entity);\n  }\n\n  removeAll() {\n    this._cesiumCollection.removeAll();\n  }\n\n  setShow(showValue: boolean) {\n    this._show = showValue;\n    this._primitiveCollectionWrap.show = showValue;\n  }\n\n  getShow(): boolean {\n    return this._show;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../cesium/cesium.service';\nimport { Cartesian3 } from '../../models/cartesian3';\nimport { Vec3 } from '../../models/vec3';\n\n@Injectable()\nexport class GeoUtilsService {\n  static pointByLocationDistanceAndAzimuth(currentLocation: any, meterDistance: number, radianAzimuth: number, deprecated?) {\n    const distance = meterDistance / Cesium.Ellipsoid.WGS84.maximumRadius;\n    const cartographicLocation =\n      currentLocation instanceof Cesium.Cartesian3 ? Cesium.Cartographic.fromCartesian(currentLocation) : currentLocation;\n    const cartesianLocation =\n      currentLocation instanceof Cesium.Cartesian3\n        ? currentLocation\n        : Cesium.Cartesian3.fromRadians(currentLocation.longitude, currentLocation.latitude, currentLocation.height);\n\n    let resultPosition;\n    let resultDistance;\n    let counter = 0;\n    let distanceFactorRangeMax = 0.1;\n    let distanceFactorRangeMin = -0.1;\n    while (\n      counter === 0 ||\n      (counter < 16 && Math.max(resultDistance, meterDistance) / Math.min(resultDistance, meterDistance) > 1.000001)\n      ) {\n      const factor = distanceFactorRangeMin + (distanceFactorRangeMax - distanceFactorRangeMin) / 2;\n      resultPosition = GeoUtilsService._pointByLocationDistanceAndAzimuth(cartographicLocation, distance * (1 + factor), radianAzimuth);\n      resultDistance = this.distance(cartesianLocation, resultPosition);\n\n      if (resultDistance > meterDistance) {\n        distanceFactorRangeMax = distanceFactorRangeMin + (distanceFactorRangeMax - distanceFactorRangeMin) / 2;\n      } else {\n        distanceFactorRangeMin = distanceFactorRangeMin + (distanceFactorRangeMax - distanceFactorRangeMin) / 2;\n      }\n      counter++;\n    }\n\n    return resultPosition;\n  }\n\n  static _pointByLocationDistanceAndAzimuth(cartographicLocation: any, distance: number, radianAzimuth: number) {\n    const curLat = cartographicLocation.latitude;\n    const curLon = cartographicLocation.longitude;\n    const destinationLat = Math.asin(\n      Math.sin(curLat) * Math.cos(distance) + Math.cos(curLat) * Math.sin(distance) * Math.cos(radianAzimuth),\n    );\n\n    let destinationLon =\n      curLon +\n      Math.atan2(\n        Math.sin(radianAzimuth) * Math.sin(distance) * Math.cos(curLat),\n        Math.cos(distance) - Math.sin(curLat) * Math.sin(destinationLat),\n      );\n\n    destinationLon = ((destinationLon + 3 * Math.PI) % (2 * Math.PI)) - Math.PI;\n\n    return Cesium.Cartesian3.fromRadians(destinationLon, destinationLat);\n  }\n\n  static distance(pos0: Cartesian3, pos1: Cartesian3): number {\n    return Cesium.Cartesian3.distance(pos0, pos1);\n  }\n\n  static getPositionsDelta(position0: Cartesian3, position1: Cartesian3): Vec3 {\n    return {\n      x: position1.x - position0.x,\n      y: position1.y - position0.y,\n      z: position1.z - position0.z,\n    };\n  }\n\n  static addDeltaToPosition(position: Cartesian3, delta: Vec3, updateReference = false): Cartesian3 {\n    if (updateReference) {\n      position.x += delta.x;\n      position.y += delta.y;\n      position.z += delta.z;\n      const cartographic = Cesium.Cartographic.fromCartesian(position);\n      cartographic.height = 0;\n      const cartesian = Cesium.Cartesian3.fromRadians(cartographic.longitude, cartographic.latitude, cartographic.height);\n      position.x = cartesian.x;\n      position.y = cartesian.y;\n      position.z = cartesian.z;\n      return position;\n    } else {\n      const cartesian = new Cesium.Cartesian3(position.x + delta.x, position.y + delta.y, position.z + delta.z);\n      const cartographic = Cesium.Cartographic.fromCartesian(cartesian);\n      cartographic.height = 0;\n      return Cesium.Cartesian3.fromRadians(cartographic.longitude, cartographic.latitude, cartographic.height);\n    }\n  }\n\n  static middleCartesian3Point(position0: Cartesian3, position1: Cartesian3) {\n    return new Cesium.Cartesian3(position1.x - position0.x / 2, position1.y - position0.y / 2, position1.z - position0.z / 2);\n  }\n\n  constructor(private cesiumService: CesiumService) {\n  }\n\n  screenPositionToCartesian3(screenPos: { x: number; y: number }) {\n    const camera = this.cesiumService.getViewer().camera;\n    return camera.pickEllipsoid(screenPos);\n  }\n}\n","export enum GraphicsType {\n  ellipse = Cesium.EllipseGraphics,\n  ellipsoid = Cesium.EllipsoidGraphics,\n  polygon = Cesium.PolygonGraphics,\n  polyline = Cesium.PolylineGraphics,\n  polylineVolume = Cesium.PolylineVolumeGraphics,\n  box = Cesium.BoxGraphics,\n  corridor = Cesium.CorridorGraphics,\n  cylinder = Cesium.CylinderGraphics,\n  label = Cesium.LabelGraphics,\n  billboard = Cesium.BillboardGraphics,\n  model = Cesium.ModelGraphics,\n  path = Cesium.PathGraphics,\n  point = Cesium.PointGraphics,\n  rectangle = Cesium.RectangleGraphics,\n  wall = Cesium.WallGraphics,\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\nimport { GeoUtilsService } from '../../geo-utils/geo-utils.service';\n\n/**\n +  This drawer is responsible for drawing an arc over the Cesium map.\n +  This implementation uses simple PolylineGeometry and Primitive parameters.\n +  This doesn't allow us to change the position, color, etc.. of the arc but setShow only.\n */\n\n@Injectable()\nexport class ArcDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PolylineCollection, cesiumService);\n  }\n\n  _calculateArcPositions(cesiumProps: any) {\n    const quality = cesiumProps.quality || 18;\n    const delta = (cesiumProps.delta) / quality;\n    const pointsArray = [];\n    for (let i = 0; i < quality + 1; ++i) {\n      const point =\n        GeoUtilsService.pointByLocationDistanceAndAzimuth(cesiumProps.center, cesiumProps.radius, cesiumProps.angle + delta * i, true);\n      pointsArray.push(point);\n    }\n\n    return pointsArray;\n  }\n\n  _calculateTriangle(cesiumProps: any) {\n    return [\n      cesiumProps.center,\n      GeoUtilsService.pointByLocationDistanceAndAzimuth(cesiumProps.center, cesiumProps.radius, cesiumProps.angle, true)\n    ];\n  }\n\n  _calculateArc(cesiumProps: any) {\n    const arcPoints = this._calculateArcPositions(cesiumProps);\n    return cesiumProps.drawEdges ? arcPoints.concat(this._calculateTriangle(cesiumProps)) : arcPoints;\n  }\n\n  add(cesiumProps: any): any {\n    cesiumProps.positions = this._calculateArc(cesiumProps);\n    if (cesiumProps.color) {\n      const material = Cesium.Material.fromType('Color');\n      material.uniforms.color = cesiumProps.color;\n      cesiumProps.material = material;\n    }\n\n    return this._cesiumCollection.add(cesiumProps);\n  }\n\n  update(primitive: any, cesiumProps: any) {\n    if (!cesiumProps.constantColor && cesiumProps.color &&\n      !primitive.material.uniforms.color.equals(cesiumProps.color)) {\n      primitive.material.uniforms.color = cesiumProps.color;\n    }\n    primitive.width = cesiumProps.width !== undefined ? cesiumProps.width : primitive.width;\n    primitive.show = cesiumProps.show !== undefined ? cesiumProps.show : primitive.show;\n    primitive.distanceDisplayCondition = cesiumProps.distanceDisplayCondition !== undefined ?\n      cesiumProps.distanceDisplayCondition : primitive.distanceDisplayCondition;\n    primitive.positions = this._calculateArc(cesiumProps);\n\n    return primitive;\n  }\n}\n","export class OptimizedEntityCollection {\n  private _updateRate: number;\n  private _collectionSize: number;\n  private _isSuspended = false;\n  private _isHardSuspend = false;\n  private _suspensionTimeout: any;\n  private _onEventSuspensionCallback: { once: boolean, callback: Function };\n  private _onEventResumeCallback: { once: boolean, callback: Function };\n\n  constructor(private entityCollection: any, collectionSize = -1, updateRate = -1) {\n    this._updateRate = updateRate;\n    this._collectionSize = collectionSize;\n\n  }\n\n  setShow(show: boolean) {\n    this.entityCollection.show = show;\n  }\n\n  get isSuspended(): boolean {\n    return this._isSuspended;\n  }\n\n  get updateRate(): number {\n    return this._updateRate;\n  }\n\n  set updateRate(value: number) {\n    this._updateRate = value;\n  }\n\n  get collectionSize(): number {\n    return this._collectionSize;\n  }\n\n  set collectionSize(value: number) {\n    this._collectionSize = value;\n  }\n\n  collection() {\n    return this.entityCollection;\n  }\n\n  isFree(): boolean {\n    return this._collectionSize < 1 || this.entityCollection.values.length < this._collectionSize;\n  }\n\n  add(entity: any) {\n    this.suspend();\n    return this.entityCollection.add(entity);\n  }\n\n  remove(entity: any) {\n    this.suspend();\n    return this.entityCollection.remove(entity);\n  }\n\n  removeNoSuspend(entity: any) {\n    this.entityCollection.remove(entity);\n  }\n\n  removeAll() {\n    this.suspend();\n    this.entityCollection.removeAll();\n  }\n\n  onEventSuspension(callback: Function, once = false): Function {\n    this._onEventSuspensionCallback = {callback, once};\n    return () => {\n      this._onEventSuspensionCallback = undefined;\n    };\n  }\n\n  onEventResume(callback: Function, once = false): Function {\n    this._onEventResumeCallback = {callback, once};\n    if (!this._isSuspended) {\n      this.triggerEventResume();\n    }\n    return () => {\n      this._onEventResumeCallback = undefined;\n    };\n  }\n\n  triggerEventSuspension() {\n    if (this._onEventSuspensionCallback !== undefined) {\n      const callback = this._onEventSuspensionCallback.callback;\n      if (this._onEventSuspensionCallback.once) {\n        this._onEventSuspensionCallback = undefined;\n      }\n      callback();\n    }\n  }\n\n  triggerEventResume() {\n    if (this._onEventResumeCallback !== undefined) {\n      const callback = this._onEventResumeCallback.callback;\n      if (this._onEventResumeCallback.once) {\n        this._onEventResumeCallback = undefined;\n      }\n      callback();\n    }\n  }\n\n  public suspend() {\n    if (this._updateRate < 0) {\n      return;\n    }\n    if (this._isHardSuspend) {\n      return;\n    }\n    if (!this._isSuspended) {\n      this._isSuspended = true;\n      this.entityCollection.suspendEvents();\n      this.triggerEventSuspension();\n      this._suspensionTimeout = setTimeout(() => {\n        this.entityCollection.resumeEvents();\n        this.triggerEventResume();\n        this._isSuspended = false;\n        this._suspensionTimeout = undefined;\n      }, this._updateRate);\n    }\n  }\n\n  public hardSuspend() {\n    this.entityCollection.suspendEvents();\n    this._isHardSuspend = true;\n  }\n\n  public hardResume() {\n    this.entityCollection.resumeEvents();\n    this._isHardSuspend = false;\n  }\n\n}\n","import { BasicDrawerService } from '../basic-drawer/basic-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from './enums/graphics-type.enum';\nimport { EntitiesDrawerOptions } from '../../../models/entities-drawer-options';\nimport { OptimizedEntityCollection } from './optimized-entity-collection';\n\n/**\n *  General primitives drawer responsible of drawing Cesium primitives.\n *  Drawers the handle Cesium primitives extend it.\n */\n\nexport class EntitiesDrawerService extends BasicDrawerService {\n  private entityCollections = new Map<any, OptimizedEntityCollection>();\n  private graphicsTypeName: string;\n\n  constructor(\n    private cesiumService: CesiumService,\n    private graphicsType: GraphicsType,\n    private defaultOptions: EntitiesDrawerOptions = {\n      collectionMaxSize: -1,\n      collectionSuspensionTime: -1,\n      collectionsNumber: 1,\n    },\n  ) {\n    super();\n    this.graphicsTypeName = GraphicsType[this.graphicsType];\n\n    // Fix bad enum compilation\n    for (const i in GraphicsType) {\n      if (GraphicsType[i] as any === this.graphicsType) {\n        this.graphicsTypeName = i;\n      }\n    }\n  }\n\n  private getFreeEntitiesCollection(): OptimizedEntityCollection {\n    let freeEntityCollection = null;\n    this.entityCollections.forEach(entityCollection => {\n      if (entityCollection.isFree()) {\n        freeEntityCollection = entityCollection;\n      }\n    });\n\n    return freeEntityCollection;\n  }\n\n  init(options?: EntitiesDrawerOptions) {\n    const finalOptions = options || this.defaultOptions;\n    const dataSources = [];\n    for (let i = 0; i < finalOptions.collectionsNumber; i++) {\n      const dataSource = new Cesium.CustomDataSource(this.graphicsTypeName);\n      dataSources.push(dataSource);\n      this.cesiumService.getViewer().dataSources.add(dataSource);\n      this.entityCollections.set(\n        dataSource.entities,\n        new OptimizedEntityCollection(dataSource.entities, finalOptions.collectionMaxSize, finalOptions.collectionSuspensionTime),\n      );\n    }\n\n    return dataSources;\n  }\n\n  add(cesiumProps: any): any {\n    const optimizedEntityCollection = this.getFreeEntitiesCollection();\n    if (optimizedEntityCollection === null) {\n      throw new Error('No more free entity collections');\n    }\n\n    const entityObject = {\n      position: cesiumProps.position !== undefined ? cesiumProps.position : undefined,\n      description: cesiumProps.description !== undefined ? cesiumProps.description : undefined,\n      orientation: cesiumProps.orientation !== undefined ? cesiumProps.orientation : undefined,\n      viewFrom: cesiumProps.viewFrom !== undefined ? cesiumProps.viewFrom : undefined,\n      [this.graphicsTypeName]: cesiumProps,\n    };\n\n    if (cesiumProps.name !== undefined) {\n      entityObject.name = cesiumProps.name;\n    }\n    if (cesiumProps.availability !== undefined) {\n      entityObject.availability = cesiumProps.availability;\n    }\n\n    return optimizedEntityCollection.add(entityObject);\n  }\n\n  update(entity: any, cesiumProps: any) {\n    this.suspendEntityCollection(entity);\n\n    if (entity.position instanceof Cesium.CallbackProperty) {\n      if (entity.position._isConstant) {\n        entity.position = cesiumProps.position;\n      }\n    }\n    entity.position = cesiumProps.position !== undefined ? cesiumProps.position : undefined;\n    entity.name = cesiumProps.name !== undefined ? cesiumProps.name : entity.name;\n    entity.description = cesiumProps.description !== undefined ? cesiumProps.description : entity.description;\n    entity.orientation = cesiumProps.orientation !== undefined ? cesiumProps.orientation : entity.orientation;\n    entity.viewFrom = cesiumProps.viewFrom !== undefined ? cesiumProps.viewFrom : entity.viewFrom;\n    entity.availability = cesiumProps.availability !== undefined ? cesiumProps.availability : cesiumProps.availability;\n\n    if (this._propsAssigner) {\n      this._propsAssigner(entity[this.graphicsTypeName], cesiumProps);\n    } else {\n      Object.assign(entity[this.graphicsTypeName], cesiumProps);\n    }\n  }\n\n  remove(entity: any) {\n    const optimizedEntityCollection = this.entityCollections.get(entity.entityCollection);\n    optimizedEntityCollection.remove(entity);\n  }\n\n  removeAll() {\n    this.entityCollections.forEach(entityCollection => {\n      entityCollection.removeAll();\n    });\n  }\n\n  setShow(showValue: boolean) {\n    this.entityCollections.forEach(entityCollection => {\n      entityCollection.setShow(showValue);\n    });\n  }\n\n  private suspendEntityCollection(entity: any) {\n    const id = entity.entityCollection;\n    if (!this.entityCollections.has(id)) {\n      throw new Error('No EntityCollection for entity.entityCollection');\n    }\n\n    const entityCollection = this.entityCollections.get(id);\n    entityCollection.suspend();\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing billboards.\n */\n@Injectable()\nexport class BillboardDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.billboard);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { BasicDrawerService } from '../basic-drawer/basic-drawer.service';\nimport { EntitiesDrawerOptions } from '../../../models/entities-drawer-options';\n\n/**\n *  This drawer is responsible for drawing czml dataSources.\n */\n@Injectable()\nexport class CzmlDrawerService extends BasicDrawerService {\n\n  czmlStream: any;\n\n  constructor(\n    private cesiumService: CesiumService,\n  ) {\n    super();\n  }\n\n\n  init(options?: EntitiesDrawerOptions) {\n    const dataSources = [];\n\n    this.czmlStream = new Cesium.CzmlDataSource('czml');\n\n    dataSources.push(this.czmlStream);\n\n    this.cesiumService.getViewer().dataSources.add(this.czmlStream);\n\n    return dataSources;\n  }\n\n  // returns the packet, provided by the stream\n  add(cesiumProps: any): any {\n\n    this.czmlStream.process(cesiumProps.czmlPacket);\n\n    return cesiumProps;\n  }\n\n  update(entity: any, cesiumProps: any) {\n    this.czmlStream.process(cesiumProps.czmlPacket);\n  }\n\n  remove(entity: any) {\n    this.czmlStream.entities.removeById(entity.acEntity.id);\n  }\n\n  removeAll() {\n    this.czmlStream.entities.removeAll();\n  }\n\n  setShow(showValue: boolean) {\n    this.czmlStream.entities.show = showValue;\n  }\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing ellipses.\n */\n@Injectable()\nexport class EllipseDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.ellipse);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing labels.\n */\n@Injectable()\nexport class LabelDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.label);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing points.\n */\n@Injectable()\nexport class PointDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.point);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing polygons.\n */\n@Injectable()\nexport class PolygonDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.polygon);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible of drawing polylines.\n */\n@Injectable()\nexport class PolylineDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.polyline);\n  }\n}\n","export enum KeyboardAction {\n  CAMERA_FORWARD,\n  CAMERA_BACKWARD,\n  CAMERA_RIGHT,\n  CAMERA_LEFT,\n  CAMERA_UP,\n  CAMERA_DOWN,\n  CAMERA_LOOK_RIGHT,\n  CAMERA_LOOK_LEFT,\n  CAMERA_LOOK_UP,\n  CAMERA_LOOK_DOWN,\n  CAMERA_TWIST_RIGHT,\n  CAMERA_TWIST_LEFT,\n  CAMERA_ROTATE_RIGHT,\n  CAMERA_ROTATE_LEFT,\n  CAMERA_ROTATE_UP,\n  CAMERA_ROTATE_DOWN,\n  CAMERA_ZOOM_IN,\n  CAMERA_ZOOM_OUT,\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\n\n/**\n *  This drawer is responsible of drawing polylines as primitives.\n *  This drawer is more efficient than PolylineDrawerService when drawing dynamic polylines.\n */\n@Injectable()\nexport class PolylinePrimitiveDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PolylineCollection, cesiumService);\n  }\n\n  add(cesiumProps: any) {\n    return this._cesiumCollection.add(this.withColorMaterial(cesiumProps));\n  }\n\n  update(cesiumObject: any, cesiumProps: any) {\n    if (cesiumProps.material instanceof Cesium.Color) {\n      if (cesiumObject.material && cesiumObject.material.uniforms &&\n        cesiumObject.material.uniforms.color instanceof Cesium.Color) {\n        this.withColorMaterial(cesiumProps);\n      } else if (!cesiumObject.material.uniforms.color.equals(cesiumProps.material)) {\n        cesiumObject.material.uniforms.color = cesiumProps.material;\n      }\n    }\n    super.update(cesiumObject, cesiumProps);\n  }\n\n  withColorMaterial(cesiumProps: any) {\n    if (cesiumProps.material instanceof Cesium.Color) {\n      const material = Cesium.Material.fromType('Color');\n      material.uniforms.color = cesiumProps.material;\n      cesiumProps.material = material;\n    }\n\n    return cesiumProps;\n  }\n}\n","import { KeyboardAction } from '../../models/ac-keyboard-action.enum';\nimport { KeyboardControlActionFn } from './keyboard-control.service';\nimport { CesiumService } from '../cesium/cesium.service';\n\nconst CAMERA_MOVEMENT_DEFAULT_FACTOR = 100.0;\nconst CAMERA_LOOK_DEFAULT_FACTOR = 0.01;\nconst CAMERA_TWIST_DEFAULT_FACTOR = 0.01;\nconst CAMERA_ROTATE_DEFAULT_FACTOR = 0.01;\n\nexport const PREDEFINED_KEYBOARD_ACTIONS: { [key: number]: KeyboardControlActionFn } = {\n  /**\n   * Moves the camera forward, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_FORWARD]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveForward(moveRate);\n  },\n  /**\n   * Moves the camera backward, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_BACKWARD]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveBackward(moveRate);\n  },\n  /**\n   * Moves the camera up, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_UP]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveUp(moveRate);\n  },\n  /**\n   * Moves the camera down, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_DOWN]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveDown(moveRate);\n  },\n  /**\n   * Moves the camera right, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_RIGHT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveRight(moveRate);\n  },\n  /**\n   * Moves the camera left, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_LEFT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveLeft(moveRate);\n  },\n  /**\n   * Changes the camera to look to the right, accepts a numeric parameter named `lookFactor` that controls\n   * the factor of looking, according to the camera current position.\n   */\n  [KeyboardAction.CAMERA_LOOK_RIGHT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const currentPosition = camera.positionCartographic;\n    const lookFactor = params.lookFactor || CAMERA_LOOK_DEFAULT_FACTOR;\n    camera.lookRight(currentPosition.latitude * lookFactor);\n  },\n  /**\n   * Changes the camera to look to the left, accepts a numeric parameter named `lookFactor` that controls\n   * the factor of looking, according to the camera current position.\n   */\n  [KeyboardAction.CAMERA_LOOK_LEFT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const currentPosition = camera.positionCartographic;\n    const lookFactor = params.lookFactor || CAMERA_LOOK_DEFAULT_FACTOR;\n    camera.lookLeft(currentPosition.latitude * lookFactor);\n  },\n  /**\n   * Changes the camera to look up, accepts a numeric parameter named `lookFactor` that controls\n   * the factor of looking, according to the camera current position.\n   */\n  [KeyboardAction.CAMERA_LOOK_UP]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const currentPosition = camera.positionCartographic;\n    const lookFactor = params.lookFactor || CAMERA_LOOK_DEFAULT_FACTOR;\n    camera.lookUp(currentPosition.longitude * (lookFactor * -1));\n  },\n  /**\n   * Changes the camera to look down, accepts a numeric parameter named `lookFactor` that controls\n   * the factor of looking, according to the camera current position.\n   */\n  [KeyboardAction.CAMERA_LOOK_DOWN]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const currentPosition = camera.positionCartographic;\n    const lookFactor = params.lookFactor || CAMERA_LOOK_DEFAULT_FACTOR;\n    camera.lookDown(currentPosition.longitude * (lookFactor * -1));\n  },\n  /**\n   * Twists the camera to the right, accepts a numeric parameter named `amount` that controls\n   * the twist amount\n   */\n  [KeyboardAction.CAMERA_TWIST_RIGHT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.amount || CAMERA_TWIST_DEFAULT_FACTOR;\n    camera.twistRight(lookFactor);\n  },\n  /**\n   * Twists the camera to the left, accepts a numeric parameter named `amount` that controls\n   * the twist amount\n   */\n  [KeyboardAction.CAMERA_TWIST_LEFT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.amount || CAMERA_TWIST_DEFAULT_FACTOR;\n    camera.twistLeft(lookFactor);\n  },\n  /**\n   * Rotates the camera to the right, accepts a numeric parameter named `angle` that controls\n   * the rotation angle\n   */\n  [KeyboardAction.CAMERA_ROTATE_RIGHT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.angle || CAMERA_ROTATE_DEFAULT_FACTOR;\n    camera.rotateRight(lookFactor);\n  },\n  /**\n   * Rotates the camera to the left, accepts a numeric parameter named `angle` that controls\n   * the rotation angle\n   */\n  [KeyboardAction.CAMERA_ROTATE_LEFT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.angle || CAMERA_ROTATE_DEFAULT_FACTOR;\n    camera.rotateLeft(lookFactor);\n  },\n  /**\n   * Rotates the camera upwards, accepts a numeric parameter named `angle` that controls\n   * the rotation angle\n   */\n  [KeyboardAction.CAMERA_ROTATE_UP]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.angle || CAMERA_ROTATE_DEFAULT_FACTOR;\n    camera.rotateUp(lookFactor);\n  },\n  /**\n   * Rotates the camera downwards, accepts a numeric parameter named `angle` that controls\n   * the rotation angle\n   */\n  [KeyboardAction.CAMERA_ROTATE_DOWN]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.angle || CAMERA_ROTATE_DEFAULT_FACTOR;\n    camera.rotateDown(lookFactor);\n  },\n  /**\n   * Zoom in into the current camera center position, accepts a numeric parameter named\n   * `amount` that controls the amount of zoom in meters.\n   */\n  [KeyboardAction.CAMERA_ZOOM_IN]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const amount = params.amount;\n    camera.zoomIn(amount);\n  },\n  /**\n   * Zoom out from the current camera center position, accepts a numeric parameter named\n   * `amount` that controls the amount of zoom in meters.\n   */\n  [KeyboardAction.CAMERA_ZOOM_OUT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const amount = params.amount;\n    camera.zoomOut(amount);\n  },\n};\n","import { isNumber } from 'util';\nimport { Inject, Injectable, NgZone } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { KeyboardAction } from '../../models/ac-keyboard-action.enum';\nimport { CesiumService } from '../cesium/cesium.service';\nimport { PREDEFINED_KEYBOARD_ACTIONS } from './predefined-actions';\n\nexport type KeyboardControlActionFn = (cesiumService: CesiumService, params: any, event: KeyboardEvent) => boolean | void;\nexport type KeyboardControlValidationFn = (cesiumService: CesiumService, params: any, event: KeyboardEvent) => boolean;\nexport type KeyboardControlDoneFn = (cesiumService: CesiumService, event: KeyboardEvent) => boolean;\n\nexport interface KeyboardControlParams {\n  action: KeyboardAction | KeyboardControlActionFn;\n  validation?: KeyboardControlValidationFn;\n  params?: { [paramName: string]: any };\n  done?: KeyboardControlDoneFn;\n}\n\nexport interface KeyboardControlDefinition {\n  [keyboardCharCode: string]: KeyboardControlParams;\n}\n\nenum KeyEventState {\n  IGNORED,\n  NOT_PRESSED,\n  PRESSED,\n}\n\ninterface ActiveDefinition {\n  keyboardEvent: KeyboardEvent;\n  state: KeyEventState;\n  action: KeyboardControlParams;\n}\n\n/**\n *  Service that manages keyboard keys and execute actions per request.\n *  Inject the keyboard control service into any layer, under your `ac-map` component,\n *  And defined you keyboard handlers using `setKeyboardControls`.\n *\n * <caption>Simple Example</caption>\n * ```typescript\n * Component({\n *   selector: 'keyboard-control-layer',\n *   template: '',\n * })\n * export class KeyboardControlLayerComponent implements OnInit, OnDestroy {\n *   constructor(private keyboardControlService: KeyboardControlService) {}\n *\n *   ngOnInit() {\n *     this.keyboardControlService.setKeyboardControls({\n *       W: { action: KeyboardAction.CAMERA_FORWARD },\n *       S: { action: KeyboardAction.CAMERA_BACKWARD },\n *       D: { action: KeyboardAction.CAMERA_RIGHT },\n *       A: { action: KeyboardAction.CAMERA_LEFT },\n *     });\n *    }\n *\n *   ngOnDestroy() {\n *     this.keyboardControlService.removeKeyboardControls();\n *   }\n * }\n * ```\n *\n * <caption>Advanced Example</caption>\n * ```typescript\n * Component({\n *   selector: 'keyboard-control-layer',\n *   template: '',\n * })\n * export class KeyboardControlLayerComponent implements OnInit, OnDestroy {\n *   constructor(private keyboardControlService: KeyboardControlService) {}\n *\n *   private myCustomValue = 10;\n *\n *   ngOnInit() {\n *     this.keyboardControlService.setKeyboardControls({\n *       W: {\n *          action: KeyboardAction.CAMERA_FORWARD,\n *          validate: (camera, scene, params, key) => {\n *            // Replace `checkCamera` you with your validation logic\n *            if (checkCamera(camera) || params.customParams === true) {\n *              return true;\n *            }\n *\n *            return false;\n *          },\n *          params: () => {\n *            return {\n *              myValue: this.myCustomValue,\n *            };\n *          },\n *        }\n *     });\n *    }\n *\n *   ngOnDestroy() {\n *     this.keyboardControlService.removeKeyboardControls();\n *   }\n * }\n * ```\n * <b>Predefined keyboard actions:</b>\n * + `KeyboardAction.CAMERA_FORWARD` - Moves the camera forward, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_BACKWARD` - Moves the camera backward, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_UP` - Moves the camera up, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_DOWN` - Moves the camera down, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_RIGHT` - Moves the camera right, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_LEFT` - Moves the camera left, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_LOOK_RIGHT` - Changes the camera to look to the right, accepts a numeric parameter named `lookFactor` that\n * controls the factor of looking, according to the camera current position.\n * + `KeyboardAction.CAMERA_LOOK_LEFT` - Changes the camera to look to the left, accepts a numeric parameter named `lookFactor` that\n * controls the factor of looking, according to the camera current position.\n * + `KeyboardAction.CAMERA_LOOK_UP` - Changes the camera to look up, accepts a numeric parameter named `lookFactor` that controls\n * the factor of looking, according to the camera current position.\n * + `KeyboardAction.CAMERA_LOOK_DOWN` - Changes the camera to look down, accepts a numeric parameter named `lookFactor` that controls\n * the factor of looking, according to the camera current position.\n * + `KeyboardAction.CAMERA_TWIST_RIGHT` - Twists the camera to the right, accepts a numeric parameter named `amount` that controls\n * the twist amount\n * + `KeyboardAction.CAMERA_TWIST_LEFT` - Twists the camera to the left, accepts a numeric parameter named `amount` that controls\n * the twist amount\n * + `KeyboardAction.CAMERA_ROTATE_RIGHT` - Rotates the camera to the right, accepts a numeric parameter named `angle` that controls\n * the rotation angle\n * + `KeyboardAction.CAMERA_ROTATE_LEFT` - Rotates the camera to the left, accepts a numeric parameter named `angle` that controls\n * the rotation angle\n * + `KeyboardAction.CAMERA_ROTATE_UP` - Rotates the camera upwards, accepts a numeric parameter named `angle` that controls\n * the rotation angle\n * + `KeyboardAction.CAMERA_ROTATE_DOWN` - Rotates the camera downwards, accepts a numeric parameter named `angle` that controls\n * the rotation angle\n * + `KeyboardAction.CAMERA_ZOOM_IN` - Zoom in into the current camera center position, accepts a numeric parameter named\n * `amount` that controls the amount of zoom in meters.\n * + `KeyboardAction.CAMERA_ZOOM_OUT` -  Zoom out from the current camera center position, accepts a numeric parameter named\n * `amount` that controls the amount of zoom in meters.\n */\n@Injectable()\nexport class KeyboardControlService {\n  private _currentDefinitions: KeyboardControlDefinition = null;\n  private _activeDefinitions: { [definitionKey: string]: ActiveDefinition } = {};\n  private _keyMappingFn: Function = this.defaultKeyMappingFn;\n\n  /**\n   * Creats the keyboard control service.\n   */\n  constructor(private ngZone: NgZone, private cesiumService: CesiumService, @Inject(DOCUMENT) private document: any) {\n  }\n\n  /**\n   * Initializes the keyboard control service.\n   */\n  init() {\n    const canvas = this.cesiumService.getCanvas();\n    canvas.addEventListener('click', () => {\n      canvas.focus();\n    });\n\n    this.handleKeydown = this.handleKeydown.bind(this);\n    this.handleKeyup = this.handleKeyup.bind(this);\n    this.handleTick = this.handleTick.bind(this);\n  }\n\n  /**\n   * Sets the current map keyboard control definitions.\n   * The definitions is a key mapping between a key string and a KeyboardControlDefinition:\n   * - `action` is a predefine action from `KeyboardAction` enum, or a custom method:\n   * `(camera, scene, params, key) => boolean | void` - returning false will cancel the current keydown.\n   * - `validation` is a method that validates if the event should occur or not (`camera, scene, params, key`)\n   * - `params` is an object (or function that returns object) that will be passed into the action executor.\n   * - `done` is a function that will be triggered when `keyup` is triggered.\n   * @param definitions Keyboard Control Definition\n   * @param keyMappingFn - Mapping function for custom keys\n   * @param outsideOfAngularZone - if key down events will run outside of angular zone.\n   */\n  setKeyboardControls(definitions: KeyboardControlDefinition,\n                      keyMappingFn?: (keyEvent: KeyboardEvent) => string,\n                      outsideOfAngularZone = false) {\n    if (!definitions) {\n      return this.removeKeyboardControls();\n    }\n\n    if (!this._currentDefinitions) {\n      this.registerEvents(outsideOfAngularZone);\n    }\n\n    this._currentDefinitions = definitions;\n    this._keyMappingFn = keyMappingFn || this.defaultKeyMappingFn;\n\n    Object.keys(this._currentDefinitions).forEach(key => {\n      this._activeDefinitions[key] = {\n        state: KeyEventState.NOT_PRESSED,\n        action: null,\n        keyboardEvent: null,\n      };\n    });\n  }\n\n  /**\n   * Removes the current set of keyboard control items, and unregister from map events.\n   */\n  removeKeyboardControls() {\n    this.unregisterEvents();\n    this._currentDefinitions = null;\n  }\n\n  /**\n   * Returns the current action that handles `char` key string, or `null` if not exists\n   */\n  private getAction(char: string): KeyboardControlParams {\n    return this._currentDefinitions[char] || null;\n  }\n\n  /**\n   * The default `defaultKeyMappingFn` that maps `KeyboardEvent` into a key string.\n   */\n  private defaultKeyMappingFn(keyEvent: KeyboardEvent): string {\n    return String.fromCharCode(keyEvent.keyCode);\n  }\n\n  /**\n   * document's `keydown` event handler\n   */\n  private handleKeydown(e: KeyboardEvent) {\n    const char = this._keyMappingFn(e);\n    const action = this.getAction(char);\n\n    if (action) {\n      const actionState = this._activeDefinitions[char];\n\n      if (actionState.state !== KeyEventState.IGNORED) {\n        let execute = true;\n\n        const params = this.getParams(action.params, e);\n\n        if (action.validation) {\n          execute = action.validation(this.cesiumService, params, e);\n        }\n\n        if (execute === true) {\n          this._activeDefinitions[char] = {\n            state: KeyEventState.PRESSED,\n            action,\n            keyboardEvent: e,\n          };\n        }\n      }\n    }\n  }\n\n  /**\n   * document's `keyup` event handler\n   */\n  private handleKeyup(e: KeyboardEvent) {\n    const char = this._keyMappingFn(e);\n    const action = this.getAction(char);\n\n    if (action) {\n      this._activeDefinitions[char] = {\n        state: KeyEventState.NOT_PRESSED,\n        action: null,\n        keyboardEvent: e,\n      };\n\n      if (action.done && typeof action.done === 'function') {\n        action.done(this.cesiumService, e);\n      }\n    }\n  }\n\n  /**\n   * `tick` event handler that triggered by Cesium render loop\n   */\n  private handleTick() {\n    const activeKeys = Object.keys(this._activeDefinitions);\n\n    activeKeys.forEach(key => {\n      const actionState = this._activeDefinitions[key];\n\n      if (actionState !== null && actionState.action !== null && actionState.state === KeyEventState.PRESSED) {\n        this.executeAction(actionState.action, key, actionState.keyboardEvent);\n      }\n    });\n  }\n\n  /**\n   *\n   * Params resolve function, returns object.\n   * In case of params function, executes it and returns it's return value.\n   *\n   */\n  private getParams(paramsDef: any, keyboardEvent: KeyboardEvent): { [paramName: string]: any } {\n    if (!paramsDef) {\n      return {};\n    }\n\n    if (typeof paramsDef === 'function') {\n      return paramsDef(this.cesiumService, keyboardEvent);\n    }\n\n    return paramsDef;\n  }\n\n  /**\n   *\n   * Executes a given `KeyboardControlParams` object.\n   *\n   */\n  private executeAction(execution: KeyboardControlParams, key: string, keyboardEvent: KeyboardEvent) {\n    if (!this._currentDefinitions) {\n      return;\n    }\n\n    const params = this.getParams(execution.params, keyboardEvent);\n\n    if (isNumber(execution.action)) {\n      const predefinedAction = PREDEFINED_KEYBOARD_ACTIONS[execution.action as number];\n\n      if (predefinedAction) {\n        predefinedAction(this.cesiumService, params, keyboardEvent);\n      }\n    } else if (typeof execution.action === 'function') {\n      const shouldCancelEvent = execution.action(this.cesiumService, params, keyboardEvent);\n\n      if (shouldCancelEvent === false) {\n        this._activeDefinitions[key] = {\n          state: KeyEventState.IGNORED,\n          action: null,\n          keyboardEvent: null,\n        };\n      }\n    }\n  }\n\n  /**\n   * Registers to keydown, keyup of `document`, and `tick` of Cesium.\n   */\n  private registerEvents(outsideOfAngularZone: boolean) {\n    const registerToEvents = () => {\n      this.document.addEventListener('keydown', this.handleKeydown);\n      this.document.addEventListener('keyup', this.handleKeyup);\n      this.cesiumService.getViewer().clock.onTick.addEventListener(this.handleTick);\n    };\n\n    if (outsideOfAngularZone) {\n      this.ngZone.runOutsideAngular(registerToEvents);\n    } else {\n      registerToEvents();\n    }\n  }\n\n  /**\n   * Unregisters to keydown, keyup of `document`, and `tick` of Cesium.\n   */\n  private unregisterEvents() {\n    this.document.removeEventListener('keydown', this.handleKeydown);\n    this.document.removeEventListener('keyup', this.handleKeyup);\n    this.cesiumService.getViewer().clock.onTick.removeEventListener(this.handleTick);\n  }\n}\n","import { Observable, Subscriber } from 'rxjs';\nimport { CesiumEvent } from '../consts/cesium-event.enum';\nimport { CesiumEventModifier } from '../consts/cesium-event-modifier.enum';\n\nexport class CesiumPureEventObserver {\n  public observer: Observable<any>;\n\n  constructor(protected event: CesiumEvent, protected modifier: CesiumEventModifier) {\n  }\n\n  init(eventsHandler: any): Observable<any> {\n    this.observer = Observable.create((observer: Subscriber<any>) => {\n        eventsHandler.setInputAction((movement: any) => {\n          if (movement.position) {\n            movement.startPosition = movement.position;\n            movement.endPosition = movement.position;\n          }\n          observer.next(movement);\n        }, this.event, this.modifier);\n      }\n    );\n    return this.observer;\n  }\n}\n","import { ConnectableObservable, merge, of as observableOf } from 'rxjs';\nimport { delay, mergeMap, publish, takeUntil } from 'rxjs/operators';\nimport { CesiumPureEventObserver } from './cesium-pure-event-observer';\nimport { CesiumEvent } from '../consts/cesium-event.enum';\nimport { CesiumEventModifier } from '../consts/cesium-event-modifier.enum';\nimport { CesiumEventBuilder } from '../cesium-event-builder';\n\nexport class CesiumLongPressObserver extends CesiumPureEventObserver {\n  public static LONG_PRESS_EVENTS_DURATION = 250;\n\n  constructor(protected event: CesiumEvent,\n              protected modifier: CesiumEventModifier,\n              private eventFactory: CesiumEventBuilder) {\n    super(event, modifier);\n  }\n\n  init(): ConnectableObservable<any> {\n    let startEvent: CesiumEvent;\n    let stopEvent: CesiumEvent;\n\n    if (this.event === CesiumEvent.LONG_LEFT_PRESS) {\n      startEvent = CesiumEvent.LEFT_DOWN;\n      stopEvent = CesiumEvent.LEFT_UP;\n    } else if (this.event === CesiumEvent.LONG_RIGHT_PRESS) {\n      startEvent = CesiumEvent.RIGHT_DOWN;\n      stopEvent = CesiumEvent.RIGHT_UP;\n    } else if (this.event === CesiumEvent.LONG_MIDDLE_PRESS) {\n      startEvent = CesiumEvent.MIDDLE_DOWN;\n      stopEvent = CesiumEvent.MIDDLE_UP;\n    }\n\n    const startEventObservable = this.eventFactory.get(startEvent, this.modifier);\n    const stopEventObservable = merge(\n      this.eventFactory.get(stopEvent, this.modifier),\n      this.eventFactory.get(CesiumEvent.MOUSE_MOVE, this.modifier) // Prevent drag mistaken for long press\n    );\n\n    // publish for preventing side effect\n    const longPressObservable = publish()(startEventObservable.pipe(\n      mergeMap((e) => observableOf(e).pipe(\n        delay(CesiumLongPressObserver.LONG_PRESS_EVENTS_DURATION),\n        takeUntil(stopEventObservable))),\n    ));\n    return longPressObservable;\n  }\n}\n","import { publish } from 'rxjs/operators';\nimport { CesiumService } from '../cesium/cesium.service';\nimport { CesiumEvent } from './consts/cesium-event.enum';\nimport { CesiumEventModifier } from './consts/cesium-event-modifier.enum';\nimport { Injectable } from '@angular/core';\nimport { CesiumPureEventObserver } from './event-observers/cesium-pure-event-observer';\nimport { CesiumLongPressObserver } from './event-observers/cesium-long-press-observer';\nimport { ConnectableObservable } from 'rxjs';\n\n@Injectable()\nexport class CesiumEventBuilder {\n\n  constructor(private cesiumService: CesiumService) {\n  }\n\n  public static longPressEvents: Set<CesiumEvent> = new Set([\n    CesiumEvent.LONG_LEFT_PRESS,\n    CesiumEvent.LONG_RIGHT_PRESS,\n    CesiumEvent.LONG_MIDDLE_PRESS\n  ]);\n\n  private eventsHandler: any;\n  private cesiumEventsObservables = new Map<string, ConnectableObservable<any>>();\n\n  public static getEventFullName(event: CesiumEvent, modifier?: CesiumEventModifier): string {\n    if (modifier) {\n      return `${event}_${modifier}`;\n    } else {\n      return event.toString();\n    }\n  }\n\n  init() {\n    this.eventsHandler = this.cesiumService.getViewer().screenSpaceEventHandler;\n  }\n\n  get(event: CesiumEvent, modifier?: CesiumEventModifier): ConnectableObservable<any> {\n    const eventName = CesiumEventBuilder.getEventFullName(event, modifier);\n    if (this.cesiumEventsObservables.has(eventName)) {\n      return this.cesiumEventsObservables.get(eventName);\n    } else {\n      const eventObserver = this.createCesiumEventObservable(event, modifier);\n      this.cesiumEventsObservables.set(eventName, eventObserver);\n      return eventObserver;\n    }\n  }\n\n  private createCesiumEventObservable(event: CesiumEvent, modifier?: CesiumEventModifier): ConnectableObservable<any> {\n    let cesiumEventObservable: ConnectableObservable<any>;\n    if (CesiumEventBuilder.longPressEvents.has(event)) {\n      cesiumEventObservable = this.createSpecialCesiumEventObservable(event, modifier);\n    } else {\n      cesiumEventObservable = publish()(new CesiumPureEventObserver(event, modifier).init(this.eventsHandler));\n    }\n    cesiumEventObservable.connect();\n    return cesiumEventObservable;\n  }\n\n  private createSpecialCesiumEventObservable(event: CesiumEvent, modifier: CesiumEventModifier): ConnectableObservable<any> {\n    // could support more events if needed\n    return new CesiumLongPressObserver(event, modifier, this).init();\n  }\n}\n\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { AcEntity } from '../../models/ac-entity';\nimport { Subject } from 'rxjs';\nimport { EventResult, Movement } from '../map-events-mananger/map-events-manager';\n\n/**\n * Service for solving plonter.\n * Used by map-event-manager and plonter context component\n */\n@Injectable()\nexport class PlonterService {\n  private _plonterShown: boolean;\n  private _entitesToPlonter: AcEntity[] = [];\n  private _plonterObserver: Subject<EventResult>;\n  private _eventResult: EventResult;\n  private _plonterChangeNotifier: EventEmitter<any> = new EventEmitter();\n\n  constructor() {\n    this._plonterObserver = new Subject<EventResult>();\n  }\n\n  get plonterChangeNotifier(): EventEmitter<any> {\n    return this._plonterChangeNotifier;\n  }\n\n  get plonterShown(): boolean {\n    return this._plonterShown;\n  }\n\n  get entitesToPlonter(): AcEntity[] {\n    return this._entitesToPlonter;\n  }\n\n  get plonterClickPosition(): Movement {\n    return this._eventResult.movement;\n  }\n\n  plonterIt(eventResult: EventResult) {\n    this._eventResult = eventResult;\n    this._entitesToPlonter = eventResult.entities;\n    this._plonterShown = true;\n\n    this._plonterChangeNotifier.emit();\n    return this._plonterObserver;\n  }\n\n  resolvePlonter(entity: AcEntity) {\n    this._plonterShown = false;\n    this._eventResult.entities = [entity];\n\n    this._plonterChangeNotifier.emit();\n    this._plonterObserver.next(this._eventResult);\n  }\n}\n","export const UtilsService = {\n  unique: (array: any[]): any[] => {\n    return array.reduce((accumulator, currentValue) => {\n      if (accumulator.indexOf(currentValue) < 0) {\n        accumulator.push(currentValue);\n      }\n      return accumulator;\n    }, []);\n  }\n};\n\n","import { CesiumEvent } from '../consts/cesium-event.enum';\n\nexport class CesiumDragDropHelper {\n\n  public static dragEvents: Set<CesiumEvent> = new Set([\n    CesiumEvent.LEFT_CLICK_DRAG,\n    CesiumEvent.RIGHT_CLICK_DRAG,\n    CesiumEvent.MIDDLE_CLICK_DRAG\n  ]);\n\n\n  public static getDragEventTypes(dragEvent: CesiumEvent) {\n    let mouseDownEvent;\n    let mouseUpEvent;\n    if (dragEvent === CesiumEvent.LEFT_CLICK_DRAG) {\n      mouseDownEvent = CesiumEvent.LEFT_DOWN;\n      mouseUpEvent = CesiumEvent.LEFT_UP;\n    } else if (dragEvent === CesiumEvent.RIGHT_CLICK_DRAG) {\n      mouseDownEvent = CesiumEvent.RIGHT_DOWN;\n      mouseUpEvent = CesiumEvent.RIGHT_UP;\n    } else if (dragEvent === CesiumEvent.MIDDLE_CLICK_DRAG) {\n      mouseDownEvent = CesiumEvent.MIDDLE_DOWN;\n      mouseUpEvent = CesiumEvent.MIDDLE_UP;\n    }\n\n    return {mouseDownEvent, mouseUpEvent};\n  }\n}\n","import { merge, Observable, of as observableOf, Subject } from 'rxjs';\n\nimport { filter, map, mergeMap, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { CesiumService } from '../cesium/cesium.service';\nimport { CesiumEventBuilder } from './cesium-event-builder';\nimport { EventRegistrationInput, PickConfiguration } from './event-registration-input';\nimport { DisposableObservable } from './disposable-observable';\nimport { PickOptions } from './consts/pickOptions.enum';\nimport { CesiumEvent } from './consts/cesium-event.enum';\nimport { PlonterService } from '../plonter/plonter.service';\nimport { UtilsService } from '../../utils/utils.service';\nimport { CesiumDragDropHelper } from './event-observers/cesium-drag-drop-helper';\n\nclass Registration {\n  constructor(public observable: Observable<EventResult>,\n              public  stopper: Subject<any>,\n              public  priority: number,\n              public  isPaused: boolean) {\n  }\n}\n\n/**\n * Returns screen position, drag boolean for drag events only\n */\nexport interface Movement {\n  startPosition: { x: number, y: number };\n  endPosition: { x: number, y: number };\n  drop?: boolean;\n}\n\nexport interface EventResult {\n  movement: Movement;\n  cesiumEntities: any[];\n  entities: any[];\n}\n\n/**\n * Manages all map events. Notice events will run outside of Angular zone.\n * Provided by `<ac-map/>` component there for could be injected at any component under `<ac-map/>` hierarchy\n * or from the `<ac-map/>` component reference `acMapComponent.getMapEventsManager()`\n *\n * __usage:__\n * ```\n * MapEventsManagerService.register({event, modifier, priority, entityType, pickOption}).subscribe()\n * ```\n * __param:__ {CesiumEvent} event\n * __param:__ {CesiumEventModifier} modifier\n * __param:__ priority - the bigger the number the bigger the priority. default : 0.\n * __param:__ entityType - entity type class that you are interested like (Track). the class must extends AcEntity\n * __param:__ pickOption - self explained\n */\n@Injectable()\nexport class MapEventsManagerService {\n\n  private scene: any;\n  private eventRegistrations = new Map<string, Registration[]>();\n\n  constructor(private cesiumService: CesiumService,\n              private eventBuilder: CesiumEventBuilder,\n              private plonterService: PlonterService) {\n  }\n\n  init() {\n    this.eventBuilder.init();\n    this.scene = this.cesiumService.getScene();\n  }\n\n  /**\n   * Register to map event\n   * @param input Event Registration Input\n   *\n   * @returns DisposableObservable<EventResult>\n   */\n  register(input: EventRegistrationInput): DisposableObservable<EventResult> {\n    if (this.scene === undefined) {\n      throw new Error('CesiumService has not been initialized yet - MapEventsManagerService must be injected  under ac-map');\n    }\n\n    input.pick = input.pick || PickOptions.NO_PICK;\n    input.priority = input.priority || 0;\n    input.pickConfig = input.pickConfig || {};\n\n    if (input.entityType && input.pick === PickOptions.NO_PICK) {\n      throw new Error('MapEventsManagerService: can\\'t register an event ' +\n        'with entityType and PickOptions.NO_PICK - It doesn\\'t make sense ');\n    }\n\n    const eventName = CesiumEventBuilder.getEventFullName(input.event, input.modifier);\n\n    if (!this.eventRegistrations.has(eventName)) {\n      this.eventRegistrations.set(eventName, []);\n    }\n\n    const eventRegistration = this.createEventRegistration(input);\n    const registrationObservable: any = eventRegistration.observable;\n    registrationObservable.dispose = () => this.disposeObservable(eventRegistration, eventName);\n    this.eventRegistrations.get(eventName).push(eventRegistration);\n\n    this.sortRegistrationsByPriority(eventName);\n    return <DisposableObservable<EventResult>>registrationObservable;\n  }\n\n  private disposeObservable(eventRegistration: Registration, eventName: string) {\n    eventRegistration.stopper.next(1);\n    const registrations = this.eventRegistrations.get(eventName);\n    const index = registrations.indexOf(eventRegistration);\n    if (index !== -1) {\n      registrations.splice(index, 1);\n    }\n    this.sortRegistrationsByPriority(eventName);\n  }\n\n  private sortRegistrationsByPriority(eventName: string) {\n    const registrations = this.eventRegistrations.get(eventName);\n    registrations.sort((a, b) => b.priority - a.priority);\n    if (registrations.length === 0) {\n      return;\n    }\n\n    // Active registrations by priority\n    const currentPriority = registrations[0].priority;\n    registrations.forEach((registration) => {\n      registration.isPaused = registration.priority < currentPriority;\n    });\n\n  }\n\n  private createEventRegistration({\n                                    event,\n                                    modifier,\n                                    entityType,\n                                    pick: pickOption,\n                                    priority,\n                                    pickFilter,\n                                    pickConfig,\n                                  }: EventRegistrationInput): Registration {\n    const cesiumEventObservable = this.eventBuilder.get(event, modifier);\n    const stopper = new Subject<any>();\n\n    const registration = new Registration(undefined, stopper, priority, false);\n    let observable: Observable<EventResult>;\n\n    if (!CesiumDragDropHelper.dragEvents.has(event)) {\n      observable = cesiumEventObservable.pipe(\n        filter(() => !registration.isPaused),\n        map((movement) => this.triggerPick(movement, pickOption, pickConfig)),\n        filter((result) => result.cesiumEntities !== null || entityType === undefined),\n        map((picksAndMovement) => this.addEntities(picksAndMovement, entityType, pickOption, pickFilter)),\n        filter((result) => result.entities !== null || (entityType === undefined && !pickFilter)),\n        switchMap((entitiesAndMovement) => this.plonter(entitiesAndMovement, pickOption)),\n        takeUntil(stopper));\n    } else {\n      observable = this.createDragEvent({\n        event,\n        modifier,\n        entityType,\n        pick: pickOption,\n        priority,\n        pickFilter,\n        pickConfig\n      }).pipe(takeUntil(stopper));\n    }\n\n    registration.observable = observable;\n    return registration;\n  }\n\n  private createDragEvent({\n                            event,\n                            modifier,\n                            entityType,\n                            pick: pickOption,\n                            priority,\n                            pickFilter,\n                            pickConfig,\n                          }: EventRegistrationInput): Observable<EventResult> {\n    const { mouseDownEvent, mouseUpEvent } = CesiumDragDropHelper.getDragEventTypes(event);\n\n    const mouseUpObservable = this.eventBuilder.get(mouseUpEvent);\n    const mouseMoveObservable = this.eventBuilder.get(CesiumEvent.MOUSE_MOVE);\n\n    const mouseDownRegistration = this.createEventRegistration({\n      event: mouseDownEvent,\n      modifier,\n      entityType,\n      pick: pickOption,\n      priority,\n      pickFilter,\n      pickConfig,\n    });\n\n    const dropSubject = new Subject<EventResult>();\n    const dragObserver = mouseDownRegistration.observable.pipe(mergeMap(e => {\n      let lastMove: any = null;\n      const dragStartPositionX = e.movement.startPosition.x;\n      const dragStartPositionY = e.movement.startPosition.y;\n      return mouseMoveObservable.pipe(map((movement) => {\n        lastMove = {\n          movement: {\n            drop: false,\n            startPosition: {\n              x: dragStartPositionX,\n              y: dragStartPositionY,\n            },\n            endPosition: movement.endPosition,\n          },\n          entities: e.entities,\n          cesiumEntities: e.cesiumEntities\n        };\n        return lastMove;\n      }), takeUntil(mouseUpObservable), tap({\n        complete: () => {\n          // On complete\n          if (lastMove) {\n            const dropEvent = Object.assign({}, lastMove);\n            dropEvent.movement.drop = true;\n            dropSubject.next(dropEvent);\n          }\n        }\n      }));\n    }));\n\n    return merge(dragObserver, dropSubject);\n\n  }\n\n  private triggerPick(movement: any, pickOptions: PickOptions, pickConfig: PickConfiguration) {\n    let picks: any = [];\n    switch (pickOptions) {\n      case PickOptions.PICK_ONE:\n      case PickOptions.PICK_ALL:\n        picks = this.scene.drillPick(movement.endPosition, pickConfig.drillPickLimit, pickConfig.pickWidth, pickConfig.pickHeight);\n        picks = picks.length === 0 ? null : picks;\n        break;\n      case PickOptions.PICK_FIRST:\n        const pick = this.scene.pick(movement.endPosition, pickConfig.pickWidth, pickConfig.pickHeight);\n        picks = pick === undefined ? null : [pick];\n        break;\n      case PickOptions.NO_PICK:\n        break;\n      default:\n        break;\n    }\n\n    // Picks can be cesium entity or cesium primitive\n    if (picks) {\n      picks = picks.map((pick: any) => pick.id && pick.id instanceof Cesium.Entity ? pick.id : pick.primitive);\n    }\n\n    return { movement: movement, cesiumEntities: picks };\n  }\n\n  private addEntities(picksAndMovement: any, entityType: any, pickOption: PickOptions, pickFilter?: (any) => boolean): EventResult {\n\n    if (picksAndMovement.cesiumEntities === null) {\n      picksAndMovement.entities = null;\n      return picksAndMovement;\n    }\n    let entities = [];\n    if (pickOption !== PickOptions.NO_PICK) {\n      if (entityType) {\n        entities = picksAndMovement.cesiumEntities.map((pick: any) => pick.acEntity).filter((acEntity: any) => {\n          return acEntity && acEntity instanceof entityType;\n        });\n      } else {\n        entities = picksAndMovement.cesiumEntities.map((pick: any) => pick.acEntity);\n      }\n\n      entities = UtilsService.unique(entities);\n      entities = (pickFilter && entities) ? entities.filter(pickFilter) : entities;\n      if (entities.length === 0) {\n        entities = null;\n      }\n    }\n\n    picksAndMovement.entities = entities;\n\n    return picksAndMovement;\n  }\n\n  private plonter(entitiesAndMovement: EventResult, pickOption: PickOptions): Observable<EventResult> {\n    if (pickOption === PickOptions.PICK_ONE && entitiesAndMovement.entities !== null && entitiesAndMovement.entities.length > 1) {\n      return this.plonterService.plonterIt(entitiesAndMovement);\n    } else {\n      return observableOf(entitiesAndMovement);\n    }\n  }\n}\n","import { CesiumService } from '../cesium/cesium.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MapLayersService {\n\n  private layersDataSources: any[] = [];\n\n  constructor(private cesiumService: CesiumService) {\n\n  }\n\n  registerLayerDataSources(dataSources: any[], zIndex: number) {\n    dataSources.forEach(ds => {\n      ds.zIndex = zIndex;\n      this.layersDataSources.push(ds);\n    });\n  }\n\n  drawAllLayers() {\n    this.layersDataSources.sort((a, b) => a.zIndex - b.zIndex);\n\n    this.layersDataSources.forEach((dataSource) => {\n      this.cesiumService.getViewer().dataSources.add(dataSource);\n    });\n  }\n\n  updateAndRefresh(dataSources: any[], newZIndex: number) {\n    if (dataSources && dataSources.length) {\n      dataSources.forEach((ds) => {\n        const index = this.layersDataSources.indexOf(ds);\n        if (index !== -1) {\n          this.layersDataSources[index].zIndex = newZIndex;\n        }\n      });\n\n      this.cesiumService.getViewer().dataSources.removeAll();\n      this.drawAllLayers();\n    }\n  }\n\n  removeDataSources(dataSources: any[]) {\n    dataSources.forEach(ds => {\n      const index = this.layersDataSources.indexOf(ds);\n      if (index !== -1) {\n        this.layersDataSources.splice(index, 1);\n        this.cesiumService.getViewer().dataSources.remove(ds, true);\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AcMapComponent } from '../../components/ac-map/ac-map.component';\n\n/**\n *  The service manages `ac-map` instances. `ac-map` register itself to this service.\n *  This allows retrieval of maps provided services outside of `ac-map` scope.\n */\n@Injectable()\nexport class MapsManagerService {\n  private defaultIdCounter = 0;\n  private _Maps = new Map<string, AcMapComponent>();\n  private firstMap: any;\n  private eventRemoveCallbacks: Function[] = [];\n\n  constructor() {\n  }\n\n  getMap(id?: string): AcMapComponent | undefined {\n    if (!id) {\n      return this.firstMap;\n    }\n    return this._Maps.get(id);\n  }\n\n  _registerMap(id: string, acMap: AcMapComponent): string {\n    if (!this.firstMap) {\n      this.firstMap = acMap;\n    }\n\n    const mapId = id ? id : this.generateDefaultId();\n    if (this._Maps.has(mapId)) {\n      throw new Error(`Map with id: ${mapId} already exist`);\n    }\n    this._Maps.set(mapId, acMap);\n    return mapId;\n  }\n\n  _removeMapById(id: string) {\n    if (this._Maps.has(id) && this._Maps.get(id) === this.firstMap) {\n      const iter = this._Maps.values();\n      iter.next(); // skip firstMap\n      this.firstMap = iter.next().value;\n    }\n    return this._Maps.delete(id);\n  }\n\n  private generateDefaultId(): string {\n    this.defaultIdCounter++;\n    return 'default-map-id-' + this.defaultIdCounter;\n  }\n\n  /**\n   * Binds multiple 2D map's cameras together.\n   * @param mapsConfiguration - binding options.\n   * mapId - the id of the maps to bind.\n   * sensitivity - the amount the camera position should change in order to sync other maps.\n   * bindZoom - should bind zoom level\n   */\n  sync2DMapsCameras(mapsConfiguration: { id: string; sensitivity?: number; bindZoom?: boolean }[]) {\n    const DEFAULT_SENSITIVITY = 0.01;\n    this.unsyncMapsCameras();\n    const maps: { map: AcMapComponent; options?: { sensitivity?: number; bindZoom?: boolean } }[] = mapsConfiguration.map(config => {\n      const map = this.getMap(config.id);\n      if (!map) {\n        throw new Error(`Couldn't find map with id: ${config.id}`);\n      }\n\n      return {map, options: {sensitivity: config.sensitivity, bindZoom: config.bindZoom}};\n    });\n\n    maps.forEach(masterMapConfig => {\n      const masterMap = masterMapConfig.map;\n      const options = masterMapConfig.options;\n      const masterCamera = masterMap.getCameraService().getCamera();\n      const masterCameraCartographic = masterCamera.positionCartographic;\n      masterCamera.percentageChanged = options.sensitivity || DEFAULT_SENSITIVITY;\n      const removeCallback = masterCamera.changed.addEventListener(() => {\n        maps.forEach(slaveMapConfig => {\n          const slaveMap = slaveMapConfig.map;\n          const slaveMapOptions = slaveMapConfig.options;\n          if (slaveMap === masterMap) {\n            return;\n          }\n\n          const slaveCamera = slaveMap.getCameraService().getCamera();\n          const slaveCameraCartographic = slaveCamera.positionCartographic;\n          const position = Cesium.Ellipsoid.WGS84.cartographicToCartesian({\n            longitude: masterCameraCartographic.longitude,\n            latitude: masterCameraCartographic.latitude,\n            height: slaveMapOptions.bindZoom ? masterCameraCartographic.height : slaveCameraCartographic.height,\n          });\n\n          if (slaveMap.getCesiumViewer().scene.mode !== Cesium.SceneMode.MORPHING) {\n            slaveCamera.setView({\n              destination: position,\n              orientation: {\n                heading: slaveCamera.heading,\n                pitch: slaveCamera.pitch,\n              },\n            });\n          }\n        });\n      });\n      this.eventRemoveCallbacks.push(removeCallback);\n    });\n  }\n\n  /**\n   * Unsyncs maps cameras\n   */\n  unsyncMapsCameras() {\n    this.eventRemoveCallbacks.forEach(removeCallback => removeCallback());\n    this.eventRemoveCallbacks = [];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../cesium/cesium.service';\n\n/**\n * Take screenshot of your cesium globe.\n *\n * usage:\n * ```typescript\n * // get base 64 data url\n * const dataUrl = screenshotService.getMapScreenshotDataUrl();\n *\n * // or download as png\n * screenshotService.downloadMapScreenshot('my-map.png');\n *\n * ```\n *\n */\n@Injectable()\nexport class ScreenshotService {\n  constructor(private cesiumService: CesiumService) {\n  }\n\n  getMapScreenshotDataUrlBase64() {\n    const canvas = this.cesiumService.getCanvas();\n    return canvas.toDataURL();\n  }\n\n\n  downloadMapScreenshot(filename = 'map.png') {\n    const dataUrl = this.getMapScreenshotDataUrlBase64();\n    this.downloadURI(dataUrl, filename);\n  }\n\n  private downloadURI(uri: string, name: string) {\n    const link = document.createElement('a');\n    link.download = name;\n    link.href = uri;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { AfterViewInit, Component, ElementRef, Inject, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { CesiumService } from '../../services/cesium/cesium.service';\nimport { ConfigurationService } from '../../cesium-enhancements/ConfigurationService';\nimport { SceneMode } from '../../models/scene-mode.enum';\nimport { CameraService } from '../../services/camera/camera.service';\nimport { ContextMenuService } from '../../services/context-menu/context-menu.service';\nimport { CoordinateConverter } from '../../services/coordinate-converter/coordinate-converter.service';\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\nimport { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\nimport { CzmlDrawerService } from '../../services/drawers/czml-drawer/czml-drawer.service';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\nimport { PolylineDrawerService } from '../../services/drawers/polyline-drawer/polyline-drawer.service';\nimport { PolylinePrimitiveDrawerService } from '../../services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service';\nimport { KeyboardControlService } from '../../services/keyboard-control/keyboard-control.service';\nimport { CesiumEventBuilder } from '../../services/map-events-mananger/cesium-event-builder';\nimport { MapEventsManagerService } from '../../services/map-events-mananger/map-events-manager';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\nimport { MapsManagerService } from '../../services/maps-manager/maps-manager.service';\nimport { PlonterService } from '../../services/plonter/plonter.service';\nimport { ScreenshotService } from '../../services/screenshot/screenshot.service';\n\n/**\n * This is a map implementation, creates the cesium map.\n * Every layer should be tag inside ac-map tag\n *\n * Accessing cesium viewer:\n * 1. acMapComponent.getCesiumViewer()\n * 2. Use MapManagerService.getMap().getCesiumViewer() or if more then one map: MapManagerService.getMap(mapId).getCesiumViewer()\n *\n *\n * @example\n * <ac-map>\n *     <ac-map-layer-provider></ac-map-layer-provider>\n *     <dynamic-ellipse-layer #layer></dynamic-ellipse-layer>\n * </ac-map>\n */\n@Component({\n  selector: 'ac-map',\n  template: `\n    <ac-default-plonter *ngIf=\"!disableDefaultPlonter\"></ac-default-plonter>\n    <ac-context-menu-wrapper></ac-context-menu-wrapper>\n    <ng-content></ng-content>\n  `,\n  providers: [\n    CesiumService,\n    BillboardDrawerService,\n    CesiumEventBuilder,\n    KeyboardControlService,\n    MapEventsManagerService,\n    PlonterService,\n    LabelDrawerService,\n    PolylineDrawerService,\n    PolylinePrimitiveDrawerService,\n    EllipseDrawerService,\n    PointDrawerService,\n    ArcDrawerService,\n    CzmlDrawerService,\n    PolygonDrawerService,\n    MapLayersService,\n    CameraService,\n    ScreenshotService,\n    ContextMenuService,\n    CoordinateConverter,\n  ],\n})\nexport class AcMapComponent implements OnChanges, OnInit, AfterViewInit, OnDestroy {\n  /**\n   * Disable default plonter context menu\n   */\n  @Input()\n  disableDefaultPlonter = false;\n\n  /**\n   * Set the id name of the map\n   * default: 'default-map-id-[index]'\n   */\n  @Input()\n  mapId: string;\n\n  /**\n   * flyTo options according to https://cesiumjs.org/Cesium/Build/Documentation/Camera.html?classFilter=cam#flyTo\n   */\n  @Input()\n  flyTo: any;\n\n  /**\n   * Sets the map's SceneMode\n   */\n  @Input()\n  sceneMode: SceneMode;\n\n  /**\n   * Optional - the container element's id in which the map's canvas will be appended to.\n   * If not supplied - the container element will be the parent element of ac-map;\n   */\n  @Input()\n  containerId: string;\n\n  private mapContainer: HTMLElement;\n\n  constructor(\n    private _cesiumService: CesiumService,\n    private _cameraService: CameraService,\n    private _elemRef: ElementRef,\n    @Inject(DOCUMENT) private document,\n    private mapsManagerService: MapsManagerService,\n    private billboardDrawerService: BillboardDrawerService,\n    private labelDrawerService: LabelDrawerService,\n    private ellipseDrawerService: EllipseDrawerService,\n    private polylineDrawerService: PolylineDrawerService,\n    private polygonDrawerService: PolygonDrawerService,\n    private arcDrawerService: ArcDrawerService,\n    private pointDrawerService: PointDrawerService,\n    private czmlDrawerService: CzmlDrawerService,\n    private mapEventsManager: MapEventsManagerService,\n    private keyboardControlService: KeyboardControlService,\n    private mapLayersService: MapLayersService,\n    private configurationService: ConfigurationService,\n    private screenshotService: ScreenshotService,\n    public contextMenuService: ContextMenuService,\n    private coordinateConverter: CoordinateConverter,\n  ) {\n    this.mapContainer = this.document.createElement('div');\n    this.mapContainer.style.width = '100%';\n    this.mapContainer.style.height = '100%';\n    this.mapContainer.className = 'map-container';\n    this._cesiumService.init(this.mapContainer, this);\n    this._cameraService.init(this._cesiumService);\n    this.mapEventsManager.init();\n    this.billboardDrawerService.init();\n    this.labelDrawerService.init();\n    this.ellipseDrawerService.init();\n    this.polylineDrawerService.init();\n    this.polygonDrawerService.init();\n    this.arcDrawerService.init();\n    this.pointDrawerService.init();\n    this.czmlDrawerService.init();\n    this.keyboardControlService.init();\n    this.contextMenuService.init(this.mapEventsManager);\n  }\n\n  ngOnInit() {\n    this.mapId = this.mapsManagerService._registerMap(this.mapId, this);\n    if (!this.containerId) {\n      this._elemRef.nativeElement.appendChild(this.mapContainer);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['sceneMode']) {\n      this._cameraService.setSceneMode(changes['sceneMode'].currentValue);\n    }\n    if (changes['flyTo']) {\n      this._cameraService.cameraFlyTo(changes['flyTo'].currentValue);\n    }\n    if (changes['containerId'] && !changes['containerId'].firstChange) {\n      const element = this.document.getElementById(changes['containerId'].currentValue);\n      if (element) {\n        element.appendChild(this.mapContainer);\n      } else {\n        throw new Error(`No element found with id: ${changes['containerId'].currentValue}`);\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.mapLayersService.drawAllLayers();\n    if (this.containerId) {\n      setTimeout(() => {\n        const element = this.document.getElementById(this.containerId);\n        if (element) {\n          element.appendChild(this.mapContainer);\n        } else {\n          throw new Error(`No element found with id: ${this.containerId}`);\n        }\n      }, 0);\n    }\n  }\n\n  ngOnDestroy(): void {\n    const viewer = this.getCesiumViewer();\n    viewer.destroy();\n    this.mapContainer.remove();\n    this.mapsManagerService._removeMapById(this.mapId);\n  }\n\n  /**\n   * @returns ac-map's cesium service\n   */\n  getCesiumService() {\n    return this._cesiumService;\n  }\n\n  /**\n   * @returns map's cesium viewer\n   */\n  getCesiumViewer() {\n    return this._cesiumService.getViewer();\n  }\n\n\n  getCameraService(): CameraService {\n    return this._cameraService;\n  }\n\n  getId() {\n    return this.mapId;\n  }\n\n\n  getMapContainer() {\n    return this.mapContainer;\n  }\n\n\n  getMapEventsManager(): MapEventsManagerService {\n    return this.mapEventsManager;\n  }\n\n  getContextMenuService(): ContextMenuService {\n    return this.contextMenuService;\n  }\n\n  getScreenshotService() {\n    return this.screenshotService;\n  }\n\n  getKeyboardControlService() {\n    return this.keyboardControlService;\n  }\n\n  getCoordinateConverter() {\n    return this.coordinateConverter;\n  }\n}\n","/**\n * Action to do on entity\n */\nexport enum ActionType {\n  ADD_UPDATE,\n  DELETE\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { IDescription } from '../../models/description';\nimport { LayerOptions } from '../../models/layer-options';\n\n@Injectable()\nexport class LayerService {\n  private _context: any;\n  private _options: LayerOptions;\n  private _show: boolean;\n  private _zIndex: number;\n  private _entityName: string;\n  private _cache = true;\n  private descriptions: IDescription[] = [];\n  private layerUpdate = new EventEmitter();\n\n  get cache(): boolean {\n    return this._cache;\n  }\n\n  set cache(value: boolean) {\n    this._cache = value;\n  }\n\n  get zIndex(): number {\n    return this._zIndex;\n  }\n\n  set zIndex(value: number) {\n    if (value !== this._zIndex) {\n      this.layerUpdate.emit();\n    }\n    this._zIndex = value;\n  }\n\n  get show(): boolean {\n    return this._show;\n  }\n\n  set show(value: boolean) {\n    if (value !== this._show) {\n      this.layerUpdate.emit();\n    }\n    this._show = value;\n  }\n\n  get options(): LayerOptions {\n    return this._options;\n  }\n\n  set options(value: LayerOptions) {\n    this._options = value;\n    this.layerUpdate.emit();\n  }\n\n  get context(): any {\n    return this._context;\n  }\n\n  set context(context) {\n    this._context = context;\n    this.layerUpdate.emit();\n  }\n\n  setEntityName(name: string) {\n    this._entityName = name;\n  }\n\n  getEntityName(): string {\n    return this._entityName;\n  }\n\n  registerDescription(descriptionComponent: IDescription) {\n    if (this.descriptions.indexOf(descriptionComponent) < 0) {\n      this.descriptions.push(descriptionComponent);\n    }\n  }\n\n  unregisterDescription(descriptionComponent: IDescription) {\n    const index = this.descriptions.indexOf(descriptionComponent);\n    if (index > -1) {\n      this.descriptions.splice(index, 1);\n    }\n  }\n\n  getDescriptions(): IDescription[] {\n    return this.descriptions;\n  }\n\n  layerUpdates(): EventEmitter<any> {\n    return this.layerUpdate;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ComputationCache {\n  private _cache = new Map<string, any>();\n\n  get(expression: string, insertFn: (() => any)): any {\n    if (this._cache.has(expression)) {\n      return this._cache.get(expression);\n    }\n\n    const value = insertFn();\n    this._cache.set(expression, value);\n    return value;\n  }\n\n  clear() {\n    this._cache.clear();\n  }\n}\n","export class Checker {\n  static throwIfAnyNotPresent(values: Object, propertyNames: string[]) {\n    propertyNames.forEach(propertyName => Checker.throwIfNotPresent(values, propertyName));\n  }\n\n  static throwIfNotPresent(value: any, name: string) {\n    if (!Checker.present(value[name])) {\n      throw new Error(`Error: ${name} was not given.`);\n    }\n  }\n\n  static present(value: any) {\n    return value !== undefined && value !== null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../../cesium/cesium.service';\nimport { Checker } from '../../../../utils/checker';\nimport { EllipsePrimitive } from 'primitive-primitives';\nimport { PrimitivesDrawerService } from '../../primitives-drawer/primitives-drawer.service';\n\n\n/**\n *  This drawer is responsible for creating the dynamic version of the ellipse component.\n *  We are using the primitive-primitives implementation of an ellipse. see: https://github.com/gotenxds/Primitive-primitives\n *  This allows us to change the position of the ellipses without creating a new primitive object\n *  as Cesium does not allow updating an ellipse.\n */\n@Injectable()\nexport class DynamicEllipseDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PrimitiveCollection, cesiumService);\n  }\n\n  add(cesiumProps: any): any {\n    Checker.throwIfAnyNotPresent(cesiumProps, ['center', 'semiMajorAxis', 'semiMinorAxis']);\n\n    return super.add(new EllipsePrimitive(cesiumProps));\n  }\n\n  update(ellipse: any, cesiumProps: any): any {\n    ellipse.updateLocationData(cesiumProps);\n\n    return ellipse;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../../primitives-drawer/primitives-drawer.service';\n\n/**\n *  This drawer is responsible for creating the dynamic version of the polyline component.\n */\n@Injectable()\nexport class DynamicPolylineDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PolylineCollection, cesiumService);\n  }\n}\n","import { PrimitivesDrawerService } from '../../primitives-drawer/primitives-drawer.service';\nimport { CesiumService } from '../../../cesium/cesium.service';\n\n/**\n *\n * This drawer is deprecated.\n * General static primitives drawer responsible of drawing static Cesium primitives with material.\n */\nexport abstract class StaticPrimitiveDrawer extends PrimitivesDrawerService {\n  constructor(private geometryType: any, cesiumService: CesiumService) {\n    super(Cesium.PrimitiveCollection, cesiumService);\n  }\n\n  add(geometryProps: any, instanceProps: any, primitiveProps: any): any {\n    if (Object.keys(instanceProps).length === 0) {\n      throw(new Error('instanceProps object is empty'));\n    }\n    instanceProps.geometry = new this.geometryType(geometryProps);\n    primitiveProps.geometryInstances = new Cesium.GeometryInstance(instanceProps);\n    primitiveProps.asynchronous = false;\n    const primitive = new Cesium.Primitive(primitiveProps);\n    return super.add(primitive);\n  }\n\n  update(primitive: any, geometryProps: any, instanceProps: any, primitiveProps: any) {\n    instanceProps.geometry = new this.geometryType(geometryProps);\n    primitiveProps.geometryInstances = new Cesium.GeometryInstance(instanceProps);\n    this._cesiumCollection.remove(primitive);\n    return super.add(new Cesium.Primitive(primitiveProps));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../../cesium/cesium.service';\nimport { StaticPrimitiveDrawer } from '../static-primitive-drawer/static-primitive-drawer.service';\n\n/**\n *  This drawer is responsible for creating the static version of the circle component.\n */\n@Injectable()\nexport class StaticCircleDrawerService extends StaticPrimitiveDrawer {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.CircleGeometry, cesiumService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../../cesium/cesium.service';\nimport { StaticPrimitiveDrawer } from '../static-primitive-drawer/static-primitive-drawer.service';\n\n/**\n *  This drawer is responsible for creating the static version of the polyline component.\n *  This also allows us to change the color of the polylines.\n */\n@Injectable()\nexport class StaticPolylineDrawerService extends StaticPrimitiveDrawer {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PolylineGeometry, cesiumService);\n  }\n\n  /**\n   * Update function can only change the primitive color.\n   */\n  update(primitive: any, geometryProps: any, instanceProps: any, primitiveProps: any) {\n    const color = instanceProps.attributes.color.value;\n\n    if (primitive.ready) {\n      primitive.getGeometryInstanceAttributes().color = color;\n    } else {\n      Cesium.when(primitive.readyPromise).then((readyPrimitive: any) => {\n        readyPrimitive.getGeometryInstanceAttributes().color.value = color;\n      });\n    }\n\n    return primitive;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { StaticPrimitiveDrawer } from '../static-primitive-drawer/static-primitive-drawer.service';\nimport { CesiumService } from '../../../cesium/cesium.service';\n\n/**\n + This drawer is responsible for drawing a polygon over the Cesium map.\n + This implementation uses simple PolygonGeometry and Primitive parameters.\n + This doesn't allow us to change the position, color, etc.. of the polygons. For that you may use the dynamic polygon component.\n */\n@Injectable()\nexport class StaticPolygonDrawerService extends StaticPrimitiveDrawer {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PolygonGeometry, cesiumService);\n  }\n}\n","import { CesiumService } from '../../../cesium/cesium.service';\nimport { Injectable } from '@angular/core';\nimport { StaticPrimitiveDrawer } from '../static-primitive-drawer/static-primitive-drawer.service';\n\n\n/**\n + *  This drawer is responsible for drawing an ellipse over the Cesium map.\n + *  This implementation uses simple EllipseGeometry and Primitive parameters.\n + *  This doesn't allow us to change the position, color, etc.. of the ellipses. For that you may use the dynamic ellipse component.\n + */\n@Injectable()\nexport class StaticEllipseDrawerService extends StaticPrimitiveDrawer {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.EllipseGeometry, cesiumService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing models.\n */\n@Injectable()\nexport class ModelDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.model);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing box.\n */\n@Injectable()\nexport class BoxDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.box);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing corridors .\n */\n@Injectable()\nexport class CorridorDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.corridor);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing cylinders.\n */\n@Injectable()\nexport class CylinderDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.cylinder);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing ellipsoid.\n */\n@Injectable()\nexport class EllipsoidDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.ellipsoid);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing polylines.\n */\n@Injectable()\nexport class PolylineVolumeDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.polylineVolume);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing polygons.\n */\n@Injectable()\nexport class WallDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.wall);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing rectangles.\n */\n@Injectable()\nexport class RectangleDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.rectangle);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\n\n/**\n *  This drawer is responsible for drawing labels as primitives.\n *  This drawer is more efficient than LabelDrawerService when drawing dynamic labels.\n */\n@Injectable()\nexport class LabelPrimitiveDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.LabelCollection, cesiumService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\n\n/**\n *  This drawer is responsible for drawing billboards as primitives.\n *  This drawer is more efficient than BillboardDrawerService when drawing dynamic billboards.\n */\n@Injectable()\nexport class BillboardPrimitiveDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.BillboardCollection, cesiumService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\n\n/**\n *  This drawer is responsible of drawing points as primitives.\n *  This drawer is more efficient than PointDrawerService when drawing dynamic points.\n */\n@Injectable()\nexport class PointPrimitiveDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PointPrimitiveCollection, cesiumService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\n\n@Injectable()\nexport class HtmlDrawerService extends PrimitivesDrawerService {\n  constructor(private _cesiumService: CesiumService) {\n    super(Cesium.HtmlCollection, _cesiumService);\n  }\n\n  add(cesiumProps: any): any {\n    cesiumProps.scene = this._cesiumService.getScene();\n    cesiumProps.mapContainer = this._cesiumService.getMap().getMapContainer();\n    return super.add(cesiumProps);\n  }\n}\n","import { from as observableFrom, merge as observableMerge, Observable, Subject } from 'rxjs';\n\nimport { takeUntil } from 'rxjs/operators';\n// tslint:disable\nimport { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\nimport { AfterContentInit, ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { AcNotification } from '../../models/ac-notification';\nimport { ActionType } from '../../models/action-type.enum';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\nimport { PolylineDrawerService } from '../../services/drawers/polyline-drawer/polyline-drawer.service';\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\nimport { AcEntity } from '../../models/ac-entity';\nimport { BasicDrawerService } from '../../services/drawers/basic-drawer/basic-drawer.service';\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\nimport { LayerOptions } from '../../models/layer-options';\nimport { DynamicEllipseDrawerService } from '../../services/drawers/static-dynamic/ellipse-drawer/dynamic-ellipse-drawer.service';\nimport { DynamicPolylineDrawerService } from '../../services/drawers/static-dynamic/dynamic-polyline-drawer/dynamic-polyline-drawer.service';\nimport { StaticCircleDrawerService } from '../../services/drawers/static-dynamic/static-circle-drawer/static-circle-drawer.service';\nimport { StaticPolylineDrawerService } from '../../services/drawers/static-dynamic/static-polyline-drawer/static-polyline-drawer.service';\nimport { StaticPolygonDrawerService } from '../../services/drawers/static-dynamic/static-polygon-drawer/polygon-drawer.service';\nimport { StaticEllipseDrawerService } from '../../services/drawers/static-dynamic/ellipse-drawer/ellipse-drawer.service';\nimport { ModelDrawerService } from '../../services/drawers/model-drawer/model-drawer.service';\nimport { BoxDrawerService } from '../../services/drawers/box-dawer/box-drawer.service';\nimport { CorridorDrawerService } from '../../services/drawers/corridor-dawer/corridor-drawer.service';\nimport { CylinderDrawerService } from '../../services/drawers/cylinder-dawer/cylinder-drawer.service';\nimport { EllipsoidDrawerService } from '../../services/drawers/ellipoid-drawer/ellipsoid-drawer.service';\nimport { PolylineVolumeDrawerService } from '../../services/drawers/polyline-volume-dawer/polyline-volume-drawer.service';\nimport { WallDrawerService } from '../../services/drawers/wall-dawer/wall-drawer.service';\nimport { RectangleDrawerService } from '../../services/drawers/rectangle-dawer/rectangle-drawer.service';\nimport { PolylinePrimitiveDrawerService } from '../../services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service';\nimport { LabelPrimitiveDrawerService } from '../../services/drawers/label-primitive-drawer/label-primitive-drawer.service';\nimport { BillboardPrimitiveDrawerService } from '../../services/drawers/billboard-primitive-drawer/billboard-primitive-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\nimport { PointPrimitiveDrawerService } from '../../services/drawers/point-primitive-drawer/point-primitive-drawer.service';\nimport { HtmlDrawerService } from '../../services/drawers/html-drawer/html-drawer.service';\nimport { CzmlDrawerService } from '../../services/drawers/czml-drawer/czml-drawer.service';\n\n// tslint:enable\n/**\n *  This is a ac-layer implementation.\n *  The ac-layer element must be a child of ac-map element.\n *  + acFor `{string}` - get the tracked observable and entityName (see the example).\n *  + show `{boolean}` - show/hide layer's entities.\n *  + context `{any}` - get the context layer that will use the componnet (most of the time equal to \"this\").\n *  + options `{LayerOptions}` - sets the layer options for each drawer.\n *  + zIndex `{number}` - controls the zIndex (order) of the layer, layers with greater zIndex will be in front of layers with lower zIndex\n *    (Exception For `Billboard` and `Label`, should use `[eyeOffset]` prop instead)</br>\n *    zIndex won't work for pritimitve descs (like ac-primitive-polyline...)\n *  + debug `{boolean}` - prints every acNotification\n *\n *\n *  __Usage :__\n *  ```\n *  <ac-map>\n *    <ac-layer acFor=\"let track of tracks$\" [show]=\"show\" [context]=\"this\" [options]=\"options\" [zIndex]=\"1\">\n *      <ac-billboard-desc props=\"{\n *        image: track.image,\n *        position: track.position,\n *        scale: track.scale,\n *        color: track.color,\n *        name: track.name\n *      }\">\n *      </ac-billboard-desc>\n *        <ac-label-desc props=\"{\n *          position: track.position,\n *          pixelOffset : [-15,20] | pixelOffset,\n *          text: track.name,\n *          font: '15px sans-serif'\n *        }\">\n *      </ac-label-desc>\n *    </ac-layer>\n *  </ac-map>\n *  ```\n */\n@Component({\n  selector: 'ac-layer',\n  template: '<ng-content></ng-content>',\n  providers: [\n    LayerService,\n    ComputationCache,\n    BillboardDrawerService,\n    LabelDrawerService,\n    EllipseDrawerService,\n    PolylineDrawerService,\n    ArcDrawerService,\n    PointDrawerService,\n    PolygonDrawerService,\n    ModelDrawerService,\n    BoxDrawerService,\n    CorridorDrawerService,\n    CylinderDrawerService,\n    EllipsoidDrawerService,\n    PolylineVolumeDrawerService,\n    WallDrawerService,\n    RectangleDrawerService,\n    PolylinePrimitiveDrawerService,\n    LabelPrimitiveDrawerService,\n    BillboardPrimitiveDrawerService,\n    PointPrimitiveDrawerService,\n    HtmlDrawerService,\n    CzmlDrawerService,\n\n    DynamicEllipseDrawerService,\n    DynamicPolylineDrawerService,\n    StaticCircleDrawerService,\n    StaticPolylineDrawerService,\n    StaticPolygonDrawerService,\n    StaticEllipseDrawerService,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AcLayerComponent implements OnInit, OnChanges, AfterContentInit, OnDestroy {\n  @Input()\n  show = true;\n  @Input()\n  acFor: string;\n  @Input()\n  context: any;\n  @Input()\n  store = false;\n  @Input()\n  options: LayerOptions;\n  @Input()\n  zIndex = 0;\n  @Input()\n  debug = false;\n\n  private readonly acForRgx = /^let\\s+.+\\s+of\\s+.+$/;\n  private entityName: string;\n  private stopObservable = new Subject<any>();\n  private observable: Observable<AcNotification>;\n  private _drawerList: Map<string, BasicDrawerService>;\n  private _updateStream: Subject<AcNotification> = new Subject<AcNotification>();\n  private entitiesStore = new Map<string, any>();\n  private layerDrawerDataSources: any[] = [];\n\n  constructor(private layerService: LayerService,\n              private _computationCache: ComputationCache,\n              private mapLayersService: MapLayersService,\n              billboardDrawerService: BillboardDrawerService,\n              labelDrawerService: LabelDrawerService,\n              ellipseDrawerService: EllipseDrawerService,\n              polylineDrawerService: PolylineDrawerService,\n              polygonDrawerService: PolygonDrawerService,\n              arcDrawerService: ArcDrawerService,\n              pointDrawerService: PointDrawerService,\n              modelDrawerService: ModelDrawerService,\n              boxDrawerService: BoxDrawerService,\n              corridorDrawerService: CorridorDrawerService,\n              cylinderDrawerService: CylinderDrawerService,\n              ellipsoidDrawerSerice: EllipsoidDrawerService,\n              polylineVolumeDrawerService: PolylineVolumeDrawerService,\n              wallDrawerService: WallDrawerService,\n              rectangleDrawerService: RectangleDrawerService,\n              dynamicEllipseDrawerService: DynamicEllipseDrawerService,\n              dynamicPolylineDrawerService: DynamicPolylineDrawerService,\n              staticCircleDrawerService: StaticCircleDrawerService,\n              staticPolylineDrawerService: StaticPolylineDrawerService,\n              staticPolygonDrawerService: StaticPolygonDrawerService,\n              staticEllipseDrawerService: StaticEllipseDrawerService,\n              polylinePrimitiveDrawerService: PolylinePrimitiveDrawerService,\n              labelPrimitiveDrawerService: LabelPrimitiveDrawerService,\n              billboardPrimitiveDrawerService: BillboardPrimitiveDrawerService,\n              pointPrimitiveDrawerService: PointPrimitiveDrawerService,\n              htmlDrawerService: HtmlDrawerService,\n              czmlDrawerService: CzmlDrawerService\n  ) {\n    this._drawerList = new Map([\n      ['billboard', billboardDrawerService],\n      ['label', labelDrawerService],\n      ['ellipse', ellipseDrawerService],\n      ['polyline', polylineDrawerService],\n      ['polygon', polygonDrawerService as BasicDrawerService],\n      ['arc', arcDrawerService],\n      ['point', pointDrawerService],\n      ['model', modelDrawerService],\n      ['box', boxDrawerService],\n      ['corridor', corridorDrawerService],\n      ['cylinder', cylinderDrawerService],\n      ['ellipsoid', ellipsoidDrawerSerice],\n      ['polylineVolume', polylineVolumeDrawerService],\n      ['rectangle', rectangleDrawerService],\n      ['wall', wallDrawerService],\n      ['polylinePrimitive', polylinePrimitiveDrawerService],\n      ['labelPrimitive', labelPrimitiveDrawerService],\n      ['billboardPrimitive', billboardPrimitiveDrawerService],\n      ['pointPrimitive', pointPrimitiveDrawerService],\n      ['html', htmlDrawerService],\n      ['czml', czmlDrawerService],\n\n      ['dynamicEllipse', dynamicEllipseDrawerService],\n      ['dynamicPolyline', dynamicPolylineDrawerService],\n      ['staticCircle', staticCircleDrawerService],\n      ['staticPolyline', staticPolylineDrawerService],\n      ['staticPolygon', staticPolygonDrawerService],\n      ['staticEllipse', staticEllipseDrawerService],\n    ]);\n  }\n\n  init() {\n    this.initValidParams();\n\n    observableMerge(this._updateStream, this.observable).pipe<AcNotification>(takeUntil(this.stopObservable)).subscribe((notification) => {\n      this._computationCache.clear();\n\n      if (this.debug) {\n        console.log('AcLayer received notification:', notification);\n      }\n\n      let contextEntity = notification.entity;\n      if (this.store) {\n        contextEntity = this.updateStore(notification);\n      }\n\n      this.context[this.entityName] = contextEntity;\n      this.layerService.getDescriptions().forEach((descriptionComponent) => {\n        switch (notification.actionType) {\n          case ActionType.ADD_UPDATE:\n            descriptionComponent.draw(this.context, notification.id, contextEntity);\n            break;\n          case ActionType.DELETE:\n            descriptionComponent.remove(notification.id);\n            break;\n          default:\n            console.error('[ac-layer] unknown AcNotification.actionType for notification: ' + notification);\n        }\n      });\n    });\n  }\n\n  private updateStore(notification: AcNotification): any {\n    if (notification.actionType === ActionType.DELETE) {\n      this.entitiesStore.delete(notification.id);\n      return undefined;\n    } else {\n      if (this.entitiesStore.has(notification.id)) {\n        const entity = this.entitiesStore.get(notification.id);\n        Object.assign(entity, notification.entity);\n        return entity;\n      } else {\n        this.entitiesStore.set(notification.id, notification.entity);\n        return notification.entity;\n      }\n    }\n  }\n\n  private initValidParams() {\n    if (!this.context) {\n      throw new Error('ac-layer: must initialize [context] ');\n    }\n\n    if (!this.acForRgx.test(this.acFor)) {\n      throw new Error(`ac-layer: Invalid [acFor] syntax. Expected: [acFor]=\"let item of observable\" .Instead received: ${this.acFor}`);\n    }\n    const acForArr = this.acFor.split(' ');\n    this.observable = this.context[acForArr[3]];\n    this.entityName = acForArr[1];\n    if (!this.isObservable(this.observable)) {\n      throw new Error('ac-layer: must initailize [acFor] with rx observable, instead received: ' + this.observable);\n    }\n\n    this.layerService.context = this.context;\n    this.layerService.setEntityName(this.entityName);\n  }\n\n  /** Test for a rxjs Observable */\n  private isObservable(obj: any): boolean {\n    /* check via duck-typing rather than instance of\n     * to allow passing between window contexts */\n    return obj && typeof obj.subscribe === 'function';\n  }\n\n  ngAfterContentInit(): void {\n    this.init();\n  }\n\n  ngOnInit(): void {\n    this.layerService.context = this.context;\n    this.layerService.options = this.options;\n    this.layerService.show = this.show;\n    this.layerService.zIndex = this.zIndex;\n    this._drawerList.forEach((drawer, drawerName) => {\n      const initOptions = this.options ? this.options[drawerName] : undefined;\n      const drawerDataSources = drawer.init(initOptions);\n      // only entities drawers create data sources\n      if (drawerDataSources) {\n        // this.mapLayersService.registerLayerDataSources(drawerDataSources, this.zIndex);\n        // TODO: Check if the following line causes Bad Performance\n        this.layerDrawerDataSources.push(...drawerDataSources);\n      }\n      drawer.setShow(this.show);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.show && !changes.show.firstChange) {\n      const showValue = changes['show'].currentValue;\n      this.layerService.show = showValue;\n      this._drawerList.forEach((drawer) => drawer.setShow(showValue));\n    }\n\n    if (changes.zIndex && !changes.zIndex.firstChange) {\n      const zIndexValue = changes['zIndex'].currentValue;\n      this.layerService.zIndex = zIndexValue;\n      this.mapLayersService.updateAndRefresh(this.layerDrawerDataSources, zIndexValue);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.mapLayersService.removeDataSources(this.layerDrawerDataSources);\n    this.stopObservable.next(true);\n    this.removeAll();\n  }\n\n  getLayerService(): LayerService {\n    return this.layerService;\n  }\n\n  /**\n   * Returns an array of DataSources registered by a drawer of this layer\n   * @return Array of Cesium.DataSources\n   */\n  getLayerDrawerDataSources(): any[] {\n    return this.layerDrawerDataSources;\n  }\n\n  /**\n   * Returns an Array of DataSources of the drawer with the provided DataSource.name\n   * Example: getDataSourceOfDrawer('polyline') returns the dataSource of polyline drawer\n   * @return Array of Cesium.DataSources\n   */\n  getDrawerDataSourcesByName(name: string): any[] {\n    return this.layerDrawerDataSources.filter(d => d.name === name);\n  }\n\n  /**\n   * Returns the store.\n   */\n  getStore(): Map<string, any> {\n    return this.entitiesStore;\n  }\n\n  /**\n   * Remove all the entities from the layer.\n   */\n  removeAll(): void {\n    this.layerService.getDescriptions().forEach((description) => description.removeAll());\n    this.entitiesStore.clear();\n  }\n\n  /**\n   * remove entity from the layer\n   */\n  remove(entityId: string) {\n    this._updateStream.next({id: entityId, actionType: ActionType.DELETE});\n    this.entitiesStore.delete(entityId);\n  }\n\n  /**\n   * add/update entity to/from the layer\n   */\n  updateNotification(notification: AcNotification): void {\n    this._updateStream.next(notification);\n  }\n\n  /**\n   * add/update entity to/from the layer\n   */\n  update(entity: AcEntity, id: string): void {\n    this._updateStream.next({entity, id, actionType: ActionType.ADD_UPDATE});\n  }\n\n  refreshAll(collection: AcNotification[]): void {\n    // TODO make entity interface: collection of type entity not notification\n    observableFrom(collection).subscribe((entity) => this._updateStream.next(entity));\n  }\n}\n","import { Input, OnChanges, OnDestroy, OnInit, SimpleChanges, Directive } from '@angular/core';\nimport { BasicDrawerService } from '../drawers/basic-drawer/basic-drawer.service';\nimport { MapLayersService } from '../map-layers/map-layers.service';\n\n/**\n *  Extend this class to create drawing on map components.\n */\n@Directive()\nexport class EntityOnMapComponent implements OnInit, OnChanges, OnDestroy {\n  @Input()\n  props: any;\n\n  protected selfPrimitive: any;\n  protected selfPrimitiveIsDraw: boolean;\n  protected dataSources: any;\n\n  constructor(protected _drawer: BasicDrawerService, private mapLayers: MapLayersService) {\n  }\n\n  ngOnInit(): void {\n    this.selfPrimitiveIsDraw = false;\n    const dataSources = this._drawer.init();\n    if (dataSources) {\n      this.dataSources = dataSources;\n      // this.mapLayers.registerLayerDataSources(dataSources, 0);\n    }\n    this.drawOnMap();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const props = changes['props'];\n    if (props.currentValue !== props.previousValue) {\n      this.updateOnMap();\n    }\n  }\n\n  drawOnMap() {\n    this.selfPrimitiveIsDraw = true;\n    return this.selfPrimitive = this._drawer.add(this.props);\n  }\n\n  removeFromMap() {\n    this.selfPrimitiveIsDraw = false;\n    return this._drawer.remove(this.selfPrimitive);\n  }\n\n  updateOnMap() {\n    if (this.selfPrimitiveIsDraw) {\n      return this._drawer.update(this.selfPrimitive, this.props);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.mapLayers.removeDataSources(this.dataSources);\n    this.removeFromMap();\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a billboard implementation.\n *  The element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and BillboardGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/BillboardGraphics.html\n *\n *  __Usage :__\n *  ```\n *    <ac-billboard [props]=\"{\n *      image: image,\n *      position: position,\n *      scale: scale,\n *      color: color,\n *      name: name\n *    }\">;\n *    </ac-billboard>\n *  ```\n */\n\n@Component({\n  selector: 'ac-billboard',\n  template: '',\n})\nexport class AcBillboardComponent extends EntityOnMapComponent {\n\n  constructor(billboardDrawer: BillboardDrawerService, mapLayers: MapLayersService) {\n    super(billboardDrawer, mapLayers);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { JsonStringMapper } from 'json-string-mapper';\n\n@Injectable()\nexport class JsonMapper {\n  private _mapper: JsonStringMapper;\n\n  constructor() {\n    this._mapper = new JsonStringMapper();\n  }\n\n  map(expression: string): Map<string, string> {\n    return this._mapper.map(expression);\n  }\n}\n","/**\n * Service for effective assignment.\n */\nexport class SmartAssigner {\n\n  static create(props: string[] = [], allowUndefined: boolean = true): (obj1: Object, obj2: Object) => Object {\n    let fnBody = ``;\n\n    props.forEach(prop => {\n      if (!allowUndefined) {\n        // tslint:disable-next-line:max-line-length\n        fnBody += `if (!(obj1['${prop}'] instanceof Cesium.CallbackProperty) && obj2['${prop}'] !== undefined) { obj1['${prop}'] = obj2['${prop}']; } `;\n      } else {\n        fnBody += `if(!(obj1['${prop}'] instanceof Cesium.CallbackProperty))obj1['${prop}'] = obj2['${prop}']; `;\n      }\n    });\n\n    fnBody += `return obj1`;\n    const assignFn = new Function('obj1', 'obj2', fnBody);\n\n    return function smartAssigner(obj1: Object, obj2: Object) {\n      return assignFn(obj1, obj2);\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { JsonMapper } from '../json-mapper/json-mapper.service';\nimport { Parse } from 'angular2parse';\nimport { SmartAssigner } from '../smart-assigner/smart-assigner.service';\nimport { ComputationCache } from '../computation-cache/computation-cache.service';\n\n@Injectable()\nexport class CesiumProperties {\n  private _assignersCache = new Map<string, (oldVal: Object, newVal: Object) => Object>();\n  private _evaluatorsCache = new Map<string, (cache: ComputationCache, context: Object) => Object>();\n\n  constructor(private _parser: Parse,\n              private _jsonMapper: JsonMapper) {\n  }\n\n  _compile(expression: string, withCache = true): (cache: ComputationCache, context: Object) => Object {\n    const cesiumDesc = {};\n    const propsMap = new Map<string, { expression: string, get: Function }>();\n\n    const resultMap = this._jsonMapper.map(expression);\n\n    resultMap.forEach((resultExpression, prop) => propsMap.set(prop, {\n      expression: resultExpression,\n      get: this._parser.eval(resultExpression)\n    }));\n\n    propsMap.forEach((value, prop) => {\n      if (withCache) {\n        cesiumDesc[prop || 'undefined'] = `cache.get(\\`${value.expression}\\`, () => propsMap.get('${prop}').get(context))`;\n      } else {\n        cesiumDesc[prop || 'undefined'] = `propsMap.get('${prop}').get(context)`;\n      }\n    });\n\n    const fnBody = `return ${JSON.stringify(cesiumDesc).replace(/\"/g, '')};`;\n    const getFn = new Function('propsMap', 'cache', 'context', fnBody);\n\n    return function evaluateCesiumProps(cache: ComputationCache, context: Object): Object {\n      return getFn(propsMap, cache, context);\n    };\n  }\n\n  _build(expression: string): (oldVal: Object, newVal: Object) => Object {\n    const props = Array.from(this._jsonMapper.map(expression).keys());\n    const smartAssigner = SmartAssigner.create(props);\n\n    return function assignCesiumProps(oldVal: Object, newVal: Object) {\n      return smartAssigner(oldVal, newVal);\n    };\n  }\n\n  createEvaluator(expression: string, withCache = true, newEvaluator = false): (cache: ComputationCache, context: Object) => Object {\n    if (!newEvaluator && this._evaluatorsCache.has(expression)) {\n      return this._evaluatorsCache.get(expression);\n    }\n\n    const evaluatorFn = this._compile(expression, withCache);\n    this._evaluatorsCache.set(expression, evaluatorFn);\n\n    return evaluatorFn;\n  }\n\n  createAssigner(expression: string): (oldVal: Object, newVal: Object) => Object {\n    if (this._assignersCache.has(expression)) {\n      return this._assignersCache.get(expression);\n    }\n\n    const assignFn = this._build(expression);\n    this._assignersCache.set(expression, assignFn);\n\n    return assignFn;\n  }\n}\n","import { EventEmitter, Input, OnDestroy, OnInit, Output, Directive } from '@angular/core';\nimport { LayerService } from '../layer-service/layer-service.service';\nimport { ComputationCache } from '../computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../cesium-properties/cesium-properties.service';\nimport { AcEntity } from '../../models/ac-entity';\nimport { BasicDrawerService } from '../drawers/basic-drawer/basic-drawer.service';\nimport { IDescription } from '../../models/description';\n\nexport interface OnDrawParams {\n  acEntity: AcEntity;\n  entityId: string;\n  cesiumEntity: any;\n}\n\n/**\n *  the ancestor class for creating components.\n *  extend this class to create desc component.\n */\n@Directive()\nexport class BasicDesc implements OnInit, OnDestroy, IDescription {\n  @Input()\n  props: any;\n\n  @Output()\n  onDraw: EventEmitter<OnDrawParams> = new EventEmitter<OnDrawParams>();\n\n  @Output()\n  onRemove: EventEmitter<OnDrawParams> = new EventEmitter<OnDrawParams>();\n\n  protected _cesiumObjectsMap: Map<string, any> = new Map<string, any>();\n  private _propsEvaluateFn: Function;\n  private _propsAssignerFn: Function;\n\n  constructor(protected _drawer: BasicDrawerService,\n              protected _layerService: LayerService,\n              protected _computationCache: ComputationCache,\n              protected _cesiumProperties: CesiumProperties) {\n  }\n\n  protected _propsEvaluator(context: Object): any {\n    return this._propsEvaluateFn(this._computationCache, context);\n  }\n\n  protected _getPropsAssigner(): (cesiumObject: Object, desc: Object) => Object {\n    return (cesiumObject: Object, desc: Object) => this._propsAssignerFn(cesiumObject, desc);\n  }\n\n  getLayerService(): LayerService {\n    return this._layerService;\n  }\n\n  setLayerService(layerService: LayerService) {\n    this._layerService.unregisterDescription(this);\n    this._layerService = layerService;\n    this._layerService.registerDescription(this);\n    this._propsEvaluateFn = this._cesiumProperties.createEvaluator(this.props, this._layerService.cache, true);\n    this._propsAssignerFn = this._cesiumProperties.createAssigner(this.props);\n  }\n\n  ngOnInit(): void {\n    if (!this.props) {\n      console.error('ac-desc components error: [props] input is mandatory');\n    }\n\n    this._layerService.registerDescription(this);\n    this._propsEvaluateFn = this._cesiumProperties.createEvaluator(this.props, this._layerService.cache);\n    this._propsAssignerFn = this._cesiumProperties.createAssigner(this.props);\n  }\n\n  public getCesiumObjectsMap(): Map<string, any> {\n    return this._cesiumObjectsMap;\n  }\n\n  draw(context: any, id: string, entity: AcEntity): void {\n    const cesiumProps = this._propsEvaluator(context);\n\n    if (!this._cesiumObjectsMap.has(id)) {\n      const cesiumObject = this._drawer.add(cesiumProps);\n      this.onDraw.emit({\n        acEntity: entity,\n        cesiumEntity: cesiumObject,\n        entityId: id,\n      });\n      cesiumObject.acEntity = entity; // set the entity on the cesiumObject for later usage\n      this._cesiumObjectsMap.set(id, cesiumObject);\n    } else {\n      const cesiumObject = this._cesiumObjectsMap.get(id);\n      this.onDraw.emit({\n        acEntity: entity,\n        cesiumEntity: cesiumObject,\n        entityId: id,\n      });\n      cesiumObject.acEntity = entity; // set the entity on the cesiumObject for later usage\n      this._drawer.setPropsAssigner(this._getPropsAssigner());\n      this._drawer.update(cesiumObject, cesiumProps);\n    }\n  }\n\n  remove(id: string) {\n    const cesiumObject = this._cesiumObjectsMap.get(id);\n    if (cesiumObject) {\n      this.onRemove.emit({\n        acEntity: cesiumObject.acEntity,\n        cesiumEntity: cesiumObject,\n        entityId: id,\n      });\n      this._drawer.remove(cesiumObject);\n      this._cesiumObjectsMap.delete(id);\n    }\n  }\n\n  removeAll() {\n    this._cesiumObjectsMap.clear();\n    this._drawer.removeAll();\n  }\n\n  ngOnDestroy() {\n    this._layerService.unregisterDescription(this);\n    this.removeAll();\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\n\n/**\n *  This is a billboard implementation.\n *  The element must be a child of ac-layer element.\n *  The properties of props are the same as the properties of Entity and BillboardGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/BillboardGraphics.html\n *\n *  __Usage :__\n *  ```\n *    <ac-billboard-desc props=\"{\n *      image: track.image,\n *      position: track.position,\n *      scale: track.scale,\n *      color: track.color,\n *      name: track.name\n *    }\">\n *    </ac-billboard-desc>\n *  ```\n */\n\n@Component({\n  selector: 'ac-billboard-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcBillboardDescComponent)}],\n})\nexport class AcBillboardDescComponent extends BasicDesc {\n\n  constructor(billboardDrawer: BillboardDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(billboardDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\n\n/**\n *  This is an ellipse implementation.\n *  The element must be a child of ac-layer element.\n *  _Set `height` prop for performance enhancement_\n *  The properties of props are the same as the properties of Entity and EllipseGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipseGraphics.html\n *\n *  __Usage :__\n *  ```\n *    <ac-ellipse-desc props=\"{\n *      position: data.position,\n *      semiMajorAxis:250000.0,\n *      semiMinorAxis:400000.0,\n *      height: 0\n *    }\">\n *    </ac-ellipse-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-ellipse-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcEllipseDescComponent)}],\n})\nexport class AcEllipseDescComponent extends BasicDesc {\n  constructor(ellipseDrawer: EllipseDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { PolylineDrawerService } from '../../services/drawers/polyline-drawer/polyline-drawer.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\n\n/**\n *  This is a polyline implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and PolylineGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PolylineGraphics.html\n *\n *  __Usage:__\n *  ```\n *    <ac-polyline-desc props=\"{\n *      width : polyline.width,\n *      positions: polyline.positions,\n *      material: polyline.material\n *    }\">\n *    </ac-polyline-desc>\n * ```\n */\n@Component({\n  selector: 'ac-polyline-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcPolylineDescComponent)}],\n})\nexport class AcPolylineDescComponent extends BasicDesc {\n\n  constructor(dynamicPolylineDrawerService: PolylineDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(dynamicPolylineDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * @example\n * <ac-label-desc props=\"{\n *            position: track.position,\n *            pixelOffset : [-15,20] | pixelOffset,\n *            text: track.name,\n *            font: '15px sans-serif'\n *    }\">\n * </ac-label-desc>\n */\n@Pipe({\n  name: 'pixelOffset'\n})\nexport class PixelOffsetPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return new Cesium.Cartesian2(value[0], value[1]);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'radiansToDegrees'\n})\nexport class RadiansToDegreesPipe implements PipeTransform {\n\n  transform(value: any, args?: any): number {\n    return (360 - Math.round(180 * value / Math.PI)) % 360;\n  }\n\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\n\n/**\n *  This is a label implementation.\n *  The ac-label element must be a child of ac-layer element.\n *  The properties of props are the same as the properties of Entity and LabelGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/LabelGraphics.html\n *\n *  __Usage :__\n *  ```\n *    <ac-label-desc props=\"{\n *      position: track.position,\n *      pixelOffset : [-15,20] | pixelOffset,\n *      text: track.name,\n *      font: '15px sans-serif'\n *    }\">\n *    </ac-label-desc>\n *  ```\n */\n\n@Component({\n  selector: 'ac-label-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcLabelDescComponent)}],\n})\nexport class AcLabelDescComponent extends BasicDesc {\n\n  constructor(labelDrawer: LabelDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(labelDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: []\n})\nexport class UtilsModule {\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\n\n/**\n *  This is a circle implementation.\n *  The element must be a child of ac-layer element.\n *  semiMajorAxis ans semiMinorAxis are replaced with radius property.\n *  All other properties of props are the same as the properties of Entity and EllipseGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipseGraphics.html\n *\n *__Usage :__\n *  ```\n *    <ac-circle-desc props=\"{\n *      position: data.position,\n *      radius: 5\n *      granularity:0.08 // Optional\n *    }\">\n *    </ac-circle-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-circle-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcCircleDescComponent)}],\n})\nexport class AcCircleDescComponent extends BasicDesc {\n  constructor(ellipseDrawer: EllipseDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n  protected _propsEvaluator(context: Object): any {\n    const cesiumProps = super._propsEvaluator(context);\n\n    cesiumProps.semiMajorAxis = cesiumProps.radius;\n    cesiumProps.semiMinorAxis = cesiumProps.radius;\n    delete cesiumProps.radius;\n\n    return cesiumProps;\n  }\n\n  protected _getPropsAssigner(): (cesiumObject: Object, desc: Object) => Object {\n    return (cesiumObject: Object, desc: Object) => Object.assign(cesiumObject, desc);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\n\n/**\n *  This is an implementation of an arc.\n *  The element must be a child of ac-layer element.\n *  An arc is not cesium natively implemented and therefore it's API doesn't appear anywhere\n *\n *  __Usage :__\n *  ```\n *    <ac-arc-desc props=\"{\n *          center: arc.center,\n *          angle: arc.angle,\n *          delta: arc.delta,\n *          radius: arc.radius,\n *          color : arc.color - The color should be Cesium.Color type\n *    }\">\n *    </ac-arc-desc>\n *    ```\n *\n *    description of the props :\n *    center - The arc is a section of an outline of a circle, This is the center of the circle\n *    angle - the initial angle of the arc in radians\n *    delta - the spreading of the arc,\n *    radius - the distance from the center to the arc\n *\n *    for example :\n *    angle - 0\n *    delta - π\n *\n *    will draw an half circle\n */\n\n@Component({\n  selector: 'ac-arc-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcArcDescComponent)}],\n})\nexport class AcArcDescComponent extends BasicDesc {\n\n  constructor(arcDrawer: ArcDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(arcDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n}\n","export enum MapLayerProviderOptions {\n  ArcGisMapServer = Cesium.ArcGisMapServerImageryProvider,\n  WebMapTileService = Cesium.WebMapTileServiceImageryProvider,\n  MapTileService = Cesium.TileMapServiceImageryProvider,\n  WebMapService = Cesium.WebMapServiceImageryProvider,\n  SingleTileImagery = Cesium.SingleTileImageryProvider,\n  OpenStreetMap = Cesium.OpenStreetMapImageryProvider,\n  BingMaps = Cesium.BingMapsImageryProvider,\n  GoogleEarthEnterpriseMaps = Cesium.GoogleEarthEnterpriseMapsProvider,\n  MapBox = Cesium.MapboxImageryProvider,\n  MapboxStyleImageryProvider = Cesium.MapboxStyleImageryProvider,\n  UrlTemplateImagery = Cesium.UrlTemplateImageryProvider,\n  OFFLINE = null,\n}\n","export enum MapTerrainProviderOptions {\n  CesiumTerrain = Cesium.CesiumTerrainProvider,\n  ArcGISTiledElevation = Cesium.ArcGISTiledElevationTerrainProvider,\n  GoogleEarthEnterprise = Cesium.GoogleEarthEnterpriseTerrainProvider,\n  VRTheWorld = Cesium.VRTheWorldTerrainProvider,\n  Ellipsoid = Cesium.EllipsoidTerrainProvider,\n  WorldTerrain = Cesium.createWorldTerrain\n}\n","/**\n * Angular Cesium parent entity, all entities should inherit from it.\n * ```typescript\n * entity= new AcEntity({\n *  \tid: 0,\n *  \tname: 'click me',\n *  \tposition: Cesium.Cartesian3.fromRadians(0.5, 0.5),\n * });\n * ```\n */\nexport class AcEntity {\n\n  /**\n   * Creates entity from a json\n   * @param json entity object\n   * @returns entity as AcEntity\n   */\n  static create(json?: any) {\n    if (json) {\n      return Object.assign(new AcEntity(), json);\n    }\n    return new AcEntity();\n  }\n\n  /**\n   * Creates entity from a json\n   * @param json (Optional) entity object\n   */\n  constructor(json?: any) {\n    Object.assign(this, json);\n  }\n}\n","import { ActionType } from './action-type.enum';\nimport { AcEntity } from './ac-entity';\n\n/**\n * Interface of  Angular2Cesium notification.\n * ac-layer receives an observer of AcNotifications\n */\nexport interface AcNotification {\n  id: string;\n  entity?: AcEntity;\n  actionType: ActionType;\n}\n\nexport class AcNotification {\n  id: string;\n  entity?: AcEntity;\n  actionType: ActionType;\n}\n","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { CesiumService } from '../../services/cesium/cesium.service';\nimport { Checker } from '../../utils/checker';\nimport { MapLayerProviderOptions } from '../../models';\n\n/**\n *  This component is used for adding a map provider service to the map (ac-map)\n *  options according to selected map provider MapLayerProviderOptions enum.\n *  additional setting can be done with cesium imageryLayer (exposed as class member)\n *  check out: https://cesiumjs.org/Cesium/Build/Documentation/ImageryLayer.html\n *  and: https://cesiumjs.org/Cesium/Build/Documentation/ImageryLayerCollection.html\n *\n *\n *  __Usage :__\n *  ```\n *    <ac-map-layer-provider [options]=\"optionsObject\" [provider]=\"myProvider\">\n *    </ac-map-layer-provider>\n *  ```\n */\n@Component({\n  selector: 'ac-map-layer-provider',\n  template: '',\n})\nexport class AcMapLayerProviderComponent implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * refer to cesium docs for details https://cesiumjs.org/Cesium/Build/Documentation/ImageryProvider.html\n   */\n  @Input()\n  options: { url?: string } = {};\n\n  /**\n   * the provider\n   */\n  @Input()\n  provider: any = MapLayerProviderOptions.OFFLINE;\n\n  /**\n   * index (optional) - The index to add the layer at. If omitted, the layer will added on top of all existing layers.\n   */\n  @Input()\n  index: Number;\n\n  /**\n   * show (optional) - Determines if the map layer is shown.\n   */\n  @Input()\n  show = true;\n\n  /**\n   * The alpha blending value of this layer: 0.0 to 1.0\n   */\n  @Input()\n  alpha = 1.0;\n\n  /**\n   * The brightness of this layer: 0.0 to 1.0\n   */\n  @Input()\n  brightness = 1.0;\n\n  /**\n   * The contrast of this layer: 0.0 to 1.0\n   */\n  @Input()\n  contrast = 1.0;\n\n  public imageryLayer: any;\n  public imageryLayersCollection: any;\n  public layerProvider: any;\n\n  constructor(private cesiumService: CesiumService) {\n    this.imageryLayersCollection = this.cesiumService.getScene().imageryLayers;\n  }\n\n  private createOfflineMapProvider() {\n    return Cesium.createTileMapServiceImageryProvider({\n      url: Cesium.buildModuleUrl('Assets/Textures/NaturalEarthII')\n    });\n  }\n\n  ngOnInit() {\n    if (!Checker.present(this.options.url) && this.provider !== MapLayerProviderOptions.OFFLINE) {\n      throw new Error('options must have a url');\n    }\n    switch (this.provider) {\n      case MapLayerProviderOptions.WebMapService:\n      case MapLayerProviderOptions.WebMapTileService:\n      case MapLayerProviderOptions.ArcGisMapServer:\n      case MapLayerProviderOptions.SingleTileImagery:\n      case MapLayerProviderOptions.BingMaps:\n      case MapLayerProviderOptions.GoogleEarthEnterpriseMaps:\n      case MapLayerProviderOptions.MapBox:\n      case MapLayerProviderOptions.MapboxStyleImageryProvider:\n      case MapLayerProviderOptions.UrlTemplateImagery:\n      case MapLayerProviderOptions.MapTileService:\n      case MapLayerProviderOptions.OpenStreetMap:\n        this.layerProvider = new this.provider(this.options);\n        break;\n      case MapLayerProviderOptions.OFFLINE:\n        this.layerProvider = this.createOfflineMapProvider();\n        break;\n      default:\n        console.log('ac-map-layer-provider: [provider] wasn\\'t found. setting OFFLINE provider as default');\n        this.layerProvider = this.createOfflineMapProvider();\n        break;\n    }\n    if (this.show) {\n      this.imageryLayer = this.imageryLayersCollection.addImageryProvider(this.layerProvider, this.index);\n      this.imageryLayer.alpha = this.alpha;\n      this.imageryLayer.contrast = this.contrast;\n      this.imageryLayer.brightness = this.brightness;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['show'] && !changes['show'].isFirstChange()) {\n      const showValue = changes['show'].currentValue;\n      if (showValue) {\n        if (this.imageryLayer) {\n          this.imageryLayersCollection.add(this.imageryLayer, this.index);\n        } else {\n          this.imageryLayer = this.imageryLayersCollection.addImageryProvider(this.layerProvider, this.index);\n          this.imageryLayer.alpha = this.alpha;\n          this.imageryLayer.contrast = this.contrast;\n          this.imageryLayer.brightness = this.brightness;\n        }\n      } else if (this.imageryLayer) {\n        this.imageryLayersCollection.remove(this.imageryLayer, false);\n      }\n    }\n\n    if (changes['alpha'] && !changes['alpha'].isFirstChange() && this.imageryLayer) {\n      this.imageryLayer.alpha = this.alpha;\n    }\n    if (changes['contrast'] && !changes['contrast'].isFirstChange() && this.imageryLayer) {\n      this.imageryLayer.contrast = this.contrast;\n    }\n    if (changes['brightness'] && !changes['brightness'].isFirstChange() && this.imageryLayer) {\n      this.imageryLayer.brightness = this.brightness;\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.imageryLayer) {\n      this.imageryLayersCollection.remove(this.imageryLayer, true);\n    }\n  }\n}\n","import { Component, OnInit, Input, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { CesiumService } from '../../services/cesium/cesium.service';\nimport { Checker } from '../../utils/checker';\nimport { MapTerrainProviderOptions } from '../../models/map-terrain-provider-options.enum';\n\n/**\n *  This component is used for adding a terrain provider service to the map (ac-map)\n *  options according to selected terrain provider MapTerrainProviderOptions enum.\n *\n *\n *  __Usage :__\n *  ```\n *    <ac-map-terrain-provider [options]=\"optionsObject\" [provider]=\"myProvider\">\n *    </ac-map-terrain-provider>\n *  ```\n */\n@Component({\n  selector: 'ac-map-terrain-provider',\n  template: '',\n})\nexport class AcMapTerrainProviderComponent implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * refer to cesium docs for details https://cesiumjs.org/Cesium/Build/Documentation/TerrainProvider.html\n   */\n  @Input()\n  options: { url?: string } = {};\n\n  /**\n   * the provider\n   */\n  @Input()\n  provider: any;\n\n  /**\n   * show (optional) - Determines if the map layer is shown.\n   */\n  @Input()\n  show = true;\n\n  private terrainProvider: any;\n  private defaultTerrainProvider: any;\n\n  constructor(private cesiumService: CesiumService) {\n  }\n\n  ngOnInit(): void {\n    if (!Checker.present(this.options.url)\n      && this.provider !== MapTerrainProviderOptions.Ellipsoid\n      && this.provider !== MapTerrainProviderOptions.WorldTerrain) {\n      throw new Error('options must have a url');\n    }\n    this.defaultTerrainProvider = this.cesiumService.getViewer().terrainProvider;\n    switch (this.provider) {\n      case MapTerrainProviderOptions.CesiumTerrain:\n      case MapTerrainProviderOptions.ArcGISTiledElevation:\n      case MapTerrainProviderOptions.GoogleEarthEnterprise:\n      case MapTerrainProviderOptions.VRTheWorld:\n      case MapTerrainProviderOptions.Ellipsoid:\n        this.terrainProvider = new this.provider(this.options);\n        break;\n      case MapTerrainProviderOptions.WorldTerrain:\n        this.terrainProvider = this.provider(this.options);\n        break;\n      default:\n        console.log('ac-map-terrain-provider: [provider] wasn\\'t found. setting OFFLINE provider as default');\n        this.terrainProvider = this.defaultTerrainProvider;\n        break;\n    }\n    if (this.show) {\n      this.cesiumService.getViewer().terrainProvider = this.terrainProvider;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['show'] && !changes['show'].isFirstChange()) {\n      const showValue = changes['show'].currentValue;\n      if (showValue) {\n        if (this.terrainProvider) {\n          this.cesiumService.getViewer().terrainProvider = this.terrainProvider;\n        }\n      } else {\n        this.cesiumService.getViewer().terrainProvider = this.defaultTerrainProvider;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.cesiumService.getViewer().terrainProvider = this.defaultTerrainProvider;\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\n\n/**\n *  This is a point implementation.\n *  The ac-label element must be a child of ac-layer element.\n *  The properties of props are the same as the properties of Entity and PointGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PointGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-point-desc props=\"{\n *     pixelSize : point.pixelSize, //optional\n *     position : point.positions,\n *     color : point.color  //optional\n *   }\">\n *   </ac-point-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-point-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcPointDescComponent)}],\n})\nexport class AcPointDescComponent extends BasicDesc {\n\n  constructor(pointDrawerService: PointDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(pointDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a label implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and LabelGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/LabelGraphics.html\n *\n *  __Usage:__\n *  ```\n *  <ac-label [props]=\"{\n *    position: position,\n *    text: 'labelText',\n *    font: '30px sans-serif',\n *    fillColor : aquamarine\n *  }\">\n *  </ac-label>;\n *  ```\n */\n\n@Component({\n  selector: 'ac-label',\n  template: '',\n})\nexport class AcLabelComponent extends EntityOnMapComponent {\n\n  constructor(labelDrawer: LabelDrawerService, mapLayers: MapLayersService) {\n    super(labelDrawer, mapLayers);\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\nimport { PolylineDrawerService } from '../../services/drawers/polyline-drawer/polyline-drawer.service';\n\n/**\n *  This is a polyline implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Polyline Primitive:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Polyline.html\n *\n *  __Usage:__\n *  ```\n *  <ac-polyline [props]=\"{\n *    position: position,\n *    text: 'labelText',\n *    font: '30px sans-serif'\n *    color: Cesium.Color.GREEN\n *  }\">;\n *  </ac-polyline>\n *  ```\n */\n\n@Component({\n  selector: 'ac-polyline',\n  template: '',\n})\nexport class AcPolylineComponent extends EntityOnMapComponent {\n\n  constructor(polylineDrawer: PolylineDrawerService, mapLayers: MapLayersService) {\n    super(polylineDrawer, mapLayers);\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is an ellipse implementation.\n *  The element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and EllipseGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipseGraphics.html\n *\n *  __Usage:__\n *  ```\n *  <ac-ellipse [props]=\"{\n *    position: position,\n *    semiMajorAxis:40000.0,\n *    semiMinorAxis:25000.0,\n *    rotation : 0.785398\n *  }\">\n *  </ac-ellipse>\n *  ```\n */\n\n@Component({\n  selector: 'ac-ellipse',\n  template: '',\n})\nexport class AcEllipseComponent extends EntityOnMapComponent {\n\n  constructor(ellipseDrawer: EllipseDrawerService, mapLayers: MapLayersService) {\n    super(ellipseDrawer, mapLayers);\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a point implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and PointGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PointGraphics.html\n *\n *  __Usage:__\n *  ```\n *  <ac-point [props]=\"{\n *    position: position,\n *    width: 3\n *  }\">\n *  </ac-point>\n *  ```\n */\n\n@Component({\n  selector: 'ac-point',\n  template: '',\n})\nexport class AcPointComponent extends EntityOnMapComponent {\n\n  constructor(pointDrawer: PointDrawerService, mapLayers: MapLayersService) {\n    super(pointDrawer, mapLayers);\n  }\n}\n","import { Component, DoCheck, ElementRef, Input, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { CesiumService } from '../../services/cesium/cesium.service';\n\n/**\n *  This is an html implementation.\n *  The ac-html element must be a child of ac-map element.\n *  __Usage:__\n *  ```\n *  <ac-html [props]=\"{position: position, show: true}\">;\n *    <p>html element</p>\n *  </ac-html>\n *  ```\n */\n\n@Component({\n  selector: 'ac-html',\n  template: `<ng-content></ng-content>`,\n  styles: [`:host {\n                position: absolute;\n                z-index: 100;\n\t\t\t\t}`]\n})\nexport class AcHtmlComponent implements DoCheck, OnDestroy, OnInit {\n\n\n  @Input() props: any;\n  private isDraw = false;\n  preRenderEventListener: () => void;\n\n  constructor(private cesiumService: CesiumService, private elementRef: ElementRef, private renderer: Renderer2) {\n  }\n\n  setScreenPosition(screenPosition: any) {\n    if (screenPosition) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'top', `${screenPosition.y}px`);\n      this.renderer.setStyle(this.elementRef.nativeElement, 'left', `${screenPosition.x}px`);\n    }\n  }\n\n  ngOnInit(): void {\n    this.cesiumService.getMap().getMapContainer().appendChild(this.elementRef.nativeElement);\n    if (this.props.show === false) {\n      this.hideElement();\n    }\n  }\n\n  remove() {\n    if (this.isDraw) {\n      this.isDraw = false;\n      this.cesiumService.getScene().preRender.removeEventListener(this.preRenderEventListener);\n      this.hideElement();\n    }\n  }\n\n  hideElement() {\n    this.renderer.setStyle(this.elementRef.nativeElement, 'display', `none`);\n  }\n\n  add() {\n    if (!this.isDraw) {\n      this.isDraw = true;\n      this.preRenderEventListener = () => {\n        const screenPosition = Cesium.SceneTransforms.wgs84ToWindowCoordinates(this.cesiumService.getScene(),\n          this.props.position);\n        this.setScreenPosition(screenPosition);\n      };\n      this.renderer.setStyle(this.elementRef.nativeElement, 'display', `block`);\n      this.cesiumService.getScene().preRender.addEventListener(this.preRenderEventListener);\n    }\n  }\n\n  ngDoCheck() {\n    if (this.props.show === undefined || this.props.show) {\n      this.add();\n    } else {\n      this.remove();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.remove();\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a circle implementation.\n *  The element must be a child of ac-map element.\n *  semiMajorAxis ans semiMinorAxis are replaced with radius property.\n *  All other properties of props are the same as the properties of Entity and EllipseGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipseGraphics.html\n *\n *  __Usage:__\n *  ```\n *  <ac-circle [props]=\"{\n *    position: position,\n *    radius:40000.0,\n *    granularity:0.03,\n *  }\">\n *  </ac-circle>\n *  ```\n */\n\n@Component({\n  selector: 'ac-circle',\n  template: '',\n})\nexport class AcCircleComponent extends EntityOnMapComponent {\n\n  constructor(ellipseDrawerService: EllipseDrawerService, mapLayers: MapLayersService) {\n    super(ellipseDrawerService, mapLayers);\n  }\n\n  private updateEllipseProps() {\n    this.props.semiMajorAxis = this.props.radius;\n    this.props.semiMinorAxis = this.props.radius;\n    this.props.rotation = 0.0;\n  }\n\n  drawOnMap() {\n    this.updateEllipseProps();\n    super.drawOnMap();\n  }\n\n  updateOnMap() {\n    this.updateEllipseProps();\n    super.updateOnMap();\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is an implementation of an arc.\n *  The element must be a child of ac-map element.\n *  An arc is not natively implemented in cesium.\n *\n *  __Usage :__\n *  ```\n *    <ac-arc-desc geometryProps=\"{\n *          center: arc.center,\n *          angle: arc.angle,\n *          delta: arc.delta,\n *          radius: arc.radius\n *       }\"\n *       instanceProps=\"{\n *          attributes: arc.attributes\n *       }\"\n *       primitiveProps=\"{\n *          appearance: arc.appearance\n *       }\">\n *    </ac-arc-desc>\n *    ```\n */\n\n@Component({\n  selector: 'ac-arc',\n  template: '',\n})\nexport class AcArcComponent extends EntityOnMapComponent implements OnChanges {\n\n  @Input()\n  geometryProps: any;\n  @Input()\n  instanceProps: any;\n  @Input()\n  primitiveProps: any;\n\n  constructor(arcDrawer: ArcDrawerService, mapLayers: MapLayersService) {\n    super(arcDrawer, mapLayers);\n  }\n\n  updateOnMap() {\n    if (this.selfPrimitiveIsDraw) {\n      this.removeFromMap();\n      this.drawOnMap();\n    }\n  }\n\n  drawOnMap() {\n    this.selfPrimitiveIsDraw = true;\n    return this.selfPrimitive = this._drawer.add(this.geometryProps, this.instanceProps, this.primitiveProps);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const geometryProps = changes['geometryProps'];\n    const instanceProps = changes['instanceProps'];\n    const primitiveProps = changes['primitiveProps'];\n    if (geometryProps.currentValue !== geometryProps.previousValue ||\n      instanceProps.currentValue !== instanceProps.previousValue ||\n      primitiveProps.currentValue !== primitiveProps.previousValue) {\n      this.updateOnMap();\n    }\n  }\n}\n","import { Component, forwardRef, OnInit } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\n\n/**\n *  This is a polygon implementation.\n *  The properties of props are the same as the properties of Entity and PolygonGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PolygonGraphics.html\n *\n *  __Usage:__\n *  ```\n *    <ac-polygon-desc props=\"{\n *      hierarchy: polygon.hierarchy,\n *      material: polygon.material,\n *      height: polygon.height\n *    }\">\n *    </ac-polygon-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-polygon-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcPolygonDescComponent)}],\n})\nexport class AcPolygonDescComponent extends BasicDesc implements OnInit {\n\n  constructor(polygonDrawer: PolygonDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(polygonDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { PlonterService } from '../../services/plonter/plonter.service';\nimport { CoordinateConverter } from '../../services/coordinate-converter/coordinate-converter.service';\n\n@Component(\n  {\n    selector: 'ac-default-plonter',\n    template: `\n      <ac-html *ngIf=\"plonterService.plonterShown\" [props]=\"{\n        position: plonterPosition\n      }\">\n        <div class=\"plonter-context-menu\">\n          <div *ngFor=\"let entity of plonterService.entitesToPlonter\">\n            <div class=\"plonter-item\" (click)=\"chooseEntity(entity)\">{{ entity?.name || entity?.id }}\n            </div>\n          </div>\n        </div>\n      </ac-html>\n    `,\n    styles: [`\n        .plonter-context-menu {\n            background-color: rgba(250, 250, 250, 0.8);\n            box-shadow: 1px 1px 5px 0px rgba(0, 0, 0, 0.15);\n        }\n\n        .plonter-item {\n            cursor: pointer;\n            padding: 2px 15px;\n            text-align: start;\n        }\n\n        .plonter-item:hover {\n            background-color: rgba(0, 0, 0, 0.15);\n        }\n\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [CoordinateConverter],\n  }\n)\nexport class AcDefaultPlonterComponent implements OnInit {\n\n  constructor(public plonterService: PlonterService,\n              private cd: ChangeDetectorRef,\n              private geoConverter: CoordinateConverter) {\n  }\n\n  ngOnInit() {\n    this.plonterService.plonterChangeNotifier.subscribe(() => this.cd.detectChanges());\n  }\n\n  get plonterPosition() {\n    if (this.plonterService.plonterShown) {\n      const screenPos = this.plonterService.plonterClickPosition.endPosition;\n      return this.geoConverter.screenToCartesian3(screenPos);\n    }\n  }\n\n  chooseEntity(entity: any) {\n    this.plonterService.resolvePlonter(entity);\n  }\n}\n","import { Component } from '@angular/core';\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a polygon implementation.\n *  The ac-label element must be a child of ac-map element.\n *  _Set `height` prop for performance enhancement_\n *  The properties of props are the same as the properties of Entity and PolygonGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PolygonGraphics.html\n *\n *  __Usage:__\n *  ```\n *    <ac-polygon props=\"{\n *      hierarchy: polygon.hierarchy,\n *      material: polygon.material,\n *      height: polygon.height\n *    }\">\n *    </ac-polygon>\n *  ```\n */\n@Component({\n  selector: 'ac-polygon',\n  template: '',\n})\nexport class AcPolygonComponent extends EntityOnMapComponent {\n  constructor(polygonDrawer: PolygonDrawerService, mapLayers: MapLayersService) {\n    super(polygonDrawer, mapLayers);\n  }\n}\n","import { Input, OnInit, Directive } from '@angular/core';\nimport { BasicDesc } from '../basic-desc/basic-desc.service';\nimport { LayerService } from '../layer-service/layer-service.service';\nimport { ComputationCache } from '../computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../cesium-properties/cesium-properties.service';\nimport { StaticPrimitiveDrawer } from '../drawers/static-dynamic/static-primitive-drawer/static-primitive-drawer.service';\nimport { AcEntity } from '../../models/ac-entity';\n\n@Directive()\nexport class BasicStaticPrimitiveDesc extends BasicDesc implements OnInit {\n  @Input()\n  geometryProps: any;\n  @Input()\n  instanceProps: any;\n  @Input()\n  primitiveProps: any;\n\n  private _geometryPropsEvaluator: Function;\n  private _instancePropsEvaluator: Function;\n  private _primitivePropsEvaluator: Function;\n\n  constructor(protected _staticPrimitiveDrawer: StaticPrimitiveDrawer, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(_staticPrimitiveDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n  ngOnInit(): void {\n    this._layerService.registerDescription(this);\n\n    this._geometryPropsEvaluator = this._cesiumProperties.createEvaluator(this.geometryProps);\n    this._instancePropsEvaluator = this._cesiumProperties.createEvaluator(this.instanceProps);\n    this._primitivePropsEvaluator = this._cesiumProperties.createEvaluator(this.primitiveProps);\n  }\n\n  draw(context: any, id: string, entity: AcEntity): any {\n    const geometryProps = this._geometryPropsEvaluator(this._computationCache, context);\n    const instanceProps = this._instancePropsEvaluator(this._computationCache, context);\n    const primitiveProps = this._primitivePropsEvaluator(this._computationCache, context);\n\n    if (!this._cesiumObjectsMap.has(id)) {\n      const primitive = this._staticPrimitiveDrawer.add(geometryProps, instanceProps, primitiveProps);\n      primitive.acEntity = entity; // set the entity on the primitive for later usage\n      this._cesiumObjectsMap.set(id, primitive);\n    } else {\n      const primitive = this._cesiumObjectsMap.get(id);\n      this._staticPrimitiveDrawer.update(primitive, geometryProps, instanceProps, primitiveProps);\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { BasicStaticPrimitiveDesc } from '../../../services/basic-primitive-desc/basic-static-primitive-desc.service';\nimport { StaticEllipseDrawerService } from '../../../services/drawers/static-dynamic/ellipse-drawer/ellipse-drawer.service';\n\n/**\n *\n * @deprecated use ac-ellipse-desc instead\n *\n *  This is a static (position, color, etc.. are not updated) implementation of an ellipse.\n *  __usage:__\n *  ```\n *  &lt;ac-static-ellipse-desc-desc\n *      geometryProps=\"{\n *          center: ellipse.geometry.center,\n *          semiMajorAxis: ellipse.geometry.semiMajorAxis,\n *          semiMinorAxis: ellipse.geometry.semiMinorAxis,\n *          height: ellipse.geometry.height,\n *          rotation: ellipse.geometry.rotation\n *      }\"\n *      instanceProps=\"{\n *          attributes: ellipse.attributes //Optional\n *      }\"\n *      primitiveProps=\"{\n *          appearance: ellipse.appearance //Optional\n *      }\"&gt;\n *  &lt;/ac-static-ellipse-desc-desc&gt;\n *  ```\n */\n@Component({\n  selector: 'ac-static-ellipse-desc',\n  template: ''\n})\nexport class AcStaticEllipseDescComponent extends BasicStaticPrimitiveDesc {\n  constructor(ellipseDrawer: StaticEllipseDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { BasicDesc } from '../../../services/basic-desc/basic-desc.service';\nimport { DynamicEllipseDrawerService } from '../../../services/drawers/static-dynamic/ellipse-drawer/dynamic-ellipse-drawer.service';\n\n/**\n *\n *\n *  This is a dynamic(position is updatable) implementation of an ellipse.\n *\n *  __Usage :__\n *  ```\n *    &lt;ac-dynamic-ellipse-desc props=\"{\n *      center: data.position,\n *      semiMajorAxis:250000.0,\n *      semiMinorAxis:400000.0,\n *      rotation : 0.785398,\n *      width:3, // Optional\n *      granularity:0.08 // Optional\n *      }\"&gt;\n *    \">\n *    &lt;/ac-dynamic-ellipse-desc&gt;\n *  ```\n *  __param:__ {Cesium.Cartesian3} center\n *  __param:__ {number} semiMajorAxis\n *  __param:__ {number} semiMinorAxis\n *  __param:__ {number} rotation\n *   __param__: {number} [1] width\n *   __param__: {number} [0.003] granularity\n */\n@Component({\n  selector: 'ac-dynamic-ellipse-desc',\n  template: '',\n})\nexport class AcDynamicEllipseDescComponent extends BasicDesc {\n  constructor(ellipseDrawer: DynamicEllipseDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","// tslint:disable\nimport { Component } from '@angular/core';\nimport { BasicDesc } from '../../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { DynamicPolylineDrawerService } from '../../../services/drawers/static-dynamic/dynamic-polyline-drawer/dynamic-polyline-drawer.service';\n\n// tslint:enable\n/**\n * @deprecated use ac-polylinc-desc instead\n *\n *  This is a dynamic(position is updatable) implementation of an polyline.\n *  The ac-dynamic-polyline-desc element must be a child of ac-layer element.\n *  __Usage:__\n *  ```\n *    &lt;ac-dynamic-polyline-desc props=\"{width : polyline.width, //optional\n *                                      positions: polyline.positions,\n *                                      material: polyline.material //optional\n *                                      }\"\n *    &gt;\n *    &lt;/ac-dynamic-polyline-desc&gt;\n * ```\n */\n@Component({\n  selector: 'ac-dynamic-polyline-desc',\n  template: ''\n})\nexport class AcDynamicPolylineDescComponent extends BasicDesc {\n\n  constructor(dynamicPolylineDrawerService: DynamicPolylineDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(dynamicPolylineDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","// tslint:disable\nimport { Component } from '@angular/core';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { BasicStaticPrimitiveDesc } from '../../../services/basic-primitive-desc/basic-static-primitive-desc.service';\nimport { StaticPolygonDrawerService } from '../../../services/drawers/static-dynamic/static-polygon-drawer/polygon-drawer.service';\n\n// tslint:enable\n/**\n * @deprecated use ac-ploygon-desc instead\n *\n *  This is a static (position, color, etc.. are not updated) implementation of a polygon.\n *  __Usage:__\n *  ```\n *    &lt;ac-static-polygon-desc\n *          geometryProps=\"{\n *                     polygonHierarchy: polygon.geometry.polygonHierarchy,\n *                     height: polygon.geometry.height,\n *                     granularity: polygon.geometry.granularity\n *                 }\"\n *          instanceProps=\"{\n *                     attributes: polygon.attributes\n *                 }\"\n *          primitiveProps=\"{\n *                     appearance: polygon.appearance\n *                 }\"\n *    &gt;&lt;/ac-static-polygon-desc&gt;\n *    ```\n */\n@Component({\n  selector: 'ac-static-polygon-desc',\n  template: '',\n})\nexport class AcStaticPolygonDescComponent extends BasicStaticPrimitiveDesc {\n  constructor(polygonDrawer: StaticPolygonDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(polygonDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { BasicStaticPrimitiveDesc } from '../../../services/basic-primitive-desc/basic-static-primitive-desc.service';\nimport { StaticCircleDrawerService } from '../../../services/drawers/static-dynamic/static-circle-drawer/static-circle-drawer.service';\n\n/**\n * @deprecated use ac-circle-desc\n *\n *  This is a static (position, color, etc.. are not updated) implementation of an circle.\n *  __usage:__\n *  ```\n *    &lt;ac-static-circle-desc\n *      geometryProps=\"{\n *          center: circle.geometry.center,\n *          radius: circle.geometry.radius,\n *      }\"\n *      instanceProps=\"{\n *          attributes: circle.attributes //Optional\n *      }\"\n *      primitiveProps=\"{\n *          appearance: circle.appearance //Optional\n *      }\"&gt;\n *    &lt;/ac-static-circle-desc&gt;\n *    ```\n */\n@Component({\n  selector: 'ac-static-circle',\n  template: ''\n})\nexport class AcStaticCircleDescComponent extends BasicStaticPrimitiveDesc {\n  constructor(staticCircleDrawer: StaticCircleDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(staticCircleDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { BasicDesc } from '../../../services/basic-desc/basic-desc.service';\nimport { DynamicEllipseDrawerService } from '../../../services/drawers/static-dynamic/ellipse-drawer/dynamic-ellipse-drawer.service';\n\n/**\n * @deprecated use ac-circle-desc instead\n *\n *  This is a dynamic(position is updatable) implementation of an circle.\n __Usage :__\n *  ```\n *    &lt;ac-dynamic-circle-desc props=\"{\n *      center: data.position,\n *      radius: 5\n *      rotation : 0.785398,\n *      width:3, // Optional\n *      granularity:0.08 // Optional\n *      }\"&gt;\n *    &lt;/ac-dynamic-circle-desc&gt;\n *  ```\n *\n *  __param__: {Cesium.Cartesian3} center\n *   __param__: {number} rotation\n *   __param__: {number} radius in meters\n *   __param__: {number} [1] width\n *   __param__: {number} [0.003] granularity\n */\n@Component({\n  selector: 'ac-dynamic-circle-desc',\n  template: ''\n})\nexport class AcDynamicCircleDescComponent extends BasicDesc {\n  constructor(ellipseDrawer: DynamicEllipseDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n  protected _propsEvaluator(context: Object): any {\n    const cesiumProps = super._propsEvaluator(context);\n\n    cesiumProps.semiMajorAxis = cesiumProps.radius;\n    cesiumProps.semiMinorAxis = cesiumProps.radius;\n\n    return cesiumProps;\n  }\n}\n","// tslint:disable\nimport { Component } from '@angular/core';\nimport { StaticPolylineDrawerService } from '../../../services/drawers/static-dynamic/static-polyline-drawer/static-polyline-drawer.service';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { BasicStaticPrimitiveDesc } from '../../../services/basic-primitive-desc/basic-static-primitive-desc.service';\n\n// tslint:enable\n\n/**\n * @deprecated use ac-ployline-desc instead\n *\n *  This is a static implementation of an polyline.\n *  __usage:__\n *  ```\n *    &ltac-static-polyline-desc\n *            geometryProps=\"{\n *            \twidth: poly.geometry.width,\n *            \tpositions: poly.geometry.positions\n *            }\"\n *            instanceProps=\"{\n *              attributes: {\n *                  Cesium.ColorGeometryInstanceAttribute.fromColor(Cesium.Color.fromRandom())\n *              }\n *            }\"\n *            primitiveProps=\"{\n *              appearance: new Cesium.PolylineColorAppearance()\n *    }\"&gt&lt/ac-static-polyline-desc&gt\n *  ```\n */\n@Component({\n  selector: 'ac-static-polyline-desc',\n  template: ''\n})\nexport class AcStaticPolylineDescComponent extends BasicStaticPrimitiveDesc {\n  constructor(polylineDrawerService: StaticPolylineDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(polylineDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef, OnInit } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ModelDrawerService } from '../../services/drawers/model-drawer/model-drawer.service';\n\n/**\n *  This is a model implementation.\n *  The ac-model element must be a child of ac-layer element.\n *  The properties of props are the same as the properties of Entity and ModelGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/ModelGraphics.html\n *\n *  __Usage:__\n *  ```\n *    <ac-model-desc props=\"{\n *       position : Cesium.Cartesian3.fromDegrees(-123.0744619, 44.0503706),\n *       uri : '../../SampleData/models/CesiumGround/Cesium_Ground.gltf'\n *   }\n *    }\">\n *    </ac-model-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-model-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcModelDescComponent)}],\n})\nexport class AcModelDescComponent extends BasicDesc implements OnInit {\n\n  constructor(modelDrawer: ModelDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(modelDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { CesiumService } from '../../services/cesium/cesium.service';\nimport { Checker } from '../../utils/checker';\n\n/**\n *  This component is used for adding a 3d tileset layer to the map (ac-map).\n *  options according to `Cesium3DTileset` definition.\n *  check out: https://cesiumjs.org/Cesium/Build/Documentation/Cesium3DTileset.html\n *\n *\n *  __Usage :__\n *  ```\n *    <ac-3d-tile-layer [options]=\"optionsObject\">\n *    </ac-3d-tile-layer>\n *  ```\n */\n@Component({\n  selector: 'ac-3d-tile-layer',\n  template: '',\n})\nexport class AcTileset3dComponent implements OnInit, OnChanges, OnDestroy {\n  /**\n   * refer to cesium docs for details https://cesiumjs.org/Cesium/Build/Documentation/Cesium3DTileset.html\n   */\n  @Input()\n  options: { url?: string } = {};\n\n  /**\n   * index (optional) - The index to add the layer at. If omitted, the layer will added on top of all existing layers.\n   */\n  @Input()\n  index: Number;\n\n  /**\n   * show (optional) - Determines if the map layer is shown.\n   */\n  @Input()\n  show = true;\n\n  /**\n   * show (optional) - Sets 3Dtiles style.\n   */\n  @Input()\n  style: any;\n\n  public tilesetInstance: any = null;\n  private _3dtilesCollection: any;\n\n  constructor(private cesiumService: CesiumService) {\n  }\n\n  ngOnInit() {\n    if (!Checker.present(this.options.url)) {\n      throw new Error('Options must have a url');\n    }\n\n    this._3dtilesCollection = new Cesium.PrimitiveCollection();\n    this.cesiumService.getScene().primitives.add(this._3dtilesCollection);\n\n    if (this.show) {\n      this.tilesetInstance = this._3dtilesCollection.add(new Cesium.Cesium3DTileset(this.options), this.index);\n      if (this.style) {\n        this.tilesetInstance.style = new Cesium.Cesium3DTileStyle(this.style);\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['show'] && !changes['show'].isFirstChange()) {\n      const showValue = changes['show'].currentValue;\n\n      if (showValue) {\n        if (this.tilesetInstance) {\n          this._3dtilesCollection.add(this.tilesetInstance, this.index);\n        } else {\n          this.tilesetInstance = this._3dtilesCollection.add(new Cesium.Cesium3DTileset(this.options), this.index);\n          if (this.style) {\n            this.tilesetInstance.style = new Cesium.Cesium3DTileStyle(this.style);\n          }\n        }\n      } else if (this.tilesetInstance) {\n        this._3dtilesCollection.remove(this.tilesetInstance, false);\n      }\n    }\n    if (changes['style'] && !changes['style'].isFirstChange()) {\n      const styleValue = changes['style'].currentValue;\n      if (this.tilesetInstance) {\n        this.tilesetInstance.style = new Cesium.Cesium3DTileStyle(this.style);\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.tilesetInstance) {\n      this._3dtilesCollection.remove(this.tilesetInstance, false);\n    }\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { BoxDrawerService } from '../../services/drawers/box-dawer/box-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-box-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity (like `position`)\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/BoxGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-box-desc props=\"{\n *     show : point.show, //optional\n *     position : point.positions,\n *     material : point.color  //optional\n *   }\">\n *   </ac-box-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-box-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcBoxDescComponent)}],\n})\nexport class AcBoxDescComponent extends BasicDesc {\n\n  constructor(drawerService: BoxDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { CylinderDrawerService } from '../../services/drawers/cylinder-dawer/cylinder-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-box-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity (like `position`)\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/CylinderGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-cylinder-desc props=\"{\n *     show : cylinder.show, //optional\n *     position : cylinder.position,\n *     material : cylinder.color  //optional\n *   }\">\n *   </ac-cylinder-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-cylinder-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcCylinderDescComponent)}],\n})\nexport class AcCylinderDescComponent extends BasicDesc {\n\n  constructor(drawerService: CylinderDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { CorridorDrawerService } from '../../services/drawers/corridor-dawer/corridor-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-box-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/CorridorGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-corridor-desc props=\"{\n *     show : point.show, //optional\n *     positions : point.positions,\n *     material : point.color  //optional\n *   }\">\n *   </ac-corridor-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-corridor-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcCorridorDescComponent)}],\n})\nexport class AcCorridorDescComponent extends BasicDesc {\n\n  constructor(drawerService: CorridorDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { EllipsoidDrawerService } from '../../services/drawers/ellipoid-drawer/ellipsoid-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-box-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipsoidGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-ellipsoid-desc props=\"{\n *     show : ellipsoid.show, //optional\n *     radii : ellipsoid.radii,\n *     material : ellipsoid.color  //optional\n *   }\">\n *   </ac-ellipsoid-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-ellipsoid-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcEllipsoidDescComponent)}],\n})\nexport class AcEllipsoidDescComponent extends BasicDesc {\n\n  constructor(drawerService: EllipsoidDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { PolylineVolumeDrawerService } from '../../services/drawers/polyline-volume-dawer/polyline-volume-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PolylineVolumeGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-polyline-volume-desc props=\"{\n *     show : line.show, //optional\n *     positions : line.positions,\n *     material : line.color  //optional\n *   }\">\n *   </ac-polyline-volume-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-polyline-volume-desc',\n  template: ''\n})\nexport class AcPolylineVolumeDescComponent extends BasicDesc {\n\n  constructor(drawerService: PolylineVolumeDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { WallDrawerService } from '../../services/drawers/wall-dawer/wall-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-box-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/WallGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-wall-desc props=\"{\n *     show : wall.show, //optional\n *     positions : wall.positions,\n *     material : wall.color  //optional\n *   }\">\n *   </ac-wall-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-wall-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcWallDescComponent)}],\n})\nexport class AcWallDescComponent extends BasicDesc {\n\n  constructor(drawerService: WallDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { RectangleDrawerService } from '../../services/drawers/rectangle-dawer/rectangle-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-rectangle-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties RectangleGraphics and the general properties\n *  of Entity\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/RectangleGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-rectangle-desc props=\"{\n *     show : rectangle.show, //optional\n *     coordinates : rectangle.positions,\n *     material : rectangle.color  //optional\n *   }\">\n *   </ac-rectangle-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-rectangle-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcRectangleDescComponent)}],\n})\nexport class AcRectangleDescComponent extends BasicDesc {\n\n  constructor(drawerService: RectangleDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { BillboardPrimitiveDrawerService } from '../../services/drawers/billboard-primitive-drawer/billboard-primitive-drawer.service';\n\n/**\n *  This is a billboard primitive implementation.\n *  The element must be a child of ac-layer element.\n *  The properties of props are:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Billboard.html\n *\n *  __Usage :__\n *  ```\n *    <ac-billboard-primitive-desc props=\"{\n *      image: track.image,\n *      position: track.position,\n *      scale: track.scale,\n *      color: track.color,\n *      name: track.name\n *    }\">\n *    </ac-billboard-primitive-desc>\n *  ```\n */\n\n@Component({\n  selector: 'ac-billboard-primitive-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcBillboardPrimitiveDescComponent)}],\n})\nexport class AcBillboardPrimitiveDescComponent extends BasicDesc {\n\n  constructor(billboardPrimitiveDrawer: BillboardPrimitiveDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(billboardPrimitiveDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { LabelPrimitiveDrawerService } from '../../services/drawers/label-primitive-drawer/label-primitive-drawer.service';\n\n/**\n *  This is a label primitive implementation.\n *  The ac-label element must be a child of ac-layer element.\n *  The properties of props are:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Label.html\n *\n *  __Usage :__\n *  ```\n *    <ac-label-primitive-desc props=\"{\n *      position: track.position,\n *      pixelOffset : [-15,20] | pixelOffset,\n *      text: track.name,\n *      font: '15px sans-serif'\n *    }\">\n *    </ac-label-primitive-desc>\n *  ```\n */\n\n@Component({\n  selector: 'ac-label-primitive-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcLabelPrimitiveDescComponent)}],\n})\nexport class AcLabelPrimitiveDescComponent extends BasicDesc {\n\n  constructor(labelPrimitiveDrawer: LabelPrimitiveDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(labelPrimitiveDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { PolylinePrimitiveDrawerService } from '../../services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service';\n\n/**\n *  This is a polyline primitive implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Polyline Primitive:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Polyline.html\n *\n *  __Usage:__\n *  ```\n *    <ac-polyline-primitive-desc props=\"{\n *      width : polyline.width,\n *      positions: polyline.positions,\n *      material: polyline.material\n *    }\">\n *    </ac-polyline-primitive-desc>\n * ```\n */\n@Component({\n  selector: 'ac-polyline-primitive-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcPolylinePrimitiveDescComponent)}],\n})\nexport class AcPolylinePrimitiveDescComponent extends BasicDesc {\n\n  constructor(polylinePrimitiveDrawerService: PolylinePrimitiveDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(polylinePrimitiveDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { HtmlCollection } from '../collections';\nimport { Cartesian2 } from '../../angular-cesium/models/cartesian2';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\n\nexport class HtmlPrimitive {\n\n  private _scene: any;\n  private _show: boolean;\n  private _position: Cartesian3;\n  private _lastPosition: Cartesian2;\n  private _pixelOffset: Cartesian2;\n  private _element: HTMLElement;\n  private _collection: HtmlCollection;\n  private _mapContainer;\n\n  constructor(options: any, collection: HtmlCollection = null) {\n    if (typeof options !== 'object') {\n      throw new Error('HtmlPrimitive ERROR: invalid html options!');\n    }\n\n    this.scene = options.scene;\n    this._mapContainer = options.mapContainer;\n    this.show = options.show || true;\n    this.position = options.position;\n    this.pixelOffset = options.pixelOffset;\n    this.element = options.element;\n    this.collection = collection;\n  }\n\n  set scene(scene: any) {\n    this._scene = scene;\n  }\n\n  set show(show: boolean) {\n    this._show = show;\n\n    if (Cesium.defined(this.element)) {\n      if (show) {\n        this._element.style.display = 'block';\n      } else {\n        this._element.style.display = 'none';\n      }\n    }\n  }\n\n  get show(): boolean {\n    return this._show;\n  }\n\n  set position(position: Cartesian3) {\n    this._position = position;\n  }\n\n  get position(): Cartesian3 {\n    return this._position;\n  }\n\n  set pixelOffset(pixelOffset: Cartesian2) {\n    this._pixelOffset = pixelOffset;\n  }\n\n  get pixelOffset(): Cartesian2 {\n    return this._pixelOffset;\n  }\n\n  set element(element: HTMLElement) {\n    this._element = element;\n\n    if (Cesium.defined(element)) {\n      this._mapContainer.appendChild(element);\n      this._element.style.position = 'absolute';\n      this._element.style.zIndex = Number.MAX_VALUE.toString();\n    }\n  }\n\n  get element(): HTMLElement {\n    return this._element;\n  }\n\n  set collection(collection: HtmlCollection) {\n    this._collection = collection;\n  }\n\n  get collection() {\n    return this._collection;\n  }\n\n  update() {\n    if (!Cesium.defined(this._show) || !Cesium.defined(this._element)) {\n      return;\n    }\n\n    let screenPosition = Cesium.SceneTransforms.wgs84ToWindowCoordinates(this._scene, this._position);\n\n    if (!Cesium.defined(screenPosition)) {\n      screenPosition = new Cesium.Cartesian2((-1000), (-1000));\n    } else if (Cesium.defined(this._pixelOffset) && Cesium.defined(this._pixelOffset.x) && Cesium.defined(this._pixelOffset.y)) {\n      screenPosition.y += this._pixelOffset.y;\n      screenPosition.x += this._pixelOffset.x;\n    }\n\n    if (this._lastPosition && this._lastPosition.equals(screenPosition)) {\n      return;\n    }\n\n    this._element.style.top = `${screenPosition.y}px`;\n    this._element.style.left = `${screenPosition.x}px`;\n    this._lastPosition = screenPosition;\n  }\n\n  remove() {\n    if (this._element) {\n      this._element.remove();\n    }\n  }\n}\n","import { HtmlPrimitive } from '../primitives';\n\nexport class HtmlCollection {\n  private _collection: HtmlPrimitive[] = [];\n\n  get length() {\n    return this._collection.length;\n  }\n\n  get(index: number) {\n    return this._collection[index];\n  }\n\n  add(options: any): HtmlPrimitive {\n    const html = new HtmlPrimitive(options, this);\n    this._collection.push(html);\n\n    return html;\n  }\n\n  remove(html: HtmlPrimitive): boolean {\n    const index = this._collection.indexOf(html);\n    if (index === (-1)) {\n      return false;\n    }\n\n    this._collection[index].remove();\n    this._collection.splice(index, 1);\n    return true;\n  }\n\n  update() {\n    for (let i = 0, len = this._collection.length; i < len; i++) {\n      this._collection[i].update();\n    }\n  }\n\n  removeAll() {\n    while (this._collection.length > 0) {\n      const html = this._collection.pop();\n      html.remove();\n    }\n  }\n\n  contains(html: HtmlPrimitive): boolean {\n    return Cesium.defined(html) && html.collection === this;\n  }\n\n  destroy() {\n    this.removeAll();\n  }\n}\n","import { HtmlPrimitive } from './primitives';\nimport { HtmlCollection } from './collections';\n\nexport class CesiumExtender {\n  static extend() {\n    Cesium.HtmlPrimitive = HtmlPrimitive;\n    Cesium.HtmlCollection = HtmlCollection;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AcHtmlManager {\n  private _entities: Map<any, any>;\n\n  constructor() {\n    this._entities = new Map<any, any>();\n  }\n\n  has(id: string): boolean {\n    return this._entities.has(id);\n  }\n\n  get(id: string): { entity: any, primitive: any } {\n    return this._entities.get(id);\n  }\n\n  addOrUpdate(id: any, info: { entity: any, primitive: any }) {\n    this._entities.set(id, info);\n  }\n\n  remove(id: string) {\n    this._entities.delete(id);\n  }\n\n  forEach(callback: any) {\n    this._entities.forEach(callback);\n  }\n}\n","import { ChangeDetectorRef, Directive, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { AcHtmlManager } from '../../services/ac-html-manager/ac-html-manager.service';\n\nexport class AcHtmlContext {\n  constructor(\n    public id: any,\n    public context: any\n  ) {\n  }\n}\n\n@Directive({\n  selector: '[acHtml]',\n})\nexport class AcHtmlDirective implements OnInit {\n\n  private _views = new Map<any, { viewRef: any, context: any }>();\n\n  constructor(\n    private _templateRef: TemplateRef<AcHtmlContext>,\n    private _viewContainerRef: ViewContainerRef,\n    private _changeDetector: ChangeDetectorRef,\n    private _layerService: LayerService,\n    private _acHtmlManager: AcHtmlManager\n  ) {\n  }\n\n  ngOnInit() {\n\n  }\n\n  private _handleView(id: any, primitive: any, entity: any) {\n    if (!this._views.has(id) && primitive.show) {\n      const context = new AcHtmlContext(id, {$implicit: entity});\n      const viewRef = this._viewContainerRef.createEmbeddedView(this._templateRef, context);\n      this._views.set(id, {viewRef, context});\n      this._changeDetector.detectChanges();\n    }  else if (this._views.has(id) && primitive.show) {\n      this._changeDetector.detectChanges();\n    }\n  }\n\n  addOrUpdate(id: any, primitive: any) {\n    const context = this._layerService.context;\n    const entity = context[this._layerService.getEntityName()];\n\n    if (this._views.has(id)) {\n      this._views.get(id).context.context.$implicit = entity;\n    }\n\n    this._acHtmlManager.addOrUpdate(id, {entity, primitive});\n    this._handleView(id, primitive, entity);\n  }\n\n  remove(id: any, primitive: any) {\n    if (!this._views.has(id)) {\n      return;\n    }\n\n    const {viewRef} = this._views.get(id);\n    this._viewContainerRef.remove(this._viewContainerRef.indexOf(viewRef));\n    this._views.delete(id);\n    this._acHtmlManager.remove(id);\n    primitive.element = null;\n  }\n}\n","import { Component, ContentChild, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { HtmlDrawerService } from '../../services/drawers/html-drawer/html-drawer.service';\nimport { AcHtmlDirective } from '../../directives/ac-html/ac-html.directive';\nimport { AcHtmlManager } from '../../services/ac-html-manager/ac-html-manager.service';\n\n/**\n *  This is an html implementation.\n *  The ac-html element must be a child of ac-layer element.\n *  <br>\n *  [props] accepts position(Cartesian3) and show(boolean).\n *\n *  __Usage:__\n *  ```\n *  <ac-layer acFor=\"let html of htmls$\" [context]=\"this\">\n <ac-html-desc props=\"{position: html.position, show: html.show}\">\n <ng-template let-html>\n <div>\n <h1>This is ac-html {{html.name}}</h1>\n <button (click)=\"changeText(html, 'Test')\">change text</button>\n </div>\n </ng-template>\n </ac-html-desc>\n *  <ac-html [props]=\"{position: position, show: true}\">;\n *    <p>html element</p>\n *  </ac-html>\n *  ```\n */\n@Component({\n  selector: 'ac-html-desc',\n  providers: [AcHtmlManager],\n  template: `\n      <div *acHtml=\"let acHtmlEntityId = id; let acHtmlContext = context\">\n          <div [acHtmlContainer]=\"acHtmlEntityId\">\n              <ng-template [ngTemplateOutlet]=\"acHtmlTemplate\"\n                           [ngTemplateOutletContext]=\"acHtmlContext\"></ng-template>\n          </div>\n      </div>`\n})\nexport class AcHtmlDescComponent extends BasicDesc implements OnInit {\n\n  @ViewChild(AcHtmlDirective, {static: true}) acHtmlCreator: AcHtmlDirective;\n  @ContentChild(TemplateRef, {static: true}) acHtmlTemplate: TemplateRef<any>;\n\n  constructor(htmlDrawer: HtmlDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(htmlDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    if (!this.acHtmlCreator) {\n      throw new Error(`AcHtml desc ERROR: ac html directive not found.`);\n    }\n\n    if (!this.acHtmlTemplate) {\n      throw new Error(`AcHtml desc ERROR: html template not found.`);\n    }\n  }\n\n  draw(context: any, id: any): any {\n    const cesiumProps = this._propsEvaluator(context);\n    if (!this._cesiumObjectsMap.has(id)) {\n      const primitive = this._drawer.add(cesiumProps);\n      this._cesiumObjectsMap.set(id, primitive);\n      this.acHtmlCreator.addOrUpdate(id, primitive);\n    } else {\n      const primitive = this._cesiumObjectsMap.get(id);\n      this._drawer.update(primitive, cesiumProps);\n      this.acHtmlCreator.addOrUpdate(id, primitive);\n    }\n  }\n\n  remove(id: string): void {\n    const primitive = this._cesiumObjectsMap.get(id);\n    this._drawer.remove(primitive);\n    this._cesiumObjectsMap.delete(id);\n    this.acHtmlCreator.remove(id, primitive);\n  }\n\n  removeAll(): void {\n    this._cesiumObjectsMap.forEach(((primitive, id) => {\n      this.acHtmlCreator.remove(id, primitive);\n    }));\n    this._cesiumObjectsMap.clear();\n    this._drawer.removeAll();\n  }\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\nimport { AcHtmlManager } from '../../services/ac-html-manager/ac-html-manager.service';\n\n@Directive({\n  selector: '[acHtmlContainer]'\n})\nexport class AcHtmlContainerDirective implements OnInit {\n\n  private _id: any;\n\n  constructor(\n    private _element: ElementRef,\n    private _acHtmlManager: AcHtmlManager\n  ) {\n  }\n\n  @Input()\n  set acHtmlContainer(id: string) {\n    this._id = id;\n  }\n\n  ngOnInit() {\n    if (this._id === undefined) {\n      throw new Error(`AcHtml container ERROR: entity id not defined`);\n    }\n\n    const entity = this._acHtmlManager.get(this._id);\n    entity.primitive.element = this._element.nativeElement;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport { ContextMenuService } from '../../services/context-menu/context-menu.service';\nimport { Subscription } from 'rxjs';\nimport { BasicContextMenu } from '../../models/basic-context-menu';\n\n/**\n * This component is used to inject the component that is passed to the ContextMenuService when opening a context menu.\n * It shouldn't be used directly.\n *\n * usage:\n * ```typescript\n * // We want to open the context menu on mouse right click.\n * // Register to mouse right click with the MapEventsManager\n * this.mapEventsManager.register({ event: CesiumEvent.RIGHT_CLICK, pick: PickOptions.NO_PICK })\n *    .subscribe(event => {\n *       const position = this.coordinateConverter.screenToCartesian3(event.movement.endPosition, true);\n *       if (!position) {\n *         return;\n *       }\n *       // Open the context menu on the position that was clicked and pass some data to MyCustomContextMenuComponent.\n *       this.contextMenuService.open(\n *         MyCustomContextMenuComponent,\n *         position,\n *         { data: { items: ['New Track', 'Change Map', 'Context Menu', 'Do Something'] } }\n *       )\n *    });\n *\n * ```\n */\n\n@Component({\n  selector: 'ac-context-menu-wrapper',\n  template: `\n    <ac-html *ngIf=\"contextMenuService.showContextMenu\" [props]=\"{position: contextMenuService.position}\">\n      <ng-template #contextMenuContainer></ng-template>\n    </ac-html>\n  `,\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AcContextMenuWrapperComponent implements OnInit, OnDestroy {\n\n  private contextMenuChangeSubscription: Subscription;\n  private contextMenuOpenSubscription: Subscription;\n\n  @ViewChild('contextMenuContainer', { read: ViewContainerRef }) viewContainerRef: ViewContainerRef;\n\n  constructor(public contextMenuService: ContextMenuService,\n              private cd: ChangeDetectorRef,\n              private componentFactoryResolver: ComponentFactoryResolver) {\n  }\n\n  ngOnInit() {\n    this.contextMenuChangeSubscription =\n      this.contextMenuService.contextMenuChangeNotifier.subscribe(() => this.cd.detectChanges());\n    this.contextMenuOpenSubscription =\n      this.contextMenuService.onOpen.subscribe(() => {\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.contextMenuService.content as any);\n        this.viewContainerRef.clear();\n        const componentRef = this.viewContainerRef.createComponent(componentFactory);\n        (componentRef.instance as BasicContextMenu).data = this.contextMenuService.options.data;\n        this.cd.detectChanges();\n      });\n  }\n\n  ngOnDestroy(): void {\n    if (this.contextMenuChangeSubscription) {\n      this.contextMenuChangeSubscription.unsubscribe();\n    }\n\n    if (this.contextMenuOpenSubscription) {\n      this.contextMenuOpenSubscription.unsubscribe();\n    }\n  }\n}\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { AcNotification } from '../../models/ac-notification';\nimport { Subject, Subscription } from 'rxjs';\nimport { IDescription } from '../../models/description';\nimport * as _get from 'lodash.get';\nimport { AcLayerComponent } from '../ac-layer/ac-layer.component';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\n\n/**\n *  This is component represents an array under `ac-layer`.\n *  The element must be a child of ac-layer element.\n *  + acFor `{string}` - get the tracked array and entityName (see the example).\n *  + idGetter `{Function}` - a function that gets the id for a given element in the array -should be defined for maximum performance.\n *  + show `{boolean}` - show/hide array's entities.\n *\n *  __Usage :__\n *  ```\n *<ac-layer acFor=\"let track of tracks$\" [show]=\"show\" [context]=\"this\" [store]=\"true\">\n *  <ac-array-desc acFor=\"let arrayItem of track.array\" [idGetter]=\"trackArrayIdGetter\">\n *    <ac-array-desc acFor=\"let innerArrayItem of arrayItem.innerArray\" [idGetter]=\"trackArrayIdGetter\">\n *      <ac-point-desc props=\"{\n *        position: innerArrayItem.pos,\n *        pixelSize: 10,\n *        color: getTrackColor(track),\n *        outlineColor: Cesium.Color.BLUE,\n *        outlineWidth: 1\n *      }\">\n *      </ac-point-desc>\n *    </ac-array-desc>\n *  </ac-array-desc>\n *</ac-layer>\n *  ```\n */\n\n@Component({\n  selector: 'ac-array-desc',\n  template: `\n    <ac-layer #layer [acFor]=\"getAcForString()\"\n              [context]=\"layerService.context\"\n              [options]=\"layerService.options\"\n              [show]=\"layerService.show && show\"\n              [zIndex]=\"layerService.zIndex\">\n      <ng-content #content></ng-content>\n    </ac-layer>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AcArrayDescComponent implements OnChanges, OnInit, AfterContentInit, OnDestroy, IDescription {\n\n  @Input() acFor: string;\n\n  @Input() idGetter: (item: any, index: number) => string;\n\n  @Input() show = true;\n  @ViewChild('layer', {static: true}) private layer: AcLayerComponent;\n  @ContentChildren(BasicDesc, {descendants: false}) private basicDescs: any;\n  @ContentChildren(AcArrayDescComponent, {descendants: false}) private arrayDescs: any;\n  private entitiesMap = new Map<string, string[]>();\n  private layerServiceSubscription: Subscription;\n  private id = 0;\n  private readonly acForRgx = /^let\\s+.+\\s+of\\s+.+$/;\n  entityName: string;\n  arrayPath: string;\n  arrayObservable$ = new Subject<AcNotification>();\n\n  constructor(public layerService: LayerService, private cd: ChangeDetectorRef) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['acFor'].firstChange) {\n      const acForString = changes['acFor'].currentValue;\n      if (!this.acForRgx.test(acForString)) {\n        throw new Error(`ac-layer: Invalid [acFor] syntax. Expected: [acFor]=\"let item of observable\" .Instead received: ${acForString}`);\n      }\n      const acForArr = changes['acFor'].currentValue.split(' ');\n      this.arrayPath = acForArr[3];\n      this.entityName = acForArr[1];\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.layer) {\n      this.layer.getLayerService().cache = false;\n    }\n\n    this.layerServiceSubscription = this.layerService.layerUpdates().subscribe(() => {\n      this.cd.detectChanges();\n    });\n  }\n\n  ngAfterContentInit(): void {\n    this.layerService.context['arrayObservable$'] = this.arrayObservable$;\n    this.layerService.registerDescription(this);\n    this.basicDescs._results.forEach((component: BasicDesc) => {\n      component.setLayerService(this.layer.getLayerService());\n    });\n    this.arrayDescs._results.splice(0, 1);\n    this.arrayDescs._results.forEach((component: AcArrayDescComponent) => {\n      this.layerService.unregisterDescription(component);\n      this.layer.getLayerService().registerDescription(component);\n      component.layerService = this.layer.getLayerService();\n      component.setLayerService(this.layer.getLayerService());\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.layerServiceSubscription) {\n      this.layerServiceSubscription.unsubscribe();\n    }\n  }\n\n  setLayerService(layerService: LayerService) {\n    this.layerService = layerService;\n  }\n\n  draw(context: any, id: string, contextEntity: any) {\n    const get = _get;\n    const entitiesArray: any[] = get(context, this.arrayPath);\n    if (!entitiesArray) {\n      return;\n    }\n    const previousEntitiesIdArray = this.entitiesMap.get(id);\n    const entitiesIdArray: any[] = [];\n    this.entitiesMap.set(id, entitiesIdArray);\n\n    entitiesArray.forEach((item, index) => {\n      this.layerService.context[this.entityName] = item;\n      const arrayItemId = this.generateCombinedId(id, item, index);\n      entitiesIdArray.push(arrayItemId);\n      this.layer.update(contextEntity, arrayItemId);\n    });\n\n    if (previousEntitiesIdArray) {\n      const entitiesToRemove = this.idGetter ?\n        previousEntitiesIdArray.filter((entityId) => entitiesIdArray.indexOf(entityId) < 0) :\n        previousEntitiesIdArray;\n      if (entitiesToRemove) {\n        entitiesToRemove.forEach((entityId) => this.layer.remove(entityId));\n      }\n    }\n  }\n\n  remove(id: string) {\n    const entitiesIdArray = this.entitiesMap.get(id);\n    if (entitiesIdArray) {\n      entitiesIdArray.forEach((entityId) => this.layer.remove(entityId));\n    }\n    this.entitiesMap.delete(id);\n  }\n\n  removeAll() {\n    this.layer.removeAll();\n    this.entitiesMap.clear();\n  }\n\n  getAcForString() {\n    return `let ${this.entityName + '___temp'} of arrayObservable$`;\n  }\n\n  private generateCombinedId(entityId: string, arrayItem: any, index: number): string {\n    let arrayItemId;\n    if (this.idGetter) {\n      arrayItemId = this.idGetter(arrayItem, index);\n    } else {\n      arrayItemId = (this.id++) % Number.MAX_SAFE_INTEGER;\n    }\n    return entityId + arrayItemId;\n  }\n}\n","import { Component } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { PointPrimitiveDrawerService } from '../../services/drawers/point-primitive-drawer/point-primitive-drawer.service';\n\n/**\n *  This is a label primitive implementation.\n *  The ac-label element must be a child of ac-layer element.\n *  The properties of props are:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Point.html\n *\n *  __Usage :__\n *  ```\n *    <ac-point-primitive-desc props=\"{\n *      position: track.position,\n *      color: Cesium.Color.RED\n *    }\">\n *    </ac-point-primitive-desc>\n *  ```\n */\n\n@Component({\n  selector: 'ac-point-primitive-desc',\n  template: '',\n})\nexport class AcPointPrimitiveDescComponent extends BasicDesc {\n\n  constructor(pointPrimitiveDrawerService: PointPrimitiveDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(pointPrimitiveDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\nimport { PolylinePrimitiveDrawerService } from '../../services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service';\n\n/**\n *  This is a polyline implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Polyline Primitive:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Polyline.html\n *\n *  __Usage:__\n *  ```\n *  <ac-polyline [props]=\"{\n *    position: position,\n *    text: 'labelText',\n *    font: '30px sans-serif'\n *    color: Cesium.Color.GREEN\n *  }\">;\n *  </ac-polyline>\n *  ```\n */\n\n@Component({\n  selector: 'ac-primitive-polyline',\n  template: '',\n})\nexport class AcPrimitivePolylineComponent extends EntityOnMapComponent {\n\n  constructor(polylineDrawer: PolylinePrimitiveDrawerService, mapLayers: MapLayersService) {\n    super(polylineDrawer, mapLayers);\n  }\n}\n","import { PixelOffsetPipe } from './pixel-offset/pixel-offset.pipe';\nimport { RadiansToDegreesPipe } from './radians-to-degrees/radians-to-degrees.pipe';\n\n// For angular parse usage\nexport default [\n  {pipeName: 'pixelOffset', pipeInstance: new PixelOffsetPipe()},\n  {pipeName: 'radiansToDegrees', pipeInstance: new RadiansToDegreesPipe()},\n];\n","import { Component, OnInit } from '@angular/core';\n\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CzmlDrawerService } from '../../services/drawers/czml-drawer/czml-drawer.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\n\n/**\n *  This is a czml implementation.\n *  The ac-czml-desc element must be a child of ac-layer element.\n *\n *  See CZML Guide for the structure of props.czmlPacket:\n *  + https://github.com/AnalyticalGraphicsInc/czml-writer/wiki/CZML-Structure\n *\n *  Attention: the first czmlPacket in the stream needs to be a document\n *  with an id and a name attribute. See this example\n *  + https://cesiumjs.org/Cesium/Apps/Sandcastle/index.html?src=CZML%20Point%20-%20Time%20Dynamic.html&label=CZML\n *\n *  To see a working example, use the demo app and\n *  + uncomment <czml-layer></czml-layer> in demo-map.component.html\n *  + set the properties 'timeline', 'animation' and 'shouldAnimate' true in viewerOptions of demo-map.component.ts\n *\n *\n *  __Usage:__\n *  ```\n *    <ac-czml-desc props=\"{\n *      czmlPacket: czmlPacket\n *    }\">\n *    </ac-czml-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-czml-desc',\n  template: '',\n})\nexport class AcCzmlDescComponent extends BasicDesc implements OnInit {\n  constructor(czmlDrawer: CzmlDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(czmlDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n\n}\n","import { Component } from '@angular/core';\nimport { RectangleDrawerService } from '../../services/drawers/rectangle-dawer/rectangle-drawer.service';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a rectangle implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and RectangleGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/RectangleGraphics.html\n *\n *  __Usage:__\n *  ```\n *    <ac-rectangle props=\"{\n *      coordinates: rectangle.coordinates,\n *      material: rectangle.material,\n *      height: rectangle.height\n *    }\">\n *    </ac-rectangle>\n *  ```\n */\n@Component({\n  selector: 'ac-rectangle',\n  template: ''\n})\nexport class AcRectangleComponent extends EntityOnMapComponent {\n  constructor(rectangleDrawer: RectangleDrawerService, mapLayers: MapLayersService) {\n    super(rectangleDrawer, mapLayers);\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AcMapComponent } from './components/ac-map/ac-map.component';\nimport { AcLayerComponent } from './components/ac-layer/ac-layer.component';\nimport { AcBillboardComponent } from './components/ac-billboard/ac-billboard.component';\nimport { AcBillboardDescComponent } from './components/ac-billborad-desc/ac-billborad-desc.component';\nimport { AcEllipseDescComponent } from './components/ac-ellipse-desc/ac-ellipse-desc.component';\nimport { AcPolylineDescComponent } from './components/ac-polyline-desc/ac-polyline-desc.component';\nimport { Angular2ParseModule, PIPES_CONFIG } from 'angular2parse';\nimport { PixelOffsetPipe } from './pipes/pixel-offset/pixel-offset.pipe';\nimport { RadiansToDegreesPipe } from './pipes/radians-to-degrees/radians-to-degrees.pipe';\nimport { JsonMapper } from './services/json-mapper/json-mapper.service';\nimport { CesiumProperties } from './services/cesium-properties/cesium-properties.service';\nimport { AcLabelDescComponent } from './components/ac-label-desc/ac-label-desc.component';\nimport { UtilsModule } from './utils/utils.module';\nimport { ViewerFactory } from './services/viewer-factory/viewer-factory.service';\nimport { GeoUtilsService } from './services/geo-utils/geo-utils.service';\nimport { AcCircleDescComponent } from './components/ac-circle-desc/ac-circle-desc.component';\nimport { AcArcDescComponent } from './components/ac-arc-desc/ac-arc-desc.component';\nimport { AcMapLayerProviderComponent } from './components/ac-map-layer-provider/ac-map-layer-provider.component';\nimport { AcMapTerrainProviderComponent } from './components/ac-map-terrain-provider/ac-map-terrain-provider.component';\nimport { AcPointDescComponent } from './components/ac-point-desc/ac-point-desc.component';\nimport { AcLabelComponent } from './components/ac-label/ac-label.component';\nimport { AcPolylineComponent } from './components/ac-polyline/ac-polyline.component';\nimport { AcEllipseComponent } from './components/ac-ellipse/ac-ellipse.component';\nimport { AcPointComponent } from './components/ac-point/ac-point.component';\nimport { AcHtmlComponent } from './components/ac-html/ac-html.component';\nimport { AcCircleComponent } from './components/ac-circle/ac-circle.component';\nimport { AcArcComponent } from './components/ac-arc/ac-arc.component';\nimport { AcPolygonDescComponent } from './components/ac-polygon-desc/ac-polygon-desc.component';\nimport { AcDefaultPlonterComponent } from './components/ac-default-plonter/ac-default-plonter.component';\nimport { AcPolygonComponent } from './components/ac-polygon/ac-polygon.component';\nimport { MapsManagerService } from './services/maps-manager/maps-manager.service';\nimport { AcStaticEllipseDescComponent } from './components/static-dynamic/ac-static-ellipse-desc/ac-static-ellipse-desc.component';\nimport { AcDynamicEllipseDescComponent } from './components/static-dynamic/ac-dynamic-ellipse-desc/ac-dynamic-ellipse-desc.component';\nimport { AcDynamicPolylineDescComponent } from './components/static-dynamic/ac-dynamic-polyline-desc/ac-dynamic-polyline-desc.component';\nimport { AcStaticPolygonDescComponent } from './components/static-dynamic/ac-static-polygon-desc/ac-static-polygon-desc.component';\nimport { AcStaticCircleDescComponent } from './components/static-dynamic/ac-static-circle-desc/ac-static-circle-desc.component';\nimport { AcDynamicCircleDescComponent } from './components/static-dynamic/ac-dynamic-circle-desc/ac-dynamic-circle-desc.component';\nimport { AcStaticPolylineDescComponent } from './components/static-dynamic/ac-static-polyline-desc/ac-static-polyline-desc.component';\nimport { AcModelDescComponent } from './components/ac-model-desc/ac-model-desc.component';\nimport { AcTileset3dComponent } from './components/ac-3d-tileset/ac-tileset-3d.component';\nimport { AcBoxDescComponent } from './components/ac-box-desc/ac-box-desc.component';\nimport { AcCylinderDescComponent } from './components/ac-cylinder-desc/ac-cylinder-desc.component';\nimport { AcCorridorDescComponent } from './components/ac-corridor-desc/ac-corridor-desc.component';\nimport { AcEllipsoidDescComponent } from './components/ac-ellipsoid-desc/ac-ellipsoid-desc.component';\nimport { AcPolylineVolumeDescComponent } from './components/ac-polyline-volume-desc/ac-polyline-volume-desc.component';\nimport { AcWallDescComponent } from './components/ac-wall-desc/ac-wall-desc.component';\nimport { AcRectangleDescComponent } from './components/ac-rectangle-desc/ac-rectangle-desc.component';\nimport { AcBillboardPrimitiveDescComponent } from './components/ac-billboard-primitive-desc/ac-billboard-primitive-desc.component';\nimport { AcLabelPrimitiveDescComponent } from './components/ac-label-primitive-desc/ac-label-primitive-desc.component';\nimport { AcPolylinePrimitiveDescComponent } from './components/ac-polyline-primitive-desc/ac-polyline-primitive-desc.component';\nimport { ModuleConfiguration } from './models/module-options';\nimport { ANGULAR_CESIUM_CONFIG, ConfigurationService } from './cesium-enhancements/ConfigurationService';\nimport { CesiumExtender } from '../cesium-extender/extender';\nimport { AcHtmlDescComponent } from './components/ac-html-desc/ac-html-desc.component';\nimport { AcHtmlDirective } from './directives/ac-html/ac-html.directive';\nimport { AcHtmlContainerDirective } from './directives/ac-html-container/ac-html-container.directive';\nimport { AcContextMenuWrapperComponent } from './components/ac-context-menu-wrapper/ac-context-menu-wrapper.component';\nimport { AcArrayDescComponent } from './components/ac-array-desc/ac-array-desc.component';\nimport { AcPointPrimitiveDescComponent } from './components/ac-point-primitive-desc/ac-point-primitive-desc.component';\nimport { AcPrimitivePolylineComponent } from './components/ac-primitive-polyline/ac-primitive-polyline.component';\nimport PARSE_PIPES_CONFIG_MAP from './pipes/pipe-config-map';\n\nimport { AcCzmlDescComponent } from './components/ac-czml-desc/ac-czml-desc.component';\nimport { AcRectangleComponent } from './components/ac-rectangle/ac-rectangle.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    Angular2ParseModule,\n    UtilsModule,\n  ],\n  declarations: [\n    AcMapComponent,\n    AcLayerComponent,\n    AcBillboardComponent,\n    AcBillboardDescComponent,\n    AcBillboardPrimitiveDescComponent,\n    AcLabelDescComponent,\n    AcLabelPrimitiveDescComponent,\n    AcEllipseDescComponent,\n    AcPolylineDescComponent,\n    AcPolylinePrimitiveDescComponent,\n    PixelOffsetPipe,\n    RadiansToDegreesPipe,\n    AcCircleDescComponent,\n    AcArcDescComponent,\n    AcMapLayerProviderComponent,\n    AcMapTerrainProviderComponent,\n    AcPointDescComponent,\n    AcLabelComponent,\n    AcPolylineComponent,\n    AcPrimitivePolylineComponent,\n    AcEllipseComponent,\n    AcPointComponent,\n    AcBillboardComponent,\n    AcHtmlComponent,\n    AcCircleComponent,\n    AcArcComponent,\n    AcPolygonDescComponent,\n    AcPolygonComponent,\n    AcDefaultPlonterComponent,\n    AcModelDescComponent,\n    AcTileset3dComponent,\n    AcBoxDescComponent,\n    AcCylinderDescComponent,\n    AcCorridorDescComponent,\n    AcEllipsoidDescComponent,\n    AcPolylineVolumeDescComponent,\n    AcWallDescComponent,\n    AcRectangleDescComponent,\n    AcContextMenuWrapperComponent,\n    AcPointPrimitiveDescComponent,\n    AcHtmlDescComponent,\n    AcHtmlDirective,\n    AcHtmlContainerDirective,\n    AcArrayDescComponent,\n    AcCzmlDescComponent,\n\n    AcStaticEllipseDescComponent,\n    AcDynamicEllipseDescComponent,\n    AcDynamicPolylineDescComponent,\n    AcStaticPolylineDescComponent,\n    AcDynamicCircleDescComponent,\n    AcStaticCircleDescComponent,\n    AcStaticPolygonDescComponent,\n    AcRectangleComponent\n  ],\n  exports: [\n    AcMapComponent,\n    AcBillboardComponent,\n    AcBillboardDescComponent,\n    AcBillboardPrimitiveDescComponent,\n    AcLabelDescComponent,\n    AcLabelPrimitiveDescComponent,\n    AcEllipseDescComponent,\n    AcPolylineDescComponent,\n    AcPolylinePrimitiveDescComponent,\n    AcLayerComponent,\n    AcCircleDescComponent,\n    AcArcDescComponent,\n    AcMapLayerProviderComponent,\n    AcMapTerrainProviderComponent,\n    AcPointDescComponent,\n    AcLabelComponent,\n    AcPolylineComponent,\n    AcPrimitivePolylineComponent,\n    AcEllipseComponent,\n    AcPointComponent,\n    AcBillboardComponent,\n    AcHtmlComponent,\n    AcCircleComponent,\n    AcArcComponent,\n    AcPolygonDescComponent,\n    AcPolygonComponent,\n    AcDefaultPlonterComponent,\n    AcModelDescComponent,\n    AcTileset3dComponent,\n    AcBoxDescComponent,\n    AcCylinderDescComponent,\n    AcCorridorDescComponent,\n    AcEllipsoidDescComponent,\n    AcPolylineVolumeDescComponent,\n    AcWallDescComponent,\n    AcRectangleDescComponent,\n    AcPointPrimitiveDescComponent,\n    AcHtmlDescComponent,\n    AcArrayDescComponent,\n    AcCzmlDescComponent,\n    AcRectangleComponent,\n    AcStaticEllipseDescComponent,\n    AcDynamicEllipseDescComponent,\n    AcDynamicPolylineDescComponent,\n    AcStaticPolylineDescComponent,\n    AcDynamicCircleDescComponent,\n    AcStaticCircleDescComponent,\n    AcStaticPolygonDescComponent,\n  ],\n})\nexport class AngularCesiumModule {\n  static forRoot(config?: ModuleConfiguration): ModuleWithProviders<AngularCesiumModule> {\n    return {\n      ngModule: AngularCesiumModule,\n      providers: [\n        JsonMapper, CesiumProperties, GeoUtilsService, ViewerFactory, MapsManagerService, ConfigurationService,\n        {provide: ANGULAR_CESIUM_CONFIG, useValue: config},\n        {provide: PIPES_CONFIG, multi: true, useValue: config && config.customPipes || []},\n        {provide: PIPES_CONFIG, multi: true, useValue: PARSE_PIPES_CONFIG_MAP},\n      ],\n    };\n  }\n\n  constructor() {\n    CesiumExtender.extend();\n  }\n}\n","/**\n * EventModifier options for registration on map-event-manager.\n */\nexport enum CesiumEventModifier {\n  ALT = Cesium.KeyboardEventModifier.ALT,\n  CTRL = Cesium.KeyboardEventModifier.CTRL,\n  SHIFT = Cesium.KeyboardEventModifier.SHIFT,\n}\n","import { Observable } from 'rxjs';\n\nexport class DisposableObservable<T> extends Observable<T> {\n  dispose: Function;\n}\n","export enum EditModes {\n  CREATE,\n  EDIT,\n  CREATE_OR_EDIT\n}\n","export enum EditActions {\n  INIT,\n  MOUSE_MOVE,\n  ADD_POINT,\n  ADD_LAST_POINT,\n  CHANGE_TO_EDIT,\n  REMOVE_POINT,\n  DRAG_POINT,\n  DRAG_POINT_FINISH,\n  DRAG_SHAPE,\n  DRAG_SHAPE_FINISH,\n  DONE,\n  DISABLE,\n  ENABLE,\n  DISPOSE,\n  SET_EDIT_LABELS_RENDER_CALLBACK,\n  UPDATE_EDIT_LABELS,\n  SET_MANUALLY,\n  TRANSFORM,\n}\n","import { filter, map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { AcEntity } from '../../models/ac-entity';\nimport { CesiumEvent } from '../map-events-mananger/consts/cesium-event.enum';\nimport { MapEventsManagerService } from '../map-events-mananger/map-events-manager';\nimport { PickOptions } from '../map-events-mananger/consts/pickOptions.enum';\nimport { CesiumEventModifier } from '../map-events-mananger/consts/cesium-event-modifier.enum';\nimport { MapsManagerService } from '../maps-manager/maps-manager.service';\n\n\nexport interface SelectionOptions {\n  event?: CesiumEvent;\n  modifier?: CesiumEventModifier;\n  entityType?: any;\n}\n\n/**\n * Manages entity selection service for any given mouse event and modifier\n * the service will manage the list of selected items.\n * check out the example\n * you must provide the service yourself\n *\n *  __Usage :__\n * ```\n * // provide the service in some component\n * @Component({\n * //...\n *  providers: [SelectionManagerService]\n * }\n *\n * // Usage example:\n * // init selection\n * const selectedIndicator = ture; // optional default true, if true a boolean \"selected\" property will be added to the selected entity\n * selectionManagerService.initSelection({ event: CesiumEvent.LEFT_CLICK,\n * \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmodifier: CesiumEventModifier.CTRL\n * \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},selectedIndicator);\n * // Get selected\n * const selected = selectionManagerService.selected();\n *\n * // Or as observer\n * const selected$ = selectionManagerService.selected$();\n *\n * ```\n *\n */\n@Injectable()\nexport class SelectionManagerService {\n  selectedEntitiesItems$: BehaviorSubject<AcEntity[]> = new BehaviorSubject<AcEntity[]>([]);\n  selectedEntitySubject$: Subject<AcEntity> = new Subject<AcEntity>();\n  private mapEventsManagerService: MapEventsManagerService;\n\n  constructor(private mapsManager: MapsManagerService) {\n  }\n\n  selectedEntities$(): Observable<AcEntity[]> {\n    return this.selectedEntitiesItems$.asObservable();\n  }\n\n  selectedEntities(): AcEntity[] {\n    return this.selectedEntitiesItems$.getValue();\n  }\n\n  selectedEntity$() {\n    return this.selectedEntitySubject$;\n  }\n\n  toggleSelection(entity: AcEntity, addSelectedIndicator: boolean) {\n    const current = this.selectedEntities();\n    if (current.indexOf(entity) === -1) {\n      this.addToSelected(entity, addSelectedIndicator);\n    } else {\n      this.removeSelected(entity, addSelectedIndicator);\n    }\n  }\n\n  private addToSelected(entity: AcEntity, addSelectedIndicator: boolean) {\n    if (addSelectedIndicator) {\n      entity['selected'] = true;\n    }\n\n    const current = this.selectedEntities();\n    this.selectedEntitySubject$.next(entity);\n    this.selectedEntitiesItems$.next([...current, entity]);\n  }\n\n  private removeSelected(entity: AcEntity, addSelectedIndicator: boolean) {\n    if (addSelectedIndicator) {\n      entity['selected'] = false;\n    }\n\n    const current = this.selectedEntities();\n    const entityIndex = current.indexOf(entity);\n    if (entityIndex !== -1) {\n      current.splice(entityIndex, 1);\n      this.selectedEntitiesItems$.next(current);\n      this.selectedEntitySubject$.next(entity);\n    }\n  }\n\n  initSelection(selectionOptions?: SelectionOptions, addSelectedIndicator = true, eventPriority?: number, mapId?: string) {\n    const mapComponent = this.mapsManager.getMap(mapId);\n    if (!mapComponent) {\n      return;\n    }\n\n    this.mapEventsManagerService = mapComponent.getMapEventsManager();\n\n    if (!selectionOptions) {\n      Object.assign(selectionOptions, {event: CesiumEvent.LEFT_CLICK});\n    }\n\n    const eventSubscription = this.mapEventsManagerService.register({\n      event: selectionOptions.event,\n      pick: PickOptions.PICK_ONE,\n      modifier: selectionOptions.modifier,\n      entityType: selectionOptions.entityType,\n      priority: eventPriority,\n    });\n\n    eventSubscription.pipe(\n      map(result => result.entities),\n      filter(entities => entities && entities.length > 0))\n      .subscribe(entities => {\n        const entity = entities[0];\n        this.toggleSelection(entity, addSelectedIndicator);\n      });\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { PointProps } from './point-edit-options';\n\nexport class EditPoint extends AcEntity {\n  static counter = 0;\n  private id: string;\n  private editedEntityId: string;\n  private position: Cartesian3;\n  private _virtualEditPoint: boolean;\n  private pointProps: PointProps;\n  private _show = true;\n\n  constructor(entityId: string, position: Cartesian3, pointProps?: PointProps, virtualPoint = false) {\n    super();\n    this.editedEntityId = entityId;\n    this.position = position;\n    this.id = this.generateId();\n    this.pointProps = {...pointProps};\n    this._virtualEditPoint = virtualPoint;\n  }\n\n  get show() {\n    return this._show;\n  }\n\n  set show(value) {\n    this._show = value;\n  }\n\n  get props(): PointProps {\n    return this.pointProps;\n  }\n\n  set props(value: PointProps) {\n    this.pointProps = value;\n  }\n\n  isVirtualEditPoint(): boolean {\n    return this._virtualEditPoint;\n  }\n\n  setVirtualEditPoint(value: boolean) {\n    this._virtualEditPoint = value;\n  }\n\n  getEditedEntityId(): string {\n    return this.editedEntityId;\n  }\n\n  getPosition(): Cartesian3 {\n    return this.position.clone();\n  }\n\n  getPositionCallbackProperty(): Cartesian3 {\n    return new Cesium.CallbackProperty(this.getPosition.bind(this), false);\n  }\n\n\n  setPosition(position: Cartesian3) {\n    this.position.x = position.x;\n    this.position.y = position.y;\n    this.position.z = position.z;\n  }\n\n  getId(): string {\n    return this.id;\n  }\n\n  private generateId(): string {\n    return 'edit-point-' + EditPoint.counter++;\n  }\n}\n","export function generateKey(length = 12): string {\n  let id = '';\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (let i = 0; i < length; i++) {\n    id += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return id;\n}\n\nexport function debounce(func, wait) {\n  let timeout;\n  return function (...args) {\n    const context = this;\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func.apply(context, args), wait);\n  };\n}\n","import { publish, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from '../../../models/edit-point';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { PointsManagerService } from './points-manager.service';\nimport { LabelProps } from '../../../models/label-props';\nimport { generateKey } from '../../utils';\nimport { CesiumService } from '../../../../angular-cesium';\nimport { PointEditOptions, PointProps } from '../../../models/point-edit-options';\nimport { PointEditUpdate } from '../../../models/point-edit-update';\nimport { PointEditorObservable } from '../../../models/point-editor-observable';\n\nexport const DEFAULT_POINT_OPTIONS: PointEditOptions = {\n  addLastPointEvent: CesiumEvent.LEFT_CLICK,\n  removePointEvent: CesiumEvent.RIGHT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  allowDrag: true,\n  pointProps: {\n    color: Cesium.Color.WHITE.withAlpha(0.95),\n    outlineColor: Cesium.Color.BLACK.withAlpha(0.5),\n    outlineWidth: 1,\n    pixelSize: 10,\n    show: true,\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\n  },\n};\n\n/**\n * Service for creating editable point\n *\n *  * You must provide `PointsEditorService` yourself.\n * PolygonsEditorService works together with `<points-editor>` component. Therefor you need to create `<points-editor>`\n * for each `PointsEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `PointEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `PointEditorObservable`.\n * + To stop editing call `dsipose()` from the `PointEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over editted shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `PointEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n * usage:\n * ```typescript\n *  // Start creating point\n *  const editing$ = pointEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit point from existing point cartesian3 positions\n *  const editing$ = this.pointEditor.edit(initialPos);\n *\n * ```\n */\n@Injectable()\nexport class PointsEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<PointEditUpdate>();\n  private updatePublisher = publish<PointEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private pointManager: PointsManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n  private cesiumScene;\n\n  init(mapEventsManager: MapEventsManagerService,\n       coordinateConverter: CoordinateConverter,\n       cameraService: CameraService,\n       pointManager: PointsManagerService,\n       cesiumViewer: CesiumService) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.pointManager = pointManager;\n    this.updatePublisher.connect();\n\n    this.cesiumScene = cesiumViewer.getScene();\n  }\n\n  onUpdate(): Observable<PointEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  private screenToPosition(cartesian2) {\n    const cartesian3 = this.coordinateConverter.screenToCartesian3(cartesian2);\n\n    // If cartesian3 is undefined then the point inst on the globe\n    if (cartesian3) {\n      const ray = this.cameraService.getCamera().getPickRay(cartesian2);\n      return this.cesiumScene.globe.pick(ray, this.cesiumScene);\n    }\n    return cartesian3;\n  }\n\n  create(options = DEFAULT_POINT_OPTIONS, eventPriority = 100): PointEditorObservable {\n    const id = generateKey();\n    const pointOptions = this.setOptions(options);\n\n    const clientEditSubject = new BehaviorSubject<PointEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      pointOptions: pointOptions,\n    });\n\n    const finishCreation = (position: Cartesian3) => {\n      return this.switchToEditMode(\n        id,\n        clientEditSubject,\n        position,\n        eventPriority,\n        pointOptions,\n        editorObservable,\n        true\n      );\n    };\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n      pickConfig: options.pickConfiguration,\n    });\n    const addLastPointRegistration = this.mapEventsManager.register({\n      event: pointOptions.addLastPointEvent,\n      modifier: pointOptions.addLastPointModifier,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n      pickConfig: options.pickConfiguration,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addLastPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id, finishCreation);\n\n    mouseMoveRegistration.subscribe(({ movement: { endPosition } }) => {\n      const position = this.screenToPosition(endPosition);\n      if (position) {\n\n        this.updateSubject.next({\n          id,\n          position,\n          editMode: EditModes.CREATE,\n          updatedPosition: position,\n          editAction: EditActions.MOUSE_MOVE,\n        });\n      }\n    });\n    addLastPointRegistration.subscribe(({ movement: { endPosition } }) => {\n      const position = this.screenToPosition(endPosition);\n      finishedCreate = finishCreation(position);\n    });\n    return editorObservable;\n  }\n\n  private switchToEditMode(id,\n                           clientEditSubject,\n                           position: Cartesian3,\n                           eventPriority,\n                           pointOptions,\n                           editorObservable,\n                           finishedCreate: boolean) {\n    const update = {\n      id,\n      position: position,\n      editMode: EditModes.CREATE_OR_EDIT,\n      updatedPosition: position,\n      editAction: EditActions.ADD_LAST_POINT,\n    };\n    this.updateSubject.next(update);\n    clientEditSubject.next({\n      ...update,\n      position: position,\n      point: this.getPoint(id),\n    });\n\n    const changeMode = {\n      id,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.CHANGE_TO_EDIT,\n    };\n    this.updateSubject.next(changeMode);\n    clientEditSubject.next(changeMode);\n    if (this.observablesMap.has(id)) {\n      this.observablesMap.get(id).forEach(registration => registration.dispose());\n    }\n    this.observablesMap.delete(id);\n    this.editPoint(id, position, eventPriority, clientEditSubject, pointOptions, editorObservable);\n    finishedCreate = true;\n    return finishedCreate;\n  }\n\n  edit(position: Cartesian3, options = DEFAULT_POINT_OPTIONS, priority = 100): PointEditorObservable {\n    const id = generateKey();\n    const pointOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<PointEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT\n    });\n    const update = {\n      id,\n      position: position,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      pointOptions: pointOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n      position: position,\n      point: this.getPoint(id),\n    });\n    return this.editPoint(\n      id,\n      position,\n      priority,\n      editSubject,\n      pointOptions\n    );\n  }\n\n  private editPoint(id: string,\n                       position: Cartesian3,\n                       priority: number,\n                       editSubject: Subject<PointEditUpdate>,\n                       options: PointEditOptions,\n                       editObservable?: PointEditorObservable) {\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: options.dragPointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      pickConfig: options.pickConfiguration,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    const pointRemoveRegistration = this.mapEventsManager.register({\n      event: options.removePointEvent,\n      modifier: options.removePointModifier,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      pickConfig: options.pickConfiguration,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    pointDragRegistration.pipe(\n      tap(({ movement: { drop } }) => this.cameraService.enableInputs(drop)))\n      .subscribe(({ movement: { endPosition, drop }, entities }) => {\n        const updatedPosition = this.screenToPosition(endPosition);\n        if (!updatedPosition) {\n          return;\n        }\n        const update = {\n          id,\n          editMode: EditModes.EDIT,\n          updatedPosition,\n          editAction: drop ? EditActions.DRAG_POINT_FINISH : EditActions.DRAG_POINT,\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n          position: updatedPosition,\n          point: this.getPoint(id),\n        });\n\n      });\n\n    const observables = [pointDragRegistration, pointRemoveRegistration];\n    this.observablesMap.set(id, observables);\n    return this.createEditorObservable(editSubject, id);\n  }\n\n  private setOptions(options: PointEditOptions) {\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_POINT_OPTIONS));\n    const pointOptions: PointEditOptions = Object.assign(defaultClone, options);\n    pointOptions.pointProps = {...DEFAULT_POINT_OPTIONS.pointProps, ...options.pointProps};\n    pointOptions.pointProps = {...DEFAULT_POINT_OPTIONS.pointProps, ...options.pointProps};\n    return pointOptions;\n  }\n\n\n  private createEditorObservable(observableToExtend: any, id: string, finishCreation?: (position: Cartesian3) => boolean)\n                                                                                                    : PointEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      });\n    };\n\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        position: this.getPosition(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n      });\n    };\n\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        position: this.getPosition(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n      });\n    };\n\n    observableToExtend.setManually = (point: {\n      position: Cartesian3,\n      pointProp?: PointProps\n    } | Cartesian3, pointProps?: PointProps) => {\n      const newPoint = this.pointManager.get(id);\n      newPoint.setManually(point, pointProps);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: any) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      });\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      });\n    };\n\n    observableToExtend.finishCreation = () => {\n      if (!finishCreation) {\n        throw new Error('Points editor error edit(): cannot call finishCreation() on edit');\n      }\n\n      return finishCreation(null);\n    };\n\n    observableToExtend.getCurrentPoint = () => this.getPoint(id);\n\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n\n    observableToExtend.getLabels = (): LabelProps[] => this.pointManager.get(id).labels;\n\n    return observableToExtend as PointEditorObservable;\n  }\n\n  private getPosition(id: string) {\n    const point = this.pointManager.get(id);\n    return point.getPosition();\n  }\n\n  private getPoint(id: string) {\n    const point = this.pointManager.get(id);\n    if (point) {\n      return point.getCurrentPoint();\n    }\n  }\n}\n","import { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { Cartesian2 } from '../../angular-cesium/models/cartesian2';\n\nexport interface LabelStyle {\n  show?: boolean;\n  font?: string;\n  style?: any;\n  fillColor?: any;\n  outlineColor?: any;\n  backgroundColor?: any;\n  backgroundPadding?: any;\n  showBackground?: boolean;\n  scale?: number;\n  distanceDisplayCondition?: any;\n  heightReference?: any;\n  horizontalOrigin?: any;\n  eyeOffset?: Cartesian3;\n  position?: Cartesian3;\n  pixelOffset?: Cartesian2;\n  pixelOffsetScaleByDistance?: any;\n  outlineWidth?: any;\n  scaleByDistance?: any;\n  translucencyByDistance?: any;\n  verticalOrigin?: any;\n  disableDepthTestDistance?: number;\n}\n\nexport interface LabelProps {\n  text: string;\n  show?: boolean;\n  font?: string;\n  style?: any;\n  fillColor?: any;\n  outlineColor?: any;\n  backgroundColor?: any;\n  backgroundPadding?: any;\n  showBackground?: boolean;\n  scale?: number;\n  distanceDisplayCondition?: any;\n  heightReference?: any;\n  horizontalOrigin?: any;\n  eyeOffset?: Cartesian3;\n  position?: Cartesian3;\n  pixelOffset?: Cartesian2;\n  pixelOffsetScaleByDistance?: any;\n  outlineWidth?: any;\n  scaleByDistance?: any;\n  translucencyByDistance?: any;\n  verticalOrigin?: any;\n  disableDepthTestDistance?: number;\n}\n\nexport const defaultLabelProps: LabelProps = {\n  backgroundColor: new Cesium.Color(0.165, 0.165, 0.165, 0.7),\n  backgroundPadding: new Cesium.Cartesian2(25, 20),\n  distanceDisplayCondition: undefined,\n  fillColor: Cesium.Color.WHITE,\n  font: '30px sans-serif',\n  heightReference: Cesium.HeightReference.NONE,\n  horizontalOrigin: Cesium.HorizontalOrigin.LEFT,\n  outlineColor: Cesium.Color.BLACK,\n  outlineWidth: 1.0,\n  pixelOffset: Cesium.Cartesian2.ZERO,\n  pixelOffsetScaleByDistance: undefined,\n  scale: 1.0,\n  scaleByDistance: undefined,\n  show: true,\n  showBackground: false,\n  style: Cesium.LabelStyle.FILL,\n  text: '',\n  translucencyByDistance: undefined,\n  verticalOrigin: Cesium.VerticalOrigin.BASELINE,\n  eyeOffset: Cesium.Cartesian3.ZERO,\n  disableDepthTestDistance: 0,\n};\n","import { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from './edit-point';\nimport { defaultLabelProps, LabelProps } from './label-props';\nimport { PointEditOptions, PointProps } from './point-edit-options';\n\ninterface PositionWithPointProps {\n  position: Cartesian3;\n  pointProp?: PointProps;\n}\n\nexport class EditablePoint extends AcEntity {\n  private point: EditPoint;\n  private _enableEdit = true;\n  private _props: PointProps;\n  private _labels: LabelProps[] = [];\n\n  constructor(private id: string,\n              private pointLayer: AcLayerComponent,\n              private coordinateConverter: CoordinateConverter,\n              private editOptions: PointEditOptions,\n              position?: Cartesian3) {\n    super();\n    this._props = {...editOptions.pointProps};\n    if (position) {\n      this.createFromExisting(position);\n    }\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels) {\n      return;\n    }\n    const position = this.point.getPosition();\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        label.position = position;\n      }\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get props(): PointProps {\n    return this._props;\n  }\n\n  set props(value: PointProps) {\n    this._props = value;\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    if (value) {\n      this.point.props.color = Cesium.Color.WHITE;\n    } else {\n      this.point.props.color = Cesium.Color.DIMGREY;\n      this.point.props.pixelSize = 10;\n    }\n    this.updatePointLayer();\n  }\n\n  private createFromExisting(position: Cartesian3) {\n    this.point = new EditPoint(this.id, position, this._props);\n    this.updatePointLayer();\n  }\n\n  private hasPosition(point: PositionWithPointProps | Cartesian3): point is PositionWithPointProps {\n    if ((point as PositionWithPointProps).position) {\n      return true;\n    }\n    return false;\n  }\n\n  setManually(point: PositionWithPointProps | Cartesian3, props?: PointProps) {\n    if (!this.enableEdit) {\n      throw new Error('Update manually only in edit mode, after point is created');\n    }\n    let newProps = props;\n    if (this.hasPosition(point)) {\n      newProps = point.pointProp ? point.pointProp : props;\n      this.point.setPosition(point.position);\n    } else {\n      this.point.setPosition(point);\n    }\n    this.point.props = newProps;\n    this.updatePointLayer();\n  }\n\n  addLastPoint(position: Cartesian3) {\n    this.point.setPosition(position);\n    this.updatePointLayer();\n  }\n\n  movePoint(toPosition: Cartesian3) {\n    if (!this.point) {\n      this.point = new EditPoint(this.id, toPosition, this._props);\n    } else {\n      this.point.setPosition(toPosition);\n    }\n    this.updatePointLayer();\n  }\n\n  getCurrentPoint(): EditPoint {\n    return this.point;\n  }\n\n  getPosition(): Cartesian3 {\n    return this.point.getPosition();\n  }\n\n  getPositionCallbackProperty(): Cartesian3 {\n    return new Cesium.CallbackProperty(this.getPosition.bind(this), false);\n  }\n\n  private updatePointLayer() {\n    this.pointLayer.update(this.point, this.point.getId());\n  }\n\n  update() {\n    this.updatePointLayer();\n  }\n\n  dispose() {\n    this.pointLayer.remove(this.point.getId());\n  }\n\n  getId() {\n    return this.id;\n  }\n}\n","import { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Injectable } from '@angular/core';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { PointEditOptions } from '../../../models/point-edit-options';\nimport { EditablePoint } from '../../../models/editable-point';\n\n@Injectable()\nexport class PointsManagerService {\n  points: Map<string, EditablePoint> = new Map<string, EditablePoint>();\n\n  createEditablePoint(id: string,\n                      editPointLayer: AcLayerComponent,\n                      coordinateConverter: CoordinateConverter,\n                      editOptions?: PointEditOptions,\n                      position?: Cartesian3) {\n    const editablePoint = new EditablePoint(\n      id,\n      editPointLayer,\n      coordinateConverter,\n      editOptions,\n      position);\n    this.points.set(id, editablePoint\n    );\n  }\n\n  enableAll() {\n    this.points.forEach(point => point.enableEdit = true);\n  }\n\n  disableAll() {\n    this.points.forEach(point => point.enableEdit = false);\n  }\n\n  dispose(id: string) {\n    const point = this.points.get(id);\n    if (point.getCurrentPoint()) {\n      point.dispose();\n    }\n    this.points.delete(id);\n  }\n\n  get(id: string): EditablePoint {\n    return this.points.get(id);\n  }\n\n  clear() {\n    this.points.forEach(point => point.dispose());\n    this.points.clear();\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { CesiumService } from '../../../angular-cesium/services/cesium/cesium.service';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { PointsEditorService } from '../../services/entity-editors/points-editor/points-editor.service';\nimport { PointsManagerService } from '../../services/entity-editors/points-editor/points-manager.service';\nimport { PointEditUpdate } from '../../models/point-edit-update';\nimport { EditablePoint } from '../../models/editable-point';\nimport { LabelProps } from '../../models/label-props';\n\n@Component({\n  selector: 'points-editor',\n  template: /*html*/ `\n    <ac-layer #editPointLayer acFor=\"let point of editPoint$\" [context]=\"this\">\n      <ac-point-desc\n        props=\"{\n        position: point.getPositionCallbackProperty(),\n        pixelSize: getPointSize(point),\n        color: point.props.color,\n        outlineColor: point.props.outlineColor,\n        outlineWidth: point.props.outlineWidth,\n        show: getPointShow(point),\n        disableDepthTestDistance: point.props.disableDepthTestDistance,\n        heightReference: point.props.heightReference,\n    }\"\n      ></ac-point-desc>\n    </ac-layer>\n\n    <ac-layer #pointLabelsLayer acFor=\"let pointLabels of pointLabels$\" [context]=\"this\">\n      <ac-array-desc acFor=\"let label of pointLabels.labels\" [idGetter]=\"getLabelId\">\n        <ac-label-primitive-desc\n          props=\"{\n            position: label.position,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            text: label.text,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin,\n            disableDepthTestDistance: label.disableDepthTestDistance,\n        }\"\n        >\n        </ac-label-primitive-desc>\n      </ac-array-desc>\n    </ac-layer>\n  `,\n  providers: [CoordinateConverter, PointsManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PointsEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: PointEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoint$ = new Subject<AcNotification>();\n  public pointLabels$ = new Subject<AcNotification>();\n\n  @ViewChild('editPointLayer') private editPointLayer: AcLayerComponent;\n  @ViewChild('pointLabelsLayer') private pointLabelsLayer: AcLayerComponent;\n\n  constructor(\n    private pointsEditor: PointsEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private pointsManager: PointsManagerService,\n    private cesiumService: CesiumService,\n  ) {\n    this.pointsEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, pointsManager, this.cesiumService);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.pointsEditor.onUpdate().subscribe((update: PointEditUpdate) => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(point: EditablePoint, update: PointEditUpdate, labels?: LabelProps[]) {\n    if (labels) {\n      point.labels = labels;\n      this.pointLabelsLayer.update(point, point.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    update.position = point.getPosition();\n    update.point = point.getCurrentPoint();\n    point.labels = this.editLabelsRenderFn(update, point.labels);\n    this.pointLabelsLayer.update(point, point.getId());\n  }\n\n  removeEditLabels(point: EditablePoint) {\n    point.labels = [];\n    this.pointLabelsLayer.remove(point.getId());\n  }\n\n  handleCreateUpdates(update: PointEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.pointsManager.createEditablePoint(\n          update.id,\n          this.editPointLayer,\n          this.coordinateConverter,\n          update.pointOptions,\n          update.position\n        );\n        break;\n      }\n      case EditActions.ADD_LAST_POINT: {\n        const point = this.pointsManager.get(update.id);\n        if (update.updatedPosition) {\n          point.addLastPoint(update.updatedPosition);\n          this.renderEditLabels(point, update);\n        }\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const point = this.pointsManager.get(update.id);\n        if (update.updatedPosition) {\n          point.movePoint(update.updatedPosition);\n          this.renderEditLabels(point, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const point = this.pointsManager.get(update.id);\n        if (point && point.getCurrentPoint()) {\n          this.removeEditLabels(point);\n        }\n        this.pointsManager.dispose(update.id);\n        this.editLabelsRenderFn = undefined;\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const point = this.pointsManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(point, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const point = this.pointsManager.get(update.id);\n        this.renderEditLabels(point, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const point = this.pointsManager.get(update.id);\n        this.renderEditLabels(point, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: PointEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.pointsManager.createEditablePoint(\n          update.id,\n          this.editPointLayer,\n          this.coordinateConverter,\n          update.pointOptions,\n          update.position,\n        );\n        break;\n      }\n      case EditActions.DRAG_POINT: {\n        const point = this.pointsManager.get(update.id);\n        if (point && point.enableEdit) {\n          point.movePoint(update.updatedPosition);\n          this.renderEditLabels(point, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH: {\n        const point = this.pointsManager.get(update.id);\n        if (point && point.enableEdit) {\n          point.movePoint(update.updatedPosition);\n          this.renderEditLabels(point, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const point = this.pointsManager.get(update.id);\n        if (point) {\n          point.enableEdit = false;\n          this.renderEditLabels(point, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const point = this.pointsManager.get(update.id);\n        if (point) {\n          point.enableEdit = true;\n          this.renderEditLabels(point, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.pointsManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { PolylineProps } from './polyline-edit-options';\n\nexport class EditPolyline extends AcEntity {\n  static counter = 0;\n  private editedEntityId: string;\n  private id: string;\n  private positions: Cartesian3[];\n  private _polylineProps: PolylineProps;\n\n  constructor(entityId: string, startPosition: Cartesian3, endPosition: Cartesian3, polylineProps?: PolylineProps) {\n    super();\n    this.editedEntityId = entityId;\n    this.id = this.generateId();\n    this.positions = [startPosition, endPosition];\n    this._polylineProps = {...polylineProps};\n  }\n\n  get props(): PolylineProps {\n    return this._polylineProps;\n  }\n\n  set props(value: PolylineProps) {\n    this._polylineProps = value;\n  }\n\n  getEditedEntityId(): string {\n    return this.editedEntityId;\n  }\n\n  getPositions(): any[] {\n    return this.positions.map(p => p.clone());\n  }\n\n\n  getPositionsCallbackProperty(): Cartesian3[] {\n    return new Cesium.CallbackProperty(this.getPositions.bind(this), false);\n  }\n\n  validatePositions(): boolean {\n    return this.positions[0] !== undefined && this.positions[1] !== undefined;\n  }\n\n  getStartPosition() {\n    return this.positions[0];\n  }\n\n  getEndPosition() {\n    return this.positions[1];\n  }\n\n  setStartPosition(position: Cartesian3) {\n    this.positions[0] = position;\n  }\n\n  setEndPosition(position: Cartesian3) {\n    this.positions[1] = position;\n  }\n\n  getId(): string {\n    return this.id;\n  }\n\n  private generateId(): string {\n    return 'edit-polyline-' + EditPolyline.counter++;\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { EditPolyline } from './edit-polyline';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { PolygonEditOptions, PolygonProps } from './polygon-edit-options';\nimport { PointProps } from './point-edit-options';\nimport { PolylineProps } from './polyline-edit-options';\nimport { defaultLabelProps, LabelProps } from './label-props';\n\nexport class EditablePolygon extends AcEntity {\n  private positions: EditPoint[] = [];\n  private polylines: EditPolyline[] = [];\n  private movingPoint: EditPoint;\n  private doneCreation = false;\n  private _enableEdit = true;\n  private _polygonProps: PolygonProps;\n  private _defaultPointProps: PointProps;\n  private _defaultPolylineProps: PolylineProps;\n  private lastDraggedToPosition: Cartesian3;\n  private _labels: LabelProps[] = [];\n\n  constructor(private id: string,\n              private polygonsLayer: AcLayerComponent,\n              private pointsLayer: AcLayerComponent,\n              private polylinesLayer: AcLayerComponent,\n              private coordinateConverter: CoordinateConverter,\n              private polygonOptions: PolygonEditOptions,\n              positions?: Cartesian3[]) {\n    super();\n    this.polygonProps = {...polygonOptions.polygonProps};\n    this.defaultPointProps = {...polygonOptions.pointProps};\n    this.defaultPolylineProps = {...polygonOptions.polylineProps};\n    if (positions && positions.length >= 3) {\n      this.createFromExisting(positions);\n    }\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels) {\n      return;\n    }\n    const positions = this.getRealPositions();\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        label.position = positions[index];\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get defaultPolylineProps(): PolylineProps {\n    return this._defaultPolylineProps;\n  }\n\n  set defaultPolylineProps(value: PolylineProps) {\n    this._defaultPolylineProps = value;\n  }\n\n  get defaultPointProps(): PointProps {\n    return this._defaultPointProps;\n  }\n\n  get polygonProps(): PolygonProps {\n    return this._polygonProps;\n  }\n\n  set polygonProps(value: PolygonProps) {\n    this._polygonProps = value;\n  }\n\n  set defaultPointProps(value: PointProps) {\n    this._defaultPointProps = value;\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this.positions.forEach(point => {\n      point.show = value;\n      this.updatePointsLayer(false, point);\n    });\n  }\n\n  private createFromExisting(positions: Cartesian3[]) {\n    positions.forEach((position) => {\n      this.addPointFromExisting(position);\n    });\n    this.addAllVirtualEditPoints();\n    this.updatePolygonsLayer();\n    this.doneCreation = true;\n  }\n\n  setPointsManually(points: { position: Cartesian3, pointProps: PointProps }[] | Cartesian3[], polygonProps?: PolygonProps) {\n    if (!this.doneCreation) {\n      throw new Error('Update manually only in edit mode, after polygon is created');\n    }\n\n    this.positions.forEach(p => this.pointsLayer.remove(p.getId()));\n    const newPoints: EditPoint[] = [];\n    for (let i = 0; i < points.length; i++) {\n      const pointOrCartesian: any = points[i];\n      let newPoint = null;\n      if (pointOrCartesian.pointProps) {\n        newPoint = new EditPoint(this.id, pointOrCartesian.position, pointOrCartesian.pointProps);\n      } else {\n        newPoint = new EditPoint(this.id, pointOrCartesian, this.defaultPointProps);\n      }\n      newPoints.push(newPoint);\n    }\n    this.positions = newPoints;\n    this.polygonProps = polygonProps ? polygonProps : this.polygonProps;\n    this.updatePointsLayer(true, ...this.positions);\n    this.addAllVirtualEditPoints();\n    this.updatePolygonsLayer();\n  }\n\n  private addAllVirtualEditPoints() {\n    const currentPoints = [...this.positions];\n    currentPoints.forEach((pos, index) => {\n      const currentPoint = pos;\n      const nextIndex = (index + 1) % (currentPoints.length);\n      const nextPoint = currentPoints[nextIndex];\n      const midPoint = this.setMiddleVirtualPoint(currentPoint, nextPoint);\n      this.updatePointsLayer(false, midPoint);\n    });\n  }\n\n  private setMiddleVirtualPoint(firstP: EditPoint, secondP: EditPoint): EditPoint {\n    const midPointCartesian3 = Cesium.Cartesian3.lerp(firstP.getPosition(), secondP.getPosition(), 0.5, new Cesium.Cartesian3());\n    const midPoint = new EditPoint(this.id, midPointCartesian3, this.defaultPointProps);\n    midPoint.setVirtualEditPoint(true);\n\n    const firstIndex = this.positions.indexOf(firstP);\n    this.positions.splice(firstIndex + 1, 0, midPoint);\n    return midPoint;\n  }\n\n  private updateMiddleVirtualPoint(virtualEditPoint: EditPoint, prevPoint: EditPoint, nextPoint: EditPoint) {\n    const midPointCartesian3 = Cesium.Cartesian3.lerp(prevPoint.getPosition(), nextPoint.getPosition(), 0.5, new Cesium.Cartesian3());\n    virtualEditPoint.setPosition(midPointCartesian3);\n  }\n\n  changeVirtualPointToRealPoint(point: EditPoint) {\n    point.setVirtualEditPoint(false); // virtual point becomes a real point\n    const pointsCount = this.positions.length;\n    const pointIndex = this.positions.indexOf(point);\n    const nextIndex = (pointIndex + 1) % (pointsCount);\n    const preIndex = ((pointIndex - 1) + pointsCount) % pointsCount;\n\n    const nextPoint = this.positions[nextIndex];\n    const prePoint = this.positions[preIndex];\n\n    const firstMidPoint = this.setMiddleVirtualPoint(prePoint, point);\n    const secMidPoint = this.setMiddleVirtualPoint(point, nextPoint);\n    this.updatePointsLayer(true, firstMidPoint, secMidPoint, point);\n    this.updatePolygonsLayer();\n\n  }\n\n  private renderPolylines() {\n    this.polylines.forEach(polyline => this.polylinesLayer.remove(polyline.getId()));\n    this.polylines = [];\n    const realPoints = this.positions.filter(pos => !pos.isVirtualEditPoint());\n    realPoints.forEach((point, index) => {\n      const nextIndex = (index + 1) % (realPoints.length);\n      const nextPoint = realPoints[nextIndex];\n      const polyline = new EditPolyline(this.id, point.getPosition(), nextPoint.getPosition(), this.defaultPolylineProps);\n      this.polylines.push(polyline);\n      this.polylinesLayer.update(polyline, polyline.getId());\n    });\n  }\n\n  addPointFromExisting(position: Cartesian3) {\n    const newPoint = new EditPoint(this.id, position, this.defaultPointProps);\n    this.positions.push(newPoint);\n    this.updatePointsLayer(true, newPoint);\n  }\n\n\n  addPoint(position: Cartesian3) {\n    if (this.doneCreation) {\n      return;\n    }\n    const isFirstPoint = !this.positions.length;\n    if (isFirstPoint) {\n      const firstPoint = new EditPoint(this.id, position, this.defaultPointProps);\n      this.positions.push(firstPoint);\n      this.updatePointsLayer(true, firstPoint);\n    }\n\n    this.movingPoint = new EditPoint(this.id, position.clone(), this.defaultPointProps);\n    this.positions.push(this.movingPoint);\n\n    this.updatePointsLayer(true, this.movingPoint);\n    this.updatePolygonsLayer();\n  }\n\n  movePointFinish(editPoint: EditPoint) {\n    if (this.polygonOptions.clampHeightTo3D) {\n      editPoint.props.disableDepthTestDistance = Number.POSITIVE_INFINITY;\n      this.updatePointsLayer(false, editPoint);\n    }\n  }\n\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\n    editPoint.setPosition(toPosition);\n    if (this.doneCreation) {\n      if (editPoint.props.disableDepthTestDistance && this.polygonOptions.clampHeightTo3D) {\n        // To avoid bug with pickPosition() on point with disableDepthTestDistance\n        editPoint.props.disableDepthTestDistance = undefined;\n        return; // ignore first move because the pickPosition() could be wrong\n      }\n\n      if (editPoint.isVirtualEditPoint()) {\n        this.changeVirtualPointToRealPoint(editPoint);\n      }\n      const pointsCount = this.positions.length;\n      const pointIndex = this.positions.indexOf(editPoint);\n      const nextVirtualPoint = this.positions[(pointIndex + 1) % (pointsCount)];\n      const nextRealPoint = this.positions[(pointIndex + 2) % (pointsCount)];\n      const prevVirtualPoint = this.positions[((pointIndex - 1) + pointsCount) % pointsCount];\n      const prevRealPoint = this.positions[((pointIndex - 2) + pointsCount) % pointsCount];\n      this.updateMiddleVirtualPoint(nextVirtualPoint, editPoint, nextRealPoint);\n      this.updateMiddleVirtualPoint(prevVirtualPoint, editPoint, prevRealPoint);\n    }\n    this.updatePolygonsLayer();\n    this.updatePointsLayer(true, editPoint);\n  }\n\n  moveTempMovingPoint(toPosition: Cartesian3) {\n    if (this.movingPoint) {\n      this.movePoint(toPosition, this.movingPoint);\n    }\n  }\n\n  movePolygon(startMovingPosition: Cartesian3, draggedToPosition: Cartesian3) {\n    if (!this.doneCreation) {\n      return;\n    }\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = startMovingPosition;\n    }\n\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, draggedToPosition);\n    this.positions.forEach(point => {\n      const newPos = GeoUtilsService.addDeltaToPosition(point.getPosition(), delta, true);\n      point.setPosition(newPos);\n    });\n    this.updatePointsLayer();\n    this.lastDraggedToPosition = draggedToPosition;\n    this.positions.forEach(point => this.updatePointsLayer(true, point));\n  }\n\n  endMovePolygon() {\n    this.lastDraggedToPosition = undefined;\n  }\n\n  removePoint(pointToRemove: EditPoint) {\n    this.removePosition(pointToRemove);\n    this.positions\n      .filter(p => p.isVirtualEditPoint())\n      .forEach(p => this.removePosition(p));\n    this.addAllVirtualEditPoints();\n\n    this.renderPolylines();\n    if (this.getPointsCount() >= 3) {\n      this.polygonsLayer.update(this, this.id);\n    }\n  }\n\n  addLastPoint(position: Cartesian3) {\n    this.doneCreation = true;\n    this.removePosition(this.movingPoint); // remove movingPoint\n    this.movingPoint = null;\n    this.updatePolygonsLayer();\n\n    this.addAllVirtualEditPoints();\n  }\n\n  getRealPositions(): Cartesian3[] {\n    return this.getRealPoints().map(position => position.getPosition());\n  }\n\n  getRealPoints(): EditPoint[] {\n    return this.positions.filter(position => !position.isVirtualEditPoint() && position !== this.movingPoint);\n  }\n\n  getPoints(): EditPoint[] {\n    return this.positions.filter(position => position !== this.movingPoint);\n  }\n\n  getPositionsHierarchy(): Cartesian3[] {\n    const positions = this.positions.filter(position => !position.isVirtualEditPoint()).map(position => position.getPosition().clone());\n    return new Cesium.PolygonHierarchy(positions);\n  }\n\n  getPositionsHierarchyCallbackProperty(): Cartesian3[] {\n    return new Cesium.CallbackProperty(this.getPositionsHierarchy.bind(this), false);\n  }\n\n  private removePosition(point: EditPoint) {\n    const index = this.positions.findIndex((p) => p === point);\n    if (index < 0) {\n      return;\n    }\n    this.positions.splice(index, 1);\n    this.pointsLayer.remove(point.getId());\n  }\n\n  private updatePolygonsLayer() {\n    if (this.getPointsCount() >= 3) {\n      this.polygonsLayer.update(this, this.id);\n    }\n  }\n\n  private updatePointsLayer(renderPolylines = true, ...points: EditPoint[]) {\n    if (renderPolylines) {\n      this.renderPolylines();\n    }\n    points.forEach(p => this.pointsLayer.update(p, p.getId()));\n  }\n\n  dispose() {\n    this.polygonsLayer.remove(this.id);\n\n    this.positions.forEach(editPoint => {\n      this.pointsLayer.remove(editPoint.getId());\n    });\n    this.polylines.forEach(line => this.polylinesLayer.remove(line.getId()));\n    if (this.movingPoint) {\n      this.pointsLayer.remove(this.movingPoint.getId());\n      this.movingPoint = undefined;\n    }\n    this.positions.length = 0;\n  }\n\n  getPointsCount(): number {\n    return this.positions.length;\n  }\n\n  getId() {\n    return this.id;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EditablePolygon } from '../../../models/editable-polygon';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { PolygonEditOptions } from '../../../models/polygon-edit-options';\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\n\n@Injectable()\nexport class PolygonsManagerService {\n  polygons: Map<string, EditablePolygon> = new Map<string, EditablePolygon>();\n\n  createEditablePolygon(id: string, editPolygonsLayer: AcLayerComponent, editPointsLayer: AcLayerComponent,\n                        editPolylinesLayer: AcLayerComponent, coordinateConverter: CoordinateConverter,\n                        polygonOptions?: PolygonEditOptions, positions?: Cartesian3[]) {\n    const editablePolygon = new EditablePolygon(\n      id,\n      editPolygonsLayer,\n      editPointsLayer,\n      editPolylinesLayer,\n      coordinateConverter,\n      polygonOptions,\n      positions);\n    this.polygons.set(id, editablePolygon\n    );\n  }\n\n  dispose(id: string) {\n    this.polygons.get(id).dispose();\n    this.polygons.delete(id);\n  }\n\n  get(id: string): EditablePolygon {\n    return this.polygons.get(id);\n  }\n\n  clear() {\n    this.polygons.forEach(polygon => polygon.dispose());\n    this.polygons.clear();\n  }\n}\n","import { publish, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { CesiumService } from '../../../../angular-cesium/services/cesium/cesium.service';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { PolygonEditUpdate } from '../../../models/polygon-edit-update';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from '../../../models/edit-point';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { PolygonsManagerService } from './polygons-manager.service';\nimport { PolygonEditorObservable } from '../../../models/polygon-editor-observable';\nimport { EditablePolygon } from '../../../models/editable-polygon';\nimport { PolygonEditOptions, PolygonProps } from '../../../models/polygon-edit-options';\nimport { ClampTo3DOptions } from '../../../models/polyline-edit-options';\nimport { PointProps } from '../../../models/point-edit-options';\nimport { LabelProps } from '../../../models/label-props';\nimport { debounce, generateKey } from '../../utils';\n\nexport const DEFAULT_POLYGON_OPTIONS: PolygonEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  addLastPointEvent: CesiumEvent.LEFT_DOUBLE_CLICK,\n  removePointEvent: CesiumEvent.RIGHT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  allowDrag: true,\n  pointProps: {\n    color: Cesium.Color.WHITE.withAlpha(0.95),\n    outlineColor: Cesium.Color.BLACK.withAlpha(0.2),\n    outlineWidth: 1,\n    pixelSize: 13,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\n  },\n  polygonProps: {\n    material: Cesium.Color.CORNFLOWERBLUE.withAlpha(0.4),\n    fill: true,\n    classificationType: Cesium.ClassificationType.BOTH,\n    zIndex: 0,\n  },\n  polylineProps: {\n    material: () => Cesium.Color.WHITE,\n    width: 3,\n    clampToGround: false,\n    zIndex: 0,\n    classificationType: Cesium.ClassificationType.BOTH,\n  },\n  clampHeightTo3D: false,\n  clampHeightTo3DOptions: {\n    clampToTerrain: false,\n    clampMostDetailed: true,\n    clampToHeightPickWidth: 2,\n  },\n};\n\n/**\n * Service for creating editable polygons\n *\n * You must provide `PolygonsEditorService` yourself.\n * PolygonsEditorService works together with `<polygons-editor>` component. Therefor you need to create `<polygons-editor>`\n * for each `PolygonsEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `PolygonEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `PolygonEditorObservable`.\n * + To stop editing call `dsipose()` from the `PolygonEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over editted shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `PolygonEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n * usage:\n * ```typescript\n *  // Start creating polygon\n *  const editing$ = polygonsEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit polygon from existing polygon positions\n *  const editing$ = this.polygonsEditorService.edit(initialPos);\n *\n * ```\n */\n@Injectable()\nexport class PolygonsEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<PolygonEditUpdate>();\n  private updatePublisher = publish<PolygonEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private polygonsManager: PolygonsManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n  private cesiumScene: any;\n\n  private clampPointsDebounced = debounce((id, clampHeightTo3D: boolean, clampHeightTo3DOptions) => {\n    this.clampPoints(id, clampHeightTo3D, clampHeightTo3DOptions);\n  }, 300);\n\n  init(mapEventsManager: MapEventsManagerService,\n       coordinateConverter: CoordinateConverter,\n       cameraService: CameraService,\n       polygonsManager: PolygonsManagerService,\n       cesiumViewer: CesiumService,\n  ) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.polygonsManager = polygonsManager;\n    this.updatePublisher.connect();\n\n    this.cesiumScene = cesiumViewer.getScene();\n  }\n\n  onUpdate(): Observable<PolygonEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  private clampPoints(id, clampHeightTo3D: boolean, { clampToTerrain, clampMostDetailed, clampToHeightPickWidth }: ClampTo3DOptions) {\n    if (clampHeightTo3D && clampMostDetailed) {\n      const polygon = this.polygonsManager.get(id);\n      const points = polygon.getPoints();\n\n      if (!clampToTerrain) {\n        // 3dTiles\n        points.forEach(point => {\n          point.setPosition(this.cesiumScene.clampToHeight(point.getPosition(), undefined, clampToHeightPickWidth));\n        });\n        // const cartesians = points.map(point => point.getPosition());\n        // const promise = this.cesiumScene.clampToHeightMostDetailed(cartesians, undefined, clampToHeightPickWidth);\n        // promise.then((updatedCartesians) => {\n        //   points.forEach((point, index) => {\n        //     point.setPosition(updatedCartesians[index]);\n        //   });\n        // });\n      } else {\n        const cartographics = points.map(point => this.coordinateConverter.cartesian3ToCartographic(point.getPosition()));\n        const promise = Cesium.sampleTerrain(this.cesiumScene.terrainProvider, 11, cartographics);\n        Cesium.when(promise, (updatedPositions) => {\n          points.forEach((point, index) => {\n            point.setPosition(Cesium.Cartographic.toCartesian(updatedPositions[index]));\n          });\n        });\n      }\n    }\n  }\n\n  private screenToPosition(cartesian2, clampHeightTo3D: boolean, { clampToHeightPickWidth, clampToTerrain }: ClampTo3DOptions) {\n    const cartesian3 = this.coordinateConverter.screenToCartesian3(cartesian2);\n\n    // If cartesian3 is undefined then the point inst on the globe\n    if (clampHeightTo3D && cartesian3) {\n      const globePositionPick = () => {\n        const ray = this.cameraService.getCamera().getPickRay(cartesian2);\n        return this.cesiumScene.globe.pick(ray, this.cesiumScene);\n      };\n\n      // is terrain?\n      if (clampToTerrain) {\n        return globePositionPick();\n      } else {\n        const cartesian3PickPosition = this.cesiumScene.pickPosition(cartesian2);\n        const latLon = CoordinateConverter.cartesian3ToLatLon(cartesian3PickPosition);\n        if (latLon.height < 0) {// means nothing picked -> Validate it\n          return globePositionPick();\n        }\n        return this.cesiumScene.clampToHeight(cartesian3PickPosition, undefined, clampToHeightPickWidth);\n      }\n    }\n\n    return cartesian3;\n  }\n\n  create(options = DEFAULT_POLYGON_OPTIONS, priority = 100): PolygonEditorObservable {\n    const positions: Cartesian3[] = [];\n    const id = generateKey();\n    const polygonOptions = this.setOptions(options);\n\n    const clientEditSubject = new BehaviorSubject<PolygonEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      positions,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      polygonOptions: polygonOptions,\n    });\n\n    const finishCreation = (position: Cartesian3) => {\n      return this.switchToEditMode(\n        id,\n        position,\n        clientEditSubject,\n        positions,\n        priority,\n        polygonOptions,\n        editorObservable,\n        finishedCreate);\n    };\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      pickConfig: options.pickConfiguration,\n      priority,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: polygonOptions.addPointEvent,\n      modifier: polygonOptions.addPointModifier,\n      pick: PickOptions.NO_PICK,\n      pickConfig: options.pickConfiguration,\n      priority,\n    });\n    const addLastPointRegistration = this.mapEventsManager.register({\n      event: polygonOptions.addLastPointEvent,\n      modifier: polygonOptions.addLastPointModifier,\n      pick: PickOptions.NO_PICK,\n      pickConfig: options.pickConfiguration,\n      priority,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration, addLastPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id, finishCreation);\n\n    mouseMoveRegistration.subscribe(({ movement: { endPosition } }) => {\n      const position = this.screenToPosition(endPosition, polygonOptions.clampHeightTo3D, polygonOptions.clampHeightTo3DOptions);\n\n      if (position) {\n        this.updateSubject.next({\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.CREATE,\n          updatedPosition: position,\n          editAction: EditActions.MOUSE_MOVE,\n        });\n      }\n    });\n\n    addPointRegistration.subscribe(({ movement: { endPosition } }) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.screenToPosition(endPosition, polygonOptions.clampHeightTo3D, polygonOptions.clampHeightTo3DOptions);\n      if (!position) {\n        return;\n      }\n      const allPositions = this.getPositions(id);\n      if (allPositions.find((cartesian) => cartesian.equals(position))) {\n        return;\n      }\n\n      const updateValue = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.CREATE,\n        updatedPosition: position,\n        editAction: EditActions.ADD_POINT,\n      };\n      this.updateSubject.next(updateValue);\n      clientEditSubject.next({\n        ...updateValue,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n      });\n\n      if (polygonOptions.maximumNumberOfPoints && allPositions.length + 1 === polygonOptions.maximumNumberOfPoints) {\n        finishedCreate = finishCreation(position);\n      }\n    });\n\n\n    addLastPointRegistration.subscribe(({ movement: { endPosition } }) => {\n      const position = this.screenToPosition(endPosition, polygonOptions.clampHeightTo3D, polygonOptions.clampHeightTo3DOptions);\n      if (!position) {\n        return;\n      }\n\n      // Add last point to positions if not already added\n      const allPositions = this.getPositions(id);\n      if (!allPositions.find((cartesian) => cartesian.equals(position))) {\n        const updateValue = {\n          id,\n          positions: allPositions,\n          editMode: EditModes.CREATE,\n          updatedPosition: position,\n          editAction: EditActions.ADD_POINT,\n        };\n        this.updateSubject.next(updateValue);\n        clientEditSubject.next({\n          ...updateValue,\n          positions: this.getPositions(id),\n          points: this.getPoints(id),\n        });\n      }\n\n      finishedCreate = finishCreation(position);\n    });\n\n    return editorObservable;\n  }\n\n  private switchToEditMode(id,\n                           position,\n                           clientEditSubject,\n                           positions: Cartesian3[],\n                           priority,\n                           polygonOptions,\n                           editorObservable,\n                           finishedCreate: boolean) {\n    const updateValue = {\n      id,\n      positions: this.getPositions(id),\n      editMode: EditModes.CREATE,\n      updatedPosition: position,\n      editAction: EditActions.ADD_LAST_POINT,\n    };\n    this.updateSubject.next(updateValue);\n    clientEditSubject.next({\n      ...updateValue,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n    });\n\n    const changeMode = {\n      id,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.CHANGE_TO_EDIT,\n    };\n    this.updateSubject.next(changeMode);\n    clientEditSubject.next(changeMode);\n    if (this.observablesMap.has(id)) {\n      this.observablesMap.get(id).forEach(registration => registration.dispose());\n    }\n    this.observablesMap.delete(id);\n    this.editPolygon(id, positions, priority, clientEditSubject, polygonOptions, editorObservable);\n    finishedCreate = true;\n    return finishedCreate;\n  }\n\n  edit(positions: Cartesian3[], options = DEFAULT_POLYGON_OPTIONS, priority = 100): PolygonEditorObservable {\n    if (positions.length < 3) {\n      throw new Error('Polygons editor error edit(): polygon should have at least 3 positions');\n    }\n    const id = generateKey();\n    const polygonOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<PolygonEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT\n    });\n    const update = {\n      id,\n      positions: positions,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      polygonOptions: polygonOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n    });\n    return this.editPolygon(\n      id,\n      positions,\n      priority,\n      editSubject,\n      polygonOptions\n    );\n  }\n\n  private editPolygon(id: string,\n                      positions: Cartesian3[],\n                      priority: number,\n                      editSubject: Subject<PolygonEditUpdate>,\n                      options: PolygonEditOptions,\n                      editObservable?: PolygonEditorObservable): PolygonEditorObservable {\n    this.clampPoints(id, options.clampHeightTo3D, options.clampHeightTo3DOptions);\n\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: options.dragPointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      pickConfig: options.pickConfiguration,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: options.dragShapeEvent,\n        entityType: EditablePolygon,\n        pick: PickOptions.PICK_FIRST,\n        pickConfig: options.pickConfiguration,\n        priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n    const pointRemoveRegistration = this.mapEventsManager.register({\n      event: options.removePointEvent,\n      entityType: EditPoint,\n      modifier: options.removePointModifier,\n      pick: PickOptions.PICK_FIRST,\n      pickConfig: options.pickConfiguration,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    pointDragRegistration.pipe(\n      tap(({ movement: { drop } }) => this.polygonsManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\n      .subscribe(({ movement: { endPosition, drop }, entities }) => {\n        const position = this.screenToPosition(endPosition, options.clampHeightTo3D, options.clampHeightTo3DOptions);\n        if (!position) {\n          return;\n        }\n        const point: EditPoint = entities[0];\n\n        const update = {\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.EDIT,\n          updatedPosition: position,\n          updatedPoint: point,\n          editAction: drop ? EditActions.DRAG_POINT_FINISH : EditActions.DRAG_POINT,\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n          positions: this.getPositions(id),\n          points: this.getPoints(id),\n        });\n\n        this.clampPointsDebounced(id, options.clampHeightTo3D, options.clampHeightTo3DOptions);\n      });\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({ movement: { drop } }) => this.polygonsManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\n        .subscribe(({ movement: { startPosition, endPosition, drop }, entities }) => {\n          const endDragPosition = this.screenToPosition(endPosition, false, options.clampHeightTo3DOptions);\n          const startDragPosition = this.screenToPosition(startPosition, false, options.clampHeightTo3DOptions);\n          if (!endDragPosition) {\n            return;\n          }\n\n          const update = {\n            id,\n            positions: this.getPositions(id),\n            editMode: EditModes.EDIT,\n            updatedPosition: endDragPosition,\n            draggedPosition: startDragPosition,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n            positions: this.getPositions(id),\n            points: this.getPoints(id),\n          });\n        });\n    }\n\n    pointRemoveRegistration.subscribe(({ entities }) => {\n      const point: EditPoint = entities[0];\n      const allPositions = [...this.getPositions(id)];\n      if (allPositions.length < 4) {\n        return;\n      }\n      const index = allPositions.findIndex(position => point.getPosition().equals(position as Cartesian3));\n      if (index < 0) {\n        return;\n      }\n\n      const update = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.EDIT,\n        updatedPoint: point,\n        editAction: EditActions.REMOVE_POINT,\n      };\n      this.updateSubject.next(update);\n      editSubject.next({\n        ...update,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n      });\n\n      this.clampPoints(id, options.clampHeightTo3D, options.clampHeightTo3DOptions);\n    });\n\n    const observables = [pointDragRegistration, pointRemoveRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n\n    this.observablesMap.set(id, observables);\n    return editObservable || this.createEditorObservable(editSubject, id);\n  }\n\n  private setOptions(options: PolygonEditOptions) {\n    if (options.maximumNumberOfPoints && options.maximumNumberOfPoints < 3) {\n      console.warn('Warn: PolygonEditor invalid option.' +\n        ' maximumNumberOfPoints smaller then 3, maximumNumberOfPoints changed to 3');\n      options.maximumNumberOfPoints = 3;\n    }\n\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_POLYGON_OPTIONS));\n    const polygonOptions: PolygonEditOptions = Object.assign(defaultClone, options);\n    polygonOptions.pointProps = { ...DEFAULT_POLYGON_OPTIONS.pointProps, ...options.pointProps};\n    polygonOptions.polygonProps = {...DEFAULT_POLYGON_OPTIONS.polygonProps, ...options.polygonProps};\n    polygonOptions.polylineProps = {...DEFAULT_POLYGON_OPTIONS.polylineProps, ...options.polylineProps};\n    polygonOptions.clampHeightTo3DOptions = { ...DEFAULT_POLYGON_OPTIONS.clampHeightTo3DOptions, ...options.clampHeightTo3DOptions};\n\n    if (options.clampHeightTo3D) {\n      if (!this.cesiumScene.pickPositionSupported || !this.cesiumScene.clampToHeightSupported) {\n        throw new Error(`Cesium pickPosition and clampToHeight must be supported to use clampHeightTo3D`);\n      }\n\n      if (this.cesiumScene.pickTranslucentDepth) {\n        console.warn(`Cesium scene.pickTranslucentDepth must be false in order to make the editors work properly on 3D`);\n      }\n\n      if (polygonOptions.pointProps.color.alpha === 1 || polygonOptions.pointProps.outlineColor.alpha === 1) {\n        console.warn('Point color and outline color must have alpha in order to make the editor work properly on 3D');\n      }\n\n      polygonOptions.allowDrag = false;\n      polygonOptions.polylineProps.clampToGround = true;\n      polygonOptions.pointProps.heightReference = polygonOptions.clampHeightTo3DOptions.clampToTerrain ?\n        Cesium.HeightReference.CLAMP_TO_GROUND : Cesium.HeightReference.RELATIVE_TO_GROUND;\n      polygonOptions.pointProps.disableDepthTestDistance = Number.POSITIVE_INFINITY;\n    }\n    return polygonOptions;\n  }\n\n\n  private createEditorObservable(observableToExtend: any, id: string, finishCreation?: (position: Cartesian3) => boolean)\n                                                                                                        : PolygonEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      });\n    };\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n      });\n    };\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n      });\n    };\n    observableToExtend.setManually = (points: {\n      position: Cartesian3, pointProps: PointProps\n    }[] | Cartesian3[], polygonProps?: PolygonProps) => {\n      const polygon = this.polygonsManager.get(id);\n      polygon.setPointsManually(points, polygonProps);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: any) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      });\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      });\n    };\n\n    observableToExtend.finishCreation = () => {\n      if (!finishCreation) {\n        throw new Error('Polygons editor error edit(): cannot call finishCreation() on edit');\n      }\n\n      return finishCreation(null);\n    };\n\n    observableToExtend.getCurrentPoints = () => this.getPoints(id);\n\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n\n    observableToExtend.getLabels = (): LabelProps[] => this.polygonsManager.get(id).labels;\n\n    return observableToExtend as PolygonEditorObservable;\n  }\n\n  private getPositions(id: string) {\n    const polygon = this.polygonsManager.get(id);\n    return polygon.getRealPositions();\n  }\n\n  private getPoints(id: string) {\n    const polygon = this.polygonsManager.get(id);\n    return polygon.getRealPoints();\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { CesiumService } from '../../../angular-cesium/services/cesium/cesium.service';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { PolygonEditUpdate } from '../../models/polygon-edit-update';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { PolygonsManagerService } from '../../services/entity-editors/polygons-editor/polygons-manager.service';\nimport { PolygonsEditorService } from '../../services/entity-editors/polygons-editor/polygons-editor.service';\nimport { LabelProps } from '../../models/label-props';\nimport { EditablePolygon } from '../../models/editable-polygon';\n\n@Component({\n  selector: 'polygons-editor',\n  template: /*html*/ `\n    <ac-layer #editPolylinesLayer acFor=\"let polyline of editPolylines$\" [context]=\"this\">\n      <ac-polyline-desc\n        props=\"{\n        positions: polyline.getPositionsCallbackProperty(),\n        width: polyline.props.width,\n        material: polyline.props.material(),\n        clampToGround: polyline.props.clampToGround,\n        zIndex: polyline.props.zIndex,\n        classificationType: polyline.props.classificationType,\n      }\"\n      >\n      </ac-polyline-desc>\n    </ac-layer>\n\n    <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n      <ac-point-desc\n        props=\"{\n        position: point.getPositionCallbackProperty(),\n        pixelSize: getPointSize(point),\n        color: point.props.color,\n        outlineColor: point.props.outlineColor,\n        outlineWidth: point.props.outlineWidth,\n        show: getPointShow(point),\n        disableDepthTestDistance: point.props.disableDepthTestDistance,\n        heightReference: point.props.heightReference,\n    }\"\n      >\n      </ac-point-desc>\n    </ac-layer>\n\n    <ac-layer #editPolygonsLayer acFor=\"let polygon of editPolygons$\" [context]=\"this\">\n      <ac-polygon-desc\n        props=\"{\n          hierarchy: polygon.getPositionsHierarchyCallbackProperty(),\n          material: polygon.polygonProps.material,\n          fill: polygon.polygonProps.fill,\n          classificationType: polygon.polygonProps.classificationType,\n          zIndex: polygon.polygonProps.zIndex,\n        }\"\n      >\n      </ac-polygon-desc>\n      <ac-array-desc acFor=\"let label of polygon.labels\" [idGetter]=\"getLabelId\">\n        <ac-label-primitive-desc\n          props=\"{\n            position: label.position,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            text: label.text,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin,\n            disableDepthTestDistance: label.disableDepthTestDistance,\n        }\"\n        >\n        </ac-label-primitive-desc>\n      </ac-array-desc>\n    </ac-layer>\n  `,\n  providers: [CoordinateConverter, PolygonsManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PolygonsEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: PolygonEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editPolylines$ = new Subject<AcNotification>();\n  public editPolygons$ = new Subject<AcNotification>();\n\n  @ViewChild('editPolygonsLayer') private editPolygonsLayer: AcLayerComponent;\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\n  @ViewChild('editPolylinesLayer') private editPolylinesLayer: AcLayerComponent;\n\n  constructor(\n    private polygonsEditor: PolygonsEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private polygonsManager: PolygonsManagerService,\n    private cesiumService: CesiumService\n  ) {\n    this.polygonsEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, this.polygonsManager, this.cesiumService);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.polygonsEditor.onUpdate().subscribe((update: PolygonEditUpdate) => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(polygon: EditablePolygon, update: PolygonEditUpdate, labels?: LabelProps[]) {\n    update.positions = polygon.getRealPositions();\n    update.points = polygon.getRealPoints();\n\n    if (labels) {\n      polygon.labels = labels;\n      this.editPolygonsLayer.update(polygon, polygon.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    polygon.labels = this.editLabelsRenderFn(update, polygon.labels);\n    this.editPolygonsLayer.update(polygon, polygon.getId());\n  }\n\n  removeEditLabels(polygon: EditablePolygon) {\n    polygon.labels = [];\n    this.editPolygonsLayer.update(polygon, polygon.getId());\n  }\n\n  handleCreateUpdates(update: PolygonEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.polygonsManager.createEditablePolygon(\n          update.id,\n          this.editPolygonsLayer,\n          this.editPointsLayer,\n          this.editPolylinesLayer,\n          this.coordinateConverter,\n          update.polygonOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (update.updatedPosition) {\n          polygon.moveTempMovingPoint(update.updatedPosition);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (update.updatedPosition) {\n          polygon.moveTempMovingPoint(update.updatedPosition);\n          polygon.addPoint(update.updatedPosition);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.ADD_LAST_POINT: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (update.updatedPosition) {\n          polygon.addLastPoint(update.updatedPosition);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon) {\n          polygon.dispose();\n          this.removeEditLabels(polygon);\n          this.editLabelsRenderFn = undefined;\n        }\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const polygon = this.polygonsManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(polygon, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const polygon = this.polygonsManager.get(update.id);\n        this.renderEditLabels(polygon, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const polygon = this.polygonsManager.get(update.id);\n        this.renderEditLabels(polygon, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: PolygonEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.polygonsManager.createEditablePolygon(\n          update.id,\n          this.editPolygonsLayer,\n          this.editPointsLayer,\n          this.editPolylinesLayer,\n          this.coordinateConverter,\n          update.polygonOptions,\n          update.positions,\n        );\n        break;\n      }\n      case EditActions.DRAG_POINT: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon && polygon.enableEdit) {\n          polygon.movePoint(update.updatedPosition, update.updatedPoint);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon && polygon.enableEdit) {\n          polygon.movePointFinish(update.updatedPoint);\n\n          if (update.updatedPoint.isVirtualEditPoint()) {\n            polygon.changeVirtualPointToRealPoint(update.updatedPoint);\n            this.renderEditLabels(polygon, update);\n          }\n        }\n        break;\n      }\n      case EditActions.REMOVE_POINT: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon && polygon.enableEdit) {\n          polygon.removePoint(update.updatedPoint);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon) {\n          polygon.enableEdit = false;\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon && polygon.enableEdit) {\n          polygon.movePolygon(update.draggedPosition, update.updatedPosition);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon && polygon.enableEdit) {\n          polygon.endMovePolygon();\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon) {\n          polygon.enableEdit = true;\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.polygonsManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { PolylineProps } from './polyline-edit-options';\n\nexport class EditArc extends AcEntity {\n  static counter = 0;\n  private id: string;\n  private editedEntityId: string;\n  private _center: Cartesian3;\n  private _radius: number;\n  private _delta: number;\n  private _angle: number;\n\n  constructor(entityId: string, center: Cartesian3, radius: number, delta: number, angle: number, private _arcProps: PolylineProps) {\n    super();\n    this.id = this.generateId();\n    this.editedEntityId = entityId;\n    this._center = center;\n    this._radius = radius;\n    this._delta = delta;\n    this._angle = angle;\n  }\n\n  get props() {\n    return this._arcProps;\n  }\n\n  set props(props: PolylineProps) {\n    this._arcProps = props;\n  }\n\n  get angle(): number {\n    return this._angle;\n  }\n\n  set angle(value: number) {\n    this._angle = value;\n  }\n\n  get delta(): number {\n    return this._delta;\n  }\n\n  set delta(value: number) {\n    this._delta = value;\n  }\n\n  get radius(): number {\n    return this._radius;\n  }\n\n  set radius(value: number) {\n    this._radius = value;\n  }\n\n  get center(): Cartesian3 {\n    return this._center;\n  }\n\n  set center(value: Cartesian3) {\n    this._center = value;\n  }\n\n  updateCenter(center: Cartesian3) {\n    this._center.x = center.x;\n    this._center.y = center.y;\n    this._center.z = center.z;\n  }\n\n  getId(): string {\n    return this.id;\n  }\n\n  private generateId(): string {\n    return 'edit-arc-' + EditArc.counter++;\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { EditArc } from './edit-arc';\nimport { CircleEditOptions } from './circle-edit-options';\nimport { PointProps } from './point-edit-options';\nimport { PolylineProps } from './polyline-edit-options';\nimport { defaultLabelProps, LabelProps } from './label-props';\nimport { EllipseProps } from './ellipse-edit-options';\n\nexport class EditableCircle extends AcEntity {\n  private _center: EditPoint;\n  private _radiusPoint: EditPoint;\n  private _outlineArc: EditArc;\n  private doneCreation = false;\n  private _enableEdit = true;\n  private lastDraggedToPosition: any;\n  private _circleProps: EllipseProps;\n  private _pointProps: PointProps;\n  private _polylineProps: PolylineProps;\n  private _labels: LabelProps[] = [];\n\n  constructor(\n    private id: string,\n    private circlesLayer: AcLayerComponent,\n    private pointsLayer: AcLayerComponent,\n    private arcsLayer: AcLayerComponent,\n    private options: CircleEditOptions,\n  ) {\n    super();\n    this._circleProps = {...options.circleProps};\n    this._pointProps = {...options.pointProps};\n    this._polylineProps = {...options.polylineProps};\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels || !this._center || !this._radiusPoint) {\n      return;\n    }\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        if (index !== labels.length - 1) {\n          label.position = this._center.getPosition();\n        } else {\n          label.position = this._radiusPoint.getPosition();\n        }\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get polylineProps(): PolylineProps {\n    return this._polylineProps;\n  }\n\n  set polylineProps(value: PolylineProps) {\n    this._polylineProps = value;\n  }\n\n  get pointProps(): PointProps {\n    return this._pointProps;\n  }\n\n  set pointProps(value: PointProps) {\n    this._pointProps = value;\n  }\n\n  get circleProps(): EllipseProps {\n    return this._circleProps;\n  }\n\n  set circleProps(value: EllipseProps) {\n    this._circleProps = value;\n  }\n\n  get center(): EditPoint {\n    return this._center;\n  }\n\n  get radiusPoint(): EditPoint {\n    return this._radiusPoint;\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this._center.show = value;\n    this._radiusPoint.show = value;\n    this.updatePointsLayer();\n  }\n\n  setManually(\n    center: Cartesian3,\n    radiusPoint: Cartesian3,\n    centerPointProp = this.pointProps,\n    radiusPointProp = this.pointProps,\n    circleProp = this.circleProps,\n  ) {\n    if (!this._center) {\n      this._center = new EditPoint(this.id, center, centerPointProp);\n    } else {\n      this._center.setPosition(center);\n    }\n\n    if (!this._radiusPoint) {\n      this._radiusPoint = new EditPoint(this.id, radiusPoint, radiusPointProp);\n    } else {\n      this._radiusPoint.setPosition(radiusPoint);\n    }\n\n    if (!this._outlineArc) {\n      this.createOutlineArc();\n    } else {\n      this._outlineArc.radius = this.getRadius();\n    }\n\n    this.circleProps = circleProp;\n    this.doneCreation = true;\n    this.updateArcsLayer();\n    this.updatePointsLayer();\n    this.updateCirclesLayer();\n  }\n\n  addPoint(position: Cartesian3) {\n    if (this.doneCreation) {\n      return;\n    }\n\n    if (!this._center) {\n      this._center = new EditPoint(this.id, position, this.pointProps);\n      this._radiusPoint = new EditPoint(this.id, position.clone(), this.pointProps);\n      if (!this._outlineArc) {\n        this.createOutlineArc();\n      }\n    }\n\n    this.updateArcsLayer();\n    this.updatePointsLayer();\n    this.updateCirclesLayer();\n  }\n\n  addLastPoint(position: Cartesian3) {\n    if (this.doneCreation || !this._center || !this._radiusPoint) {\n      return;\n    }\n\n    this._radiusPoint.setPosition(position);\n    this.doneCreation = true;\n\n    this.updatePointsLayer();\n    this.updateCirclesLayer();\n  }\n\n  movePoint(toPosition: Cartesian3) {\n    if (!this._center || !this._radiusPoint) {\n      return;\n    }\n\n    this._radiusPoint.setPosition(toPosition);\n    this._outlineArc.radius = this.getRadius();\n\n    this.updateArcsLayer();\n    this.updatePointsLayer();\n    this.updateCirclesLayer();\n  }\n\n  moveCircle(dragStartPosition: Cartesian3, dragEndPosition: Cartesian3) {\n    if (!this.doneCreation) {\n      return;\n    }\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = dragStartPosition;\n    }\n\n    const radius = this.getRadius();\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, dragEndPosition);\n    const newCenterPosition = GeoUtilsService.addDeltaToPosition(this.getCenter(), delta, true);\n    this._center.setPosition(newCenterPosition);\n    this.radiusPoint.setPosition(GeoUtilsService.pointByLocationDistanceAndAzimuth(this.getCenter(), radius, Math.PI / 2, true));\n    this._outlineArc.radius = this.getRadius();\n    this._outlineArc.center = this._center.getPosition();\n    this.updateArcsLayer();\n    this.updatePointsLayer();\n    this.updateCirclesLayer();\n    this.lastDraggedToPosition = dragEndPosition;\n  }\n\n  endMovePolygon() {\n    this.lastDraggedToPosition = undefined;\n  }\n\n  getRadius(): number {\n    if (!this._center || !this._radiusPoint) {\n      return 0;\n    }\n    return GeoUtilsService.distance(this._center.getPosition(), this._radiusPoint.getPosition());\n  }\n\n  getRadiusCallbackProperty() {\n    return new Cesium.CallbackProperty(this.getRadius.bind(this), false);\n  }\n\n  getCenter(): Cartesian3 {\n    return this._center ? this._center.getPosition() : undefined;\n  }\n\n  getCenterCallbackProperty() {\n    return new Cesium.CallbackProperty(this.getCenter.bind(this), false);\n  }\n\n  getRadiusPoint(): Cartesian3 {\n    return this._radiusPoint ? this._radiusPoint.getPosition() : undefined;\n  }\n\n  dispose() {\n    if (this._center) {\n      this.pointsLayer.remove(this._center.getId());\n    }\n\n    if (this._radiusPoint) {\n      this.pointsLayer.remove(this._radiusPoint.getId());\n    }\n\n    if (this._outlineArc) {\n      this.arcsLayer.remove(this._outlineArc.getId());\n    }\n\n    this.circlesLayer.remove(this.id);\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  private updateCirclesLayer() {\n    this.circlesLayer.update(this, this.id);\n  }\n\n  private updatePointsLayer() {\n    if (this._center) {\n      this.pointsLayer.update(this._center, this._center.getId());\n    }\n    if (this._radiusPoint) {\n      this.pointsLayer.update(this._radiusPoint, this._radiusPoint.getId());\n    }\n  }\n\n  private updateArcsLayer() {\n    if (!this._outlineArc) {\n      return;\n    }\n    this.arcsLayer.update(this._outlineArc, this._outlineArc.getId());\n  }\n\n  private createOutlineArc() {\n    if (!this._center || !this._radiusPoint) {\n      return;\n    }\n    this._outlineArc = new EditArc(this.id, this.getCenter(), this.getRadius(), Math.PI * 2, 0, this.polylineProps);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EditableCircle } from '../../../models/editable-circle';\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CircleEditOptions } from '../../../models/circle-edit-options';\n\n@Injectable()\nexport class CirclesManagerService {\n  private circles = new Map<string, EditableCircle>();\n\n  createEditableCircle(id: string,\n                       editCirclesLayer: AcLayerComponent,\n                       editPointsLayer: AcLayerComponent,\n                       editArcsLayer: AcLayerComponent,\n                       circleOptions: CircleEditOptions): EditableCircle {\n    const editableCircle = new EditableCircle(id, editCirclesLayer, editPointsLayer, editArcsLayer, circleOptions);\n    this.circles.set(id, editableCircle);\n    return editableCircle;\n  }\n\n  dispose(id: string) {\n    const circle = this.circles.get(id);\n    if (circle) {\n      circle.dispose();\n    }\n    this.circles.delete(id);\n  }\n\n  get(id: string): EditableCircle {\n    return this.circles.get(id);\n  }\n\n  clear() {\n    this.circles.forEach(circle => circle.dispose());\n    this.circles.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { publish, tap } from 'rxjs/operators';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { GeoUtilsService } from '../../../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BasicEditUpdate } from '../../../models/basic-edit-update';\nimport { CircleEditOptions } from '../../../models/circle-edit-options';\nimport { CircleEditUpdate } from '../../../models/circle-edit-update';\nimport { CircleEditorObservable } from '../../../models/circle-editor-observable';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditPoint } from '../../../models/edit-point';\nimport { EditableCircle } from '../../../models/editable-circle';\nimport { EllipseProps } from '../../../models/ellipse-edit-options';\nimport { LabelProps } from '../../../models/label-props';\nimport { PointProps } from '../../../models/point-edit-options';\nimport { generateKey } from '../../utils';\nimport { CirclesManagerService } from './circles-manager.service';\n\nexport const DEFAULT_CIRCLE_OPTIONS: CircleEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  allowDrag: true,\n  circleProps: {\n    material: Cesium.Color.CORNFLOWERBLUE.withAlpha(0.4),\n    fill: true,\n    outline: false,\n    outlineWidth: 1,\n    outlineColor: Cesium.Color.WHITE.withAlpha(0.8),\n    classificationType: Cesium.ClassificationType.BOTH,\n    zIndex: 0,\n    shadows: Cesium.ShadowMode.DISABLED,\n  },\n  pointProps: {\n    color: Cesium.Color.WHITE,\n    outlineColor: Cesium.Color.BLACK.withAlpha(0.2),\n    outlineWidth: 1,\n    pixelSize: 13,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\n  },\n  polylineProps: {\n    width: 1,\n    material: () => Cesium.Color.WHITE.withAlpha(0.8),\n  },\n};\n\n/**\n * Service for creating editable circles\n *\n * You must provide `CircleEditorService` yourself.\n * PolygonsEditorService works together with `<circle-editor>` component. Therefor you need to create `<circle-editor>`\n * for each `CircleEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `CircleEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `CircleEditorObservable`.\n * + To stop editing call `dsipose()` from the `CircleEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over editted shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `CircleEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n * usage:\n * ```typescript\n *  // Start creating circle\n *  const editing$ = circlesEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit circle from existing center point and radius\n *  const editing$ = this.circlesEditorService.edit(center, radius);\n *\n * ```\n */\n@Injectable()\nexport class CirclesEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<CircleEditUpdate>();\n  private updatePublisher = publish<CircleEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private circlesManager: CirclesManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n\n  init(\n    mapEventsManager: MapEventsManagerService,\n    coordinateConverter: CoordinateConverter,\n    cameraService: CameraService,\n    circlesManager: CirclesManagerService,\n  ) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.circlesManager = circlesManager;\n    this.updatePublisher.connect();\n  }\n\n  onUpdate(): Observable<CircleEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  create(options = DEFAULT_CIRCLE_OPTIONS, priority = 100): CircleEditorObservable {\n    let center: any;\n    const id = generateKey();\n    const circleOptions = this.setOptions(options);\n    const clientEditSubject = new BehaviorSubject<CircleEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE,\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      circleOptions,\n    });\n\n    const finishCreation = (position: Cartesian3) => {\n      const update = {\n        id,\n        center,\n        radiusPoint: position,\n        editMode: EditModes.CREATE,\n        editAction: EditActions.ADD_LAST_POINT,\n      };\n      this.updateSubject.next(update);\n      clientEditSubject.next({\n        ...update,\n        ...this.getCircleProperties(id),\n      });\n\n      const changeMode = {\n        id,\n        center,\n        radiusPoint: position,\n        editMode: EditModes.CREATE,\n        editAction: EditActions.CHANGE_TO_EDIT,\n      };\n\n      this.updateSubject.next(changeMode);\n      clientEditSubject.next({\n        ...update,\n        ...this.getCircleProperties(id),\n      });\n      if (this.observablesMap.has(id)) {\n        this.observablesMap.get(id).forEach(registration => registration.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.editCircle(id, priority, clientEditSubject, circleOptions, editorObservable);\n      finishedCreate = true;\n      return finishedCreate;\n    };\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      pickConfig: options.pickConfiguration,\n      priority,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.LEFT_CLICK,\n      pick: PickOptions.NO_PICK,\n      pickConfig: options.pickConfiguration,\n      priority,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id, finishCreation);\n\n    addPointRegistration.subscribe(({ movement: { endPosition } }) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (!position) {\n        return;\n      }\n\n      if (!center) {\n        const update = {\n          id,\n          center: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.ADD_POINT,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n          ...this.getCircleProperties(id),\n        });\n        center = position;\n      } else {\n        finishedCreate = finishCreation(position);\n      }\n    });\n\n    mouseMoveRegistration.subscribe(({ movement: { endPosition } }) => {\n      if (!center) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n\n      if (position) {\n        const update = {\n          id,\n          center,\n          radiusPoint: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.MOUSE_MOVE,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n          ...this.getCircleProperties(id),\n        });\n      }\n    });\n\n    return editorObservable;\n  }\n\n  edit(center: Cartesian3, radius: number, options = DEFAULT_CIRCLE_OPTIONS, priority = 100): CircleEditorObservable {\n    const id = generateKey();\n    const circleOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<CircleEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT,\n    });\n\n    const radiusPoint: Cartesian3 = GeoUtilsService.pointByLocationDistanceAndAzimuth(center, radius, Math.PI / 2, true);\n\n    const update = {\n      id,\n      center,\n      radiusPoint,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      circleOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n      ...this.getCircleProperties(id),\n    });\n\n    return this.editCircle(id, priority, editSubject, circleOptions);\n  }\n\n  private editCircle(\n    id: string,\n    priority: number,\n    editSubject: Subject<CircleEditUpdate>,\n    options: CircleEditOptions,\n    editObservable?: CircleEditorObservable,\n  ): CircleEditorObservable {\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.LEFT_CLICK_DRAG,\n      entityType: EditPoint,\n      pickConfig: options.pickConfiguration,\n      pick: PickOptions.PICK_FIRST,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: CesiumEvent.LEFT_CLICK_DRAG,\n        entityType: EditableCircle,\n        pickConfig: options.pickConfiguration,\n        pick: PickOptions.PICK_FIRST,\n        priority: priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n\n    pointDragRegistration\n      .pipe(tap(({ movement: { drop } }) => this.cameraService.enableInputs(drop)))\n      .subscribe(({ movement: { endPosition, startPosition, drop }, entities }) => {\n        const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n        const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n        if (!endDragPosition) {\n          return;\n        }\n\n        const point: EditPoint = entities[0];\n        const pointIsCenter = point === this.getCenterPoint(id);\n        let editAction;\n        if (drop) {\n          editAction = pointIsCenter ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_POINT_FINISH;\n        } else {\n          editAction = pointIsCenter ? EditActions.DRAG_SHAPE : EditActions.DRAG_POINT;\n        }\n\n        if (!options.allowDrag && (editAction === EditActions.DRAG_SHAPE || editAction === EditActions.DRAG_SHAPE_FINISH)) {\n          this.cameraService.enableInputs(true);\n          return;\n        }\n\n        const update = {\n          id,\n          center: this.getCenterPosition(id),\n          radiusPoint: this.getRadiusPosition(id),\n          startDragPosition,\n          endDragPosition,\n          editMode: EditModes.EDIT,\n          editAction,\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n          ...this.getCircleProperties(id),\n        });\n      });\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({ movement: { drop } }) => this.cameraService.enableInputs(drop)))\n        .subscribe(({ movement: { startPosition, endPosition, drop } }) => {\n          const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n          const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n          if (!endDragPosition || !startDragPosition) {\n            return;\n          }\n\n          const update = {\n            id,\n            center: this.getCenterPosition(id),\n            radiusPoint: this.getRadiusPosition(id),\n            startDragPosition,\n            endDragPosition,\n            editMode: EditModes.EDIT,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n            ...this.getCircleProperties(id),\n          });\n        });\n    }\n\n    const observables = [pointDragRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n\n    this.observablesMap.set(id, observables);\n    return editObservable || this.createEditorObservable(editSubject, id);\n  }\n\n  private createEditorObservable(observableToExtend: any, id: string, finishCreation?: (position: Cartesian3) => boolean)\n                                                                                                        : CircleEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        center: this.getCenterPosition(id),\n        radiusPoint: this.getRadiusPosition(id),\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      });\n    };\n\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        center: this.getCenterPosition(id),\n        radiusPoint: this.getRadiusPosition(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n      });\n    };\n\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        center: this.getCenterPosition(id),\n        radiusPoint: this.getRadiusPosition(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n      });\n    };\n\n    observableToExtend.setManually = (\n      center: Cartesian3,\n      radius: number,\n      centerPointProp?: PointProps,\n      radiusPointProp?: PointProps,\n      circleProp?: EllipseProps,\n    ) => {\n      const radiusPoint = GeoUtilsService.pointByLocationDistanceAndAzimuth(center, radius, Math.PI / 2, true);\n      const circle = this.circlesManager.get(id);\n      circle.setManually(center, radiusPoint, centerPointProp, radiusPointProp, circleProp);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: (update: BasicEditUpdate<any>, labels: LabelProps[]) => LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      });\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      });\n    };\n\n    observableToExtend.finishCreation = () => {\n      if (!finishCreation) {\n        throw new Error('Circles editor error edit(): cannot call finishCreation() on edit');\n      }\n\n      return finishCreation(null);\n    };\n\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n\n    observableToExtend.getLabels = (): LabelProps[] => this.circlesManager.get(id).labels;\n    observableToExtend.getCenter = (): Cartesian3 => this.getCenterPosition(id);\n    observableToExtend.getRadius = (): number => this.getRadius(id);\n\n    return observableToExtend as CircleEditorObservable;\n  }\n\n  private setOptions(options: CircleEditOptions): CircleEditOptions {\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_CIRCLE_OPTIONS));\n    const circleOptions = Object.assign(defaultClone, options);\n    circleOptions.pointProps = Object.assign({}, DEFAULT_CIRCLE_OPTIONS.pointProps, options.pointProps);\n    circleOptions.circleProps = Object.assign({}, DEFAULT_CIRCLE_OPTIONS.circleProps, options.circleProps);\n    circleOptions.polylineProps = Object.assign({}, DEFAULT_CIRCLE_OPTIONS.polylineProps, options.polylineProps);\n    return circleOptions;\n  }\n\n  private getCenterPosition(id: string): Cartesian3 {\n    return this.circlesManager.get(id).getCenter();\n  }\n\n  private getCenterPoint(id: string): EditPoint {\n    return this.circlesManager.get(id).center;\n  }\n\n  private getRadiusPosition(id: string): Cartesian3 {\n    return this.circlesManager.get(id).getRadiusPoint();\n  }\n\n  private getRadius(id: string): number {\n    return this.circlesManager.get(id).getRadius();\n  }\n\n  private getCircleProperties(id: string) {\n    const circle = this.circlesManager.get(id);\n    return {\n      center: circle.getCenter(),\n      radiusPoint: circle.getRadiusPoint(),\n      radius: circle.getRadius(),\n    };\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { CirclesManagerService } from '../../services/entity-editors/circles-editor/circles-manager.service';\nimport { CirclesEditorService } from '../../services/entity-editors/circles-editor/circles-editor.service';\nimport { CircleEditUpdate } from '../../models/circle-edit-update';\nimport { LabelProps } from '../../models/label-props';\nimport { EditableCircle } from '../../models/editable-circle';\n\n@Component({\n  selector: 'circles-editor',\n  template: /*html*/ `\n      <ac-layer #editArcsLayer acFor=\"let arc of editArcs$\" [context]=\"this\">\n          <ac-arc-desc\n                  props=\"{\n        angle: arc.angle,\n        delta: arc.delta,\n        center: arc.center,\n        radius: arc.radius,\n        quality: 30,\n        color: arc.props.material()\n    }\"\n          >\n          </ac-arc-desc>\n      </ac-layer>\n\n      <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n          <ac-point-desc\n                  props=\"{\n                    position: point.getPositionCallbackProperty(),\n                    pixelSize: getPointSize(point),\n                    color: point.props.color,\n                    outlineColor: point.props.outlineColor,\n                    outlineWidth: point.props.outlineWidth,\n                    show: getPointShow(point),\n                    disableDepthTestDistance: point.props.disableDepthTestDistance,\n                    heightReference: point.props.heightReference,\n    }\"\n          >\n          </ac-point-desc>\n      </ac-layer>\n\n      <ac-layer #editCirclesLayer acFor=\"let circle of editCircles$\" [context]=\"this\" [zIndex]=\"0\">\n          <ac-ellipse-desc\n                  props=\"{\n                  position: circle.getCenterCallbackProperty(),\n                  semiMajorAxis: circle.getRadiusCallbackProperty(),\n                  semiMinorAxis: circle.getRadiusCallbackProperty(),\n                  material: circle.circleProps.material,\n                  outline: circle.circleProps.outline,\n                  height: 0\n                  outlineWidth: circle.circleProps.outlineWidth,\n                  outlineColor: circle.circleProps.outlineColor,\n                  fill: circle.circleProps.fill,\n                  classificationType: circle.circleProps.classificationType,\n                  zIndex: circle.circleProps.zIndex,\n                  shadows: circle.circleProps.shadows,\n    }\"\n          >\n          </ac-ellipse-desc>\n\n          <ac-array-desc acFor=\"let label of circle.labels\" [idGetter]=\"getLabelId\">\n              <ac-label-primitive-desc\n                      props=\"{\n            position: label.position,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            text: label.text,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin,\n            disableDepthTestDistance: label.disableDepthTestDistance,\n        }\"\n              >\n              </ac-label-primitive-desc>\n          </ac-array-desc>\n      </ac-layer>\n  `,\n  providers: [CoordinateConverter, CirclesManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CirclesEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: CircleEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editCircles$ = new Subject<AcNotification>();\n  public editArcs$ = new Subject<AcNotification>();\n\n  @ViewChild('editCirclesLayer') private editCirclesLayer: AcLayerComponent;\n  @ViewChild('editArcsLayer') private editArcsLayer: AcLayerComponent;\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\n\n  constructor(\n    private circlesEditor: CirclesEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private circlesManager: CirclesManagerService,\n  ) {\n    this.circlesEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, this.circlesManager);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.circlesEditor.onUpdate().subscribe(update => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(circle: EditableCircle, update: CircleEditUpdate, labels?: LabelProps[]) {\n    update.center = circle.getCenter();\n    update.radiusPoint = circle.getRadiusPoint();\n    update.radius = circle.getRadius();\n\n    if (labels) {\n      circle.labels = labels;\n      this.editCirclesLayer.update(circle, circle.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    circle.labels = this.editLabelsRenderFn(update, circle.labels);\n    this.editCirclesLayer.update(circle, circle.getId());\n  }\n\n  removeEditLabels(circle: EditableCircle) {\n    circle.labels = [];\n    this.editCirclesLayer.update(circle, circle.getId());\n  }\n\n  handleCreateUpdates(update: CircleEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.circlesManager.createEditableCircle(\n          update.id,\n          this.editCirclesLayer,\n          this.editPointsLayer,\n          this.editArcsLayer,\n          update.circleOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const circle = this.circlesManager.get(update.id);\n        if (update.radiusPoint) {\n          circle.movePoint(update.radiusPoint);\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const circle = this.circlesManager.get(update.id);\n        if (update.center) {\n          circle.addPoint(update.center);\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.ADD_LAST_POINT: {\n        const circle = this.circlesManager.get(update.id);\n        if (update.radiusPoint) {\n          circle.addLastPoint(update.radiusPoint);\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle) {\n          this.removeEditLabels(circle);\n          this.circlesManager.dispose(update.id);\n        }\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const circle = this.circlesManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(circle, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const circle = this.circlesManager.get(update.id);\n        this.renderEditLabels(circle, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const circle = this.circlesManager.get(update.id);\n        this.renderEditLabels(circle, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: CircleEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        const circle = this.circlesManager.createEditableCircle(\n          update.id,\n          this.editCirclesLayer,\n          this.editPointsLayer,\n          this.editArcsLayer,\n          update.circleOptions,\n        );\n        circle.setManually(update.center, update.radiusPoint);\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH:\n      case EditActions.DRAG_POINT: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle && circle.enableEdit) {\n          circle.movePoint(update.endDragPosition);\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle && circle.enableEdit) {\n          circle.moveCircle(update.startDragPosition, update.endDragPosition);\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle && circle.enableEdit) {\n          circle.endMovePolygon();\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle) {\n          circle.enableEdit = false;\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle) {\n          circle.enableEdit = true;\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.circlesManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { EllipseEditOptions, EllipseProps } from './ellipse-edit-options';\nimport { PointProps } from './point-edit-options';\nimport { PolylineProps } from './polyline-edit-options';\nimport { defaultLabelProps, LabelProps } from './label-props';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\n\nexport class EditableEllipse extends AcEntity {\n  private _center: EditPoint;\n  private _majorRadiusPoint: EditPoint;\n  private _majorRadius: number;\n  private _minorRadius: number;\n  private _rotation = 0;\n  private doneCreation = false;\n  private _enableEdit = true;\n  private _minorRadiusPoints: EditPoint[] = [];\n  private lastDraggedToPosition: any;\n  private _ellipseProps: EllipseProps;\n  private _pointProps: PointProps;\n  private _polylineProps: PolylineProps;\n  private _labels: LabelProps[] = [];\n\n  constructor(\n    private id: string,\n    private ellipsesLayer: AcLayerComponent,\n    private pointsLayer: AcLayerComponent,\n    private coordinateConverter: CoordinateConverter,\n    private options: EllipseEditOptions,\n  ) {\n    super();\n    this._ellipseProps = {...options.ellipseProps};\n    this._pointProps = {...options.pointProps};\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels || !this._center) {\n      return;\n    }\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        if (index === 0) {\n          label.position = this._center.getPosition();\n        } else if (index === 1) {\n          label.position = this._majorRadiusPoint\n            ? Cesium.Cartesian3.midpoint(this.getCenter(), this._majorRadiusPoint.getPosition(), new Cesium.Cartesian3())\n            : new Cesium.Cartesian3();\n        } else if (index === 2) {\n          label.position =\n            this._minorRadiusPoints.length > 0 && this._minorRadius\n              ? Cesium.Cartesian3.midpoint(this.getCenter(), this.getMinorRadiusPointPosition(), new Cesium.Cartesian3())\n              : new Cesium.Cartesian3();\n        }\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get polylineProps(): PolylineProps {\n    return this._polylineProps;\n  }\n\n  set polylineProps(value: PolylineProps) {\n    this._polylineProps = value;\n  }\n\n  get pointProps(): PointProps {\n    return this._pointProps;\n  }\n\n  set pointProps(value: PointProps) {\n    this._pointProps = value;\n  }\n\n  get ellipseProps(): EllipseProps {\n    return this._ellipseProps;\n  }\n\n  set ellipseProps(value: EllipseProps) {\n    this._ellipseProps = value;\n  }\n\n  get center(): EditPoint {\n    return this._center;\n  }\n\n  get majorRadiusPoint(): EditPoint {\n    return this._majorRadiusPoint;\n  }\n\n  getMajorRadiusPointPosition() {\n    if (!this._majorRadiusPoint) {\n      return undefined;\n    }\n\n    return this._majorRadiusPoint.getPosition();\n  }\n\n  getMinorRadiusPointPosition(): Cartesian3 {\n    if (this._minorRadiusPoints.length < 1) {\n      return undefined;\n    }\n\n    return this._minorRadiusPoints[0].getPosition();\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this._center.show = value;\n    this._majorRadiusPoint.show = value;\n    this.updatePointsLayer();\n  }\n\n  setManually(\n    center: Cartesian3,\n    majorRadius: number,\n    rotation = Math.PI / 2,\n    minorRadius?: number,\n    centerPointProp = this.pointProps,\n    radiusPointProp = this.pointProps,\n    ellipseProp = this.ellipseProps,\n  ) {\n    if (majorRadius < minorRadius) {\n      throw new Error('Major radius muse be equal or greater than minor radius');\n    }\n    this._rotation = rotation;\n    this._majorRadius = majorRadius;\n    if (!this._center) {\n      this._center = new EditPoint(this.id, center, centerPointProp);\n    } else {\n      this._center.setPosition(center);\n    }\n\n    const majorRadiusPosition = GeoUtilsService.pointByLocationDistanceAndAzimuth(this.center.getPosition(), majorRadius, rotation);\n\n    if (!this._majorRadiusPoint) {\n      this._majorRadiusPoint = new EditPoint(this.id, majorRadiusPosition, radiusPointProp);\n    } else {\n      this._majorRadiusPoint.setPosition(majorRadiusPosition);\n    }\n\n    if (minorRadius) {\n      this._minorRadius = minorRadius;\n    }\n\n    this.ellipseProps = ellipseProp;\n    this.doneCreation = true;\n    this.updateMinorRadiusEditPoints();\n    this.updatePointsLayer();\n    this.updateEllipsesLayer();\n  }\n\n  addPoint(position: Cartesian3) {\n    if (this.doneCreation) {\n      return;\n    }\n\n    if (!this._center) {\n      this._center = new EditPoint(this.id, position, this.pointProps);\n      this._majorRadiusPoint = new EditPoint(this.id, position.clone(), this.pointProps);\n      this._majorRadius = 0;\n    }\n\n    this.updateRotation();\n    this.updateMinorRadiusEditPoints();\n    this.updatePointsLayer();\n    this.updateEllipsesLayer();\n  }\n\n  transformToEllipse() {\n    if (this._minorRadius) {\n      return;\n    }\n\n    this._minorRadius = this.getMajorRadius();\n    this.updateMinorRadiusEditPoints();\n    this.updatePointsLayer();\n    this.updateEllipsesLayer();\n  }\n\n  addLastPoint(position: Cartesian3) {\n    if (this.doneCreation || !this._center || !this._majorRadiusPoint) {\n      return;\n    }\n\n    const newRadius = GeoUtilsService.distance(this._center.getPosition(), position);\n    this._majorRadiusPoint.setPosition(position);\n    this._majorRadius = newRadius;\n    this.doneCreation = true;\n\n    if (!this.options.circleToEllipseTransformation) {\n      this._minorRadius = this._majorRadius;\n    }\n\n    this.updateRotation();\n    this.updateMinorRadiusEditPoints();\n    this.updatePointsLayer();\n    this.updateEllipsesLayer();\n  }\n\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\n    if (!this._center || !this._majorRadiusPoint) {\n      return;\n    }\n\n    const newRadius = GeoUtilsService.distance(this._center.getPosition(), toPosition);\n    if (this.majorRadiusPoint === editPoint) {\n      if (newRadius < this._minorRadius) {\n        this._majorRadius = this._minorRadius;\n        this._majorRadiusPoint.setPosition(\n          GeoUtilsService.pointByLocationDistanceAndAzimuth(this.getCenter(), this._minorRadius, this._rotation),\n        );\n      } else {\n        this.majorRadiusPoint.setPosition(toPosition);\n        this._majorRadius = newRadius;\n      }\n    } else {\n      if (newRadius > this._majorRadius) {\n        this._minorRadius = this._majorRadius;\n      } else {\n        this._minorRadius = newRadius;\n      }\n    }\n\n    this.updateRotation();\n    this.updateMinorRadiusEditPoints();\n    this.updatePointsLayer();\n    this.updateEllipsesLayer();\n  }\n\n  moveEllipse(dragStartPosition: Cartesian3, dragEndPosition: Cartesian3) {\n    if (!this.doneCreation) {\n      return;\n    }\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = dragStartPosition;\n    }\n\n    const majorRadius = this.getMajorRadius();\n    const rotation = this.getRotation();\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, dragEndPosition);\n    const newCenterPosition = GeoUtilsService.addDeltaToPosition(this.getCenter(), delta, true);\n    this._center.setPosition(newCenterPosition);\n    this.majorRadiusPoint.setPosition(GeoUtilsService.pointByLocationDistanceAndAzimuth(this.getCenter(), majorRadius, rotation));\n    this.updatePointsLayer();\n    this.updateMinorRadiusEditPoints();\n    this.updateEllipsesLayer();\n    this.lastDraggedToPosition = dragEndPosition;\n  }\n\n  endMoveEllipse() {\n    this.lastDraggedToPosition = undefined;\n  }\n\n  private updateMinorRadiusEditPoints() {\n    if (this._minorRadius === undefined) {\n      return;\n    }\n    if (this._minorRadiusPoints.length === 0) {\n      this._minorRadiusPoints.push(new EditPoint(this.id, new Cesium.Cartesian3(), this.pointProps, true));\n      this._minorRadiusPoints.push(new EditPoint(this.id, new Cesium.Cartesian3(), this.pointProps, true));\n    }\n\n    this._minorRadiusPoints[0].setPosition(\n      GeoUtilsService.pointByLocationDistanceAndAzimuth(this._center.getPosition(), this._minorRadius, this.getRotation() - Math.PI / 2),\n    );\n\n    this._minorRadiusPoints[1].setPosition(\n      GeoUtilsService.pointByLocationDistanceAndAzimuth(this._center.getPosition(), this._minorRadius, this.getRotation() + Math.PI / 2),\n    );\n  }\n\n  getMajorRadius(): number {\n    return this._majorRadius || 0;\n  }\n\n  getMinorRadius() {\n    if (this._minorRadius === undefined) {\n      return this.getMajorRadius();\n    } else {\n      return this._minorRadius;\n    }\n  }\n\n  getRotation(): number {\n    return this._rotation || 0;\n  }\n\n  updateRotation(): number {\n    if (!this._majorRadiusPoint) {\n      return 0;\n    }\n\n    const azimuthInDegrees = this.coordinateConverter.bearingToCartesian(this.getCenter(), this._majorRadiusPoint.getPosition());\n    this._rotation = Cesium.Math.toRadians(azimuthInDegrees);\n    return this._rotation;\n  }\n\n  getRotationCallbackProperty() {\n    return new Cesium.CallbackProperty(() => Math.PI / 2 - this.getRotation(), false);\n  }\n\n  getMinorRadiusCallbackProperty() {\n    return new Cesium.CallbackProperty(() => this.getMinorRadius(), false);\n  }\n\n  getMajorRadiusCallbackProperty() {\n    return new Cesium.CallbackProperty(() => this.getMajorRadius(), false);\n  }\n\n  getCenter(): Cartesian3 {\n    return this._center ? this._center.getPosition() : undefined;\n  }\n\n  getCenterCallbackProperty() {\n    return new Cesium.CallbackProperty(() => this.getCenter(), false);\n  }\n\n  dispose() {\n    if (this._center) {\n      this.pointsLayer.remove(this._center.getId());\n    }\n\n    if (this._majorRadiusPoint) {\n      this.pointsLayer.remove(this._majorRadiusPoint.getId());\n    }\n\n    if (this._minorRadiusPoints) {\n      this._minorRadiusPoints.forEach(point => this.pointsLayer.remove(point.getId()));\n    }\n\n    this.ellipsesLayer.remove(this.id);\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  private updateEllipsesLayer() {\n    this.ellipsesLayer.update(this, this.id);\n  }\n\n  private updatePointsLayer() {\n    if (this._center) {\n      this.pointsLayer.update(this._center, this._center.getId());\n    }\n    if (this._majorRadiusPoint) {\n      this.pointsLayer.update(this._majorRadiusPoint, this._majorRadiusPoint.getId());\n    }\n    if (this._minorRadiusPoints.length > 0) {\n      this.pointsLayer.update(this._minorRadiusPoints[0], this._minorRadiusPoints[0].getId());\n      this.pointsLayer.update(this._minorRadiusPoints[1], this._minorRadiusPoints[1].getId());\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EditableEllipse } from '../../../models/editable-ellipse';\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { EllipseEditOptions } from '../../../models/ellipse-edit-options';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\n\n@Injectable()\nexport class EllipsesManagerService {\n  private ellipses = new Map<string, EditableEllipse>();\n\n  createEditableEllipse(id: string,\n                        editEllipsesLayer: AcLayerComponent,\n                        editPointsLayer: AcLayerComponent,\n                        coordinateConverter: CoordinateConverter,\n                        ellipseOptions: EllipseEditOptions): EditableEllipse {\n    const editableEllipse = new EditableEllipse(id, editEllipsesLayer, editPointsLayer, coordinateConverter, ellipseOptions);\n    this.ellipses.set(id, editableEllipse);\n    return editableEllipse;\n  }\n\n  dispose(id: string) {\n    this.ellipses.get(id).dispose();\n    this.ellipses.delete(id);\n  }\n\n  get(id: string): EditableEllipse {\n    return this.ellipses.get(id);\n  }\n\n  clear() {\n    this.ellipses.forEach(ellipse => ellipse.dispose());\n    this.ellipses.clear();\n  }\n}\n","import { publish, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from '../../../models/edit-point';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { EllipseEditUpdate } from '../../../models/ellipse-edit-update';\nimport { EllipsesManagerService } from './ellipses-manager.service';\nimport { EllipseEditorObservable } from '../../../models/ellipse-editor-observable';\nimport { EllipseEditOptions, EllipseProps } from '../../../models/ellipse-edit-options';\nimport { EditableEllipse } from '../../../models/editable-ellipse';\nimport { PointProps } from '../../../models/point-edit-options';\nimport { LabelProps } from '../../../models/label-props';\nimport { BasicEditUpdate } from '../../../models/basic-edit-update';\nimport { generateKey } from '../../utils';\nimport { CesiumEventModifier } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event-modifier.enum';\nimport { CesiumService } from '../../../../angular-cesium';\n\nexport const DEFAULT_ELLIPSE_OPTIONS: EllipseEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  circleToEllipseTransformEvent: CesiumEvent.LEFT_CLICK,\n  circleToEllipseTransformEventModifier: CesiumEventModifier.ALT,\n  allowDrag: true,\n  ellipseProps: {\n    material: Cesium.Color.CORNFLOWERBLUE.withAlpha(0.4),\n    fill: true,\n    outline: true,\n    outlineWidth: 1,\n    outlineColor: Cesium.Color.WHITE.withAlpha(0.8),\n    classificationType: Cesium.ClassificationType.BOTH,\n    zIndex: 0,\n    shadows: Cesium.ShadowMode.DISABLED,\n  },\n  pointProps: {\n    color: Cesium.Color.WHITE,\n    outlineColor: Cesium.Color.BLACK.withAlpha(0.2),\n    outlineWidth: 1,\n    pixelSize: 13,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\n  },\n  polylineProps: {\n    width: 1,\n    material: () => Cesium.Color.WHITE,\n  },\n  circleToEllipseTransformation: false,\n};\n\n/**\n * Service for creating editable ellipses\n *\n * You must provide `EllipsesEditorService` yourself.\n * EllipsesEditorService works together with `<ellipse-editor>` component. Therefor you need to create `<ellipse-editor>`\n * for each `EllipsesEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `EllipseEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `EllipseEditorObservable`.\n * + To stop editing call `dispose()` from the `EllipseEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over edited shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `EllipseEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n * usage:\n * ```typescript\n *  // Start creating ellipse\n *  const editing$ = ellipsesEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit ellipse from existing center point, two radiuses and rotation\n *  const editing$ = this.ellipsesEditorService.edit(center, majorRadius, rotation, minorRadius);\n *\n * ```\n */\n@Injectable()\nexport class EllipsesEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<EllipseEditUpdate>();\n  private updatePublisher = publish<EllipseEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private ellipsesManager: EllipsesManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n  private cesiumScene: any;\n\n  init(\n    mapEventsManager: MapEventsManagerService,\n    coordinateConverter: CoordinateConverter,\n    cameraService: CameraService,\n    ellipsesManager: EllipsesManagerService,\n    cesiumViewer: CesiumService,\n  ) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.ellipsesManager = ellipsesManager;\n    this.updatePublisher.connect();\n\n    this.cesiumScene = cesiumViewer.getScene();\n  }\n\n  onUpdate(): Observable<EllipseEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  create(options = DEFAULT_ELLIPSE_OPTIONS, priority = 100): EllipseEditorObservable {\n    let center: any;\n    const id = generateKey();\n    const ellipseOptions = this.setOptions(options);\n    const clientEditSubject = new BehaviorSubject<EllipseEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE,\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      ellipseOptions,\n    });\n\n    const finishCreation = (position: Cartesian3) => {\n      const update: EllipseEditUpdate = {\n        id,\n        center,\n        updatedPosition: position,\n        editMode: EditModes.CREATE,\n        editAction: EditActions.ADD_LAST_POINT,\n      };\n      this.updateSubject.next(update);\n      clientEditSubject.next({\n        ...update,\n      });\n\n      const changeMode: EllipseEditUpdate = {\n        id,\n        center,\n        editMode: EditModes.CREATE,\n        editAction: EditActions.CHANGE_TO_EDIT,\n      };\n\n      this.updateSubject.next(changeMode);\n      clientEditSubject.next({\n        ...update,\n      });\n      if (this.observablesMap.has(id)) {\n        this.observablesMap.get(id).forEach(registration => registration.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.editEllipse(id, priority, clientEditSubject, ellipseOptions, editorObservable);\n      finishedCreate = true;\n      return finishedCreate;\n    };\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      pickConfig: options.pickConfiguration,\n      priority,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: ellipseOptions.addPointEvent,\n      pick: PickOptions.NO_PICK,\n      pickConfig: options.pickConfiguration,\n      priority,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id, finishCreation);\n\n    addPointRegistration.subscribe(({ movement: { endPosition } }) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (!position) {\n        return;\n      }\n\n      if (!center) {\n        const update: EllipseEditUpdate = {\n          id,\n          center: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.ADD_POINT,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n        });\n        center = position;\n      } else {\n        finishedCreate = finishCreation(position);\n      }\n    });\n\n    mouseMoveRegistration.subscribe(({ movement: { endPosition } }) => {\n      if (!center) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n\n      if (position) {\n        const update: EllipseEditUpdate = {\n          id,\n          center,\n          updatedPosition: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.MOUSE_MOVE,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n        });\n      }\n    });\n\n    return editorObservable;\n  }\n\n  edit(\n    center: Cartesian3,\n    majorRadius: number,\n    rotation = Math.PI / 2,\n    minorRadius?: number,\n    options = DEFAULT_ELLIPSE_OPTIONS,\n    priority = 100,\n  ): EllipseEditorObservable {\n    const id = generateKey();\n    const ellipseOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<EllipseEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT,\n    });\n\n    const update: EllipseEditUpdate = {\n      id,\n      center,\n      majorRadius,\n      rotation,\n      minorRadius,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      ellipseOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n    });\n\n    return this.editEllipse(id, priority, editSubject, ellipseOptions);\n  }\n\n  private editEllipse(\n    id: string,\n    priority: number,\n    editSubject: Subject<EllipseEditUpdate>,\n    options: EllipseEditOptions,\n    editObservable?: EllipseEditorObservable,\n  ): EllipseEditorObservable {\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: options.dragPointEvent,\n      entityType: EditPoint,\n      pickConfig: options.pickConfiguration,\n      pick: PickOptions.PICK_FIRST,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    let addSecondRadiusRegistration;\n    if (options.circleToEllipseTransformation) {\n      addSecondRadiusRegistration = this.mapEventsManager.register({\n        event: options.circleToEllipseTransformEvent,\n        modifier: options.circleToEllipseTransformEventModifier,\n        entityType: EditableEllipse,\n        pickConfig: options.pickConfiguration,\n        pick: PickOptions.PICK_FIRST,\n        priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: options.dragShapeEvent,\n        entityType: EditableEllipse,\n        pickConfig: options.pickConfiguration,\n        pick: PickOptions.PICK_FIRST,\n        priority: priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n\n    pointDragRegistration\n      .pipe(tap(({ movement: { drop } }) => this.ellipsesManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\n      .subscribe(({ movement: { endPosition, startPosition, drop }, entities }) => {\n        const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n        const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n        if (!endDragPosition) {\n          return;\n        }\n\n        const point: EditPoint = entities[0];\n        const pointIsCenter = point === this.getCenterPoint(id);\n        let editAction;\n        if (drop) {\n          editAction = pointIsCenter ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_POINT_FINISH;\n        } else {\n          editAction = pointIsCenter ? EditActions.DRAG_SHAPE : EditActions.DRAG_POINT;\n        }\n\n        if (!options.allowDrag && this.ellipsesManager.get(id).enableEdit &&\n          (editAction === EditActions.DRAG_SHAPE || editAction === EditActions.DRAG_SHAPE_FINISH)) {\n          this.cameraService.enableInputs(true);\n          return;\n        }\n\n        const update: EllipseEditUpdate = {\n          id,\n          updatedPoint: point,\n          startDragPosition,\n          endDragPosition,\n          editMode: EditModes.EDIT,\n          editAction,\n          ...this.getEllipseProperties(id),\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n        });\n      });\n\n    if (addSecondRadiusRegistration) {\n      addSecondRadiusRegistration.subscribe(({ movement: { endPosition, startPosition, drop }, entities }) => {\n        const update: EllipseEditUpdate = {\n          id,\n          editMode: EditModes.EDIT,\n          editAction: EditActions.TRANSFORM,\n          ...this.getEllipseProperties(id),\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n        });\n      });\n    }\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({ movement: { drop } }) => this.ellipsesManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\n        .subscribe(({ movement: { startPosition, endPosition, drop } }) => {\n          const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n          const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n          if (!endDragPosition || !startDragPosition) {\n            return;\n          }\n\n          const update: EllipseEditUpdate = {\n            id,\n            startDragPosition,\n            endDragPosition,\n            editMode: EditModes.EDIT,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n            ...this.getEllipseProperties(id),\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n          });\n        });\n    }\n\n    const observables = [pointDragRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n    if (addSecondRadiusRegistration) {\n      observables.push(addSecondRadiusRegistration);\n    }\n\n    this.observablesMap.set(id, observables);\n    return editObservable || this.createEditorObservable(editSubject, id);\n  }\n\n  private createEditorObservable(observableToExtend: any, id: string, finishCreation?: (position: Cartesian3) => boolean)\n                                                                                                        : EllipseEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      } as EllipseEditUpdate);\n    };\n\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n        ...this.getEllipseProperties(id),\n      } as EllipseEditUpdate);\n    };\n\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n        ...this.getEllipseProperties(id),\n      } as EllipseEditUpdate);\n    };\n\n    observableToExtend.setManually = (\n      center: Cartesian3,\n      majorRadius: number,\n      rotation?: number,\n      minorRadius?: number,\n      centerPointProp?: PointProps,\n      radiusPointProp?: PointProps,\n      ellipseProp?: EllipseProps,\n    ) => {\n      const ellipse = this.ellipsesManager.get(id);\n      ellipse.setManually(center, majorRadius, rotation, minorRadius, centerPointProp, radiusPointProp, ellipseProp);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: (update: BasicEditUpdate<any>, labels: LabelProps[]) => LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      } as EllipseEditUpdate);\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      } as EllipseEditUpdate);\n    };\n\n    observableToExtend.finishCreation = () => {\n      if (!finishCreation) {\n        throw new Error('Ellipses editor error edit(): cannot call finishCreation() on edit');\n      }\n\n      return finishCreation(null);\n    };\n\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n\n    observableToExtend.getLabels = (): LabelProps[] => this.ellipsesManager.get(id).labels;\n    observableToExtend.getCenter = (): Cartesian3 => this.getCenterPosition(id);\n    observableToExtend.getMajorRadius = (): number => this.getMajorRadius(id);\n    observableToExtend.getMinorRadius = (): number => this.getMinorRadius(id);\n\n    return observableToExtend as EllipseEditorObservable;\n  }\n\n  private setOptions(options: EllipseEditOptions): EllipseEditOptions {\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_ELLIPSE_OPTIONS));\n    const ellipseOptions = Object.assign(defaultClone, options);\n    ellipseOptions.pointProps = Object.assign({}, DEFAULT_ELLIPSE_OPTIONS.pointProps, options.pointProps);\n    ellipseOptions.ellipseProps = Object.assign({}, DEFAULT_ELLIPSE_OPTIONS.ellipseProps, options.ellipseProps);\n    ellipseOptions.polylineProps = Object.assign({}, DEFAULT_ELLIPSE_OPTIONS.polylineProps, options.polylineProps);\n    return ellipseOptions;\n  }\n\n  private getCenterPosition(id: string): Cartesian3 {\n    return this.ellipsesManager.get(id).getCenter();\n  }\n\n  private getCenterPoint(id: string): EditPoint {\n    return this.ellipsesManager.get(id).center;\n  }\n\n  private getMajorRadius(id: string): number {\n    return this.ellipsesManager.get(id).getMajorRadius();\n  }\n\n  private getMinorRadius(id: string): number {\n    return this.ellipsesManager.get(id).getMinorRadius();\n  }\n\n  private getEllipseProperties(id: string) {\n    const ellipse = this.ellipsesManager.get(id);\n    return {\n      center: ellipse.getCenter(),\n      rotation: ellipse.getRotation(),\n      minorRadius: ellipse.getMinorRadius(),\n      majorRadius: ellipse.getMajorRadius(),\n      minorRadiusPointPosition: ellipse.getMinorRadiusPointPosition(),\n      majorRadiusPointPosition: ellipse.getMajorRadiusPointPosition(),\n    };\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { CesiumService } from '../../../angular-cesium/services/cesium/cesium.service';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { EllipsesManagerService } from '../../services/entity-editors/ellipses-editor/ellipses-manager.service';\nimport { EllipsesEditorService } from '../../services/entity-editors/ellipses-editor/ellipses-editor.service';\nimport { EllipseEditUpdate } from '../../models/ellipse-edit-update';\nimport { LabelProps } from '../../models/label-props';\nimport { EditableEllipse } from '../../models/editable-ellipse';\n\n@Component({\n  selector: 'ellipses-editor',\n  template: /*html*/ `\n      <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n          <ac-point-desc\n                  props=\"{\n                    position: point.getPositionCallbackProperty(),\n                    pixelSize: getPointSize(point),\n                    color: point.props.color,\n                    outlineColor: point.props.outlineColor,\n                    outlineWidth: point.props.outlineWidth,\n                    show: getPointShow(point),\n                    disableDepthTestDistance: point.props.disableDepthTestDistance,\n                    heightReference: point.props.heightReference,\n    }\"\n          >\n          </ac-point-desc>\n      </ac-layer>\n\n      <ac-layer #editEllipsesLayer acFor=\"let ellipse of editEllipses$\" [context]=\"this\" [zIndex]=\"0\">\n          <ac-ellipse-desc\n                  props=\"{\n                    position: ellipse.getCenterCallbackProperty(),\n                    semiMajorAxis: ellipse.getMajorRadiusCallbackProperty(),\n                    semiMinorAxis: ellipse.getMinorRadiusCallbackProperty(),\n                    rotation: ellipse.getRotationCallbackProperty(),\n                    material: ellipse.ellipseProps.material,\n                    outline: ellipse.ellipseProps.outline,\n                    outlineWidth: ellipse.ellipseProps.outlineWidth,\n                    outlineColor: ellipse.ellipseProps.outlineColor,\n                    height: 0,\n                    fill: ellipse.ellipseProps.fill,\n                    classificationType: ellipse.ellipseProps.classificationType,\n                    zIndex: ellipse.ellipseProps.zIndex,\n                    shadows: ellipse.ellipseProps.shadows,\n    }\"\n          >\n          </ac-ellipse-desc>\n\n          <ac-array-desc acFor=\"let label of ellipse.labels\" [idGetter]=\"getLabelId\">\n              <ac-label-primitive-desc\n                      props=\"{\n                        position: label.position,\n                        text: label.text,\n                        backgroundColor: label.backgroundColor,\n                        backgroundPadding: label.backgroundPadding,\n                        distanceDisplayCondition: label.distanceDisplayCondition,\n                        eyeOffset: label.eyeOffset,\n                        fillColor: label.fillColor,\n                        font: label.font,\n                        heightReference: label.heightReference,\n                        horizontalOrigin: label.horizontalOrigin,\n                        outlineColor: label.outlineColor,\n                        outlineWidth: label.outlineWidth,\n                        pixelOffset: label.pixelOffset,\n                        pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n                        scale: label.scale,\n                        scaleByDistance: label.scaleByDistance,\n                        show: label.show,\n                        showBackground: label.showBackground,\n                        style: label.style,\n                        translucencyByDistance: label.translucencyByDistance,\n                        verticalOrigin: label.verticalOrigin,\n                        disableDepthTestDistance: label.disableDepthTestDistance,\n        }\"\n              >\n              </ac-label-primitive-desc>\n          </ac-array-desc>\n      </ac-layer>\n  `,\n  providers: [CoordinateConverter, EllipsesManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EllipsesEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: EllipseEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editEllipses$ = new Subject<AcNotification>();\n\n  @ViewChild('editEllipsesLayer') private editEllipsesLayer: AcLayerComponent;\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\n\n  constructor(\n    private ellipsesEditor: EllipsesEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private ellipsesManager: EllipsesManagerService,\n    private cesiumService: CesiumService,\n  ) {\n    this.ellipsesEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, this.ellipsesManager, this.cesiumService);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.ellipsesEditor.onUpdate().subscribe(update => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(ellipse: EditableEllipse, update: EllipseEditUpdate, labels?: LabelProps[]) {\n    update.center = ellipse.getCenter();\n    update.majorRadius = ellipse.getMajorRadius();\n    update.minorRadius = ellipse.getMinorRadius();\n    update.rotation = ellipse.getRotation();\n\n    if (labels) {\n      ellipse.labels = labels;\n      this.editEllipsesLayer.update(ellipse, ellipse.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    ellipse.labels = this.editLabelsRenderFn(update, ellipse.labels);\n    this.editEllipsesLayer.update(ellipse, ellipse.getId());\n  }\n\n  removeEditLabels(ellipse: EditableEllipse) {\n    ellipse.labels = [];\n    this.editEllipsesLayer.update(ellipse, ellipse.getId());\n  }\n\n  handleCreateUpdates(update: EllipseEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.ellipsesManager.createEditableEllipse(\n          update.id,\n          this.editEllipsesLayer,\n          this.editPointsLayer,\n          this.coordinateConverter,\n          update.ellipseOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (update.updatedPosition) {\n          ellipse.movePoint(update.updatedPosition, ellipse.majorRadiusPoint);\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (update.center) {\n          ellipse.addPoint(update.center);\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.ADD_LAST_POINT: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (update.updatedPosition) {\n          ellipse.addLastPoint(update.updatedPosition);\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse) {\n          this.removeEditLabels(ellipse);\n          this.ellipsesManager.dispose(update.id);\n        }\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(ellipse, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        this.renderEditLabels(ellipse, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        this.renderEditLabels(ellipse, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: EllipseEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        const ellipse = this.ellipsesManager.createEditableEllipse(\n          update.id,\n          this.editEllipsesLayer,\n          this.editPointsLayer,\n          this.coordinateConverter,\n          update.ellipseOptions,\n        );\n        ellipse.setManually(\n          update.center,\n          update.majorRadius,\n          update.rotation,\n          update.minorRadius,\n          (update.ellipseOptions && update.ellipseOptions.pointProps) || undefined,\n          (update.ellipseOptions && update.ellipseOptions.pointProps) || undefined,\n          (update.ellipseOptions && update.ellipseOptions.ellipseProps) || undefined,\n        );\n        this.renderEditLabels(ellipse, update);\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH:\n      case EditActions.DRAG_POINT: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse && ellipse.enableEdit) {\n          ellipse.movePoint(update.endDragPosition, update.updatedPoint);\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse && ellipse.enableEdit) {\n          ellipse.moveEllipse(update.startDragPosition, update.endDragPosition);\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse && ellipse.enableEdit) {\n          ellipse.endMoveEllipse();\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.TRANSFORM: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse && ellipse.enableEdit) {\n          ellipse.transformToEllipse();\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse) {\n          ellipse.enableEdit = false;\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse) {\n          ellipse.enableEdit = true;\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.ellipsesManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { EditPolyline } from './edit-polyline';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { PointProps } from './point-edit-options';\nimport { PolylineEditOptions, PolylineProps } from './polyline-edit-options';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { defaultLabelProps, LabelProps } from './label-props';\n\nexport class EditablePolyline extends AcEntity {\n  private positions: EditPoint[] = [];\n\n  private polylines: EditPolyline[] = [];\n  private movingPoint: EditPoint;\n  private doneCreation = false;\n  private _enableEdit = true;\n  private _pointProps: PointProps;\n  private polylineProps: PolylineProps;\n  private lastDraggedToPosition: any;\n  private _labels: LabelProps[] = [];\n\n  constructor(private id: string,\n              private pointsLayer: AcLayerComponent,\n              private polylinesLayer: AcLayerComponent,\n              private coordinateConverter: CoordinateConverter,\n              private editOptions: PolylineEditOptions,\n              positions?: Cartesian3[]) {\n    super();\n    this._pointProps = {...editOptions.pointProps};\n    this.props = {...editOptions.polylineProps};\n    if (positions && positions.length >= 2) {\n      this.createFromExisting(positions);\n    }\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels) {\n      return;\n    }\n    const positions = this.getRealPositions();\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        label.position = positions[index];\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get props(): PolylineProps {\n    return this.polylineProps;\n  }\n\n  set props(value: PolylineProps) {\n    this.polylineProps = value;\n  }\n\n  get pointProps(): PointProps {\n    return this._pointProps;\n  }\n\n  set pointProps(value: PointProps) {\n    this._pointProps = value;\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this.positions.forEach(point => {\n      point.show = value;\n      this.updatePointsLayer(false, point);\n    });\n  }\n\n  private createFromExisting(positions: Cartesian3[]) {\n    positions.forEach((position) => {\n      this.addPointFromExisting(position);\n    });\n    this.addAllVirtualEditPoints();\n    this.doneCreation = true;\n  }\n\n  setManually(points: {\n    position: Cartesian3,\n    pointProp?: PointProps\n  }[] | Cartesian3[], polylineProps?: PolylineProps) {\n    if (!this.doneCreation) {\n      throw new Error('Update manually only in edit mode, after polyline is created');\n    }\n    this.positions.forEach(p => this.pointsLayer.remove(p.getId()));\n\n    const newPoints: EditPoint[] = [];\n    for (let i = 0; i < points.length; i++) {\n      const pointOrCartesian: any = points[i];\n      let newPoint = null;\n      if (pointOrCartesian.pointProps) {\n        newPoint = new EditPoint(this.id, pointOrCartesian.position, pointOrCartesian.pointProps);\n      } else {\n        newPoint = new EditPoint(this.id, pointOrCartesian, this._pointProps);\n      }\n      newPoints.push(newPoint);\n    }\n    this.positions = newPoints;\n    this.polylineProps = polylineProps ? polylineProps : this.polylineProps;\n\n    this.updatePointsLayer(true, ...this.positions);\n    this.addAllVirtualEditPoints();\n  }\n\n  private addAllVirtualEditPoints() {\n    const currentPoints = [...this.positions];\n    currentPoints.forEach((pos, index) => {\n      if (index !== currentPoints.length - 1) {\n        const currentPoint = pos;\n        const nextIndex = (index + 1) % (currentPoints.length);\n        const nextPoint = currentPoints[nextIndex];\n\n        const midPoint = this.setMiddleVirtualPoint(currentPoint, nextPoint);\n\n        this.updatePointsLayer(false, midPoint);\n      }\n    });\n  }\n\n  private setMiddleVirtualPoint(firstP: EditPoint, secondP: EditPoint): EditPoint {\n    const midPointCartesian3 = Cesium.Cartesian3.lerp(firstP.getPosition(), secondP.getPosition(), 0.5, new Cesium.Cartesian3());\n    const midPoint = new EditPoint(this.id, midPointCartesian3, this._pointProps);\n    midPoint.setVirtualEditPoint(true);\n\n    const firstIndex = this.positions.indexOf(firstP);\n    this.positions.splice(firstIndex + 1, 0, midPoint);\n    return midPoint;\n  }\n\n  private updateMiddleVirtualPoint(virtualEditPoint: EditPoint, prevPoint: EditPoint, nextPoint: EditPoint) {\n    const midPointCartesian3 = Cesium.Cartesian3.lerp(prevPoint.getPosition(), nextPoint.getPosition(), 0.5, new Cesium.Cartesian3());\n    virtualEditPoint.setPosition(midPointCartesian3);\n  }\n\n  changeVirtualPointToRealPoint(point: EditPoint) {\n    point.setVirtualEditPoint(false); // actual point becomes a real point\n    const pointsCount = this.positions.length;\n    const pointIndex = this.positions.indexOf(point);\n    const nextIndex = (pointIndex + 1) % (pointsCount);\n    const preIndex = ((pointIndex - 1) + pointsCount) % pointsCount;\n\n    const nextPoint = this.positions[nextIndex];\n    const prePoint = this.positions[preIndex];\n\n    const firstMidPoint = this.setMiddleVirtualPoint(prePoint, point);\n    const secMidPoint = this.setMiddleVirtualPoint(point, nextPoint);\n    this.updatePointsLayer(false, firstMidPoint, secMidPoint, point);\n\n  }\n\n  private renderPolylines() {\n    this.polylines.forEach(polyline => this.polylinesLayer.remove(polyline.getId()));\n    this.polylines = [];\n    const realPoints = this.positions.filter(point => !point.isVirtualEditPoint());\n    realPoints.forEach((point, index) => {\n      if (index !== realPoints.length - 1) {\n        const nextIndex = (index + 1);\n        const nextPoint = realPoints[nextIndex];\n        const polyline = new EditPolyline(this.id, point.getPosition(), nextPoint.getPosition(), this.polylineProps);\n        this.polylines.push(polyline);\n        this.polylinesLayer.update(polyline, polyline.getId());\n      }\n    });\n  }\n\n  addPointFromExisting(position: Cartesian3) {\n    const newPoint = new EditPoint(this.id, position, this._pointProps);\n    this.positions.push(newPoint);\n    this.updatePointsLayer(true, newPoint);\n  }\n\n\n  addPoint(position: Cartesian3) {\n    if (this.doneCreation) {\n      return;\n    }\n    const isFirstPoint = !this.positions.length;\n    if (isFirstPoint) {\n      const firstPoint = new EditPoint(this.id, position, this._pointProps);\n      this.positions.push(firstPoint);\n      this.updatePointsLayer(true, firstPoint);\n    }\n\n    this.movingPoint = new EditPoint(this.id, position.clone(), this._pointProps);\n    this.positions.push(this.movingPoint);\n\n    this.updatePointsLayer(true, this.movingPoint);\n  }\n\n  movePointFinish(editPoint: EditPoint) {\n    if (this.editOptions.clampHeightTo3D) {\n      editPoint.props.disableDepthTestDistance = Number.POSITIVE_INFINITY;\n      this.updatePointsLayer(false, editPoint);\n    }\n  }\n\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\n    editPoint.setPosition(toPosition);\n    if (this.doneCreation) {\n      if (editPoint.props.disableDepthTestDistance && this.editOptions.clampHeightTo3D) {\n        // To avoid bug with pickPosition() on point with disableDepthTestDistance\n        editPoint.props.disableDepthTestDistance = undefined;\n        return; // ignore first move because the pickPosition() could be wrong\n      }\n\n      if (editPoint.isVirtualEditPoint()) {\n        this.changeVirtualPointToRealPoint(editPoint);\n      }\n      const pointsCount = this.positions.length;\n      const pointIndex = this.positions.indexOf(editPoint);\n\n      if (pointIndex < this.positions.length - 1) {\n        const nextVirtualPoint = this.positions[(pointIndex + 1) % (pointsCount)];\n        const nextRealPoint = this.positions[(pointIndex + 2) % (pointsCount)];\n        this.updateMiddleVirtualPoint(nextVirtualPoint, editPoint, nextRealPoint);\n      }\n      if (pointIndex > 0) {\n        const prevVirtualPoint = this.positions[((pointIndex - 1) + pointsCount) % pointsCount];\n        const prevRealPoint = this.positions[((pointIndex - 2) + pointsCount) % pointsCount];\n        this.updateMiddleVirtualPoint(prevVirtualPoint, editPoint, prevRealPoint);\n      }\n    }\n    this.updatePointsLayer(true, editPoint);\n  }\n\n  moveTempMovingPoint(toPosition: Cartesian3) {\n    if (this.movingPoint) {\n      this.movePoint(toPosition, this.movingPoint);\n    }\n  }\n\n  moveShape(startMovingPosition: Cartesian3, draggedToPosition: Cartesian3) {\n    if (!this.doneCreation) {\n      return;\n    }\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = startMovingPosition;\n    }\n\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, draggedToPosition);\n    this.positions.forEach(point => {\n      const newPos = GeoUtilsService.addDeltaToPosition(point.getPosition(), delta, true);\n      point.setPosition(newPos);\n    });\n    this.updatePointsLayer(true, ...this.positions);\n    this.lastDraggedToPosition = draggedToPosition;\n  }\n\n  endMoveShape() {\n    this.lastDraggedToPosition = undefined;\n    this.updatePointsLayer(true, ...this.positions);\n  }\n\n  removePoint(pointToRemove: EditPoint) {\n    this.removePosition(pointToRemove);\n    this.positions\n      .filter(p => p.isVirtualEditPoint())\n      .forEach(p => this.removePosition(p));\n    this.addAllVirtualEditPoints();\n\n    this.renderPolylines();\n  }\n\n  addLastPoint(position: Cartesian3) {\n    this.doneCreation = true;\n    this.removePosition(this.movingPoint); // remove movingPoint\n    this.movingPoint = null;\n\n    this.addAllVirtualEditPoints();\n  }\n\n  getRealPositions(): Cartesian3[] {\n    return this.getRealPoints()\n      .map(position => position.getPosition());\n  }\n\n  getRealPoints(): EditPoint[] {\n    return this.positions\n      .filter(position => !position.isVirtualEditPoint() && position !== this.movingPoint);\n  }\n\n  getPoints(): EditPoint[] {\n    return this.positions.filter(position => position !== this.movingPoint);\n  }\n\n  getPositions(): Cartesian3[] {\n    return this.positions.map(position => position.getPosition());\n  }\n\n  getPositionsCallbackProperty(): Cartesian3[] {\n    return new Cesium.CallbackProperty(this.getPositions.bind(this), false);\n  }\n\n  private removePosition(point: EditPoint) {\n    const index = this.positions.findIndex((p) => p === point);\n    if (index < 0) {\n      return;\n    }\n    this.positions.splice(index, 1);\n    this.pointsLayer.remove(point.getId());\n  }\n\n  private updatePointsLayer(renderPolylines = true, ...point: EditPoint[]) {\n    if (renderPolylines) {\n      this.renderPolylines();\n    }\n    point.forEach(p => this.pointsLayer.update(p, p.getId()));\n  }\n\n  update() {\n    this.updatePointsLayer();\n  }\n\n  dispose() {\n    this.positions.forEach(editPoint => {\n      this.pointsLayer.remove(editPoint.getId());\n    });\n    this.polylines.forEach(line => this.polylinesLayer.remove(line.getId()));\n    if (this.movingPoint) {\n      this.pointsLayer.remove(this.movingPoint.getId());\n      this.movingPoint = undefined;\n    }\n    this.positions.length = 0;\n  }\n\n  getPointsCount(): number {\n    return this.positions.length;\n  }\n\n  getId() {\n    return this.id;\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { Rectangle } from '../../angular-cesium/models/rectangle';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { RectangleEditOptions, RectangleProps } from './rectangle-edit-options';\nimport { PointProps } from './point-edit-options';\nimport { defaultLabelProps, LabelProps } from './label-props';\n\nexport class EditableRectangle extends AcEntity {\n  private positions: EditPoint[] = [];\n  private movingPoint: EditPoint;\n  private done = false;\n  private _enableEdit = true;\n  private _defaultPointProps: PointProps;\n  private _rectangleProps: RectangleProps;\n  private lastDraggedToPosition: Cartesian3;\n  private _labels: LabelProps[] = [];\n\n  constructor(\n    private id: string,\n    private pointsLayer: AcLayerComponent,\n    private rectangleLayer: AcLayerComponent,\n    private coordinateConverter: CoordinateConverter,\n    editOptions: RectangleEditOptions,\n    positions?: Cartesian3[]\n  ) {\n    super();\n    this.defaultPointProps = {...editOptions.pointProps};\n    this.rectangleProps = {...editOptions.rectangleProps};\n    if (positions && positions.length === 2) {\n      this.createFromExisting(positions);\n    } else if (positions) {\n      throw new Error('Rectangle consist of 2 points but provided ' + positions.length);\n    }\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels) {\n      return;\n    }\n    const positions = this.getRealPositions();\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        label.position = positions[index];\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get rectangleProps(): RectangleProps {\n    return this._rectangleProps;\n  }\n\n  set rectangleProps(value: RectangleProps) {\n    this._rectangleProps = value;\n  }\n\n  get defaultPointProps(): PointProps {\n    return this._defaultPointProps;\n  }\n\n  set defaultPointProps(value: PointProps) {\n    this._defaultPointProps = value;\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this.positions.forEach(point => {\n      point.show = value;\n      this.updatePointsLayer(point);\n    });\n  }\n\n  private createFromExisting(positions: Cartesian3[]) {\n    positions.forEach(position => {\n      this.addPointFromExisting(position);\n    });\n    this.updateRectangleLayer();\n    this.updatePointsLayer(...this.positions);\n    this.done = true;\n  }\n\n  setPointsManually(points: EditPoint[], widthMeters?: number) {\n    if (!this.done) {\n      throw new Error('Update manually only in edit mode, after rectangle is created');\n    }\n    this.positions.forEach(p => this.pointsLayer.remove(p.getId()));\n    this.positions = points;\n    this.updatePointsLayer(...points);\n    this.updateRectangleLayer();\n  }\n\n  addPointFromExisting(position: Cartesian3) {\n    const newPoint = new EditPoint(this.id, position, this.defaultPointProps);\n    this.positions.push(newPoint);\n    this.updatePointsLayer(newPoint);\n  }\n\n  addPoint(position: Cartesian3) {\n    if (this.done) {\n      return;\n    }\n    const isFirstPoint = !this.positions.length;\n    if (isFirstPoint) {\n      const firstPoint = new EditPoint(this.id, position, this.defaultPointProps);\n      this.positions.push(firstPoint);\n      this.movingPoint = new EditPoint(this.id, position.clone(), this.defaultPointProps);\n      this.positions.push(this.movingPoint);\n      this.updatePointsLayer(firstPoint);\n    } else {\n\n      this.updatePointsLayer(...this.positions);\n      this.updateRectangleLayer();\n      this.done = true;\n      this.movingPoint = null;\n    }\n  }\n\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\n    if (!editPoint.isVirtualEditPoint()) {\n      editPoint.setPosition(toPosition);\n      this.updatePointsLayer(...this.positions);\n      this.updateRectangleLayer();\n    }\n  }\n\n  moveShape(startMovingPosition: Cartesian3, draggedToPosition: Cartesian3) {\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = startMovingPosition;\n    }\n\n    const lastDraggedCartographic = Cesium.Cartographic.fromCartesian(this.lastDraggedToPosition);\n    const draggedToPositionCartographic = Cesium.Cartographic.fromCartesian(draggedToPosition);\n    this.getRealPoints().forEach(point => {\n      const cartographic = Cesium.Cartographic.fromCartesian(point.getPosition());\n      cartographic.longitude += (draggedToPositionCartographic.longitude - lastDraggedCartographic.longitude);\n      cartographic.latitude += (draggedToPositionCartographic.latitude - lastDraggedCartographic.latitude);\n      point.setPosition(Cesium.Cartesian3.fromRadians(cartographic.longitude, cartographic.latitude, 0));\n    });\n\n    this.updatePointsLayer(...this.positions);\n    this.updateRectangleLayer();\n    this.lastDraggedToPosition = draggedToPosition;\n  }\n\n  endMoveShape() {\n    this.lastDraggedToPosition = undefined;\n    this.positions.forEach(point => this.updatePointsLayer(point));\n    this.updateRectangleLayer();\n  }\n\n  endMovePoint() {\n    this.updatePointsLayer(...this.positions);\n  }\n\n  moveTempMovingPoint(toPosition: Cartesian3) {\n    if (this.movingPoint) {\n      this.movePoint(toPosition, this.movingPoint);\n    }\n  }\n\n  removePoint(pointToRemove: EditPoint) {\n    this.removePosition(pointToRemove);\n    this.positions.filter(p => p.isVirtualEditPoint()).forEach(p => this.removePosition(p));\n  }\n\n  addLastPoint(position: Cartesian3) {\n    this.done = true;\n    this.removePosition(this.movingPoint); // remove movingPoint\n    this.movingPoint = null;\n  }\n\n  getRealPositions(): Cartesian3[] {\n    return this.getRealPoints().map(position => position.getPosition());\n  }\n\n  getRealPositionsCallbackProperty() {\n    return new Cesium.CallbackProperty(this.getRealPositions.bind(this), false);\n  }\n\n  getRealPoints(): EditPoint[] {\n    return this.positions.filter(position => !position.isVirtualEditPoint());\n  }\n\n  getPositions(): Cartesian3[] {\n    return this.positions.map(position => position.getPosition());\n  }\n\n  getRectangle(): Rectangle {\n    const cartographics = this.getPositions().map(cartesian => Cesium.Cartographic.fromCartesian(cartesian));\n    const longitudes = cartographics.map(position => position.longitude);\n    const latitudes = cartographics.map(position =>  position.latitude);\n\n    return new Cesium.Rectangle(\n      Math.min(...longitudes),\n      Math.min(...latitudes),\n      Math.max(...longitudes),\n      Math.max(...latitudes)\n    );\n  }\n\n  getRectangleCallbackProperty(): Rectangle {\n    return new Cesium.CallbackProperty(this.getRectangle.bind(this), false);\n  }\n\n  private removePosition(point: EditPoint) {\n    const index = this.positions.findIndex(p => p === point);\n    if (index < 0) {\n      return;\n    }\n    this.positions.splice(index, 1);\n    this.pointsLayer.remove(point.getId());\n  }\n\n  private updatePointsLayer(...point: EditPoint[]) {\n    point.forEach(p => this.pointsLayer.update(p, p.getId()));\n  }\n\n  private updateRectangleLayer() {\n    this.rectangleLayer.update(this, this.id);\n  }\n\n  dispose() {\n    this.rectangleLayer.remove(this.id);\n\n    this.positions.forEach(editPoint => {\n      this.pointsLayer.remove(editPoint.getId());\n    });\n    if (this.movingPoint) {\n      this.pointsLayer.remove(this.movingPoint.getId());\n      this.movingPoint = undefined;\n    }\n    this.positions.length = 0;\n  }\n\n  getPointsCount(): number {\n    return this.positions.length;\n  }\n\n  getId() {\n    return this.id;\n  }\n}\n\n","import { Observable } from 'rxjs';\nimport { LabelProps } from './label-props';\n\nexport class EditorObservable<T> extends Observable<T> {\n  dispose: Function;\n  enable: Function;\n  disable: Function;\n  getLabels: () => LabelProps[];\n  getEditValue: () => T;\n  setLabelsRenderFn: (func: (update: T, labels: LabelProps[]) => LabelProps[]) => void;\n  updateLabels: (labels: LabelProps[]) => void;\n  finishCreation: () => boolean;\n}\n","import { EditPoint } from './edit-point';\nimport { EditorObservable } from './editor-observable';\nimport { PointProps } from './point-edit-options';\nimport { Cartesian3 } from '../../angular-cesium';\nimport { PointEditUpdate } from './point-edit-update';\n\nexport class PointEditorObservable extends EditorObservable<PointEditUpdate> {\n  setManually: (point: { position: Cartesian3, pointProp?: PointProps } | Cartesian3, pointProps?: PointProps) => void;\n  getCurrentPoint: () => EditPoint;\n}\n","import { EditPoint } from './edit-point';\nimport { EditorObservable } from './editor-observable';\nimport { PolylineEditUpdate } from './polyline-edit-update';\nimport { PointProps } from './point-edit-options';\nimport { PolylineProps } from './polyline-edit-options';\nimport { Cartesian3 } from '../../angular-cesium';\n\nexport class PolylineEditorObservable extends EditorObservable<PolylineEditUpdate> {\n  setManually: (points: { position: Cartesian3, pointProp?: PointProps }[] | Cartesian3[], polylineProps?: PolylineProps) => void;\n  getCurrentPoints: () => EditPoint[];\n}\n","import { EditPoint } from './edit-point';\nimport { EditorObservable } from './editor-observable';\nimport { PolygonEditUpdate } from './polygon-edit-update';\nimport { PointProps } from './point-edit-options';\nimport { PolygonProps } from './polygon-edit-options';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\n\n\nexport class PolygonEditorObservable extends EditorObservable<PolygonEditUpdate> {\n  setManually: (points: { position: Cartesian3, pointProp?: PointProps }[] | Cartesian3[],\n                polygonProps?: PolygonProps) => void;\n  getCurrentPoints: () => EditPoint[];\n}\n","import { EditPoint } from './edit-point';\nimport { EditorObservable } from './editor-observable';\nimport { RectangleEditUpdate } from './rectangle-edit-update';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { PointProps } from './point-edit-options';\n\nexport class RectangleEditorObservable extends EditorObservable<RectangleEditUpdate> {\n  setManually: (\n    firstPosition: Cartesian3,\n    secondPosition: Cartesian3,\n    firstPointProp?: PointProps,\n    secondPointProp?: PointProps\n  ) => void;\n  getCurrentPoints: () => EditPoint[];\n}\n\n","import { EditorObservable } from './editor-observable';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CircleEditUpdate } from './circle-edit-update';\nimport { PointProps } from './point-edit-options';\nimport { EllipseProps } from './ellipse-edit-options';\n\nexport class CircleEditorObservable extends EditorObservable<CircleEditUpdate> {\n  setManually: (center: Cartesian3, radius: number, centerPointProp?: PointProps,\n                radiusPointProp?: PointProps, circleProp?: EllipseProps) => void;\n  getCenter: () => Cartesian3;\n  getRadius: () => number; // meters\n}\n","import { EditorObservable } from './editor-observable';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { EllipseEditUpdate } from './ellipse-edit-update';\nimport { PointProps } from './point-edit-options';\nimport { EllipseProps } from './ellipse-edit-options';\n\nexport class EllipseEditorObservable extends EditorObservable<EllipseEditUpdate> {\n  setManually: (\n    center: Cartesian3,\n    majorRadius: number,\n    rotation?: number,\n    minorRadius?: number,\n    centerPointProp?: PointProps,\n    radiusPointProp?: PointProps,\n    ellipseProp?: EllipseProps,\n  ) => void;\n  getCenter: () => Cartesian3;\n  getMinorRadius: () => number; // meters\n  getMajorRadius: () => number; // meters\n}\n","import { EditPoint } from './edit-point';\nimport { EditorObservable } from './editor-observable';\nimport { HippodromeEditUpdate } from './hippodrome-edit-update';\nimport { PointProps } from './point-edit-options';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\n\nexport class HippodromeEditorObservable extends EditorObservable<HippodromeEditUpdate> {\n  setManually: (firstPosition: Cartesian3,\n                secondPosition: Cartesian3,\n                widthMeters?: number,\n                firstPointProp?: PointProps,\n                secondPointProp?: PointProps) => void;\n  getCurrentPoints: () => EditPoint[];\n  getCurrentWidth: () => number; // meters\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { PointProps } from './point-edit-options';\nimport { HippodromeEditOptions, HippodromeProps } from './hippodrome-edit-options';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { defaultLabelProps, LabelProps } from './label-props';\n\nexport class EditableHippodrome extends AcEntity {\n  private positions: EditPoint[] = [];\n  private movingPoint: EditPoint;\n  private done = false;\n  private _enableEdit = true;\n  private _defaultPointProps: PointProps;\n  private _hippodromeProps: HippodromeProps;\n  private lastDraggedToPosition: Cartesian3;\n  private _labels: LabelProps[] = [];\n\n  constructor(\n    private id: string,\n    private pointsLayer: AcLayerComponent,\n    private hippodromeLayer: AcLayerComponent,\n    private coordinateConverter: CoordinateConverter,\n    editOptions: HippodromeEditOptions,\n    positions?: Cartesian3[],\n  ) {\n    super();\n    this.defaultPointProps = {...editOptions.pointProps};\n    this.hippodromeProps = {...editOptions.hippodromeProps};\n    if (positions && positions.length === 2) {\n      this.createFromExisting(positions);\n    } else if (positions) {\n      throw new Error('Hippodrome consist of 2 points but provided ' + positions.length);\n    }\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels) {\n      return;\n    }\n    const positions = this.getRealPositions();\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        label.position = positions[index];\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get hippodromeProps(): HippodromeProps {\n    return this._hippodromeProps;\n  }\n\n  set hippodromeProps(value: HippodromeProps) {\n    this._hippodromeProps = value;\n  }\n\n  get defaultPointProps(): PointProps {\n    return this._defaultPointProps;\n  }\n\n  set defaultPointProps(value: PointProps) {\n    this._defaultPointProps = value;\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this.positions.forEach(point => {\n      point.show = value;\n      this.updatePointsLayer(point);\n    });\n  }\n\n  private createFromExisting(positions: Cartesian3[]) {\n    positions.forEach(position => {\n      this.addPointFromExisting(position);\n    });\n    this.createHeightEditPoints();\n    this.updateHippdromeLayer();\n    this.updatePointsLayer(...this.positions);\n    this.done = true;\n  }\n\n  setPointsManually(points: EditPoint[], widthMeters?: number) {\n    if (!this.done) {\n      throw new Error('Update manually only in edit mode, after polyline is created');\n    }\n    this.hippodromeProps.width = widthMeters ? widthMeters : this.hippodromeProps.width;\n    this.positions.forEach(p => this.pointsLayer.remove(p.getId()));\n    this.positions = points;\n    this.createHeightEditPoints();\n    this.updatePointsLayer(...points);\n    this.updateHippdromeLayer();\n  }\n\n  addPointFromExisting(position: Cartesian3) {\n    const newPoint = new EditPoint(this.id, position, this.defaultPointProps);\n    this.positions.push(newPoint);\n    this.updatePointsLayer(newPoint);\n  }\n\n  addPoint(position: Cartesian3) {\n    if (this.done) {\n      return;\n    }\n    const isFirstPoint = !this.positions.length;\n    if (isFirstPoint) {\n      const firstPoint = new EditPoint(this.id, position, this.defaultPointProps);\n      this.positions.push(firstPoint);\n      this.movingPoint = new EditPoint(this.id, position.clone(), this.defaultPointProps);\n      this.positions.push(this.movingPoint);\n      this.updatePointsLayer(firstPoint);\n    } else {\n      this.createHeightEditPoints();\n\n      this.updatePointsLayer(...this.positions);\n      this.updateHippdromeLayer();\n      this.done = true;\n      this.movingPoint = null;\n    }\n  }\n\n  private createHeightEditPoints() {\n    this.positions.filter(p => p.isVirtualEditPoint()).forEach(p => this.removePosition(p));\n\n    const firstP = this.getRealPoints()[0];\n    const secP = this.getRealPoints()[1];\n\n    const midPointCartesian3 = Cesium.Cartesian3.lerp(firstP.getPosition(), secP.getPosition(), 0.5, new Cesium.Cartesian3());\n    const bearingDeg = this.coordinateConverter.bearingToCartesian(firstP.getPosition(), secP.getPosition());\n\n    const upAzimuth = Cesium.Math.toRadians(bearingDeg) - Math.PI / 2;\n    this.createMiddleEditablePoint(midPointCartesian3, upAzimuth);\n    const downAzimuth = Cesium.Math.toRadians(bearingDeg) + Math.PI / 2;\n    this.createMiddleEditablePoint(midPointCartesian3, downAzimuth);\n  }\n\n  private createMiddleEditablePoint(midPointCartesian3: any, azimuth: number) {\n    const upEditCartesian3 = GeoUtilsService.pointByLocationDistanceAndAzimuth(\n      midPointCartesian3,\n      this.hippodromeProps.width / 2,\n      azimuth,\n      true,\n    );\n    const midPoint = new EditPoint(this.id, upEditCartesian3, this.defaultPointProps);\n    midPoint.setVirtualEditPoint(true);\n    this.positions.push(midPoint);\n  }\n\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\n    if (!editPoint.isVirtualEditPoint()) {\n      editPoint.setPosition(toPosition);\n      this.createHeightEditPoints();\n      this.updatePointsLayer(...this.positions);\n      this.updateHippdromeLayer();\n    } else {\n      this.changeWidthByNewPoint(toPosition);\n    }\n  }\n\n  private changeWidthByNewPoint(toPosition: Cartesian3) {\n    const firstP = this.getRealPoints()[0];\n    const secP = this.getRealPoints()[1];\n    const midPointCartesian3 = Cesium.Cartesian3.lerp(firstP.getPosition(), secP.getPosition(), 0.5, new Cesium.Cartesian3());\n\n    const bearingDeg = this.coordinateConverter.bearingToCartesian(midPointCartesian3, toPosition);\n    let normalizedBearingDeb = bearingDeg;\n    if (bearingDeg > 270) {\n      normalizedBearingDeb = bearingDeg - 270;\n    } else if (bearingDeg > 180) {\n      normalizedBearingDeb = bearingDeg - 180;\n    }\n    let bearingDegHippodromeDots = this.coordinateConverter.bearingToCartesian(firstP.getPosition(), secP.getPosition());\n    if (bearingDegHippodromeDots > 180) {\n      bearingDegHippodromeDots = this.coordinateConverter.bearingToCartesian(secP.getPosition(), firstP.getPosition());\n    }\n    let fixedBearingDeg =\n      bearingDegHippodromeDots > normalizedBearingDeb\n        ? bearingDegHippodromeDots - normalizedBearingDeb\n        : normalizedBearingDeb - bearingDegHippodromeDots;\n\n    if (bearingDeg > 270) {\n      fixedBearingDeg = bearingDeg - bearingDegHippodromeDots;\n    }\n\n    const distanceMeters = Math.abs(GeoUtilsService.distance(midPointCartesian3, toPosition));\n    const radiusWidth = Math.sin(Cesium.Math.toRadians(fixedBearingDeg)) * distanceMeters;\n\n    this.hippodromeProps.width = Math.abs(radiusWidth) * 2;\n    this.createHeightEditPoints();\n    this.updatePointsLayer(...this.positions);\n    this.updateHippdromeLayer();\n  }\n\n  moveShape(startMovingPosition: Cartesian3, draggedToPosition: Cartesian3) {\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = startMovingPosition;\n    }\n\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, draggedToPosition);\n    this.getRealPoints().forEach(point => {\n      const newPos = GeoUtilsService.addDeltaToPosition(point.getPosition(), delta, true);\n      point.setPosition(newPos);\n    });\n    this.createHeightEditPoints();\n    this.updatePointsLayer(...this.positions);\n    this.updateHippdromeLayer();\n    this.lastDraggedToPosition = draggedToPosition;\n  }\n\n  endMoveShape() {\n    this.lastDraggedToPosition = undefined;\n    this.createHeightEditPoints();\n    this.positions.forEach(point => this.updatePointsLayer(point));\n    this.updateHippdromeLayer();\n  }\n\n  endMovePoint() {\n    this.createHeightEditPoints();\n    this.updatePointsLayer(...this.positions);\n  }\n\n  moveTempMovingPoint(toPosition: Cartesian3) {\n    if (this.movingPoint) {\n      this.movePoint(toPosition, this.movingPoint);\n    }\n  }\n\n  removePoint(pointToRemove: EditPoint) {\n    this.removePosition(pointToRemove);\n    this.positions.filter(p => p.isVirtualEditPoint()).forEach(p => this.removePosition(p));\n  }\n\n  addLastPoint(position: Cartesian3) {\n    this.done = true;\n    this.removePosition(this.movingPoint); // remove movingPoint\n    this.movingPoint = null;\n  }\n\n  getRealPositions(): Cartesian3[] {\n    return this.getRealPoints().map(position => position.getPosition());\n  }\n\n  getRealPositionsCallbackProperty() {\n    return new Cesium.CallbackProperty(this.getRealPositions.bind(this), false);\n  }\n\n  getRealPoints(): EditPoint[] {\n    return this.positions.filter(position => !position.isVirtualEditPoint());\n  }\n\n  getWidth(): number {\n    return this.hippodromeProps.width;\n  }\n\n  getPositions(): Cartesian3[] {\n    return this.positions.map(position => position.getPosition());\n  }\n\n  private removePosition(point: EditPoint) {\n    const index = this.positions.findIndex(p => p === point);\n    if (index < 0) {\n      return;\n    }\n    this.positions.splice(index, 1);\n    this.pointsLayer.remove(point.getId());\n  }\n\n  private updatePointsLayer(...point: EditPoint[]) {\n    point.forEach(p => this.pointsLayer.update(p, p.getId()));\n  }\n\n  private updateHippdromeLayer() {\n    this.hippodromeLayer.update(this, this.id);\n  }\n\n  dispose() {\n    this.hippodromeLayer.remove(this.id);\n\n    this.positions.forEach(editPoint => {\n      this.pointsLayer.remove(editPoint.getId());\n    });\n    if (this.movingPoint) {\n      this.pointsLayer.remove(this.movingPoint.getId());\n      this.movingPoint = undefined;\n    }\n    this.positions.length = 0;\n  }\n\n  getPointsCount(): number {\n    return this.positions.length;\n  }\n\n  getId() {\n    return this.id;\n  }\n}\n","import { publish, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from '../../../models/edit-point';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { PolylinesManagerService } from './polylines-manager.service';\nimport { ClampTo3DOptions, PolylineEditOptions, PolylineProps } from '../../../models/polyline-edit-options';\nimport { PointProps } from '../../../models/point-edit-options';\nimport { PolylineEditUpdate } from '../../../models/polyline-edit-update';\nimport { PolylineEditorObservable } from '../../../models/polyline-editor-observable';\nimport { EditPolyline } from '../../../models';\nimport { LabelProps } from '../../../models/label-props';\nimport { debounce, generateKey } from '../../utils';\nimport { CesiumService } from '../../../../angular-cesium';\n\nexport const DEFAULT_POLYLINE_OPTIONS: PolylineEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  addLastPointEvent: CesiumEvent.LEFT_DOUBLE_CLICK,\n  removePointEvent: CesiumEvent.RIGHT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  allowDrag: true,\n  pointProps: {\n    color: Cesium.Color.WHITE.withAlpha(0.95),\n    outlineColor: Cesium.Color.BLACK.withAlpha(0.5),\n    outlineWidth: 1,\n    pixelSize: 15,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\n  },\n  polylineProps: {\n    material: () => Cesium.Color.BLACK,\n    width: 3,\n    clampToGround: false,\n    zIndex: 0,\n    classificationType: Cesium.ClassificationType.BOTH,\n  },\n  clampHeightTo3D: false,\n  clampHeightTo3DOptions: {\n    clampToTerrain: false,\n    clampMostDetailed: true,\n    clampToHeightPickWidth: 2,\n  },\n};\n\n/**\n * Service for creating editable polylines\n *\n *  * You must provide `PolylineEditorService` yourself.\n * PolygonsEditorService works together with `<polylines-editor>` component. Therefor you need to create `<polylines-editor>`\n * for each `PolylineEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `PolylineEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `PolylineEditorObservable`.\n * + To stop editing call `dsipose()` from the `PolylineEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over editted shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `PolylineEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n * usage:\n * ```typescript\n *  // Start creating polyline\n *  const editing$ = polylinesEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit polyline from existing polyline cartesian3 positions\n *  const editing$ = this.polylinesEditor.edit(initialPos);\n *\n * ```\n */\n@Injectable()\nexport class PolylinesEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<PolylineEditUpdate>();\n  private updatePublisher = publish<PolylineEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private polylinesManager: PolylinesManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n  private cesiumScene;\n\n  private clampPointsDebounced = debounce((id, clampHeightTo3D: boolean, clampHeightTo3DOptions) => {\n    this.clampPoints(id, clampHeightTo3D, clampHeightTo3DOptions);\n  }, 300);\n\n  init(mapEventsManager: MapEventsManagerService,\n       coordinateConverter: CoordinateConverter,\n       cameraService: CameraService,\n       polylinesManager: PolylinesManagerService,\n       cesiumViewer: CesiumService) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.polylinesManager = polylinesManager;\n    this.updatePublisher.connect();\n\n    this.cesiumScene = cesiumViewer.getScene();\n  }\n\n  onUpdate(): Observable<PolylineEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  private clampPoints(id, clampHeightTo3D: boolean, { clampToTerrain, clampMostDetailed, clampToHeightPickWidth }: ClampTo3DOptions) {\n    if (clampHeightTo3D && clampMostDetailed) {\n      const polyline = this.polylinesManager.get(id);\n      const points = polyline.getPoints();\n\n      if (!clampToTerrain) {\n        // 3dTiles\n        points.forEach(point => {\n          point.setPosition(this.cesiumScene.clampToHeight(point.getPosition(), undefined, clampToHeightPickWidth));\n        });\n      } else {\n        const cartographics = points.map(point => this.coordinateConverter.cartesian3ToCartographic(point.getPosition()));\n        const promise = Cesium.sampleTerrain(this.cesiumScene.terrainProvider, 11, cartographics);\n        Cesium.when(promise, function (updatedPositions) {\n          points.forEach((point, index) => {\n            point.setPosition(Cesium.Cartographic.toCartesian(updatedPositions[index]));\n          });\n        });\n      }\n    }\n  }\n\n\n  private screenToPosition(cartesian2, clampHeightTo3D: boolean, {clampToHeightPickWidth, clampToTerrain}: ClampTo3DOptions) {\n    const cartesian3 = this.coordinateConverter.screenToCartesian3(cartesian2);\n\n    // If cartesian3 is undefined then the point inst on the globe\n    if (clampHeightTo3D && cartesian3) {\n      const globePositionPick = () => {\n        const ray = this.cameraService.getCamera().getPickRay(cartesian2);\n        return this.cesiumScene.globe.pick(ray, this.cesiumScene);\n      };\n\n      // is terrain?\n      if (clampToTerrain) {\n        return globePositionPick();\n      } else {\n        const cartesian3PickPosition = this.cesiumScene.pickPosition(cartesian2);\n        const latLon = CoordinateConverter.cartesian3ToLatLon(cartesian3PickPosition);\n        if (latLon.height < 0) {// means nothing picked -> Validate it\n          return globePositionPick();\n        }\n        return this.cesiumScene.clampToHeight(cartesian3PickPosition, undefined, clampToHeightPickWidth);\n      }\n    }\n\n    return cartesian3;\n  }\n\n  create(options = DEFAULT_POLYLINE_OPTIONS, eventPriority = 100): PolylineEditorObservable {\n    const positions: Cartesian3[] = [];\n    const id = generateKey();\n    const polylineOptions = this.setOptions(options);\n\n    const clientEditSubject = new BehaviorSubject<PolylineEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      positions,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      polylineOptions: polylineOptions,\n    });\n\n    const finishCreation = (position: Cartesian3) => {\n      return this.switchToEditMode(\n        id,\n        position,\n        clientEditSubject,\n        positions,\n        eventPriority,\n        polylineOptions,\n        editorObservable,\n        finishedCreate);\n    };\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n      pickConfig: options.pickConfiguration,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: polylineOptions.addPointEvent,\n      modifier: polylineOptions.addPointModifier,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n      pickConfig: options.pickConfiguration,\n    });\n    const addLastPointRegistration = this.mapEventsManager.register({\n      event: polylineOptions.addLastPointEvent,\n      modifier: polylineOptions.addLastPointModifier,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n      pickConfig: options.pickConfiguration,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration, addLastPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id, finishCreation);\n\n    mouseMoveRegistration.subscribe(({ movement: { endPosition } }) => {\n      const position = this.screenToPosition(endPosition, polylineOptions.clampHeightTo3D, polylineOptions.clampHeightTo3DOptions);\n      if (position) {\n        this.updateSubject.next({\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.CREATE,\n          updatedPosition: position,\n          editAction: EditActions.MOUSE_MOVE,\n        });\n      }\n    });\n\n    addPointRegistration.subscribe(({ movement: { endPosition } }) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.screenToPosition(endPosition, polylineOptions.clampHeightTo3D, polylineOptions.clampHeightTo3DOptions);\n      if (!position) {\n        return;\n      }\n      const allPositions = this.getPositions(id);\n      if (allPositions.find((cartesian) => cartesian.equals(position))) {\n        return;\n      }\n      const updateValue = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.CREATE,\n        updatedPosition: position,\n        editAction: EditActions.ADD_POINT,\n      };\n      this.updateSubject.next(updateValue);\n      clientEditSubject.next({\n        ...updateValue,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n      });\n      if (polylineOptions.maximumNumberOfPoints && allPositions.length + 1 === polylineOptions.maximumNumberOfPoints) {\n        finishedCreate = finishCreation(position);\n      }\n    });\n\n    addLastPointRegistration.subscribe(({ movement: { endPosition } }) => {\n      const position = this.screenToPosition(endPosition, polylineOptions.clampHeightTo3D, polylineOptions.clampHeightTo3DOptions);\n      if (!position) {\n        return;\n      }\n\n      // Add last point to positions if not already added\n      const allPositions = this.getPositions(id);\n      if (!allPositions.find((cartesian) => cartesian.equals(position))) {\n        const updateValue = {\n          id,\n          positions: allPositions,\n          editMode: EditModes.CREATE,\n          updatedPosition: position,\n          editAction: EditActions.ADD_POINT,\n        };\n        this.updateSubject.next(updateValue);\n        clientEditSubject.next({\n          ...updateValue,\n          positions: this.getPositions(id),\n          points: this.getPoints(id),\n        });\n      }\n\n      finishedCreate = finishCreation(position);\n    });\n\n    return editorObservable;\n  }\n\n  private switchToEditMode(id,\n                           position,\n                           clientEditSubject,\n                           positions: Cartesian3[],\n                           eventPriority,\n                           polylineOptions,\n                           editorObservable,\n                           finishedCreate: boolean) {\n    const update = {\n      id,\n      positions: this.getPositions(id),\n      editMode: EditModes.CREATE,\n      updatedPosition: position,\n      editAction: EditActions.ADD_LAST_POINT,\n    };\n    this.updateSubject.next(update);\n    clientEditSubject.next({\n      ...update,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n    });\n\n    const changeMode = {\n      id,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.CHANGE_TO_EDIT,\n    };\n    this.updateSubject.next(changeMode);\n    clientEditSubject.next(changeMode);\n    if (this.observablesMap.has(id)) {\n      this.observablesMap.get(id).forEach(registration => registration.dispose());\n    }\n    this.observablesMap.delete(id);\n    this.editPolyline(id, positions, eventPriority, clientEditSubject, polylineOptions, editorObservable);\n    finishedCreate = true;\n    return finishedCreate;\n  }\n\n  edit(positions: Cartesian3[], options = DEFAULT_POLYLINE_OPTIONS, priority = 100): PolylineEditorObservable {\n    if (positions.length < 2) {\n      throw new Error('Polylines editor error edit(): polyline should have at least 2 positions');\n    }\n    const id = generateKey();\n    const polylineOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<PolylineEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT\n    });\n    const update = {\n      id,\n      positions: positions,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      polylineOptions: polylineOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n    });\n    return this.editPolyline(\n      id,\n      positions,\n      priority,\n      editSubject,\n      polylineOptions\n    );\n  }\n\n  private editPolyline(id: string,\n                       positions: Cartesian3[],\n                       priority: number,\n                       editSubject: Subject<PolylineEditUpdate>,\n                       options: PolylineEditOptions,\n                       editObservable?: PolylineEditorObservable) {\n    this.clampPoints(id, options.clampHeightTo3D, options.clampHeightTo3DOptions);\n\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: options.dragPointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      pickConfig: options.pickConfiguration,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    const pointRemoveRegistration = this.mapEventsManager.register({\n      event: options.removePointEvent,\n      modifier: options.removePointModifier,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      pickConfig: options.pickConfiguration,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: options.dragShapeEvent,\n        entityType: EditPolyline,\n        pick: PickOptions.PICK_FIRST,\n        pickConfig: options.pickConfiguration,\n        priority,\n        pickFilter: entity => id === entity.editedEntityId,\n      });\n    }\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({ movement: { drop } }) => this.polylinesManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\n        .subscribe(({ movement: { startPosition, endPosition, drop }, entities }) => {\n          const endDragPosition = this.screenToPosition(endPosition, false, options.clampHeightTo3DOptions);\n          const startDragPosition = this.screenToPosition(startPosition, false, options.clampHeightTo3DOptions);\n          if (!endDragPosition) {\n            return;\n          }\n\n          const update = {\n            id,\n            positions: this.getPositions(id),\n            editMode: EditModes.EDIT,\n            updatedPosition: endDragPosition,\n            draggedPosition: startDragPosition,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n            positions: this.getPositions(id),\n            points: this.getPoints(id),\n          });\n        });\n    }\n\n    pointDragRegistration.pipe(\n      tap(({ movement: { drop } }) => this.polylinesManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\n      .subscribe(({ movement: { endPosition, drop }, entities }) => {\n        const position = this.screenToPosition(endPosition, options.clampHeightTo3D, options.clampHeightTo3DOptions);\n        if (!position) {\n          return;\n        }\n        const point: EditPoint = entities[0];\n\n        const update = {\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.EDIT,\n          updatedPosition: position,\n          updatedPoint: point,\n          editAction: drop ? EditActions.DRAG_POINT_FINISH : EditActions.DRAG_POINT,\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n          positions: this.getPositions(id),\n          points: this.getPoints(id),\n        });\n\n        this.clampPointsDebounced(id, options.clampHeightTo3D, options.clampHeightTo3DOptions);\n      });\n\n    pointRemoveRegistration.subscribe(({ entities }) => {\n      const point: EditPoint = entities[0];\n      const allPositions = [...this.getPositions(id)];\n      if (allPositions.length < 3) {\n        return;\n      }\n      const index = allPositions.findIndex(position => point.getPosition().equals(position as Cartesian3));\n      if (index < 0) {\n        return;\n      }\n\n      const update = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.EDIT,\n        updatedPoint: point,\n        editAction: EditActions.REMOVE_POINT,\n      };\n      this.updateSubject.next(update);\n      editSubject.next({\n        ...update,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n      });\n\n      this.clampPoints(id, options.clampHeightTo3D, options.clampHeightTo3DOptions);\n    });\n\n    const observables = [pointDragRegistration, pointRemoveRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n    this.observablesMap.set(id, observables);\n    return this.createEditorObservable(editSubject, id);\n  }\n\n  private setOptions(options: PolylineEditOptions) {\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_POLYLINE_OPTIONS));\n    const polylineOptions: PolylineEditOptions = Object.assign(defaultClone, options);\n    polylineOptions.pointProps = {...DEFAULT_POLYLINE_OPTIONS.pointProps, ...options.pointProps};\n    polylineOptions.polylineProps = {...DEFAULT_POLYLINE_OPTIONS.polylineProps, ...options.polylineProps};\n    polylineOptions.clampHeightTo3DOptions = {...DEFAULT_POLYLINE_OPTIONS.clampHeightTo3DOptions, ...options.clampHeightTo3DOptions};\n\n    if (options.clampHeightTo3D) {\n      if (!this.cesiumScene.pickPositionSupported || !this.cesiumScene.clampToHeightSupported) {\n        throw new Error(`Cesium pickPosition and clampToHeight must be supported to use clampHeightTo3D`);\n      }\n\n      if (this.cesiumScene.pickTranslucentDepth) {\n        console.warn(`Cesium scene.pickTranslucentDepth must be false in order to make the editors work properly on 3D`);\n      }\n\n      if (polylineOptions.pointProps.color.alpha === 1 || polylineOptions.pointProps.outlineColor.alpha === 1) {\n        console.warn('Point color and outline color must have alpha in order to make the editor work properly on 3D');\n      }\n\n      polylineOptions.allowDrag = false;\n      polylineOptions.polylineProps.clampToGround = true;\n      polylineOptions.pointProps.heightReference = polylineOptions.clampHeightTo3DOptions.clampToTerrain ?\n        Cesium.HeightReference.CLAMP_TO_GROUND : Cesium.HeightReference.RELATIVE_TO_GROUND;\n      polylineOptions.pointProps.disableDepthTestDistance = Number.POSITIVE_INFINITY;\n    }\n    return polylineOptions;\n  }\n\n\n  private createEditorObservable(observableToExtend: any, id: string, finishCreation?: (position: Cartesian3) => boolean)\n                                                                                                      : PolylineEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      });\n    };\n\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n      });\n    };\n\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n      });\n    };\n\n    observableToExtend.setManually = (points: {\n      position: Cartesian3,\n      pointProp?: PointProps\n    }[] | Cartesian3[], polylineProps?: PolylineProps) => {\n      const polyline = this.polylinesManager.get(id);\n      polyline.setManually(points, polylineProps);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: any) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      });\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      });\n    };\n\n    observableToExtend.finishCreation = () => {\n      if (!finishCreation) {\n        throw new Error('Polylines editor error edit(): cannot call finishCreation() on edit');\n      }\n\n      return finishCreation(null);\n    };\n\n    observableToExtend.getCurrentPoints = () => this.getPoints(id);\n\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n\n    observableToExtend.getLabels = (): LabelProps[] => this.polylinesManager.get(id).labels;\n\n    return observableToExtend as PolylineEditorObservable;\n  }\n\n  private getPositions(id: string) {\n    const polyline = this.polylinesManager.get(id);\n    return polyline.getRealPositions();\n  }\n\n  private getPoints(id: string) {\n    const polyline = this.polylinesManager.get(id);\n    return polyline.getRealPoints();\n  }\n}\n","import { CoordinateConverter } from './../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { AcLayerComponent } from './../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Injectable } from '@angular/core';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { PolygonEditOptions } from '../../../models/polygon-edit-options';\nimport { EditablePolyline } from '../../../models/editable-polyline';\n\n@Injectable()\nexport class PolylinesManagerService {\n  polylines: Map<string, EditablePolyline> = new Map<string, EditablePolyline>();\n\n  createEditablePolyline(id: string, editPolylinesLayer: AcLayerComponent, editPointsLayer: AcLayerComponent,\n                         coordinateConverter: CoordinateConverter, polylineOptions?: PolygonEditOptions, positions?: Cartesian3[]) {\n    const editablePolyline = new EditablePolyline(\n      id,\n      editPolylinesLayer,\n      editPointsLayer,\n      coordinateConverter,\n      polylineOptions,\n      positions);\n    this.polylines.set(id, editablePolyline\n    );\n  }\n\n  get(id: string): EditablePolyline {\n    return this.polylines.get(id);\n  }\n\n  clear() {\n    this.polylines.forEach(polyline => polyline.dispose());\n    this.polylines.clear();\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { CesiumService } from '../../../angular-cesium/services/cesium/cesium.service';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { PolylinesEditorService } from '../../services/entity-editors/polyline-editor/polylines-editor.service';\nimport { PolylinesManagerService } from '../../services/entity-editors/polyline-editor/polylines-manager.service';\nimport { PolylineEditUpdate } from '../../models/polyline-edit-update';\nimport { EditablePolyline } from '../../models/editable-polyline';\nimport { LabelProps } from '../../models/label-props';\n\n@Component({\n  selector: 'polylines-editor',\n  template: /*html*/ `\n    <ac-layer #editPolylinesLayer acFor=\"let polyline of editPolylines$\" [context]=\"this\">\n      <ac-polyline-desc\n        props=\"{\n        positions: polyline.getPositionsCallbackProperty(),\n        width: polyline.props.width,\n        material: polyline.props.material(),\n        clampToGround: polyline.props.clampToGround,\n        zIndex: polyline.props.zIndex,\n        classificationType: polyline.props.classificationType,\n      }\"\n      >\n      </ac-polyline-desc>\n    </ac-layer>\n\n    <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n      <ac-point-desc\n        props=\"{\n        position: point.getPositionCallbackProperty(),\n        pixelSize: getPointSize(point),\n        color: point.props.color,\n        outlineColor: point.props.outlineColor,\n        outlineWidth: point.props.outlineWidth,\n        show: getPointShow(point),\n        disableDepthTestDistance: point.props.disableDepthTestDistance,\n        heightReference: point.props.heightReference,\n    }\"\n      ></ac-point-desc>\n    </ac-layer>\n\n    <ac-layer #polylineLabelsLayer acFor=\"let polylineLabels of polylineLabels$\" [context]=\"this\">\n      <ac-array-desc acFor=\"let label of polylineLabels.labels\" [idGetter]=\"getLabelId\">\n        <ac-label-primitive-desc\n          props=\"{\n            position: label.position,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            text: label.text,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin,\n            disableDepthTestDistance: label.disableDepthTestDistance,\n        }\"\n        >\n        </ac-label-primitive-desc>\n      </ac-array-desc>\n    </ac-layer>\n  `,\n  providers: [CoordinateConverter, PolylinesManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PolylinesEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: PolylineEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editPolylines$ = new Subject<AcNotification>();\n  public polylineLabels$ = new Subject<AcNotification>();\n\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\n  @ViewChild('editPolylinesLayer') private editPolylinesLayer: AcLayerComponent;\n  @ViewChild('polylineLabelsLayer') private polylineLabelsLayer: AcLayerComponent;\n\n  constructor(\n    private polylinesEditor: PolylinesEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private polylinesManager: PolylinesManagerService,\n    private cesiumService: CesiumService,\n  ) {\n    this.polylinesEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, polylinesManager, this.cesiumService);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.polylinesEditor.onUpdate().subscribe((update: PolylineEditUpdate) => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(polyline: EditablePolyline, update: PolylineEditUpdate, labels?: LabelProps[]) {\n    update.positions = polyline.getRealPositions();\n    update.points = polyline.getRealPoints();\n\n    if (labels) {\n      polyline.labels = labels;\n      this.polylineLabelsLayer.update(polyline, polyline.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    polyline.labels = this.editLabelsRenderFn(update, polyline.labels);\n    this.polylineLabelsLayer.update(polyline, polyline.getId());\n  }\n\n  removeEditLabels(polyline: EditablePolyline) {\n    polyline.labels = [];\n    this.polylineLabelsLayer.remove(polyline.getId());\n  }\n\n  handleCreateUpdates(update: PolylineEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.polylinesManager.createEditablePolyline(\n          update.id,\n          this.editPointsLayer,\n          this.editPolylinesLayer,\n          this.coordinateConverter,\n          update.polylineOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (update.updatedPosition) {\n          polyline.moveTempMovingPoint(update.updatedPosition);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (update.updatedPosition) {\n          polyline.moveTempMovingPoint(update.updatedPosition);\n          polyline.addPoint(update.updatedPosition);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.ADD_LAST_POINT: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (update.updatedPosition) {\n          polyline.addLastPoint(update.updatedPosition);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline) {\n          polyline.dispose();\n          this.removeEditLabels(polyline);\n          this.editLabelsRenderFn = undefined;\n        }\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const polyline = this.polylinesManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(polyline, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const polyline = this.polylinesManager.get(update.id);\n        this.renderEditLabels(polyline, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const polyline = this.polylinesManager.get(update.id);\n        this.renderEditLabels(polyline, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: PolylineEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.polylinesManager.createEditablePolyline(\n          update.id,\n          this.editPointsLayer,\n          this.editPolylinesLayer,\n          this.coordinateConverter,\n          update.polylineOptions,\n          update.positions,\n        );\n        break;\n      }\n      case EditActions.DRAG_POINT: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline && polyline.enableEdit) {\n          polyline.movePoint(update.updatedPosition, update.updatedPoint);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline && polyline.enableEdit) {\n          polyline.movePointFinish(update.updatedPoint);\n\n          if (update.updatedPoint.isVirtualEditPoint()) {\n            polyline.changeVirtualPointToRealPoint(update.updatedPoint);\n            this.renderEditLabels(polyline, update);\n          }\n        }\n        break;\n      }\n      case EditActions.REMOVE_POINT: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline && polyline.enableEdit) {\n          polyline.removePoint(update.updatedPoint);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline) {\n          polyline.enableEdit = false;\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline) {\n          polyline.enableEdit = true;\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline && polyline.enableEdit) {\n          polyline.moveShape(update.draggedPosition, update.updatedPosition);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline && polyline.enableEdit) {\n          polyline.endMoveShape();\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.polylinesManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { EditableHippodrome } from '../../../models/editable-hippodrome';\nimport { HippodromeEditOptions } from '../../../models/hippodrome-edit-options';\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\n\n@Injectable()\nexport class HippodromeManagerService {\n  hippodromes: Map<string, EditableHippodrome> = new Map<string, EditableHippodrome>();\n\n  createEditableHippodrome(id: string, editHippodromeLayer: AcLayerComponent, editPointsLayer: AcLayerComponent,\n                           coordinateConverter: CoordinateConverter, hippodromeEditOptions?: HippodromeEditOptions,\n                           positions?: Cartesian3[]) {\n    const editableHippodrome = new EditableHippodrome(\n      id,\n      editHippodromeLayer,\n      editPointsLayer,\n      coordinateConverter,\n      hippodromeEditOptions,\n      positions);\n    this.hippodromes.set(id, editableHippodrome);\n  }\n\n  get(id: string): EditableHippodrome {\n    return this.hippodromes.get(id);\n  }\n\n  clear() {\n    this.hippodromes.forEach(hippodrome => hippodrome.dispose());\n    this.hippodromes.clear();\n  }\n}\n","import { publish, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from '../../../models/edit-point';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { HippodromeEditOptions } from '../../../models/hippodrome-edit-options';\nimport { HippodromeManagerService } from './hippodrome-manager.service';\nimport { HippodromeEditorObservable } from '../../../models/hippodrome-editor-oboservable';\nimport { HippodromeEditUpdate } from '../../../models/hippodrome-edit-update';\nimport { EditableHippodrome } from '../../../models/editable-hippodrome';\nimport { PointProps } from '../../../models/point-edit-options';\nimport { LabelProps } from '../../../models/label-props';\nimport { generateKey } from '../../utils';\n\nexport const DEFAULT_HIPPODROME_OPTIONS: HippodromeEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  allowDrag: true,\n  hippodromeProps: {\n    fill: true,\n    material: Cesium.Color.CORNFLOWERBLUE.withAlpha(0.4),\n    outline: true,\n    width: 200000.0,\n    outlineWidth: 1,\n    outlineColor: Cesium.Color.WHITE.withAlpha(0.8),\n    classificationType: Cesium.ClassificationType.BOTH,\n    zIndex: 0,\n    shadows: Cesium.ShadowMode.DISABLED,\n  },\n  pointProps: {\n    color: Cesium.Color.WHITE,\n    outlineColor: Cesium.Color.BLACK.withAlpha(0.2),\n    outlineWidth: 1,\n    pixelSize: 13,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\n  },\n};\n\n/**\n * Service for creating editable hippodromes\n *\n * You must provide `HippodromeEditorService` yourself.\n * HippodromeEditorService works together with `<hippodromes-editor>` component. Therefor you need to create `<hippodromes-editor>`\n * for each `PolylineEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `HippodromeEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `HippodromeEditorObservable`.\n * + To stop editing call `dsipose()` from the `HippodromeEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over editted shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `HippodromeEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n *\n * usage:\n * ```typescript\n *  // Start creating hippodrome\n *  const editing$ = hippodromeEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit hippodromes from existing hippodromes cartesian3 positions\n *  const editing$ = this.hippodromeEditor.edit(initialPos);\n *\n * ```\n */\n@Injectable()\nexport class HippodromeEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<HippodromeEditUpdate>();\n  private updatePublisher = publish<HippodromeEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private hippodromeManager: HippodromeManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n\n  init(mapEventsManager: MapEventsManagerService,\n       coordinateConverter: CoordinateConverter,\n       cameraService: CameraService,\n       managerService: HippodromeManagerService) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.hippodromeManager = managerService;\n    this.updatePublisher.connect();\n  }\n\n  onUpdate(): Observable<HippodromeEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  create(options = DEFAULT_HIPPODROME_OPTIONS, eventPriority = 100): HippodromeEditorObservable {\n    const positions: Cartesian3[] = [];\n    const id = generateKey();\n    const hippodromeOptions = this.setOptions(options);\n\n    const clientEditSubject = new BehaviorSubject<HippodromeEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      positions,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      hippodromeOptions: hippodromeOptions,\n    });\n\n    const finishCreation = () => {\n      const changeMode = {\n        id,\n        editMode: EditModes.CREATE,\n        editAction: EditActions.CHANGE_TO_EDIT,\n      };\n      this.updateSubject.next(changeMode);\n      clientEditSubject.next(changeMode);\n      if (this.observablesMap.has(id)) {\n        this.observablesMap.get(id).forEach(registration => registration.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.editHippodrome(id, eventPriority, clientEditSubject, hippodromeOptions, editorObservable);\n      finishedCreate = true;\n      return finishedCreate;\n    };\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pickConfig: options.pickConfiguration,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: hippodromeOptions.addPointEvent,\n      pickConfig: options.pickConfiguration,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id, finishCreation);\n\n    mouseMoveRegistration.subscribe(({movement: {endPosition}}) => {\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n\n      if (position) {\n        this.updateSubject.next({\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.CREATE,\n          updatedPosition: position,\n          editAction: EditActions.MOUSE_MOVE,\n        });\n      }\n    });\n\n    addPointRegistration.subscribe(({movement: {endPosition}}) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (!position) {\n        return;\n      }\n\n      const allPositions = this.getPositions(id);\n      const isFirstPoint = this.getPositions(id).length === 0;\n\n      const updateValue = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.CREATE,\n        updatedPosition: position,\n        editAction: EditActions.ADD_POINT,\n      };\n      this.updateSubject.next(updateValue);\n      clientEditSubject.next({\n        ...updateValue,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n        width: this.getWidth(id),\n      });\n\n      if (!isFirstPoint) {\n        finishedCreate = finishCreation();\n      }\n    });\n\n    return editorObservable;\n  }\n\n  edit(positions: Cartesian3[], options = DEFAULT_HIPPODROME_OPTIONS, priority = 100): HippodromeEditorObservable {\n    if (positions.length !== 2) {\n      throw new Error('Hippodrome editor error edit(): polygon should have 2 positions but received ' + positions);\n    }\n    const id = generateKey();\n    const hippodromeEditOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<HippodromeEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT\n    });\n    const update = {\n      id,\n      positions: positions,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      hippodromeOptions: hippodromeEditOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n      width: this.getWidth(id),\n    });\n    return this.editHippodrome(\n      id,\n      priority,\n      editSubject,\n      hippodromeEditOptions\n    );\n  }\n\n  private editHippodrome(id: string,\n                         priority: number,\n                         editSubject: Subject<HippodromeEditUpdate>,\n                         options: HippodromeEditOptions,\n                         editObservable?: HippodromeEditorObservable): HippodromeEditorObservable {\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: options.dragShapeEvent,\n        entityType: EditableHippodrome,\n        pick: PickOptions.PICK_FIRST,\n        pickConfig: options.pickConfiguration,\n        priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: options.dragPointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      pickConfig: options.pickConfiguration,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    pointDragRegistration.pipe(\n      tap(({movement: {drop}}) => this.hippodromeManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\n      .subscribe(({movement: {endPosition, drop}, entities}) => {\n        const position = this.coordinateConverter.screenToCartesian3(endPosition);\n        if (!position) {\n          return;\n        }\n        const point: EditPoint = entities[0];\n\n        const update = {\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.EDIT,\n          updatedPosition: position,\n          updatedPoint: point,\n          editAction: drop ? EditActions.DRAG_POINT_FINISH : EditActions.DRAG_POINT,\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n          positions: this.getPositions(id),\n          points: this.getPoints(id),\n          width: this.getWidth(id),\n        });\n      });\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({movement: {drop}}) => this.hippodromeManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\n        .subscribe(({movement: {startPosition, endPosition, drop}, entities}) => {\n          const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n          const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n          if (!endDragPosition) {\n            return;\n          }\n\n          const update = {\n            id,\n            positions: this.getPositions(id),\n            editMode: EditModes.EDIT,\n            updatedPosition: endDragPosition,\n            draggedPosition: startDragPosition,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n            positions: this.getPositions(id),\n            points: this.getPoints(id),\n            width: this.getWidth(id),\n          });\n        });\n    }\n\n    const observables = [pointDragRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n\n    this.observablesMap.set(id, observables);\n    return this.createEditorObservable(editSubject, id);\n  }\n\n  private setOptions(options: HippodromeEditOptions): HippodromeEditOptions {\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_HIPPODROME_OPTIONS));\n    const hippodromeOptions = Object.assign(defaultClone, options);\n    hippodromeOptions.hippodromeProps = Object.assign({}, DEFAULT_HIPPODROME_OPTIONS.hippodromeProps, options.hippodromeProps);\n    hippodromeOptions.pointProps = Object.assign({}, DEFAULT_HIPPODROME_OPTIONS.pointProps, options.pointProps);\n    return hippodromeOptions;\n  }\n\n\n  private createEditorObservable(observableToExtend: any, id: string, finishCreation?: () => boolean): HippodromeEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      });\n    };\n\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n      });\n    };\n\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n      });\n    };\n\n    observableToExtend.setManually = (firstPosition: Cartesian3,\n                                      secondPosition: Cartesian3,\n                                      widthMeters: number,\n                                      firstPointProp?: PointProps,\n                                      secondPointProp?: PointProps) => {\n      const firstP = new EditPoint(id, firstPosition, firstPointProp ? firstPointProp : DEFAULT_HIPPODROME_OPTIONS.pointProps);\n      const secP = new EditPoint(id, secondPosition, secondPointProp ? secondPointProp : DEFAULT_HIPPODROME_OPTIONS.pointProps);\n\n      const hippodrome = this.hippodromeManager.get(id);\n      hippodrome.setPointsManually([firstP, secP], widthMeters);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: any) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      });\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      });\n    };\n\n    observableToExtend.finishCreation = () => {\n      if (!finishCreation) {\n        throw new Error('Hippodrome editor error edit(): cannot call finishCreation() on edit');\n      }\n\n      return finishCreation();\n    };\n\n    observableToExtend.getCurrentPoints = () => this.getPoints(id);\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n    observableToExtend.getLabels = (): LabelProps[] => this.hippodromeManager.get(id).labels;\n    observableToExtend.getCurrentWidth = (): number => this.getWidth(id);\n\n    return observableToExtend as HippodromeEditorObservable;\n  }\n\n  private getPositions(id: any) {\n    const hippodrome = this.hippodromeManager.get(id);\n    return hippodrome.getRealPositions();\n  }\n\n  private getPoints(id: any) {\n    const hippodrome = this.hippodromeManager.get(id);\n    return hippodrome.getRealPoints();\n  }\n\n  private getWidth(id: string) {\n    const hippodrome = this.hippodromeManager.get(id);\n    return hippodrome.getWidth();\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { HippodromeManagerService } from '../../services/entity-editors/hippodrome-editor/hippodrome-manager.service';\nimport { HippodromeEditorService } from '../../services/entity-editors/hippodrome-editor/hippodrome-editor.service';\nimport { HippodromeEditUpdate } from '../../models/hippodrome-edit-update';\nimport { LabelProps } from '../../models/label-props';\nimport { EditableHippodrome } from '../../models/editable-hippodrome';\n\n@Component({\n  selector: 'hippodrome-editor',\n  template: /*html*/ `\n      <ac-layer #editHippodromesLayer acFor=\"let hippodrome of editHippodromes$\" [context]=\"this\">\n          <ac-corridor-desc props=\"{\n            positions: hippodrome.getRealPositionsCallbackProperty(),\n            cornerType: Cesium.CornerType.ROUNDED,\n            material: hippodrome.hippodromeProps.material,\n            width : hippodrome.hippodromeProps.width,\n            outline: hippodrome.hippodromeProps.outline,\n            outlineColor: hippodrome.hippodromeProps.outlineColor,\n            outlineWidth: hippodrome.hippodromeProps.outlineWidth,\n            height: 0,\n            classificationType: hippodrome.hippodromeProps.classificationType,\n            zIndex: hippodrome.hippodromeProps.zIndex,\n            shadows: hippodrome.hippodromeProps.shadows,\n    }\">\n          </ac-corridor-desc>\n\n          <ac-array-desc acFor=\"let label of hippodrome.labels\" [idGetter]=\"getLabelId\">\n              <ac-label-primitive-desc props=\"{\n            position: label.position,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            text: label.text,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin,\n            disableDepthTestDistance: label.disableDepthTestDistance,\n        }\">\n              </ac-label-primitive-desc>\n          </ac-array-desc>\n      </ac-layer>\n\n      <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n          <ac-point-desc props=\"{\n         position: point.getPositionCallbackProperty(),\n         pixelSize: getPointSize(point),\n         color: point.props.color,\n         outlineColor: point.props.outlineColor,\n         outlineWidth: point.props.outlineWidth,\n         show: getPointShow(point),\n         disableDepthTestDistance: point.props.disableDepthTestDistance,\n         heightReference: point.props.heightReference,\n    }\">\n          </ac-point-desc>\n      </ac-layer>\n  `,\n  providers: [CoordinateConverter, HippodromeManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HippodromeEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: HippodromeEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editHippodromes$ = new Subject<AcNotification>();\n\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\n  @ViewChild('editHippodromesLayer') private editHippodromesLayer: AcLayerComponent;\n\n  constructor(\n    private hippodromesEditor: HippodromeEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private hippodromesManager: HippodromeManagerService,\n  ) {\n    this.hippodromesEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, hippodromesManager);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.hippodromesEditor.onUpdate().subscribe((update: HippodromeEditUpdate) => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(hippodrome: EditableHippodrome, update: HippodromeEditUpdate, labels?: LabelProps[]) {\n    update.positions = hippodrome.getRealPositions();\n    update.points = hippodrome.getRealPoints();\n\n    if (labels) {\n      hippodrome.labels = labels;\n      this.editHippodromesLayer.update(hippodrome, hippodrome.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    hippodrome.labels = this.editLabelsRenderFn(update, hippodrome.labels);\n    this.editHippodromesLayer.update(hippodrome, hippodrome.getId());\n  }\n\n  removeEditLabels(hippodrome: EditableHippodrome) {\n    hippodrome.labels = [];\n    this.editHippodromesLayer.update(hippodrome, hippodrome.getId());\n  }\n\n  handleCreateUpdates(update: HippodromeEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.hippodromesManager.createEditableHippodrome(\n          update.id,\n          this.editPointsLayer,\n          this.editHippodromesLayer,\n          this.coordinateConverter,\n          update.hippodromeOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (update.updatedPosition) {\n          hippodrome.moveTempMovingPoint(update.updatedPosition);\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (update.updatedPosition) {\n          hippodrome.moveTempMovingPoint(update.updatedPosition);\n          hippodrome.addPoint(update.updatedPosition);\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome) {\n          hippodrome.dispose();\n          this.removeEditLabels(hippodrome);\n        }\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(hippodrome, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        this.renderEditLabels(hippodrome, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        this.renderEditLabels(hippodrome, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: HippodromeEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.hippodromesManager.createEditableHippodrome(\n          update.id,\n          this.editPointsLayer,\n          this.editHippodromesLayer,\n          this.coordinateConverter,\n          update.hippodromeOptions,\n          update.positions,\n        );\n        break;\n      }\n      case EditActions.DRAG_POINT: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome && hippodrome.enableEdit) {\n          hippodrome.movePoint(update.updatedPosition, update.updatedPoint);\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome && hippodrome.enableEdit) {\n          hippodrome.endMovePoint();\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome) {\n          hippodrome.enableEdit = false;\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome) {\n          hippodrome.enableEdit = true;\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome && hippodrome.enableEdit) {\n          hippodrome.moveShape(update.draggedPosition, update.updatedPosition);\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome && hippodrome.enableEdit) {\n          hippodrome.endMoveShape();\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.hippodromesManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { fromEvent as observableFromEvent, Observable, Subject } from 'rxjs';\n\nimport { map, merge, takeUntil, tap } from 'rxjs/operators';\nimport { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Vec2 } from '../../angular-cesium/models/vec2';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapsManagerService } from '../../angular-cesium/services/maps-manager/maps-manager.service';\n\nexport interface IconDragEvent {\n  initialScreenPosition: Vec2;\n  screenPosition: Vec2;\n  mapPosition: Cartesian3;\n  drop: boolean;\n}\n\n/**\n * The Service is used to preform, handle and subscribe to icon dragging when using the `DraggableToMapDirective`.\n * For more info check `DraggableToMapDirective` docs.\n */\n\n@Injectable()\nexport class DraggableToMapService {\n\n  private coordinateConverter: CoordinateConverter;\n  private dragObservable: Observable<IconDragEvent>;\n  private stopper: Subject<any>;\n  private mainSubject = new Subject<IconDragEvent>();\n\n  constructor(@Inject(DOCUMENT) private document: any, private mapsManager: MapsManagerService) {\n  }\n\n  setCoordinateConverter(coordinateConverter: CoordinateConverter) {\n    this.coordinateConverter = coordinateConverter;\n  }\n\n  drag(imageSrc: string, style?: any) {\n    if (!this.coordinateConverter) {\n      const mapComponent = this.mapsManager.getMap();\n      if (mapComponent) {\n        this.coordinateConverter = mapComponent.getCoordinateConverter();\n      }\n    }\n    this.cancel();\n    const imgElement = document.createElement('img');\n    imgElement.src = imageSrc;\n    imgElement.style.position = 'fixed';\n    imgElement.style.visibility = 'hidden';\n    imgElement.style.width = '30px';\n    imgElement.style.height = '30px';\n    imgElement.style['user-drag'] = 'none';\n    imgElement.style['user-select'] = 'none';\n    imgElement.style['-moz-user-select'] = 'none';\n    imgElement.style['-webkit-user-drag'] = 'none';\n    imgElement.style['-webkit-user-select'] = 'none';\n    imgElement.style['-ms-user-select'] = 'none';\n    Object.assign(imgElement.style, style);\n    document.body.appendChild(imgElement);\n\n    this.createDragObservable();\n    this.dragObservable.subscribe(\n      (e) => {\n        imgElement.style.visibility = 'visible';\n        imgElement.style.left = e.screenPosition.x - imgElement.clientWidth / 2 + 'px';\n        imgElement.style.top = e.screenPosition.y - imgElement.clientHeight / 2 + 'px';\n        this.mainSubject.next(e);\n        if (e.drop) {\n          imgElement.remove();\n        }\n      },\n      (e: any) => {\n        imgElement.remove();\n      },\n      () => {\n        imgElement.remove();\n      }\n    );\n  }\n\n  dragUpdates(): Observable<IconDragEvent> {\n    return this.mainSubject;\n  }\n\n  cancel() {\n    if (this.stopper) {\n      this.stopper.next(true);\n      this.stopper = undefined;\n      this.dragObservable = undefined;\n    }\n  }\n\n  private createDragObservable() {\n    const stopper = new Subject();\n    const dropSubject = new Subject<any>();\n    const pointerUp = observableFromEvent(document, 'pointerup');\n    const pointerMove = observableFromEvent(document, 'pointermove');\n\n    let dragStartPositionX: number;\n    let dragStartPositionY: number;\n    let lastMove: any;\n    const moveObservable = pointerMove.pipe(map((e: any) => {\n        dragStartPositionX = dragStartPositionX ? dragStartPositionX : e.x;\n        dragStartPositionY = dragStartPositionY ? dragStartPositionY : e.y;\n        lastMove = {\n          drop: false,\n          initialScreenPosition: {\n            x: dragStartPositionX,\n            y: dragStartPositionY,\n          },\n          screenPosition: {\n            x: e.x,\n            y: e.y,\n          },\n          mapPosition: this.coordinateConverter ?\n            this.coordinateConverter.screenToCartesian3({x: e.x, y: e.y}) : undefined,\n        };\n        return lastMove;\n      }),\n      takeUntil(pointerUp),\n      tap(undefined, undefined, () => {\n        if (lastMove) {\n          const dropEvent = Object.assign({}, lastMove);\n          dropEvent.drop = true;\n          dropSubject.next(dropEvent);\n        }\n      }), );\n\n    this.dragObservable = moveObservable.pipe(merge(dropSubject), takeUntil(stopper), );\n    this.stopper = stopper;\n  }\n}\n","import { Directive, ElementRef, HostListener, Input, OnInit } from '@angular/core';\nimport { DraggableToMapService } from '../services/draggable-to-map.service';\n\n/**\n * This directive is used to allow dragging of icons from outside the map over the map\n * while being notified of the dragging position and drop position with an observable exposed from `DraggableToMapService`.\n * @Input {src: string, style?: any} | string -\n * the [src: string | string] should be the image src of the dragged image.\n * The style is an optional style object for the image.\n *\n * example:\n * ```\n * <a href=\"...\" class=\"...\" [draggableToMap]=\"{src: '../assets/GitHub-Mark-Light.png', style: {width: '50px', height: '50px'}}\">\n *     <img class=\"github\" src=\"../assets/GitHub-Mark-Light.png\">\n * </a>\n * ```\n *\n * In order the get notified of the dragging location  and drop state subscribe to `DraggableToMapService.dragUpdates()`\n * ```\n *  this.iconDragService.dragUpdates().subscribe(e => console.log(e));\n * ```\n *\n * In order the cancel dragging use `DraggableToMapService.cancel()`\n * ```\n *  this.iconDragService.cancel();\n * ```\n */\n\n@Directive({selector: '[draggableToMap]'})\nexport class DraggableToMapDirective implements OnInit {\n  @Input() draggableToMap: { src: string, style?: any } | string;\n  private src: string;\n  private style: any;\n\n  constructor(el: ElementRef, private iconDragService: DraggableToMapService) {\n    el.nativeElement.style['user-drag'] = 'none';\n    el.nativeElement.style['user-select'] = 'none';\n    el.nativeElement.style['-moz-user-select'] = 'none';\n    el.nativeElement.style['-webkit-user-drag'] = 'none';\n    el.nativeElement.style['-webkit-user-select'] = 'none';\n    el.nativeElement.style['-ms-user-select'] = 'none';\n  }\n\n  ngOnInit(): void {\n    if (typeof this.draggableToMap === 'string') {\n      this.src = this.draggableToMap;\n    } else {\n      this.src = this.draggableToMap.src;\n      this.style = this.draggableToMap.style;\n    }\n  }\n\n  @HostListener('mousedown')\n  onMouseDown() {\n    this.iconDragService.drag(this.src, this.style);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { fromEvent as observableFromEvent, Subscription, Observable } from 'rxjs';\nimport { switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { CesiumService } from '../../../../angular-cesium/services/cesium/cesium.service';\n\n\n/**\n * Toolbar widget, act as a container for ac-toolbar-button components\n * allowing drag configuration and passing `toolbarClass` as attributes\n *\n * Usage:\n * ```\n * <ac-toolbar [allowDrag]=\"true\" (onDrag)=\"handleDrag($event)\">\n <ac-toolbar-button [iconUrl]=\"'assets/home-icon.svg'\" (onClick)=\"goHome()\">\n </ac-toolbar-button>\n <ac-toolbar-button [iconUrl]=\"'assets/explore-icon.svg'\" (onClick)=\"rangeAndBearing()\">\n </ac-toolbar-button>\n </ac-toolbar>\n * ```\n *\n */\n@Component(\n  {\n    selector: 'ac-toolbar',\n    template: `\n        <div class=\"{{toolbarClass}}\">\n            <div *ngIf=\"allowDrag\">\n                <ac-toolbar-button>\n                    <ac-drag-icon></ac-drag-icon>\n                </ac-toolbar-button>\n            </div>\n\n            <ng-content></ng-content>\n        </div>\n    `,\n    styles: [`\n        :host {\n            position: absolute;\n            top: 20px;\n            left: 20px;\n            width: 20px;\n            height: 20px;\n            z-index: 999;\n            -webkit-user-drag: none;\n        }\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n  }\n)\nexport class AcToolbarComponent implements OnInit, OnChanges, OnDestroy {\n  @Input()\n  toolbarClass: string;\n  @Input()\n  allowDrag = true;\n  @Output()\n  onDrag = new EventEmitter<MouseEvent>();\n\n  dragStyle = {\n    'height.px': 20,\n    'width.px': 20,\n  };\n\n  private mouseDown$: Observable<MouseEvent>;\n  private mouseMove$: Observable<MouseEvent>;\n  private mouseUp$: Observable<MouseEvent>;\n  private drag$: Observable<MouseEvent>;\n  private dragSubscription: Subscription;\n\n  constructor(private element: ElementRef, private cesiumService: CesiumService) {}\n\n  ngOnInit() {\n    this.cesiumService.getMap().getMapContainer().appendChild(this.element.nativeElement);\n    if (this.allowDrag) {\n      this.listenForDragging();\n    }\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.allowDrag && changes.allowDrag.currentValue && !changes.allowDrag.previousValue) {\n      this.listenForDragging();\n    }\n\n    if (changes.allowDrag && !changes.allowDrag.currentValue && changes.allowDrag.previousValue) {\n      this.dragSubscription.unsubscribe();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.dragSubscription) {\n      this.dragSubscription.unsubscribe();\n    }\n  }\n\n  private listenForDragging() {\n    this.mouseDown$ = this.mouseDown$ || observableFromEvent(this.element.nativeElement, 'mousedown');\n    this.mouseMove$ = this.mouseMove$ || observableFromEvent(document, 'mousemove') as Observable<MouseEvent>;\n    this.mouseUp$ = this.mouseUp$ || observableFromEvent(document, 'mouseup') as Observable<MouseEvent>;\n\n    this.drag$ = this.drag$ ||\n                 this.mouseDown$.pipe(\n                    switchMap(() => this.mouseMove$.pipe(\n                      tap(this.onDrag.emit),\n                      takeUntil(this.mouseUp$)\n                    ))\n                 );\n\n    this.dragSubscription = this.drag$.subscribe((event: MouseEvent) => {\n      this.element.nativeElement.style.left = `${event.x}px`;\n      this.element.nativeElement.style.top = `${event.y}px`;\n    });\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component(\n  {\n    selector: 'ac-drag-icon',\n    template: `\n        <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\"  x=\"0px\" y=\"0px\"  height=\"25\"  width=\"25\"\n\t viewBox=\"0 0 476.737 476.737\" style=\"enable-background:new 0 0 476.737 476.737;\" xml:space=\"preserve\">\n<g>\n\t<g>\n\t\t<path style=\"fill:#010002;\" d=\"M475.498,232.298l-3.401-5.149l-63.565-63.565c-6.198-6.198-16.304-6.198-22.47,0\n\t\t\tc-6.198,6.198-6.198,16.273,0,22.47l36.423,36.423H254.26V54.253l36.423,36.423c6.166,6.198,16.273,6.198,22.47,0\n\t\t\tc6.166-6.198,6.166-16.273,0-22.47L249.588,4.64l-0.159-0.095l-4.99-3.305L238.369,0h-0.064l-6.007,1.24l-4.99,3.305l-0.191,0.095\n\t\t\tl-63.565,63.565c-6.198,6.198-6.198,16.273,0,22.47s16.273,6.198,22.47,0l36.455-36.423v168.225H54.253l36.423-36.423\n\t\t\tc6.198-6.198,6.198-16.273,0-22.47s-16.273-6.198-22.47,0L4.64,227.149l-0.095,0.159l-3.305,4.99L0,238.369v0.064l1.24,6.007\n\t\t\tl3.305,4.958l0.095,0.191l63.565,63.565c6.198,6.198,16.273,6.198,22.47,0c6.198-6.166,6.198-16.273,0-22.47L54.253,254.26\n\t\t\th168.225v168.225l-36.423-36.423c-6.198-6.166-16.273-6.166-22.47,0c-6.198,6.198-6.198,16.304,0,22.47l63.565,63.565l5.149,3.432\n\t\t\tl6.007,1.208h0.064l6.07-1.24l5.149-3.401l63.565-63.565c6.166-6.198,6.166-16.304,0-22.47c-6.198-6.198-16.304-6.198-22.47,0\n\t\t\tl-36.423,36.423V254.26h168.225l-36.423,36.423c-6.166,6.166-6.166,16.273,0,22.47c6.198,6.166,16.304,6.166,22.47,0\n\t\t\tl63.565-63.565l3.432-5.149l1.208-6.007v-0.064L475.498,232.298z\"/>\n\t</g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n</svg>\n    `,\n  }\n)\nexport class DragIconComponent {\n  constructor() {\n  }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n/**\n * Toolbar button widget, act as a single button inside ac-toolbar component\n * Can accepts content components or passing [iconUrl]\n * configure with: `[iconUrl]`,`[buttonClass]`,`[iconClass]`,`(onClick)`\n *\n * Usage:\n * ```\n * <ac-toolbar [allowDrag]=\"true\">\n <ac-toolbar-button [iconUrl]=\"'assets/home-icon.svg'\" (onClick)=\"goHome()\">\n </ac-toolbar-button>\n <ac-toolbar-button [iconUrl]=\"'assets/explore-icon.svg'\" (onClick)=\"rangeAndBearing()\">\n </ac-toolbar-button>\n </ac-toolbar>\n * ```\n *\n */\n@Component(\n  {\n    selector: 'ac-toolbar-button',\n    template: `\n        <div (click)=\"onClick.emit()\" class=\"button-container {{buttonClass}}\">\n            <img *ngIf=\"iconUrl\" [src]=\"iconUrl\" class=\"icon {{iconClass}}\"/>\n            <ng-content></ng-content>\n        </div>\n    `,\n    styles: [`\n        .button-container {\n            border-radius: 1px;\n            background-color: rgba(255, 255, 255, 0.8);\n            height: 30px;\n            width: 30px;\n            padding: 5px;\n            transition: all 0.2s;\n            cursor: pointer;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            flex-direction: column;\n        }\n\n        .button-container:hover {\n            background-color: rgba(255, 255, 255, 0.95);\n        }\n\n        .icon {\n            height: 30px;\n            width: 30px;\n        }\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n  }\n)\nexport class AcToolbarButtonComponent implements OnInit {\n\n  @Input()\n  iconUrl: string;\n\n  @Input()\n  buttonClass: string;\n\n  @Input()\n  iconClass: string;\n\n  @Output()\n  onClick = new EventEmitter();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { MapsManagerService } from '../../angular-cesium/services/maps-manager/maps-manager.service';\nimport { CameraService } from '../../angular-cesium/services/camera/camera.service';\nimport { CesiumService } from '../../angular-cesium/services/cesium/cesium.service';\nimport { AcMapComponent } from '../../angular-cesium/components/ac-map/ac-map.component';\n\ninterface ZoomData {\n  container: HTMLElement;\n  borderElement?: HTMLElement;\n  resetOnEscapePressFunc?: EventListenerOrEventListenerObject;\n}\n\n/**\n * The Service is as a \"zoom to rectangle\" tool\n *\n * example:\n * ```\n * constructor(\n *   private cameraService: CameraService,\n *   private cesiumService: CesiumService,\n *   private zoomToRectangleService: ZoomToRectangleService,\n * ) {\n *   this.zoomToRectangleService.init(cesiumService, cameraService);\n * }\n * ...\n * this.zoomToRectangleService.activate({onComplete: () => this.zoomToRectangleService.disable()});\n * ```\n *\n * `init()` - initialize the service with CameraService and CesiumService.\n * If no mapId is provided to activate() - must be called before calling `activate()`.\n *\n * `disable()` - disables the tool.\n *\n * `activate()` -\n * @param options\n * {\n *  onStart - optional - a callback that will be called when the user start drawing the rectangle\n *  onComplete - optional - a callback that will be called when the tool zoom in\n *  autoDisableOnZoom - optional - determines if the tool should auto disable after zoom - default: true\n *  animationDurationInSeconds - optional - zoom animation duration in seconds - default: 0.5\n *  borderStyle - optional - the style of the rectangle element border - default: '3px dashed #FFFFFF'\n *  backgroundColor - optional - the background color of the rectangle element - default: 'transparent'\n *  resetKeyCode - optional - the key code of the key that is used to reset the drawing of the rectangle - default: 27 (ESC key)\n *  threshold - optional - the minimum area of the screen rectangle (in pixels) that is required to perform zoom - default: 9\n *  keepRotation - optional - whether or not to keep the rotation when zooming in - default: true\n *  mouseButton - optional - sets the mouse button for drawing the rectangle - default: left mouse button (0)\n * }\n * @param mapId - optional - the mapId of the map that the tool will be used in.\n *\n */\n\nexport enum MouseButtons {\n  LEFT = 0,\n  MIDDLE = 1,\n  RIGHT = 2,\n}\n\n@Injectable()\nexport class ZoomToRectangleService {\n  constructor(\n    private mapsManager: MapsManagerService,\n    @Optional() cameraService: CameraService,\n    @Optional() cesiumService: CesiumService,\n  ) {}\n\n  private cameraService: CameraService;\n  private cesiumService: CesiumService;\n\n  private mapsZoomElements = new Map<string, ZoomData>();\n  private defaultOptions = {\n    animationDurationInSeconds: 0.5,\n    resetKeyCode: 27,\n    borderStyle: '2px solid rgba(0,0,0,0.5)',\n    backgroundColor: 'rgba(0,0,0,0.2)',\n    autoDisableOnZoom: true,\n    threshold: 9,\n    keepRotation: true,\n    mouseButton: MouseButtons.LEFT,\n  };\n\n  init(cesiumService: CesiumService, cameraService: CameraService) {\n    this.cameraService = cameraService;\n    this.cesiumService = cesiumService;\n  }\n\n  activate(\n    options: {\n      onStart?: (acMap?: AcMapComponent) => any;\n      onComplete?: (acMap?: AcMapComponent) => any;\n      mouseButton?: MouseButtons;\n      autoDisableOnZoom?: boolean;\n      animationDurationInSeconds?: number;\n      threshold?: number;\n      keepRotation?: boolean;\n      borderStyle?: string;\n      backgroundColor?: string;\n      resetKeyCode?: number;\n    } = {},\n    mapId?: string,\n  ) {\n    if ((!this.cameraService || !this.cesiumService) && !mapId) {\n      throw new Error(`The function must receive a mapId if the service wasn't initialized`);\n    }\n    const finalOptions = Object.assign({}, this.defaultOptions, options);\n    let cameraService = this.cameraService;\n    let mapContainer;\n    let map;\n    if (this.cesiumService) {\n      mapContainer = this.cesiumService.getViewer().container;\n      map = this.cesiumService.getMap();\n    }\n    if (mapId) {\n      map = this.mapsManager.getMap(mapId);\n      if (!map) {\n        throw new Error(`Map not found with id: ${mapId}`);\n      }\n      cameraService = map.getCameraService();\n      mapContainer = map.getCesiumViewer().container;\n    }\n\n    if (!cameraService || !mapContainer) {\n      throw new Error(`The function must receive a mapId if the service wasn't initialized`);\n    }\n    this.disable(mapId);\n    const container = document.createElement('div');\n    mapContainer.style.position = 'relative';\n    container.style.position = 'absolute';\n    container.style.width = '100%';\n    container.style.height = '100%';\n    container.style.top = '0';\n    container.style.left = '0';\n    mapContainer.appendChild(container);\n    const mapZoomData: ZoomData = { container };\n    this.mapsZoomElements.set(mapId || this.cesiumService.getMap().getId(), mapZoomData);\n    let mouse = {\n      endX: 0,\n      endY: 0,\n      startX: 0,\n      startY: 0,\n    };\n    let borderElement: HTMLElement | undefined;\n\n    container.onmousedown = e => {\n      if (e.button !== finalOptions.mouseButton) {\n        return;\n      }\n      if (!borderElement) {\n        if (options && options.onStart) {\n          options.onStart(map);\n        }\n\n        const rect = (e.currentTarget as any).getBoundingClientRect();\n        const offsetX = e.clientX - rect.left;\n        const offsetY = e.clientY - rect.top;\n        mouse.startX = offsetX;\n        mouse.startY = offsetY;\n        borderElement = document.createElement('div');\n        borderElement.className = 'zoom-to-rectangle-border';\n        borderElement.style.position = 'absolute';\n        borderElement.style.border = finalOptions.borderStyle;\n        borderElement.style.backgroundColor = finalOptions.backgroundColor;\n        borderElement.style.left = mouse.startX + 'px';\n        borderElement.style.top = mouse.startY + 'px';\n        container.appendChild(borderElement);\n        mapZoomData.borderElement = borderElement;\n      }\n    };\n\n    container.onmouseup = e => {\n      if (borderElement) {\n        let zoomApplied;\n        if (mouse && Math.abs(mouse.endX - mouse.startX) * Math.abs(mouse.endY - mouse.startY) > finalOptions.threshold) {\n          zoomApplied = this.zoomCameraToRectangle(\n            cameraService,\n            mouse,\n            finalOptions.animationDurationInSeconds,\n            finalOptions,\n          );\n        }\n        borderElement.remove();\n        borderElement = undefined;\n        mapZoomData.borderElement = undefined;\n        mouse = {\n          endX: 0,\n          endY: 0,\n          startX: 0,\n          startY: 0,\n        };\n        if (!!finalOptions.onComplete) {\n          finalOptions.onComplete(map);\n        }\n        if (finalOptions.autoDisableOnZoom && zoomApplied) {\n          this.disable(mapId);\n        }\n      }\n    };\n\n    container.onmousemove = e => {\n      if (borderElement) {\n        const rect = (e.currentTarget as any).getBoundingClientRect();\n        const offsetX = e.clientX - rect.left;\n        const offsetY = e.clientY - rect.top;\n        mouse.endX = offsetX;\n        mouse.endY = offsetY;\n        borderElement.style.width = Math.abs(mouse.endX - mouse.startX) + 'px';\n        borderElement.style.height = Math.abs(mouse.endY - mouse.startY) + 'px';\n        borderElement.style.left = Math.min(mouse.startX, mouse.endX) + 'px';\n        borderElement.style.top = Math.min(mouse.startY, mouse.endY) + 'px';\n      }\n    };\n\n    const resetOnEscapePress = e => {\n      if (e.keyCode === finalOptions.resetKeyCode && borderElement) {\n        borderElement.remove();\n        borderElement = undefined;\n        mapZoomData.borderElement = undefined;\n        mouse = {\n          endX: 0,\n          endY: 0,\n          startX: 0,\n          startY: 0,\n        };\n      }\n    };\n    document.addEventListener('keydown', resetOnEscapePress);\n    mapZoomData.resetOnEscapePressFunc = resetOnEscapePress;\n  }\n\n  disable(mapId?: string) {\n    if (!this.cesiumService && !mapId) {\n      throw new Error('If the service was not initialized with CesiumService, mapId must be provided');\n    }\n    const data = this.mapsZoomElements.get(mapId || this.cesiumService.getMap().getId());\n    if (data) {\n      data.container.remove();\n      if (data.borderElement) {\n        data.borderElement.remove();\n      }\n      if (data.resetOnEscapePressFunc) {\n        document.removeEventListener('keydown', data.resetOnEscapePressFunc);\n      }\n    }\n    this.mapsZoomElements.delete(mapId);\n  }\n\n  private zoomCameraToRectangle(\n    cameraService: CameraService,\n    positions: { endX: number; endY: number; startX: number; startY: number },\n    animationDuration,\n    options,\n  ): boolean {\n    const camera = cameraService.getCamera();\n    const cartesian1 = camera.pickEllipsoid({ x: positions.startX, y: positions.startY });\n    const cartesian2 = camera.pickEllipsoid({ x: positions.endX, y: positions.endY });\n    if (!cartesian1 || !cartesian2) {\n      return false;\n    }\n    const cartographic1 = Cesium.Cartographic.fromCartesian(cartesian1);\n    const cartographic2 = Cesium.Cartographic.fromCartesian(cartesian2);\n    cameraService.cameraFlyTo({\n      destination: new Cesium.Rectangle(\n        Math.min(cartographic1.longitude, cartographic2.longitude),\n        Math.min(cartographic1.latitude, cartographic2.latitude),\n        Math.max(cartographic1.longitude, cartographic2.longitude),\n        Math.max(cartographic1.latitude, cartographic2.latitude),\n      ),\n      orientation: options.keepRotation ? { heading: camera.heading } : undefined,\n      duration: animationDuration,\n    });\n    return true;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { PolylineEditorObservable } from '../../models/polyline-editor-observable';\nimport { PolylineEditOptions } from '../../models/polyline-edit-options';\nimport { LabelProps, LabelStyle } from '../../models/label-props';\nimport { PolylineEditUpdate } from '../../models/polyline-edit-update';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { PolylinesEditorService } from '../../services/entity-editors/polyline-editor/polylines-editor.service';\n\n/**\n *\n * Range and bearing component that is used to draw range and bearing on the map.\n * The inputs are used to customize the range and bearing style and behavior.\n * Create component reference and use the `create()` function to start creating R&B on the map.\n * The function receives an optional RangeAndBearingOptions object that defines the created range and bearing style and behavior\n * (on top of the default and global definitions).\n *\n * Usage:\n *\n * my-component.ts:\n *\n * ```\n * \\@ViewChild('rangeAndBearing', {static: false}) private rangeAndBearing: RangeAndBearingComponent; // Get R&B reference\n *  // ...\n * this.rangeAndBearing.create({style: { pointProps: { pixelSize: 12 } }, bearingLabelsStyle: { fillColor: Cesium.Color.GREEN } });\n * ```\n *\n * my-component.html\n * ```\n * <range-and-bearing #rangeAndBearing></range-and-bearing> // Optional inputs defines global style and behavior.\n * ```\n *\n */\n@Component({\n  selector: 'range-and-bearing',\n  template: `\n    <polylines-editor></polylines-editor>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PolylinesEditorService],\n})\nexport class RangeAndBearingComponent {\n  @Input() lineEditOptions?: PolylineEditOptions = {};\n  @Input() labelsStyle?: LabelStyle = {};\n  @Input() distanceLabelsStyle?: LabelStyle = {};\n  @Input() bearingLabelsStyle?: LabelStyle = {};\n  @Input() bearingStringFn?: (value: number) => string;\n  @Input() distanceStringFn?: (value: number) => string;\n  @Input() labelsRenderFn?: (update: PolylineEditUpdate, labels: LabelProps[]) => LabelProps[];\n\n  constructor(private polylineEditor: PolylinesEditorService, private coordinateConverter: CoordinateConverter) {\n  }\n\n  create(\n    {\n      lineEditOptions = {},\n      labelsStyle = {},\n      distanceLabelsStyle = {},\n      bearingLabelsStyle = {},\n      bearingStringFn,\n      distanceStringFn,\n      labelsRenderFn,\n    }: RangeAndBearingOptions = {lineEditOptions: {}, labelsStyle: {}, distanceLabelsStyle: {}, bearingLabelsStyle: {}},\n  ): PolylineEditorObservable {\n    const rnb = this.polylineEditor.create({\n      allowDrag: false,\n      pointProps: {\n        showVirtual: false,\n        pixelSize: 8,\n      },\n      polylineProps: {\n        width: 2,\n      },\n      ...this.lineEditOptions,\n      ...lineEditOptions,\n    });\n\n    if (labelsRenderFn) {\n      rnb.setLabelsRenderFn(labelsRenderFn);\n    } else if (this.labelsRenderFn) {\n      rnb.setLabelsRenderFn(this.labelsRenderFn);\n    } else {\n      rnb.setLabelsRenderFn(update => {\n        const positions = update.positions;\n        let totalDistance = 0;\n        if (!positions || positions.length === 0) {\n          return [];\n        }\n        return (update.editMode === EditModes.CREATE && update.editAction !== EditActions.ADD_LAST_POINT\n            ? [...positions, update.updatedPosition]\n            : positions\n        ).reduce(\n          (labels, position, index, array) => {\n            if (index !== 0) {\n              const previousPosition = array[index - 1];\n              const bearing = this.coordinateConverter.bearingToCartesian(previousPosition, position);\n              const distance = Cesium.Cartesian3.distance(previousPosition, position) / 1000;\n              labels.push(\n                {\n                  text:\n                    (bearingStringFn && bearingStringFn(bearing)) ||\n                    (this.bearingStringFn && this.bearingStringFn(bearing)) ||\n                    `${bearing.toFixed(2)}°`,\n                  scale: 0.2,\n                  font: '80px Helvetica',\n                  pixelOffset: new Cesium.Cartesian2(-20, -8),\n                  position: new Cesium.Cartesian3(\n                    (position.x + previousPosition.x) / 2,\n                    (position.y + previousPosition.y) / 2,\n                    (position.z + previousPosition.z) / 2,\n                  ),\n                  fillColor: Cesium.Color.WHITE,\n                  outlineColor: Cesium.Color.WHITE,\n                  showBackground: true,\n                  ...(this.labelsStyle as any),\n                  ...(labelsStyle as any),\n                  ...(this.bearingLabelsStyle as any),\n                  ...(bearingLabelsStyle as any),\n                },\n                {\n                  text:\n                    (distanceStringFn && distanceStringFn(totalDistance + distance)) ||\n                    (this.distanceStringFn && this.distanceStringFn(totalDistance + distance)) ||\n                    `${(totalDistance + distance).toFixed(2)} Km`,\n                  scale: 0.2,\n                  font: '80px Helvetica',\n                  pixelOffset: new Cesium.Cartesian2(-35, -8),\n                  position: position,\n                  fillColor: Cesium.Color.WHITE,\n                  outlineColor: Cesium.Color.WHITE,\n                  showBackground: true,\n                  ...(this.labelsStyle as any),\n                  ...(labelsStyle as any),\n                  ...(this.distanceLabelsStyle as any),\n                  ...(distanceLabelsStyle as any),\n                },\n              );\n\n              totalDistance += distance;\n            }\n\n            return labels;\n          },\n          [\n            {\n              text: (distanceStringFn && distanceStringFn(0)) || (this.distanceStringFn && this.distanceStringFn(0)) || `0 Km`,\n              scale: 0.2,\n              font: '80px Helvetica',\n              pixelOffset: new Cesium.Cartesian2(-20, -8),\n              position: positions[0],\n              fillColor: Cesium.Color.WHITE,\n              outlineColor: Cesium.Color.WHITE,\n              showBackground: true,\n              ...(this.labelsStyle as any),\n              ...(labelsStyle as any),\n              ...(this.distanceLabelsStyle as any),\n              ...(distanceLabelsStyle as any),\n            },\n          ],\n        );\n      });\n    }\n\n    return rnb;\n  }\n}\n\nexport interface RangeAndBearingOptions {\n  lineEditOptions?: PolylineEditOptions;\n  labelsStyle?: LabelStyle;\n  distanceLabelsStyle?: LabelStyle;\n  bearingLabelsStyle?: LabelStyle;\n  bearingStringFn?: (value: number) => string;\n  distanceStringFn?: (value: number) => string;\n  labelsRenderFn?: (update: PolylineEditUpdate, labels: LabelProps[]) => LabelProps[];\n}\n","import { Injectable } from '@angular/core';\nimport { EditableRectangle } from '../../../models/editable-rectangle';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { RectangleEditOptions } from '../../../models/rectangle-edit-options';\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\n\n@Injectable()\nexport class RectanglesManagerService {\n  rectangles: Map<string, EditableRectangle> = new Map<string, EditableRectangle>();\n\n  createEditableRectangle(\n    id: string,\n    editRectanglesLayer: AcLayerComponent,\n    editPointsLayer: AcLayerComponent,\n    coordinateConverter: CoordinateConverter,\n    rectangleOptions?: RectangleEditOptions,\n    positions?: Cartesian3[]\n  ) {\n    const editableRectangle = new EditableRectangle(\n      id,\n      editPointsLayer,\n      editRectanglesLayer,\n      coordinateConverter,\n      rectangleOptions,\n      positions\n    );\n\n    this.rectangles.set(id, editableRectangle);\n  }\n\n  dispose(id: string) {\n    this.rectangles.get(id).dispose();\n    this.rectangles.delete(id);\n  }\n\n  get(id: string): EditableRectangle {\n    return this.rectangles.get(id);\n  }\n\n  clear() {\n    this.rectangles.forEach(rectangle => rectangle.dispose());\n    this.rectangles.clear();\n  }\n}\n\n","import { publish, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { CesiumService } from '../../../../angular-cesium/services/cesium/cesium.service';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { RectangleEditUpdate } from '../../../models/rectangle-edit-update';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from '../../../models/edit-point';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { RectanglesManagerService } from './rectangles-manager.service';\nimport { RectangleEditorObservable } from '../../../models/rectangle-editor-observable';\nimport { EditableRectangle } from '../../../models/editable-rectangle';\nimport { RectangleEditOptions } from '../../../models/rectangle-edit-options';\nimport { PointProps } from '../../../models/point-edit-options';\nimport { LabelProps } from '../../../models/label-props';\nimport { generateKey } from '../../utils';\n\nexport const DEFAULT_RECTANGLE_OPTIONS: RectangleEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  allowDrag: true,\n  pointProps: {\n    color: Cesium.Color.WHITE,\n    outlineColor: Cesium.Color.BLACK.withAlpha(0.2),\n    outlineWidth: 1,\n    pixelSize: 13,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\n  },\n  rectangleProps: {\n    height: 0,\n    extrudedHeight: 0,\n    material: Cesium.Color.CORNFLOWERBLUE.withAlpha(0.4),\n    fill: true,\n    classificationType: Cesium.ClassificationType.BOTH,\n    outline: true,\n    outlineColor: Cesium.Color.WHITE,\n    zIndex: 0,\n  },\n  clampHeightTo3D: false,\n  clampHeightTo3DOptions: {\n    clampToTerrain: false,\n  },\n};\n\n/**\n * Service for creating editable rectangles\n *\n * You must provide `RectanglesEditorService` yourself.\n * RectanglesEditorService works together with `<rectangles-editor>` component. Therefor you need to create `<rectangles-editor>`\n * for each `RectanglesEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `RectangleEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `RectangleEditorObservable`.\n * + To stop editing call `dsipose()` from the `RectangleEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over editted shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `RectangleEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n * usage:\n * ```typescript\n *  // Start creating rectangle\n *  const editing$ = rectanglesEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit rectangle from existing rectangle positions\n *  const editing$ = this.rectanglesEditorService.edit(initialPos);\n *\n * ```\n */\n@Injectable()\nexport class RectanglesEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<RectangleEditUpdate>();\n  private updatePublisher = publish<RectangleEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private rectanglesManager: RectanglesManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n  private cesiumScene: any;\n\n  init(mapEventsManager: MapEventsManagerService,\n       coordinateConverter: CoordinateConverter,\n       cameraService: CameraService,\n       rectanglesManager: RectanglesManagerService,\n       cesiumViewer: CesiumService,\n  ) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.rectanglesManager = rectanglesManager;\n    this.updatePublisher.connect();\n\n    this.cesiumScene = cesiumViewer.getScene();\n  }\n\n  onUpdate(): Observable<RectangleEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  create(options = DEFAULT_RECTANGLE_OPTIONS, priority = 100): RectangleEditorObservable {\n    const positions: Cartesian3[] = [];\n    const id = generateKey();\n    const rectangleOptions = this.setOptions(options);\n\n    const clientEditSubject = new BehaviorSubject<RectangleEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      positions,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      rectangleOptions: rectangleOptions,\n    });\n\n    const finishCreation = () => {\n      const changeMode = {\n        id,\n        editMode: EditModes.CREATE,\n        editAction: EditActions.CHANGE_TO_EDIT,\n      };\n      this.updateSubject.next(changeMode);\n      clientEditSubject.next(changeMode);\n      if (this.observablesMap.has(id)) {\n        this.observablesMap.get(id).forEach(registration => registration.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.editRectangle(id, positions, priority, clientEditSubject, rectangleOptions, editorObservable);\n      finishedCreate = true;\n      return finishedCreate;\n    };\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      pickConfig: options.pickConfiguration,\n      priority,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: rectangleOptions.addPointEvent,\n      pick: PickOptions.NO_PICK,\n      pickConfig: options.pickConfiguration,\n      priority,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration ]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id, finishCreation);\n\n    mouseMoveRegistration.subscribe(({ movement: { endPosition } }) => {\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n\n      if (position) {\n        this.updateSubject.next({\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.CREATE,\n          updatedPosition: position,\n          editAction: EditActions.MOUSE_MOVE,\n        });\n      }\n    });\n\n    addPointRegistration.subscribe(({ movement: { endPosition } }) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (!position) {\n        return;\n      }\n      const allPositions = this.getPositions(id);\n      const isFirstPoint = this.getPositions(id).length === 0;\n\n      const updateValue = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.CREATE,\n        updatedPosition: position,\n        editAction: EditActions.ADD_POINT,\n      };\n      this.updateSubject.next(updateValue);\n      clientEditSubject.next({\n        ...updateValue,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n      });\n\n      if (!isFirstPoint) {\n        finishedCreate = finishCreation();\n      }\n\n    });\n\n    return editorObservable;\n  }\n\n  edit(positions: Cartesian3[], options = DEFAULT_RECTANGLE_OPTIONS, priority = 100): RectangleEditorObservable {\n    if (positions.length !== 2) {\n      throw new Error('Rectangles editor error edit(): rectangle should have at least 2 positions');\n    }\n    const id = generateKey();\n    const rectangleOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<RectangleEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT\n    });\n    const update = {\n      id,\n      positions: positions,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      rectangleOptions: rectangleOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n    });\n    return this.editRectangle(\n      id,\n      positions,\n      priority,\n      editSubject,\n      rectangleOptions\n    );\n  }\n\n  private editRectangle(id: string,\n                      positions: Cartesian3[],\n                      priority: number,\n                      editSubject: Subject<RectangleEditUpdate>,\n                      options: RectangleEditOptions,\n                      editObservable?: RectangleEditorObservable): RectangleEditorObservable {\n\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: options.dragPointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      pickConfig: options.pickConfiguration,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: options.dragShapeEvent,\n        entityType: EditableRectangle,\n        pick: PickOptions.PICK_FIRST,\n        pickConfig: options.pickConfiguration,\n        priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n\n    pointDragRegistration.pipe(\n      tap(({ movement: { drop } }) => this.rectanglesManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\n      .subscribe(({ movement: { endPosition, drop }, entities }) => {\n        const position = this.coordinateConverter.screenToCartesian3(endPosition);\n        if (!position) {\n          return;\n        }\n        const point: EditPoint = entities[0];\n\n        const update = {\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.EDIT,\n          updatedPosition: position,\n          updatedPoint: point,\n          editAction: drop ? EditActions.DRAG_POINT_FINISH : EditActions.DRAG_POINT,\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n          positions: this.getPositions(id),\n          points: this.getPoints(id),\n        });\n      });\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({ movement: { drop } }) => this.rectanglesManager.get(id).enableEdit && this.cameraService.enableInputs(drop)))\n        .subscribe(({ movement: { startPosition, endPosition, drop }, entities }) => {\n          const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n          const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n          if (!endDragPosition) {\n            return;\n          }\n\n          const update = {\n            id,\n            positions: this.getPositions(id),\n            editMode: EditModes.EDIT,\n            updatedPosition: endDragPosition,\n            draggedPosition: startDragPosition,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n            positions: this.getPositions(id),\n            points: this.getPoints(id),\n          });\n        });\n    }\n\n    const observables = [pointDragRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n\n    this.observablesMap.set(id, observables);\n    return editObservable || this.createEditorObservable(editSubject, id);\n  }\n\n  private setOptions(options: RectangleEditOptions) {\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_RECTANGLE_OPTIONS));\n    const rectangleOptions: RectangleEditOptions = Object.assign(defaultClone, options);\n    rectangleOptions.pointProps = Object.assign({}, DEFAULT_RECTANGLE_OPTIONS.pointProps, options.pointProps);\n    rectangleOptions.rectangleProps = Object.assign({}, DEFAULT_RECTANGLE_OPTIONS.rectangleProps, options.rectangleProps);\n\n    if (options.clampHeightTo3D) {\n      if (!this.cesiumScene.pickPositionSupported || !this.cesiumScene.clampToHeightSupported) {\n        throw new Error(`Cesium pickPosition and clampToHeight must be supported to use clampHeightTo3D`);\n      }\n\n      if (this.cesiumScene.pickTranslucentDepth) {\n        console.warn(`Cesium scene.pickTranslucentDepth must be false in order to make the editors work properly on 3D`);\n      }\n\n      if (rectangleOptions.pointProps.color.alpha === 1 || rectangleOptions.pointProps.outlineColor.alpha === 1) {\n        console.warn('Point color and outline color must have alpha in order to make the editor work properly on 3D');\n      }\n\n      rectangleOptions.pointProps.heightReference =  rectangleOptions.clampHeightTo3DOptions.clampToTerrain ?\n        Cesium.HeightReference.CLAMP_TO_GROUND : Cesium.HeightReference.RELATIVE_TO_GROUND;\n      rectangleOptions.pointProps.disableDepthTestDistance = Number.POSITIVE_INFINITY;\n    }\n    return rectangleOptions;\n  }\n\n\n  private createEditorObservable(observableToExtend: any, id: string, finishCreation?: () => boolean): RectangleEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      });\n    };\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n      });\n    };\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n      });\n    };\n\n    observableToExtend.setManually = (firstPosition: Cartesian3,\n                                      secondPosition: Cartesian3,\n                                      firstPointProp?: PointProps,\n                                      secondPointProp?: PointProps) => {\n      const firstP = new EditPoint(id, firstPosition, firstPointProp ? firstPointProp : DEFAULT_RECTANGLE_OPTIONS.pointProps);\n      const secP = new EditPoint(id, secondPosition, secondPointProp ? secondPointProp : DEFAULT_RECTANGLE_OPTIONS.pointProps);\n\n      const rectangle = this.rectanglesManager.get(id);\n      rectangle.setPointsManually([firstP, secP]);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: any) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      });\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      });\n    };\n\n    observableToExtend.finishCreation = () => {\n      if (!finishCreation) {\n        throw new Error('Rectangles editor error edit(): cannot call finishCreation() on edit');\n      }\n\n      return finishCreation();\n    };\n\n    observableToExtend.getCurrentPoints = () => this.getPoints(id);\n\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n\n    observableToExtend.getLabels = (): LabelProps[] => this.rectanglesManager.get(id).labels;\n\n    return observableToExtend as RectangleEditorObservable;\n  }\n\n  private getPositions(id: any) {\n    const rectangle = this.rectanglesManager.get(id);\n    return rectangle.getRealPositions();\n  }\n\n  private getPoints(id: any) {\n    const rectangle = this.rectanglesManager.get(id);\n    return rectangle.getRealPoints();\n  }\n}\n\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { CesiumService } from '../../../angular-cesium/services/cesium/cesium.service';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { RectangleEditUpdate } from '../../models/rectangle-edit-update';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { RectanglesManagerService } from '../../services/entity-editors/rectangles-editor/rectangles-manager.service';\nimport { RectanglesEditorService } from '../../services/entity-editors/rectangles-editor/rectangles-editor.service';\nimport { LabelProps } from '../../models/label-props';\nimport { EditableRectangle } from '../../models/editable-rectangle';\n\n@Component({\n  selector: 'rectangles-editor',\n  template: /*html*/ `\n    <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n      <ac-point-desc\n        props=\"{\n        position: point.getPositionCallbackProperty(),\n        pixelSize: getPointSize(point),\n        color: point.props.color,\n        outlineColor: point.props.outlineColor,\n        outlineWidth: point.props.outlineWidth,\n        show: getPointShow(point),\n        disableDepthTestDistance: point.props.disableDepthTestDistance,\n        heightReference: point.props.heightReference,\n    }\"\n      >\n      </ac-point-desc>\n    </ac-layer>\n\n    <ac-layer #editRectanglesLayer acFor=\"let rectangle of editRectangles$\" [context]=\"this\">\n      <ac-rectangle-desc\n        props=\"{\n          coordinates: rectangle.getRectangleCallbackProperty(),\n          material: rectangle.rectangleProps.material,\n          fill: rectangle.rectangleProps.fill,\n          classificationType: rectangle.rectangleProps.classificationType,\n          zIndex: rectangle.rectangleProps.zIndex,\n          outline: rectangle.rectangleProps.outline,\n          outlineColor: rectangle.rectangleProps.outlineColor,\n          height: rectangle.rectangleProps.height,\n          extrudedHeight: rectangle.rectangleProps.extrudedHeight\n        }\"\n      >\n      </ac-rectangle-desc>\n      <ac-array-desc acFor=\"let label of rectangle.labels\" [idGetter]=\"getLabelId\">\n        <ac-label-primitive-desc\n          props=\"{\n            position: label.position,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            text: label.text,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin,\n            disableDepthTestDistance: label.disableDepthTestDistance,\n        }\"\n        >\n        </ac-label-primitive-desc>\n      </ac-array-desc>\n    </ac-layer>\n  `,\n  providers: [CoordinateConverter, RectanglesManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RectanglesEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: RectangleEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editRectangles$ = new Subject<AcNotification>();\n\n  @ViewChild('editRectanglesLayer') private editRectanglesLayer: AcLayerComponent;\n  @ViewChild('editPointsLayer') private editPointsLayer: AcLayerComponent;\n\n  constructor(\n    private rectanglesEditor: RectanglesEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private rectanglesManager: RectanglesManagerService,\n    private cesiumService: CesiumService\n  ) {\n    this.rectanglesEditor.init(\n      this.mapEventsManager,\n      this.coordinateConverter,\n      this.cameraService,\n      this.rectanglesManager,\n      this.cesiumService\n    );\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.rectanglesEditor.onUpdate().subscribe((update: RectangleEditUpdate) => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(rectangle: EditableRectangle, update: RectangleEditUpdate, labels?: LabelProps[]) {\n    update.positions = rectangle.getRealPositions();\n    update.points = rectangle.getRealPoints();\n\n    if (labels) {\n      rectangle.labels = labels;\n      this.editRectanglesLayer.update(rectangle, rectangle.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    rectangle.labels = this.editLabelsRenderFn(update, rectangle.labels);\n    this.editRectanglesLayer.update(rectangle, rectangle.getId());\n  }\n\n  removeEditLabels(rectangle: EditableRectangle) {\n    rectangle.labels = [];\n    this.editRectanglesLayer.update(rectangle, rectangle.getId());\n  }\n\n  handleCreateUpdates(update: RectangleEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.rectanglesManager.createEditableRectangle(\n          update.id,\n          this.editRectanglesLayer,\n          this.editPointsLayer,\n          this.coordinateConverter,\n          update.rectangleOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        if (update.updatedPosition) {\n          rectangle.moveTempMovingPoint(update.updatedPosition);\n          this.renderEditLabels(rectangle, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        if (update.updatedPosition) {\n          rectangle.moveTempMovingPoint(update.updatedPosition);\n          rectangle.addPoint(update.updatedPosition);\n          this.renderEditLabels(rectangle, update);\n        }\n        break;\n      }\n      case EditActions.ADD_LAST_POINT: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        if (update.updatedPosition) {\n          rectangle.addLastPoint(update.updatedPosition);\n          this.renderEditLabels(rectangle, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        if (rectangle) {\n          rectangle.dispose();\n          this.removeEditLabels(rectangle);\n        }\n        this.editLabelsRenderFn = undefined;\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(rectangle, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        this.renderEditLabels(rectangle, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        this.renderEditLabels(rectangle, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: RectangleEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.rectanglesManager.createEditableRectangle(\n          update.id,\n          this.editRectanglesLayer,\n          this.editPointsLayer,\n          this.coordinateConverter,\n          update.rectangleOptions,\n          update.positions,\n        );\n        break;\n      }\n      case EditActions.DRAG_POINT: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        if (rectangle && rectangle.enableEdit) {\n          rectangle.movePoint(update.updatedPosition, update.updatedPoint);\n          this.renderEditLabels(rectangle, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        if (rectangle && rectangle.enableEdit) {\n          rectangle.endMovePoint();\n          this.renderEditLabels(rectangle, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        if (rectangle) {\n          rectangle.enableEdit = false;\n          this.renderEditLabels(rectangle, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        if (rectangle) {\n          rectangle.enableEdit = true;\n          this.renderEditLabels(rectangle, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        if (rectangle && rectangle.enableEdit) {\n          rectangle.moveShape(update.draggedPosition, update.updatedPosition);\n          this.renderEditLabels(rectangle, update);\n        }\n        break;\n      }\n\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const rectangle = this.rectanglesManager.get(update.id);\n        if (rectangle && rectangle.enableEdit) {\n          rectangle.endMoveShape();\n          this.renderEditLabels(rectangle, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.rectanglesManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AngularCesiumModule } from '../angular-cesium/angular-cesium.module';\nimport { PointsEditorComponent } from './components/points-editor/points-editor.component';\nimport { PolygonsEditorComponent } from './components/polygons-editor/polygons-editor.component';\nimport { CirclesEditorComponent } from './components/circles-editor/circles-editor.component';\nimport { EllipsesEditorComponent } from './components/ellipses-editor/ellipses-editor.component';\nimport { PolylinesEditorComponent } from './components/polylines-editor/polylines-editor.component';\nimport { HippodromeEditorComponent } from './components/hippodrome-editor/hippodrome-editor.component';\nimport { DraggableToMapDirective } from './directives/draggable-to-map.directive';\nimport { DraggableToMapService } from './services/draggable-to-map.service';\nimport { AcToolbarComponent } from './components/toolbar/ac-toolbar/ac-toolbar.component';\nimport { DragIconComponent } from './components/toolbar/ac-toolbar/drag-icon.component';\nimport { AcToolbarButtonComponent } from './components/toolbar/ac-toolbar-button/ac-toolbar-button.component';\nimport { RangeAndBearingComponent } from './components/range-and-bearing/range-and-bearing.component';\nimport { ZoomToRectangleService } from './services/zoom-to-rectangle.service';\nimport { RectanglesEditorComponent } from './components/rectangles-editor/rectangles-editor.component';\n\n@NgModule({\n  imports: [CommonModule, AngularCesiumModule],\n  declarations: [\n    PointsEditorComponent,\n    HippodromeEditorComponent,\n    PolygonsEditorComponent,\n    RectanglesEditorComponent,\n    CirclesEditorComponent,\n    EllipsesEditorComponent,\n    PolylinesEditorComponent,\n    DraggableToMapDirective,\n    DragIconComponent,\n    AcToolbarComponent,\n    AcToolbarButtonComponent,\n    RangeAndBearingComponent,\n  ],\n  exports: [\n    PointsEditorComponent,\n    HippodromeEditorComponent,\n    PolygonsEditorComponent,\n    RectanglesEditorComponent,\n    CirclesEditorComponent,\n    EllipsesEditorComponent,\n    PolylinesEditorComponent,\n    DraggableToMapDirective,\n    AcToolbarComponent,\n    AcToolbarButtonComponent,\n    RangeAndBearingComponent,\n  ],\n  providers: [\n    DraggableToMapService,\n    ZoomToRectangleService,\n  ]\n})\nexport class AngularCesiumWidgetsModule {\n}\n"]}